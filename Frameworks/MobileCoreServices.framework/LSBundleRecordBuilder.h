/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 */

@interface LSBundleRecordBuilder : LSRecordBuilder {
    NSArray * _URLClaims;
    NSArray * _activityTypes;
    NSArray * _alternateNames;
    NSString * _appType;
    NSString * _appVariant;
    unsigned short  _archFlags;
    NSData * _bundleAlias;
    unsigned int  _bundleClass;
    NSURL * _bundleContainerURL;
    unsigned long long  _bundleFlags;
    NSString * _bundleName;
    bool  _canDoHiResMode;
    bool  _canDoMagnifiedMode;
    NSString * _categoryType;
    NSString * _codeInfoIdentifier;
    NSMutableDictionary * _commonInfoPlistEntries;
    NSString * _companionAppID;
    NSNumber * _compatibilityState;
    NSString * _complicationPrincipalClass;
    bool  _containerized;
    NSMutableSet * _counterpartAppIDs;
    NSURL * _dataContainerURL;
    NSArray * _deviceFamily;
    NSString * _displayName;
    NSArray * _documentClaims;
    NSNumber * _downloaderDSID;
    NSDictionary * _entitlements;
    NSString * _execPath;
    NSArray * _exportedTypes;
    NSDictionary * _extensionSDK;
    NSNumber * _famlyID;
    NSString * _genre;
    NSNumber * _genreID;
    NSDictionary * _groupContainers;
    unsigned int  _hfsCreator;
    unsigned int  _hfsType;
    bool  _hiResExplicit;
    NSArray * _iconFileNames;
    unsigned char  _iconFlags;
    NSDictionary * _iconsDict;
    NSString * _identifier;
    NSArray * _importedTypes;
    unsigned long long  _inode;
    NSNumber * _installFailureReason;
    NSNumber * _installType;
    unsigned int  _installationType;
    unsigned int  _itemFlags;
    NSNumber * _itemID;
    NSString * _itemName;
    NSArray * _libraryItems;
    NSString * _libraryPath;
    NSArray * _machOUUIDs;
    NSString * _maxSystemVersion;
    NSString * _minExecOSVersion;
    NSString * _minSystemVersion;
    unsigned int  _plistContentFlags;
    NSMutableDictionary * _plistRarities;
    NSDictionary * _pluginMIDicts;
    NSDictionary * _pluginPlists;
    NSString * _primaryIconName;
    NSNumber * _purchaserDSID;
    NSString * _ratingLabel;
    NSNumber * _ratingRank;
    bool  _registerChildItemsTrusted;
    LSRegistrationInfo * _registrationInfo;
    unsigned char  _retries;
    NSDictionary * _sandboxEnvironmentVariables;
    NSArray * _schemesWhitelist;
    NSString * _sdkVersion;
    NSString * _secondCategoryType;
    unsigned long long  _sequenceNumber;
    NSArray * _services;
    NSString * _shortVersionString;
    NSString * _signerIdentity;
    NSString * _signerOrganization;
    NSString * _sourceAppIdentifier;
    NSNumber * _staticDiskUsage;
    NSNumber * _storefront;
    NSArray * _supportedComplicationFamilies;
    NSString * _teamID;
    NSString * _vendorName;
    NSString * _version;
    NSNumber * _versionID;
    NSString * _watchKitVersion;
}

@property (nonatomic, readonly) NSArray *URLClaims;
@property (nonatomic, readonly) NSArray *activityTypes;
@property (nonatomic, readonly) NSArray *alternateNames;
@property (nonatomic, readonly) NSString *appType;
@property (nonatomic, readonly) NSString *appVariant;
@property (nonatomic, readonly) NSURL *bundleContainerURL;
@property (nonatomic, readonly) NSString *bundleName;
@property (nonatomic, readonly) NSString *categoryType;
@property (nonatomic, readonly) NSString *codeInfoIdentifier;
@property (nonatomic, readonly) NSString *companionAppID;
@property (nonatomic, readonly) NSNumber *compatibilityState;
@property (nonatomic, readonly) NSString *complicationPrincipalClass;
@property (nonatomic, readonly) bool containerized;
@property (nonatomic, readonly) NSMutableSet *counterpartAppIDs;
@property (nonatomic, readonly) NSURL *dataContainerURL;
@property (nonatomic, readonly) NSArray *deviceFamily;
@property (nonatomic, readonly) NSString *displayName;
@property (nonatomic, readonly) NSArray *documentClaims;
@property (nonatomic, readonly) NSNumber *downloaderDSID;
@property (nonatomic, readonly) NSDictionary *entitlements;
@property (nonatomic, readonly) NSString *execPath;
@property (nonatomic, readonly) NSArray *exportedTypes;
@property (nonatomic, readonly) NSDictionary *extensionSDK;
@property (nonatomic, readonly) NSNumber *famlyID;
@property (nonatomic, readonly) NSString *genre;
@property (nonatomic, readonly) NSNumber *genreID;
@property (nonatomic, readonly) NSDictionary *groupContainers;
@property (nonatomic, readonly) NSArray *iconFileNames;
@property (nonatomic, readonly) NSDictionary *iconsDict;
@property (nonatomic, readonly) NSString *identifier;
@property (nonatomic, readonly) NSArray *importedTypes;
@property (nonatomic, readonly) NSNumber *installFailureReason;
@property (nonatomic, readonly) NSNumber *installType;
@property (nonatomic) unsigned int installationType;
@property (nonatomic, readonly) NSNumber *itemID;
@property (nonatomic, readonly) NSString *itemName;
@property (nonatomic, readonly) NSArray *libraryItems;
@property (nonatomic, readonly) NSString *libraryPath;
@property (nonatomic, readonly) NSArray *machOUUIDs;
@property (nonatomic, readonly) NSString *maxSystemVersion;
@property (nonatomic, readonly) NSString *minExecOSVersion;
@property (nonatomic, readonly) NSString *minSystemVersion;
@property (nonatomic, readonly) NSDictionary *pluginMIDicts;
@property (nonatomic, readonly) NSDictionary *pluginPlists;
@property (nonatomic, readonly) NSString *primaryIconName;
@property (nonatomic, readonly) NSNumber *purchaserDSID;
@property (nonatomic, readonly) NSString *ratingLabel;
@property (nonatomic, readonly) NSNumber *ratingRank;
@property (nonatomic, readonly) bool registerChildItemsTrusted;
@property (nonatomic) unsigned char retries;
@property (nonatomic, readonly) NSDictionary *sandboxEnvironmentVariables;
@property (nonatomic, readonly) NSArray *schemesWhitelist;
@property (nonatomic, readonly) NSString *sdkVersion;
@property (nonatomic, readonly) NSString *secondCategoryType;
@property (nonatomic) unsigned long long sequenceNumber;
@property (nonatomic, readonly) NSArray *services;
@property (nonatomic, readonly) NSString *shortVersionString;
@property (nonatomic, readonly) NSString *signerIdentity;
@property (nonatomic, readonly) NSString *signerOrganization;
@property (nonatomic, readonly) NSString *sourceAppIdentifier;
@property (nonatomic, readonly) NSNumber *staticDiskUsage;
@property (nonatomic, readonly) NSNumber *storefront;
@property (nonatomic, readonly) NSArray *supportedComplicationFamilies;
@property (nonatomic, readonly) NSString *teamID;
@property (nonatomic, readonly) NSString *vendorName;
@property (nonatomic, readonly) NSString *version;
@property (nonatomic, readonly) NSNumber *versionID;
@property (nonatomic, readonly) NSString *watchKitVersion;

- (id)URLClaims;
- (id)_LSBundleFlagMap;
- (id)_LSKeyTypeMap;
- (id)_LSPlistRaritiesMap;
- (int)activateBindings:(struct LSDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; struct LSDBImpl {} *x2; struct __CSStore {} *x3; struct LSSchema { unsigned int x_4_1_1; struct { struct CSMap { unsigned int x_1_3_1; struct CSMapCallbacks { int (*x_2_4_1)(); int (*x_2_4_2)(); int (*x_2_4_3)(); int (*x_2_4_4)(); int (*x_2_4_5)(); int (*x_2_4_6)(); } x_1_3_2; struct CSMapContext {} *x_1_3_3; struct os_unfair_lock_s { unsigned int x_4_4_1; } x_1_3_4; unsigned int x_1_3_5; struct _CSMapHeader {} *x_1_3_6; unsigned int *x_1_3_7; unsigned int *x_1_3_8; } x_2_2_1; unsigned int x_2_2_2; } x_4_1_2; struct { unsigned int x_3_2_1; unsigned int x_3_2_2; } x_4_1_3; unsigned int x_4_1_4; unsigned int x_4_1_5; unsigned int x_4_1_6; unsigned int x_4_1_7; struct { struct CSMap { unsigned int x_1_3_1; struct CSMapCallbacks { int (*x_2_4_1)(); int (*x_2_4_2)(); int (*x_2_4_3)(); int (*x_2_4_4)(); int (*x_2_4_5)(); int (*x_2_4_6)(); } x_1_3_2; struct CSMapContext {} *x_1_3_3; struct os_unfair_lock_s { unsigned int x_4_4_1; } x_1_3_4; unsigned int x_1_3_5; struct _CSMapHeader {} *x_1_3_6; unsigned int *x_1_3_7; unsigned int *x_1_3_8; } x_8_2_1; } x_4_1_8; struct { struct CSMap { unsigned int x_1_3_1; struct CSMapCallbacks { int (*x_2_4_1)(); int (*x_2_4_2)(); int (*x_2_4_3)(); int (*x_2_4_4)(); int (*x_2_4_5)(); int (*x_2_4_6)(); } x_1_3_2; struct CSMapContext {} *x_1_3_3; struct os_unfair_lock_s { unsigned int x_4_4_1; } x_1_3_4; unsigned int x_1_3_5; struct _CSMapHeader {} *x_1_3_6; unsigned int *x_1_3_7; unsigned int *x_1_3_8; } x_9_2_1; struct { /* ? */ } *x_9_2_2; struct { /* ? */ } *x_9_2_3; unsigned int x_9_2_4; unsigned char x_9_2_5; } x_4_1_9[12]; } x4; }*)arg1 unitID:(unsigned int)arg2 bundleData:(const struct LSBundleData { unsigned int x1; unsigned long long x2; unsigned int x3; unsigned int x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned short x8; unsigned int x9; unsigned int x10; unsigned long long x11; unsigned long long x12; int x13; int x14; unsigned long long x15; unsigned long long x16; unsigned long long x17; unsigned long long x18; unsigned long long x19; unsigned int x20[4]; unsigned long long x21; unsigned long long x22; unsigned long long x23; unsigned long long x24; unsigned int x25; unsigned int x26; unsigned int x27; unsigned int x28; unsigned int x29; unsigned int x30; unsigned int x31; unsigned int x32; unsigned int x33; unsigned int x34; unsigned int x35; unsigned int x36; unsigned int x37; unsigned int x38; unsigned int x39; unsigned int x40; unsigned long long x41; unsigned long long x42; unsigned long long x43; unsigned long long x44; unsigned int x45; unsigned int x46; unsigned long long x47; unsigned long long x48; unsigned long long x49; unsigned int x50; unsigned long long x51; unsigned int x52; }*)arg3;
- (id)activityTypes;
- (void)addArchitectureFlag:(unsigned short)arg1;
- (void)addBundleFlag:(unsigned long long)arg1;
- (void)addIconFlag:(unsigned char)arg1;
- (void)addItemInfoFlag:(unsigned int)arg1;
- (void)addPlistFlag:(unsigned int)arg1;
- (id)alternateNames;
- (id)appType;
- (id)appVariant;
- (struct LSBundleData { unsigned int x1; unsigned long long x2; unsigned int x3; unsigned int x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned short x8; unsigned int x9; unsigned int x10; unsigned long long x11; unsigned long long x12; int x13; int x14; unsigned long long x15; unsigned long long x16; unsigned long long x17; unsigned long long x18; unsigned long long x19; unsigned int x20[4]; unsigned long long x21; unsigned long long x22; unsigned long long x23; unsigned long long x24; unsigned int x25; unsigned int x26; unsigned int x27; unsigned int x28; unsigned int x29; unsigned int x30; unsigned int x31; unsigned int x32; unsigned int x33; unsigned int x34; unsigned int x35; unsigned int x36; unsigned int x37; unsigned int x38; unsigned int x39; unsigned int x40; unsigned long long x41; unsigned long long x42; unsigned long long x43; unsigned long long x44; unsigned int x45; unsigned int x46; unsigned long long x47; unsigned long long x48; unsigned long long x49; unsigned int x50; unsigned long long x51; unsigned int x52; })buildBundleData:(struct LSDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; struct LSDBImpl {} *x2; struct __CSStore {} *x3; struct LSSchema { unsigned int x_4_1_1; struct { struct CSMap { unsigned int x_1_3_1; struct CSMapCallbacks { int (*x_2_4_1)(); int (*x_2_4_2)(); int (*x_2_4_3)(); int (*x_2_4_4)(); int (*x_2_4_5)(); int (*x_2_4_6)(); } x_1_3_2; struct CSMapContext {} *x_1_3_3; struct os_unfair_lock_s { unsigned int x_4_4_1; } x_1_3_4; unsigned int x_1_3_5; struct _CSMapHeader {} *x_1_3_6; unsigned int *x_1_3_7; unsigned int *x_1_3_8; } x_2_2_1; unsigned int x_2_2_2; } x_4_1_2; struct { unsigned int x_3_2_1; unsigned int x_3_2_2; } x_4_1_3; unsigned int x_4_1_4; unsigned int x_4_1_5; unsigned int x_4_1_6; unsigned int x_4_1_7; struct { struct CSMap { unsigned int x_1_3_1; struct CSMapCallbacks { int (*x_2_4_1)(); int (*x_2_4_2)(); int (*x_2_4_3)(); int (*x_2_4_4)(); int (*x_2_4_5)(); int (*x_2_4_6)(); } x_1_3_2; struct CSMapContext {} *x_1_3_3; struct os_unfair_lock_s { unsigned int x_4_4_1; } x_1_3_4; unsigned int x_1_3_5; struct _CSMapHeader {} *x_1_3_6; unsigned int *x_1_3_7; unsigned int *x_1_3_8; } x_8_2_1; } x_4_1_8; struct { struct CSMap { unsigned int x_1_3_1; struct CSMapCallbacks { int (*x_2_4_1)(); int (*x_2_4_2)(); int (*x_2_4_3)(); int (*x_2_4_4)(); int (*x_2_4_5)(); int (*x_2_4_6)(); } x_1_3_2; struct CSMapContext {} *x_1_3_3; struct os_unfair_lock_s { unsigned int x_4_4_1; } x_1_3_4; unsigned int x_1_3_5; struct _CSMapHeader {} *x_1_3_6; unsigned int *x_1_3_7; unsigned int *x_1_3_8; } x_9_2_1; struct { /* ? */ } *x_9_2_2; struct { /* ? */ } *x_9_2_3; unsigned int x_9_2_4; unsigned char x_9_2_5; } x_4_1_9[12]; } x4; }*)arg1 error:(id*)arg2;
- (id)bundleContainerURL;
- (id)bundleName;
- (id)categoryType;
- (id)codeInfoIdentifier;
- (id)companionAppID;
- (id)compatibilityState;
- (id)complicationPrincipalClass;
- (bool)containerized;
- (id)counterpartAppIDs;
- (id)dataContainerURL;
- (void)dealloc;
- (id)deviceFamily;
- (id)displayName;
- (id)documentClaims;
- (id)downloaderDSID;
- (id)entitlements;
- (id)execPath;
- (id)exportedTypes;
- (id)extensionSDK;
- (id)famlyID;
- (id)genre;
- (id)genreID;
- (id)getIconsDictionaryFromDict:(id)arg1;
- (id)groupContainers;
- (id)iconFileNames;
- (id)iconsDict;
- (id)identifier;
- (id)importedTypes;
- (id)installFailureReason;
- (id)installType;
- (unsigned int)installationType;
- (id)itemID;
- (id)itemName;
- (id)libraryItems;
- (id)libraryPath;
- (id)machOUUIDs;
- (id)maxSystemVersion;
- (id)minExecOSVersion;
- (id)minSystemVersion;
- (void)parseActivityTypesFromDictionary:(id)arg1;
- (void)parseArchitecturesFromDict:(id)arg1;
- (void)parseCapabilityFlagsFromDict:(id)arg1;
- (void)parseDeviceFamilyFromDict:(id)arg1;
- (void)parseIconFilenamesFromDict:(id)arg1;
- (bool)parseInfoPlist:(id)arg1;
- (bool)parseInstallationInfo:(id)arg1;
- (void)parseNSExtensionSDKDefinitionsFromDictionary:(id)arg1;
- (void)parseURLClaimsFromDict:(id)arg1;
- (id)pluginMIDicts;
- (id)pluginPlists;
- (id)primaryIconName;
- (id)purchaserDSID;
- (id)ratingLabel;
- (id)ratingRank;
- (unsigned int)registerBundleRecord:(struct LSDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; struct LSDBImpl {} *x2; struct __CSStore {} *x3; struct LSSchema { unsigned int x_4_1_1; struct { struct CSMap { unsigned int x_1_3_1; struct CSMapCallbacks { int (*x_2_4_1)(); int (*x_2_4_2)(); int (*x_2_4_3)(); int (*x_2_4_4)(); int (*x_2_4_5)(); int (*x_2_4_6)(); } x_1_3_2; struct CSMapContext {} *x_1_3_3; struct os_unfair_lock_s { unsigned int x_4_4_1; } x_1_3_4; unsigned int x_1_3_5; struct _CSMapHeader {} *x_1_3_6; unsigned int *x_1_3_7; unsigned int *x_1_3_8; } x_2_2_1; unsigned int x_2_2_2; } x_4_1_2; struct { unsigned int x_3_2_1; unsigned int x_3_2_2; } x_4_1_3; unsigned int x_4_1_4; unsigned int x_4_1_5; unsigned int x_4_1_6; unsigned int x_4_1_7; struct { struct CSMap { unsigned int x_1_3_1; struct CSMapCallbacks { int (*x_2_4_1)(); int (*x_2_4_2)(); int (*x_2_4_3)(); int (*x_2_4_4)(); int (*x_2_4_5)(); int (*x_2_4_6)(); } x_1_3_2; struct CSMapContext {} *x_1_3_3; struct os_unfair_lock_s { unsigned int x_4_4_1; } x_1_3_4; unsigned int x_1_3_5; struct _CSMapHeader {} *x_1_3_6; unsigned int *x_1_3_7; unsigned int *x_1_3_8; } x_8_2_1; } x_4_1_8; struct { struct CSMap { unsigned int x_1_3_1; struct CSMapCallbacks { int (*x_2_4_1)(); int (*x_2_4_2)(); int (*x_2_4_3)(); int (*x_2_4_4)(); int (*x_2_4_5)(); int (*x_2_4_6)(); } x_1_3_2; struct CSMapContext {} *x_1_3_3; struct os_unfair_lock_s { unsigned int x_4_4_1; } x_1_3_4; unsigned int x_1_3_5; struct _CSMapHeader {} *x_1_3_6; unsigned int *x_1_3_7; unsigned int *x_1_3_8; } x_9_2_1; struct { /* ? */ } *x_9_2_2; struct { /* ? */ } *x_9_2_3; unsigned int x_9_2_4; unsigned char x_9_2_5; } x_4_1_9[12]; } x4; }*)arg1 error:(id*)arg2;
- (bool)registerChildItemsTrusted;
- (int)registerSchemesWhitelist:(struct LSDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; struct LSDBImpl {} *x2; struct __CSStore {} *x3; struct LSSchema { unsigned int x_4_1_1; struct { struct CSMap { unsigned int x_1_3_1; struct CSMapCallbacks { int (*x_2_4_1)(); int (*x_2_4_2)(); int (*x_2_4_3)(); int (*x_2_4_4)(); int (*x_2_4_5)(); int (*x_2_4_6)(); } x_1_3_2; struct CSMapContext {} *x_1_3_3; struct os_unfair_lock_s { unsigned int x_4_4_1; } x_1_3_4; unsigned int x_1_3_5; struct _CSMapHeader {} *x_1_3_6; unsigned int *x_1_3_7; unsigned int *x_1_3_8; } x_2_2_1; unsigned int x_2_2_2; } x_4_1_2; struct { unsigned int x_3_2_1; unsigned int x_3_2_2; } x_4_1_3; unsigned int x_4_1_4; unsigned int x_4_1_5; unsigned int x_4_1_6; unsigned int x_4_1_7; struct { struct CSMap { unsigned int x_1_3_1; struct CSMapCallbacks { int (*x_2_4_1)(); int (*x_2_4_2)(); int (*x_2_4_3)(); int (*x_2_4_4)(); int (*x_2_4_5)(); int (*x_2_4_6)(); } x_1_3_2; struct CSMapContext {} *x_1_3_3; struct os_unfair_lock_s { unsigned int x_4_4_1; } x_1_3_4; unsigned int x_1_3_5; struct _CSMapHeader {} *x_1_3_6; unsigned int *x_1_3_7; unsigned int *x_1_3_8; } x_8_2_1; } x_4_1_8; struct { struct CSMap { unsigned int x_1_3_1; struct CSMapCallbacks { int (*x_2_4_1)(); int (*x_2_4_2)(); int (*x_2_4_3)(); int (*x_2_4_4)(); int (*x_2_4_5)(); int (*x_2_4_6)(); } x_1_3_2; struct CSMapContext {} *x_1_3_3; struct os_unfair_lock_s { unsigned int x_4_4_1; } x_1_3_4; unsigned int x_1_3_5; struct _CSMapHeader {} *x_1_3_6; unsigned int *x_1_3_7; unsigned int *x_1_3_8; } x_9_2_1; struct { /* ? */ } *x_9_2_2; struct { /* ? */ } *x_9_2_3; unsigned int x_9_2_4; unsigned char x_9_2_5; } x_4_1_9[12]; } x4; }*)arg1 bundleData:(struct LSBundleData { unsigned int x1; unsigned long long x2; unsigned int x3; unsigned int x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned short x8; unsigned int x9; unsigned int x10; unsigned long long x11; unsigned long long x12; int x13; int x14; unsigned long long x15; unsigned long long x16; unsigned long long x17; unsigned long long x18; unsigned long long x19; unsigned int x20[4]; unsigned long long x21; unsigned long long x22; unsigned long long x23; unsigned long long x24; unsigned int x25; unsigned int x26; unsigned int x27; unsigned int x28; unsigned int x29; unsigned int x30; unsigned int x31; unsigned int x32; unsigned int x33; unsigned int x34; unsigned int x35; unsigned int x36; unsigned int x37; unsigned int x38; unsigned int x39; unsigned int x40; unsigned long long x41; unsigned long long x42; unsigned long long x43; unsigned long long x44; unsigned int x45; unsigned int x46; unsigned long long x47; unsigned long long x48; unsigned long long x49; unsigned int x50; unsigned long long x51; unsigned int x52; }*)arg2;
- (unsigned char)retries;
- (id)sandboxEnvironmentVariables;
- (id)schemesWhitelist;
- (id)sdkVersion;
- (id)secondCategoryType;
- (unsigned long long)sequenceNumber;
- (id)services;
- (void)setCommonInfoPlistKeysFromDictionary:(id)arg1;
- (void)setFlagsFromDictionary:(id)arg1;
- (void)setInstallationType:(unsigned int)arg1;
- (void)setRaritiesFromDictionary:(id)arg1;
- (void)setRegistrationInfo:(id)arg1 alias:(struct __CFData { }*)arg2;
- (void)setRetries:(unsigned char)arg1;
- (void)setSequenceNumber:(unsigned long long)arg1;
- (id)shortVersionString;
- (id)signerIdentity;
- (id)signerOrganization;
- (id)sourceAppIdentifier;
- (id)staticDiskUsage;
- (id)storefront;
- (id)supportedComplicationFamilies;
- (id)teamID;
- (id)vendorName;
- (id)version;
- (id)versionID;
- (id)watchKitVersion;

@end
