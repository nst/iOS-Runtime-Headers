/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEODirectionsRequest : PBRequest <NSCopying> {
    GEOPDABClientDatasetMetadata * _abClientMetadata;
    GEOAdditionalEnabledMarkets * _additionalEnabledMarkets;
    GEOClientCapabilities * _clientCapabilities;
    GEOCommonOptions * _commonOptions;
    GEOMapRegion * _currentMapRegion;
    GEOLocation * _currentUserLocation;
    int  _departureTime;
    NSMutableArray * _deviceHistoricalLocations;
    GEODirectionsRequestFeedback * _feedback;
    bool  _getRouteForZilchPoints;
    struct { 
        unsigned int sessionID : 1; 
        unsigned int requestTime : 1; 
        unsigned int sessionRelativeTimestamp : 1; 
        unsigned int departureTime : 1; 
        unsigned int mainTransportTypeMaxRouteCount : 1; 
        unsigned int nonRecommendedRoutesOption : 1; 
        unsigned int originalRoutePurpose : 1; 
        unsigned int requestMode : 1; 
        unsigned int sequenceNumber : 1; 
        unsigned int timeSinceLastRerouteRequest : 1; 
        unsigned int getRouteForZilchPoints : 1; 
        unsigned int isFromAPI : 1; 
        unsigned int needLatency : 1; 
        unsigned int useLiveTrafficAsFallback : 1; 
    }  _has;
    bool  _isFromAPI;
    GEOLocation * _lastKnownRoadLocation;
    NSString * _loggedAbExperiment;
    unsigned int  _mainTransportTypeMaxRouteCount;
    bool  _needLatency;
    NSData * _nonRecommendedRoutesCache;
    int  _nonRecommendedRoutesOption;
    NSData * _originalDirectionsResponseID;
    GEOOriginalRoute * _originalRoute;
    NSData * _originalRouteID;
    int  _originalRoutePurpose;
    NSData * _originalRouteZilchPoints;
    int  _requestMode;
    double  _requestTime;
    GEORouteAttributes * _routeAttributes;
    unsigned int  _sequenceNumber;
    NSMutableArray * _serviceTags;
    struct GEOSessionID { 
        unsigned long long _high; 
        unsigned long long _low; 
    }  _sessionID;
    double  _sessionRelativeTimestamp;
    NSData * _sessionState;
    unsigned int  _timeSinceLastRerouteRequest;
    GEOTFTrafficSnapshot * _trafficSnapshot;
    bool  _useLiveTrafficAsFallback;
    NSMutableArray * _waypointTypeds;
}

@property (nonatomic, retain) GEOPDABClientDatasetMetadata *abClientMetadata;
@property (nonatomic, retain) GEOAdditionalEnabledMarkets *additionalEnabledMarkets;
@property (nonatomic, retain) GEOClientCapabilities *clientCapabilities;
@property (nonatomic, retain) GEOCommonOptions *commonOptions;
@property (nonatomic, retain) GEOMapRegion *currentMapRegion;
@property (nonatomic, retain) GEOLocation *currentUserLocation;
@property (nonatomic) int departureTime;
@property (nonatomic, retain) NSMutableArray *deviceHistoricalLocations;
@property (nonatomic, retain) GEODirectionsRequestFeedback *feedback;
@property (nonatomic) bool getRouteForZilchPoints;
@property (nonatomic, readonly) bool hasAbClientMetadata;
@property (nonatomic, readonly) bool hasAdditionalEnabledMarkets;
@property (nonatomic, readonly) bool hasClientCapabilities;
@property (nonatomic, readonly) bool hasCommonOptions;
@property (nonatomic, readonly) bool hasCurrentMapRegion;
@property (nonatomic, readonly) bool hasCurrentUserLocation;
@property (nonatomic) bool hasDepartureTime;
@property (nonatomic, readonly) bool hasFeedback;
@property (nonatomic) bool hasGetRouteForZilchPoints;
@property (nonatomic) bool hasIsFromAPI;
@property (nonatomic, readonly) bool hasLastKnownRoadLocation;
@property (nonatomic, readonly) bool hasLoggedAbExperiment;
@property (nonatomic) bool hasMainTransportTypeMaxRouteCount;
@property (nonatomic) bool hasNeedLatency;
@property (nonatomic, readonly) bool hasNonRecommendedRoutesCache;
@property (nonatomic) bool hasNonRecommendedRoutesOption;
@property (nonatomic, readonly) bool hasOriginalDirectionsResponseID;
@property (nonatomic, readonly) bool hasOriginalRoute;
@property (nonatomic, readonly) bool hasOriginalRouteID;
@property (nonatomic) bool hasOriginalRoutePurpose;
@property (nonatomic, readonly) bool hasOriginalRouteZilchPoints;
@property (nonatomic) bool hasRequestMode;
@property (nonatomic) bool hasRequestTime;
@property (nonatomic, readonly) bool hasRouteAttributes;
@property (nonatomic) bool hasSequenceNumber;
@property (nonatomic) bool hasSessionID;
@property (nonatomic) bool hasSessionRelativeTimestamp;
@property (nonatomic, readonly) bool hasSessionState;
@property (nonatomic) bool hasTimeSinceLastRerouteRequest;
@property (nonatomic, readonly) bool hasTrafficSnapshot;
@property (nonatomic) bool hasUseLiveTrafficAsFallback;
@property (nonatomic) bool isFromAPI;
@property (nonatomic, retain) GEOLocation *lastKnownRoadLocation;
@property (nonatomic, retain) NSString *loggedAbExperiment;
@property (nonatomic) unsigned int mainTransportTypeMaxRouteCount;
@property (nonatomic) bool needLatency;
@property (nonatomic, retain) NSData *nonRecommendedRoutesCache;
@property (nonatomic) int nonRecommendedRoutesOption;
@property (nonatomic, retain) NSData *originalDirectionsResponseID;
@property (nonatomic, retain) GEOOriginalRoute *originalRoute;
@property (nonatomic, retain) NSData *originalRouteID;
@property (nonatomic) int originalRoutePurpose;
@property (nonatomic, retain) NSData *originalRouteZilchPoints;
@property (nonatomic) int requestMode;
@property (nonatomic) double requestTime;
@property (nonatomic, retain) GEORouteAttributes *routeAttributes;
@property (nonatomic) unsigned int sequenceNumber;
@property (nonatomic, retain) NSMutableArray *serviceTags;
@property (nonatomic) struct GEOSessionID { unsigned long long x1; unsigned long long x2; } sessionID;
@property (nonatomic) double sessionRelativeTimestamp;
@property (nonatomic, retain) NSData *sessionState;
@property (nonatomic) unsigned int timeSinceLastRerouteRequest;
@property (nonatomic, retain) GEOTFTrafficSnapshot *trafficSnapshot;
@property (nonatomic) bool useLiveTrafficAsFallback;
@property (nonatomic, retain) NSMutableArray *waypointTypeds;

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices

+ (Class)deviceHistoricalLocationType;
+ (Class)serviceTagType;
+ (Class)waypointTypedType;

- (void).cxx_destruct;
- (int)StringAsNonRecommendedRoutesOption:(id)arg1;
- (int)StringAsOriginalRoutePurpose:(id)arg1;
- (int)StringAsRequestMode:(id)arg1;
- (id)abClientMetadata;
- (void)addDeviceHistoricalLocation:(id)arg1;
- (void)addServiceTag:(id)arg1;
- (void)addWaypointTyped:(id)arg1;
- (id)additionalEnabledMarkets;
- (void)clearDeviceHistoricalLocations;
- (void)clearServiceTags;
- (void)clearWaypointTypeds;
- (id)clientCapabilities;
- (id)commonOptions;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)currentMapRegion;
- (id)currentUserLocation;
- (int)departureTime;
- (id)description;
- (id)deviceHistoricalLocationAtIndex:(unsigned long long)arg1;
- (id)deviceHistoricalLocations;
- (unsigned long long)deviceHistoricalLocationsCount;
- (id)dictionaryRepresentation;
- (id)feedback;
- (bool)getRouteForZilchPoints;
- (bool)hasAbClientMetadata;
- (bool)hasAdditionalEnabledMarkets;
- (bool)hasClientCapabilities;
- (bool)hasCommonOptions;
- (bool)hasCurrentMapRegion;
- (bool)hasCurrentUserLocation;
- (bool)hasDepartureTime;
- (bool)hasFeedback;
- (bool)hasGetRouteForZilchPoints;
- (bool)hasIsFromAPI;
- (bool)hasLastKnownRoadLocation;
- (bool)hasLoggedAbExperiment;
- (bool)hasMainTransportTypeMaxRouteCount;
- (bool)hasNeedLatency;
- (bool)hasNonRecommendedRoutesCache;
- (bool)hasNonRecommendedRoutesOption;
- (bool)hasOriginalDirectionsResponseID;
- (bool)hasOriginalRoute;
- (bool)hasOriginalRouteID;
- (bool)hasOriginalRoutePurpose;
- (bool)hasOriginalRouteZilchPoints;
- (bool)hasRequestMode;
- (bool)hasRequestTime;
- (bool)hasRouteAttributes;
- (bool)hasSequenceNumber;
- (bool)hasSessionID;
- (bool)hasSessionRelativeTimestamp;
- (bool)hasSessionState;
- (bool)hasTimeSinceLastRerouteRequest;
- (bool)hasTrafficSnapshot;
- (bool)hasUseLiveTrafficAsFallback;
- (unsigned long long)hash;
- (id)init;
- (id)initWithFeedback:(id)arg1;
- (id)initWithQuickETARequest:(id)arg1 withFeedback:(id)arg2;
- (bool)isEqual:(id)arg1;
- (bool)isFromAPI;
- (id)lastKnownRoadLocation;
- (id)loggedAbExperiment;
- (unsigned int)mainTransportTypeMaxRouteCount;
- (void)mergeFrom:(id)arg1;
- (bool)needLatency;
- (id)nonRecommendedRoutesCache;
- (int)nonRecommendedRoutesOption;
- (id)nonRecommendedRoutesOptionAsString:(int)arg1;
- (id)originalDirectionsResponseID;
- (id)originalRoute;
- (id)originalRouteID;
- (int)originalRoutePurpose;
- (id)originalRoutePurposeAsString:(int)arg1;
- (id)originalRouteZilchPoints;
- (bool)readFrom:(id)arg1;
- (int)requestMode;
- (id)requestModeAsString:(int)arg1;
- (double)requestTime;
- (unsigned int)requestTypeCode;
- (Class)responseClass;
- (id)routeAttributes;
- (unsigned int)sequenceNumber;
- (id)serviceTagAtIndex:(unsigned long long)arg1;
- (id)serviceTags;
- (unsigned long long)serviceTagsCount;
- (struct GEOSessionID { unsigned long long x1; unsigned long long x2; })sessionID;
- (double)sessionRelativeTimestamp;
- (id)sessionState;
- (void)setAbClientMetadata:(id)arg1;
- (void)setAdditionalEnabledMarkets:(id)arg1;
- (void)setClientCapabilities:(id)arg1;
- (void)setCommonOptions:(id)arg1;
- (void)setCurrentMapRegion:(id)arg1;
- (void)setCurrentUserLocation:(id)arg1;
- (void)setDepartureTime:(int)arg1;
- (void)setDeviceHistoricalLocations:(id)arg1;
- (void)setFeedback:(id)arg1;
- (void)setGetRouteForZilchPoints:(bool)arg1;
- (void)setHasDepartureTime:(bool)arg1;
- (void)setHasGetRouteForZilchPoints:(bool)arg1;
- (void)setHasIsFromAPI:(bool)arg1;
- (void)setHasMainTransportTypeMaxRouteCount:(bool)arg1;
- (void)setHasNeedLatency:(bool)arg1;
- (void)setHasNonRecommendedRoutesOption:(bool)arg1;
- (void)setHasOriginalRoutePurpose:(bool)arg1;
- (void)setHasRequestMode:(bool)arg1;
- (void)setHasRequestTime:(bool)arg1;
- (void)setHasSequenceNumber:(bool)arg1;
- (void)setHasSessionID:(bool)arg1;
- (void)setHasSessionRelativeTimestamp:(bool)arg1;
- (void)setHasTimeSinceLastRerouteRequest:(bool)arg1;
- (void)setHasUseLiveTrafficAsFallback:(bool)arg1;
- (void)setIsFromAPI:(bool)arg1;
- (void)setLastKnownRoadLocation:(id)arg1;
- (void)setLoggedAbExperiment:(id)arg1;
- (void)setMainTransportTypeMaxRouteCount:(unsigned int)arg1;
- (void)setNeedLatency:(bool)arg1;
- (void)setNonRecommendedRoutesCache:(id)arg1;
- (void)setNonRecommendedRoutesOption:(int)arg1;
- (void)setOriginalDirectionsResponseID:(id)arg1;
- (void)setOriginalRoute:(id)arg1;
- (void)setOriginalRouteID:(id)arg1;
- (void)setOriginalRoutePurpose:(int)arg1;
- (void)setOriginalRouteZilchPoints:(id)arg1;
- (void)setRequestMode:(int)arg1;
- (void)setRequestTime:(double)arg1;
- (void)setRouteAttributes:(id)arg1;
- (void)setSequenceNumber:(unsigned int)arg1;
- (void)setServiceTags:(id)arg1;
- (void)setSessionID:(struct GEOSessionID { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setSessionRelativeTimestamp:(double)arg1;
- (void)setSessionState:(id)arg1;
- (void)setTimeSinceLastRerouteRequest:(unsigned int)arg1;
- (void)setTrafficSnapshot:(id)arg1;
- (void)setUseLiveTrafficAsFallback:(bool)arg1;
- (void)setWaypointTypeds:(id)arg1;
- (unsigned int)timeSinceLastRerouteRequest;
- (id)trafficSnapshot;
- (bool)useLiveTrafficAsFallback;
- (id)waypointTypedAtIndex:(unsigned long long)arg1;
- (id)waypointTypeds;
- (unsigned long long)waypointTypedsCount;
- (void)writeTo:(id)arg1;

// Image: /System/Library/Frameworks/MapKit.framework/MapKit

- (void)_commonSetup:(id)arg1;
- (id)initWithDirectionsRequest:(id)arg1 origin:(id)arg2 destination:(id)arg3 withFeedback:(id)arg4;

@end
