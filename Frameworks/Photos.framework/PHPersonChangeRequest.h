/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Photos.framework/Photos
 */

@interface PHPersonChangeRequest : NSObject <PHInsertChangeRequest, PHUpdateChangeRequest> {
    bool  _clientEntitled;
    NSString * _clientName;
    int  _clientProcessID;
    PHRelationshipChangeRequestHelper * _facesHelper;
    PHChangeRequestHelper * _helper;
    NSString * _identifier;
    PHRelationshipChangeRequestHelper * _keyFaceHelper;
    PHPerson * _originalPerson;
    PHRelationshipChangeRequestHelper * _rejectedFacesGroupHelper;
}

@property (getter=isClientEntitled, nonatomic, readonly) bool clientEntitled;
@property (nonatomic, readonly) NSString *clientName;
@property (nonatomic, readonly) int clientProcessID;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSString *displayName;
@property (nonatomic, readonly) PHRelationshipChangeRequestHelper *facesHelper;
@property (nonatomic, copy) NSString *fullName;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) PHChangeRequestHelper *helper;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic) bool inPersonNamingModel;
@property (nonatomic, readonly) PHRelationshipChangeRequestHelper *keyFaceHelper;
@property (nonatomic, readonly) NSString *managedEntityName;
@property (nonatomic) long long manualOrder;
@property (getter=isMutated, readonly) bool mutated;
@property (getter=isNew, readonly) bool new;
@property (nonatomic, readonly) NSManagedObjectID *objectID;
@property (nonatomic, copy) NSString *personUri;
@property (nonatomic, readonly) PHObjectPlaceholder *placeholderForCreatedPerson;
@property (nonatomic, readonly) PHRelationshipChangeRequestHelper *rejectedFacesGroupHelper;
@property (readonly) Class superclass;
@property (nonatomic) long long type;
@property (nonatomic, readonly) NSString *uuid;
@property (nonatomic) bool verified;

+ (id)changeRequestForPerson:(id)arg1;
+ (id)creationRequestForPerson;
+ (void)deletePersons:(id)arg1;

- (void).cxx_destruct;
- (id)_existentFaceObjectIDs;
- (id)_mutableKeyFaceObjectIDsAndUUIDs;
- (id)_mutableObjectIDsAndUUIDs;
- (id)_mutableRejectedFacesGroupObjectIDsAndUUIDs;
- (void)_prepareFacesHelperIfNeeded;
- (void)_prepareKeyFaceHelperIfNeeded;
- (void)_prepareRejectedFacesGroupHelperIfNeeded;
- (void)_setOriginalPerson:(id)arg1;
- (bool)_shouldSetPersonToVerified:(id)arg1;
- (void)addFaces:(id)arg1;
- (void)addRejectedFaces:(id)arg1;
- (bool)allowMutationToManagedObject:(id)arg1 propertyKey:(id)arg2 error:(id*)arg3;
- (bool)applyMutationsToManagedObject:(id)arg1 error:(id*)arg2;
- (bool)canGenerateUUIDLocally;
- (id)clientName;
- (int)clientProcessID;
- (id)createManagedObjectForInsertIntoPhotoLibrary:(id)arg1 error:(id*)arg2;
- (void)didMutate;
- (id)displayName;
- (void)encodeToXPCDict:(id)arg1;
- (id)facesHelper;
- (id)fullName;
- (id)helper;
- (id)identifier;
- (bool)inPersonNamingModel;
- (id)initForNewObject;
- (id)initWithUUID:(id)arg1 objectID:(id)arg2;
- (id)initWithXPCDict:(id)arg1 clientEntitlements:(id)arg2 clientName:(id)arg3 clientBundleID:(id)arg4 clientProcessID:(int)arg5;
- (bool)isClientEntitled;
- (bool)isMutated;
- (bool)isNew;
- (id)keyFaceHelper;
- (id)managedEntityName;
- (long long)manualOrder;
- (id)mutations;
- (id)objectID;
- (void)performTransactionCompletionHandlingInPhotoLibrary:(id)arg1;
- (id)personUUID;
- (id)personUri;
- (id)placeholderForCreatedPerson;
- (id)rejectedFacesGroupHelper;
- (void)removeFaces:(id)arg1;
- (void)removeRejectedFaces:(id)arg1;
- (void)setDisplayName:(id)arg1;
- (void)setFullName:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setInPersonNamingModel:(bool)arg1;
- (void)setKeyFace:(id)arg1;
- (void)setManualOrder:(long long)arg1;
- (void)setPersonUUID:(id)arg1;
- (void)setPersonUri:(id)arg1;
- (void)setType:(long long)arg1;
- (void)setVerified:(bool)arg1;
- (long long)type;
- (id)uuid;
- (bool)validateInsertIntoPhotoLibrary:(id)arg1 error:(id*)arg2;
- (bool)validateMutationsToManagedObject:(id)arg1 error:(id*)arg2;
- (bool)verified;

@end
