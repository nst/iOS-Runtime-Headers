/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PowerlogLiteOperators.framework/PowerlogLiteOperators
 */

@interface PLPowerAssertionAgent : PLAgent {
    long long  _aggregateMaxPIDCount;
    long long  _aggregteZeroDeltaCount;
    NSDictionary * _assertTypeToEnum;
    NSMutableDictionary * _assertionAggregatedLastSample;
    NSMutableDictionary * _assertionAggregatedLastSamplePLDataStructure;
    PLCFNotificationOperatorComposition * _assertionBufferFullNotification;
    bool  _assertionBufferFullNotificationActive;
    PLTimer * _assertionBufferFullNotificationRearmTimer;
    NSMutableArray * _assertionBufferNotificationTracking;
    PLCFNotificationOperatorComposition * _assertionNotification;
    PLTimer * _assertionSnapShotTimer;
    PLEntryNotificationOperatorComposition * _batteryLevelNotificiations;
    PLEntryNotificationOperatorComposition * _canSleepNotification;
    PLNSNotificationOperatorComposition * _dailyTaskNotification;
    bool  _firstBufferDrain;
    NSSet * _logAssertNameForActions;
    PLTimer * _runQueryTimer;
    NSDictionary * _startEndActionsToEnum;
    PLEntryNotificationOperatorComposition * _wakeNotification;
}

@property long long aggregateMaxPIDCount;
@property long long aggregteZeroDeltaCount;
@property (readonly) NSDictionary *assertTypeToEnum;
@property (nonatomic, retain) NSMutableDictionary *assertionAggregatedLastSample;
@property (retain) NSMutableDictionary *assertionAggregatedLastSamplePLDataStructure;
@property (retain) PLCFNotificationOperatorComposition *assertionBufferFullNotification;
@property (nonatomic) bool assertionBufferFullNotificationActive;
@property (retain) PLTimer *assertionBufferFullNotificationRearmTimer;
@property (retain) NSMutableArray *assertionBufferNotificationTracking;
@property (retain) PLCFNotificationOperatorComposition *assertionNotification;
@property (retain) PLTimer *assertionSnapShotTimer;
@property (nonatomic) bool assertionSnapshotTimerActive;
@property (retain) PLEntryNotificationOperatorComposition *batteryLevelNotificiations;
@property (retain) PLEntryNotificationOperatorComposition *canSleepNotification;
@property (retain) PLNSNotificationOperatorComposition *dailyTaskNotification;
@property bool firstBufferDrain;
@property (readonly) NSSet *logAssertNameForActions;
@property (retain) PLTimer *runQueryTimer;
@property (readonly) NSDictionary *startEndActionsToEnum;
@property (retain) PLEntryNotificationOperatorComposition *wakeNotification;

+ (id)defaults;
+ (id)entryEventBackwardDefinitions;
+ (id)entryEventForwardDefinitionAssertion;
+ (id)entryEventForwardDefinitions;
+ (id)entryEventIntervalDefinitions;
+ (id)entryEventNoneDefinitions;
+ (id)entryEventPointDefinitionAggregateReset;
+ (id)entryEventPointDefinitionBufferStatus;
+ (id)entryEventPointDefinitionSnapshotReason;
+ (id)entryEventPointDefinitions;
+ (void)load;

- (void).cxx_destruct;
- (long long)aggregateMaxPIDCount;
- (long long)aggregteZeroDeltaCount;
- (id)assertTypeToEnum;
- (id)assertTypeToEnumMapping;
- (id)assertionAggregatedLastSample;
- (id)assertionAggregatedLastSamplePLDataStructure;
- (id)assertionBufferFullNotification;
- (bool)assertionBufferFullNotificationActive;
- (id)assertionBufferFullNotificationRearmTimer;
- (id)assertionBufferNotificationTracking;
- (id)assertionNotification;
- (id)assertionSnapShotTimer;
- (bool)assertionSnapshotTimerActive;
- (id)batteryLevelNotificiations;
- (id)bundleIDForAssertionProcessPID:(int)arg1;
- (id)canSleepNotification;
- (void)checkAssertionBufferFullNotificationRate;
- (id)dailyTaskNotification;
- (bool)firstBufferDrain;
- (id)init;
- (void)initOperatorDependancies;
- (void)log;
- (void)logAggregatedAssertionActivity;
- (void)logAggregatedAssertionActivityPLDataStructure;
- (id)logAssertNameForActions;
- (void)logEventForwardAssertion;
- (void)logEventForwardAssertionWithReason:(id)arg1 asSnapshot:(bool)arg2;
- (void)logEventPointAggregateResetWithReason:(short)arg1 withPidCount:(int)arg2;
- (void)logInterval:(id)arg1;
- (void)logSnapshot:(id)arg1;
- (void)logSnapshotAtMidnight:(id)arg1;
- (void)resetIOPMSetAssertionActivityAggregatePLDataStructureWithReason:(short)arg1 withPidCount:(int)arg2;
- (void)resetIOPMSetAssertionActivityAggregateWithReason:(short)arg1 withPidCount:(int)arg2;
- (id)runQueryTimer;
- (id)sanitizeAssertionNameForEntry:(id)arg1;
- (void)setAggregateMaxPIDCount:(long long)arg1;
- (void)setAggregteZeroDeltaCount:(long long)arg1;
- (void)setAssertionAggregatedLastSample:(id)arg1;
- (void)setAssertionAggregatedLastSamplePLDataStructure:(id)arg1;
- (void)setAssertionBufferFullNotification:(id)arg1;
- (void)setAssertionBufferFullNotificationActive:(bool)arg1;
- (void)setAssertionBufferFullNotificationActive:(bool)arg1 withReason:(id)arg2;
- (void)setAssertionBufferFullNotificationRearmTimer:(id)arg1;
- (void)setAssertionBufferNotificationTracking:(id)arg1;
- (void)setAssertionNotification:(id)arg1;
- (void)setAssertionSnapShotTimer:(id)arg1;
- (void)setAssertionSnapshotTimerActive:(bool)arg1;
- (void)setBatteryLevelNotificiations:(id)arg1;
- (void)setCanSleepNotification:(id)arg1;
- (void)setDailyTaskNotification:(id)arg1;
- (void)setFirstBufferDrain:(bool)arg1;
- (void)setRunQueryTimer:(id)arg1;
- (void)setWakeNotification:(id)arg1;
- (id)startEndActionsToEnum;
- (id)startEndActionsToEnumMapping;
- (id)wakeNotification;

@end
