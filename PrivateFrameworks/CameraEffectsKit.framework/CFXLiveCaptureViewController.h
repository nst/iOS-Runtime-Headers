/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraEffectsKit.framework/CameraEffectsKit
 */

@interface CFXLiveCaptureViewController : UIViewController <CFXRendererDelegate, JTVideoCameraAudioDelegate, JTVideoCameraVideoDelegate, UIGestureRecognizerDelegate> {
    long long  _captureMode;
    CFXEffectComposition * _composition;
    UIView * _containerView;
    UIView * _debugControlsView;
    <CFXLiveCaptureViewControllerDelegate> * _delegate;
    bool  _isCapturing_recordingQ;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _lastRenderTime;
    JTImage * _liveCaptureRenderedImage;
    NSObject<OS_dispatch_queue> * _liveCaptureRenderedImageQ;
    NSObject<OS_dispatch_queue> * _recordingQ;
    JTImageView * _renderImageView;
    NSOperationQueue * _renderedFrameCallbacksOperationQueue;
    CFXRenderer * _renderer;
    UIView * _uncroppedRenderImagePlaceHolderView;
    bool  _useLocalCameraViewfinder;
    JTVideoWriter * _videoWriter;
}

@property (nonatomic) long long captureMode;
@property (nonatomic, retain) CFXEffectComposition *composition;
@property (nonatomic, retain) UIView *containerView;
@property (nonatomic) UIView *debugControlsView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CFXLiveCaptureViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isCapturing;
@property (nonatomic) bool isCapturing_recordingQ;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } lastRenderTime;
@property (nonatomic, retain) JTImage *liveCaptureRenderedImage;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *liveCaptureRenderedImageQ;
@property (nonatomic, readonly) bool livePlayerIsSaturated;
@property (nonatomic, readonly) UIView *localCameraViewfinderView;
@property (nonatomic, readonly) struct { double x1; double x2; } normalizedMinimumHitTestArea;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *recordingQ;
@property (nonatomic) JTImageView *renderImageView;
@property (nonatomic, retain) NSOperationQueue *renderedFrameCallbacksOperationQueue;
@property (nonatomic, retain) CFXRenderer *renderer;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UIView *uncroppedCameraViewfinderPlaceholderView;
@property (nonatomic, retain) UIView *uncroppedRenderImagePlaceHolderView;
@property (nonatomic) bool useLocalCameraViewfinder;
@property (nonatomic, retain) JTVideoWriter *videoWriter;

+ (id)instantiate;

- (void).cxx_destruct;
- (void)CFX_createUncroppedCameraPlaceholderViewIfNecessary;
- (void)CFX_installGestures;
- (void)CFX_livePreviewDoubleTapped:(id)arg1;
- (void)CFX_livePreviewPanned:(id)arg1;
- (void)CFX_livePreviewPinched:(id)arg1;
- (void)CFX_livePreviewRotated:(id)arg1;
- (void)CFX_livePreviewTapped:(id)arg1;
- (void)CFX_setAnimationEnabledForOverlays:(bool)arg1;
- (void)cancelVideoRecording;
- (long long)captureMode;
- (id)composition;
- (id)containerView;
- (id)debugControlsView;
- (id)delegate;
- (void)didReceiveMemoryWarning;
- (void)executeAfterNextFrameIsRendered:(id /* block */)arg1;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (bool)isCapturing;
- (bool)isCapturing_recordingQ;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })lastRenderTime;
- (id)liveCaptureRenderedImage;
- (id)liveCaptureRenderedImageQ;
- (bool)livePlayerIsSaturated;
- (id)localCameraViewfinderView;
- (struct CGPoint { double x1; double x2; })locationInCaptureViewForGestureRecognizer:(id)arg1;
- (struct { double x1; double x2; })normalizedMinimumHitTestArea;
- (void)processAudioSample:(struct opaqueCMSampleBuffer { }*)arg1;
- (id)recordingQ;
- (void)removeAllEffects:(id /* block */)arg1;
- (void)removeAllEffectsOfType:(id)arg1 completion:(id /* block */)arg2;
- (id)renderImageView;
- (void)renderVideoFrame:(id)arg1;
- (id)renderedFrameCallbacksOperationQueue;
- (id)renderer;
- (void)renderer:(id)arg1 didRenderFrame:(id)arg2;
- (void)setCaptureMode:(long long)arg1;
- (void)setComposition:(id)arg1;
- (void)setContainerView:(id)arg1;
- (void)setDebugControlsView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setIsCapturing_recordingQ:(bool)arg1;
- (void)setLastRenderTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setLiveCaptureRenderedImage:(id)arg1;
- (void)setLiveCaptureRenderedImageQ:(id)arg1;
- (void)setRecordingQ:(id)arg1;
- (void)setRenderImageView:(id)arg1;
- (void)setRenderedFrameCallbacksOperationQueue:(id)arg1;
- (void)setRenderer:(id)arg1;
- (void)setUncroppedRenderImagePlaceHolderView:(id)arg1;
- (void)setUseLocalCameraViewfinder:(bool)arg1;
- (void)setVideoWriter:(id)arg1;
- (void)shutdownLivePlayer;
- (void)startButtonTouchUpInside:(id)arg1;
- (void)startRenderingCameraFrames;
- (void)startVideoRecordingWithFlashMode:(long long)arg1;
- (void)stopButtonTouchUpInside:(id)arg1;
- (void)stopRenderingCameraFrames;
- (void)stopVideoRecording:(id /* block */)arg1;
- (void)takeStillPhotoWithFlashMode:(long long)arg1 completion:(id /* block */)arg2;
- (void)toggleDebugControlsView:(id)arg1;
- (id)uncroppedCameraViewfinderPlaceholderView;
- (id)uncroppedRenderImagePlaceHolderView;
- (bool)useLocalCameraViewfinder;
- (id)videoWriter;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)willDropCameraFrame;

@end
