/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKRouteContext : NSObject {
    NSString * _accessPointEntryName;
    NSString * _accessPointExitName;
    long long  _currentLegIndex;
    long long  _currentStepIndex;
    bool  _hasContextChangedForLabels;
    bool  _hasContextChangedForRouteLine;
    long long  _inspectedLegIndex;
    long long  _inspectedStepIndex;
    NSHashTable * _labelObservers;
    NSString * _locale;
    struct { 
        double latitude; 
        double longitude; 
    }  _puckLocation;
    float  _puckRadius;
    unsigned long long  _puckSnappedStopID;
    GEOComposedRoute * _route;
    NSHashTable * _routeLineObservers;
    struct PolylineCoordinate { 
        unsigned int index; 
        float offset; 
    }  _routeOffset;
    bool  _snappingToTransitLines;
    unsigned char  _useType;
    unsigned char  useType;
}

@property (nonatomic, retain) NSString *accessPointEntryName;
@property (nonatomic, retain) NSString *accessPointExitName;
@property (nonatomic) long long currentLegIndex;
@property (nonatomic) long long currentStepIndex;
@property (nonatomic) long long inspectedLegIndex;
@property (nonatomic) long long inspectedStepIndex;
@property (nonatomic, retain) NSString *locale;
@property (nonatomic) struct { double x1; double x2; } puckLocation;
@property (nonatomic) float puckRadius;
@property (nonatomic) unsigned long long puckSnappedStopID;
@property (nonatomic, readonly) GEOComposedRoute *route;
@property (nonatomic) struct PolylineCoordinate { unsigned int x1; float x2; } routeOffset;
@property (nonatomic) bool snappingToTransitLines;
@property (nonatomic, readonly) unsigned char useType;

- (id).cxx_construct;
- (void)_setContextChangedForLabels;
- (void)_setContextChangedForRouteLine;
- (id)accessPointEntryName;
- (id)accessPointExitName;
- (void)addObserver:(id)arg1 withType:(unsigned char)arg2;
- (long long)currentLegIndex;
- (long long)currentStepIndex;
- (void)dealloc;
- (id)initWithComposedRoute:(id)arg1;
- (long long)inspectedLegIndex;
- (long long)inspectedStepIndex;
- (id)locale;
- (struct { double x1; double x2; })puckLocation;
- (float)puckRadius;
- (unsigned long long)puckSnappedStopID;
- (void)removeObserver:(id)arg1 withType:(unsigned char)arg2;
- (void)resetNotificationsForObserverType:(unsigned char)arg1;
- (id)route;
- (struct PolylineCoordinate { unsigned int x1; float x2; })routeOffset;
- (void)setAccessPointEntryName:(id)arg1;
- (void)setAccessPointExitName:(id)arg1;
- (void)setCurrentLegIndex:(long long)arg1;
- (void)setCurrentStepIndex:(long long)arg1;
- (void)setInspectedLegIndex:(long long)arg1;
- (void)setInspectedStepIndex:(long long)arg1;
- (void)setLocale:(id)arg1;
- (void)setPuckLocation:(struct { double x1; double x2; })arg1;
- (void)setPuckRadius:(float)arg1;
- (void)setPuckSnappedStopID:(unsigned long long)arg1;
- (void)setRouteOffset:(struct PolylineCoordinate { unsigned int x1; float x2; })arg1;
- (void)setSnappingToTransitLines:(bool)arg1;
- (bool)snappingToTransitLines;
- (unsigned char)useType;

@end
