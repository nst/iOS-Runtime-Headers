/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AssistantUI.framework/AssistantUI
 */

@interface AFUIRequestOptions : NSObject <NSCopying, NSSecureCoding> {
    bool  _acousticIdEnabled;
    NSString * _activationDeviceIdentifier;
    NSString * _appBundleIdentifier;
    AFBulletin * _bulletin;
    double  _buttonDownTimestamp;
    SAGuidanceCheckForGuideUpdateContext * _checkForGuideUpdateContext;
    NSDictionary * _continuityInfo;
    long long  _directActionEvent;
    double  _expectedTimestamp;
    NSNumber * _homeButtonUpFromBeep;
    bool  _initialBringUp;
    NSDictionary * _messagesDirectActionContext;
    SASPronunciationContext * _pronunciationContext;
    bool  _pronunciationRequest;
    bool  _releaseAudioSessionOnRecordingCompletion;
    AFRequestInfo * _requestInfo;
    long long  _requestSource;
    NSString * _serverCommandId;
    NSURL * _speechFileURL;
    AFSpeechRequestOptions * _speechRequestOptions;
    NSString * _text;
    double  _timestamp;
    bool  _useAutomaticEndpointing;
    bool  _useStreamingDictation;
}

@property (nonatomic) bool acousticIdEnabled;
@property (nonatomic, copy) NSString *activationDeviceIdentifier;
@property (nonatomic, copy) NSString *appBundleIdentifier;
@property (nonatomic, retain) AFBulletin *bulletin;
@property (nonatomic) double buttonDownTimestamp;
@property (nonatomic, copy) SAGuidanceCheckForGuideUpdateContext *checkForGuideUpdateContext;
@property (nonatomic, copy) NSDictionary *continuityInfo;
@property (nonatomic) long long directActionEvent;
@property (nonatomic) double expectedTimestamp;
@property (getter=isForSpeechRequest, nonatomic, readonly) bool forSpeechRequest;
@property (getter=isForStark, nonatomic, readonly) bool forStark;
@property (nonatomic, retain) NSNumber *homeButtonUpFromBeep;
@property (getter=isInitialBringUp, nonatomic) bool initialBringUp;
@property (nonatomic, copy) NSDictionary *messagesDirectActionContext;
@property (nonatomic, retain) SASPronunciationContext *pronunciationContext;
@property (getter=isPronunciationRequest, nonatomic) bool pronunciationRequest;
@property (nonatomic) bool releaseAudioSessionOnRecordingCompletion;
@property (nonatomic, retain) AFRequestInfo *requestInfo;
@property (nonatomic) long long requestSource;
@property (nonatomic, copy) NSString *serverCommandId;
@property (nonatomic, copy) NSURL *speechFileURL;
@property (nonatomic, retain) AFSpeechRequestOptions *speechRequestOptions;
@property (nonatomic, copy) NSString *text;
@property (nonatomic) double timestamp;
@property (nonatomic) bool useAutomaticEndpointing;
@property (nonatomic) bool useStreamingDictation;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_configureStreamingDictationForSource:(long long)arg1;
- (bool)acousticIdEnabled;
- (id)activationDeviceIdentifier;
- (id)appBundleIdentifier;
- (id)bulletin;
- (double)buttonDownTimestamp;
- (id)checkForGuideUpdateContext;
- (id)continuityInfo;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (long long)directActionEvent;
- (void)encodeWithCoder:(id)arg1;
- (double)expectedTimestamp;
- (id)homeButtonUpFromBeep;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithRequestSource:(long long)arg1;
- (bool)isForSpeechRequest;
- (bool)isForStark;
- (bool)isInitialBringUp;
- (bool)isPronunciationRequest;
- (id)messagesDirectActionContext;
- (id)pronunciationContext;
- (bool)releaseAudioSessionOnRecordingCompletion;
- (id)requestInfo;
- (long long)requestSource;
- (id)serverCommandId;
- (void)setAcousticIdEnabled:(bool)arg1;
- (void)setActivationDeviceIdentifier:(id)arg1;
- (void)setAppBundleIdentifier:(id)arg1;
- (void)setBulletin:(id)arg1;
- (void)setButtonDownTimestamp:(double)arg1;
- (void)setCheckForGuideUpdateContext:(id)arg1;
- (void)setContinuityInfo:(id)arg1;
- (void)setDirectActionEvent:(long long)arg1;
- (void)setExpectedTimestamp:(double)arg1;
- (void)setHomeButtonUpFromBeep:(id)arg1;
- (void)setInitialBringUp:(bool)arg1;
- (void)setMessagesDirectActionContext:(id)arg1;
- (void)setPronunciationContext:(id)arg1;
- (void)setPronunciationRequest:(bool)arg1;
- (void)setReleaseAudioSessionOnRecordingCompletion:(bool)arg1;
- (void)setRequestInfo:(id)arg1;
- (void)setRequestSource:(long long)arg1;
- (void)setServerCommandId:(id)arg1;
- (void)setSpeechFileURL:(id)arg1;
- (void)setSpeechRequestOptions:(id)arg1;
- (void)setText:(id)arg1;
- (void)setTimestamp:(double)arg1;
- (void)setUseAutomaticEndpointing:(bool)arg1;
- (void)setUseStreamingDictation:(bool)arg1;
- (id)speechFileURL;
- (id)speechRequestOptions;
- (id)text;
- (double)timestamp;
- (bool)useAutomaticEndpointing;
- (bool)useStreamingDictation;

@end
