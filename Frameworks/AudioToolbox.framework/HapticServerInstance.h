/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 */

@interface HapticServerInstance : NSObject <ServerInterface> {
    unsigned long long  _clientID;
    HapticServer * _master;
}

@property (readonly) unsigned long long clientID;
@property (readonly) HapticServer *master;

- (void).cxx_destruct;
- (void)allocateClientResources:(id)arg1;
- (unsigned long long)clientID;
- (int)doPrewarm:(struct shared_ptr<ClientEntry> { struct ClientEntry {} *x1; struct __shared_weak_count {} *x2; })arg1;
- (void)doReleaseClientResources:(struct shared_ptr<ClientEntry> { struct ClientEntry {} *x1; struct __shared_weak_count {} *x2; })arg1;
- (int)doStartRunning:(struct shared_ptr<ClientEntry> { struct ClientEntry {} *x1; struct __shared_weak_count {} *x2; })arg1;
- (void)doStopPrewarm:(struct shared_ptr<ClientEntry> { struct ClientEntry {} *x1; struct __shared_weak_count {} *x2; })arg1;
- (void)doStopRunning:(struct shared_ptr<ClientEntry> { struct ClientEntry {} *x1; struct __shared_weak_count {} *x2; })arg1;
- (void)getClientID:(id)arg1;
- (void)handleConnectionError;
- (id)initWithMasterAndID:(id)arg1 id:(unsigned long long)arg2 outError:(id*)arg3;
- (void)loadHapticPreset:(id)arg1 reply:(id)arg2;
- (void)loadHapticSequence:(id)arg1 reply:(id)arg2;
- (id)master;
- (void)prepareHapticSequence:(unsigned long long)arg1 reply:(id)arg2;
- (void)prewarm:(id)arg1;
- (void)releaseClientResources;
- (void)requestChannels:(unsigned long long)arg1 reply:(id)arg2;
- (void)setChannelEventBehavior:(unsigned long long)arg1 behavior:(unsigned long long)arg2 reply:(id)arg3;
- (void)setDoneReply:(id)arg1;
- (void)startRunning:(id)arg1;
- (void)stopPrewarm;
- (void)stopRunning;

@end
