/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TouchML.framework/TouchML
 */

@interface TMLRect : NSObject <NSCopying, TMLRectJSExports> {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _rect;
}

@property (nonatomic, readonly) double height;
@property (nonatomic, readonly) TMLPoint *maxpoint;
@property (nonatomic, readonly) double maxx;
@property (nonatomic, readonly) double maxy;
@property (nonatomic, readonly) TMLPoint *midpoint;
@property (nonatomic, readonly) double midx;
@property (nonatomic, readonly) double midy;
@property (nonatomic, readonly) TMLPoint *minpoint;
@property (nonatomic, readonly) double minx;
@property (nonatomic, readonly) double miny;
@property (nonatomic, readonly) TMLPoint *origin;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } rect;
@property (nonatomic, readonly) TMLSize *size;
@property (nonatomic, readonly) double width;
@property (nonatomic, readonly) double x;
@property (nonatomic, readonly) double y;

+ (void)initializeJSContext:(id)arg1;

- (id)CGRectValue;
- (id)applyAffineTransform:(id)arg1;
- (id)atOrigin:(id)arg1;
- (id)atOriginX:(double)arg1 y:(double)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (double)height;
- (id)initWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)inset:(double)arg1 :(double)arg2;
- (id)integral;
- (id)max:(double)arg1 :(double)arg2;
- (id)maxpoint;
- (double)maxx;
- (double)maxy;
- (id)midpoint;
- (double)midx;
- (double)midy;
- (id)min:(double)arg1 :(double)arg2;
- (id)minpoint;
- (double)minx;
- (double)miny;
- (id)offset:(double)arg1 :(double)arg2;
- (id)origin;
- (id)originInset:(double)arg1 :(double)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rect;
- (id)size;
- (double)width;
- (id)withHeight:(double)arg1;
- (id)withWidth:(double)arg1;
- (double)x;
- (double)y;

@end
