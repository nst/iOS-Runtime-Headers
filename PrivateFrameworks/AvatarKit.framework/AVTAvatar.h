/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit
 */

@interface AVTAvatar : NSObject <NSCopying, SCNSceneRendererDelegate> {
    bool  _arMode;
    void _arOffset;
    float  _arScale;
    AVTMemoji * _avatar;
    SCNNode * _avatarNode;
    CAAnimation * _bakedAnimation;
    SCNAnimationPlayer * _bakedAnimationPlayer_lazy;
    NSMutableArray * _clipsPlaying;
    NSMutableArray * _correctiveMorpherDescriptors;
    AVTEyeSkinningDescriptor * _eyeSkinningDescriptor;
    SCNNode * _headNode;
    SCNNode * _leftEye;
    struct SCNVector3 { 
        float x; 
        float y; 
        float z; 
    }  _lookAt;
    struct { id x1; long long x2; } * _morphInfoFromARKitBlendShapeIndex;
    NSMutableArray * _morpherDrivenMaterialDescriptors;
    SCNNode * _neckNode;
    SCNNode * _neckPivotNode;
    bool  _optimizedForSnapshot;
    NSMutableArray * _physicalizedMorpherDescriptors;
    AVTPhysicsController * _physicsController;
    double  _physicsScaleFactor;
    AVTPupilReflectionCorrectionDescriptor * _pupilReflectionCorrectionDescriptor;
    SCNNode * _rightEye;
    SCNNode * _skeleton;
    int  _transitionCount;
}

@property (nonatomic) bool arMode;
@property (readonly) SCNNode *avatarNode;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) SCNNode *headNode;
@property (readonly) SCNNode *neckNode;
@property (readonly) Class superclass;

+ (id)animationClipForExpression:(long long)arg1;
+ (id)animationClips;
+ (struct SCNVector4 { float x1; float x2; float x3; float x4; })applyGazeCorrectionWithInputAngletranslation;
+ (id)avatar;
+ (id)avatarWithData:(id)arg1 error:(id*)arg2;
+ (id)avatarWithDataRepresentation:(id)arg1 error:(id*)arg2;
+ (bool)canLoadDataRepresentation:(id)arg1;
+ (bool)canLoadDataRepresentationWithVersion:(unsigned short)arg1 minimumCompatibleVersion:(unsigned short)arg2 error:(id*)arg3;
+ (unsigned char)classIdentifier;
+ (void)initialize;
+ (void)preloadAvatar:(id)arg1;

- (void).cxx_destruct;
- (bool)_decode:(id)arg1 error:(id*)arg2;
- (void)_encode:(id)arg1;
- (bool)_headMayContainsMorphTargetNamed:(id)arg1;
- (void)_resetFaceToRandomPosition;
- (void)_updateShaderModifier:(id)arg1 forARMode:(bool)arg2 withOnTopMask:(bool)arg3;
- (void)addCorrectiveBlendShapesInHierarchy:(id)arg1;
- (void)addCustomBehavioursInHierarchy:(id)arg1;
- (void)addMorpherDrivenMaterialsInHierarchy:(id)arg1;
- (void)addMorphingSkinningControllersInHierarchy:(id)arg1;
- (void)addPhysicalizedMorpherDescriptorsInHierarchy:(id)arg1 ignoreUpperNodes:(bool)arg2;
- (void)animatePhysicsScaleFactor:(double)arg1 duration:(double)arg2;
- (void)applyBlendShapesWithTrackingInfo:(id)arg1;
- (void)applyCorrectiveBlendShapes;
- (void)applyHeadPoseWithTrackingInfo:(id)arg1;
- (void)applyHeadPoseWithTrackingInfo:(id)arg1 gazeCorrection:(bool)arg2;
- (void)applyHeadPoseWithTrackingInfo:(id)arg1 gazeCorrection:(bool)arg2 pointOfView:(id)arg3;
- (bool)arMode;
- (void)arOffset;
- (float)arScale;
- (void)avatarCommonInit;
- (id)avatarNode;
- (id)bakedAnimationCopy;
- (id)bakedAnimationPlayer;
- (id)cameraNode;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (struct SCNVector3 { float x1; float x2; float x3; })currentLookAt;
- (id)dataRepresentation;
- (void)dealloc;
- (id)descriptorsByRemovingDescriptors:(id)arg1 inHierarchy:(id)arg2 passingTest:(id /* block */)arg3;
- (void)didAddToScene:(id)arg1;
- (id)effectiveMorphedNodeForTargetName:(id)arg1;
- (void)evaluatePhysicalizedMorphers;
- (id)headNode;
- (id)init;
- (bool)isTransitioning;
- (id)lightingNode;
- (void)lookAt:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (void)lookAt:(struct SCNVector3 { float x1; float x2; float x3; })arg1 withDuration:(double)arg2;
- (struct { id x1; long long x2; })morphInfoForARKitBlendShapeIndex:(unsigned long long)arg1;
- (bool)morphTargetNameIsDrivenByARKit:(id)arg1;
- (id)neckNode;
- (bool)optimizeForSnapshot;
- (void)pauseBakedAnimation;
- (id)playAnimationClip:(id)arg1;
- (id)playAnimationClip:(id)arg1 usingSceneTime:(bool)arg2;
- (id)playAnimationClip:(id)arg1 usingSceneTime:(bool)arg2 withCompletion:(id /* block */)arg3;
- (id)playAnimationClip:(id)arg1 withCompletion:(id /* block */)arg2;
- (id)playAnimationClipForSnapshotting:(id)arg1;
- (id)pose;
- (void)removeCorrectiveBlendShapesInHierarchy:(id)arg1;
- (void)removeCustomBehavioursInHierarchy:(id)arg1;
- (void)removeMorpherDrivenMaterialsInHierarchy:(id)arg1;
- (void)removeMorphingSkinningControllersInHierarchy:(id)arg1;
- (void)removePhysicalizedMorpherDescriptorsInHierarchy:(id)arg1;
- (void)renderer:(id)arg1 didApplyAnimationsAtTime:(double)arg2;
- (void)resetARModeBehaviours;
- (void)resetCorrectiveBlendShapes;
- (void)resetCustomBehaviours;
- (void)resetMorpherDrivenMaterials;
- (void)resetMorphingSkinningControllers;
- (void)resetPhysicalizedMorpherDescriptors;
- (void)resumeBakedAnimation;
- (void)rotateHead:(double)arg1;
- (void)setArMode:(bool)arg1;
- (void)setAvatarNode:(id)arg1;
- (void)setBakedAnimationReferenceTime:(double)arg1;
- (void)setHeadNode:(id)arg1;
- (void)setOptimizeForSnapshot:(bool)arg1;
- (void)setPhysicsScaleFactor:(double)arg1;
- (void)setPose:(id)arg1;
- (void)setupEyeOrientationAndReflections;
- (void)setupFaceTracking;
- (void)setupMorphInfo;
- (struct UIImage { Class x1; }*)snapshotWithSize:(struct CGSize { double x1; double x2; })arg1 scale:(double)arg2 options:(id)arg3;
- (void)stopAndRemoveAnimationClips;
- (void)stopTransitionAnimation;
- (void)transitionFromPose:(id)arg1 toPose:(id)arg2 duration:(double)arg3 delay:(double)arg4 completionHandler:(id /* block */)arg5;
- (void)update;
- (void)updateBindings;
- (void)updateBindingsOfNode:(id)arg1;
- (void)updateEyeOrientationAndReflections;
- (void)updateMorpherDrivenMaterials;
- (bool)usesSkinningForEyeOrientation;
- (void)willRemoveFromScene:(id)arg1;

@end
