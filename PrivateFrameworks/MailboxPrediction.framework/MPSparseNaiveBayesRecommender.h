/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MailboxPrediction.framework/MailboxPrediction
 */

@interface MPSparseNaiveBayesRecommender : NSObject <MPRecommending> {
    <MPActionLogging> * _actionLogger;
    NSMutableArray * _ccRecipientMatrix;
    NSMutableArray * _ccRecipients;
    NSMutableDictionary * _labelCounts;
    NSMutableArray * _labels;
    NSString * _modelPath;
    NSMutableArray * _recipientMatrix;
    NSMutableArray * _recipients;
    NSMutableArray * _senderMatrix;
    NSMutableArray * _senders;
    NSMutableArray * _subjectMatrix;
    NSMutableArray * _subjectWords;
    bool  _trained;
    NSMutableArray * _trainingSet;
    bool  _useSubject;
}

@property (getter=actionLogger, nonatomic, retain) <MPActionLogging> *actionLogger;
@property (retain) NSMutableArray *ccRecipientMatrix;
@property (retain) NSMutableArray *ccRecipients;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (retain) NSMutableDictionary *labelCounts;
@property (retain) NSMutableArray *labels;
@property (retain) NSString *modelPath;
@property (retain) NSMutableArray *recipientMatrix;
@property (retain) NSMutableArray *recipients;
@property (retain) NSMutableArray *senderMatrix;
@property (retain) NSMutableArray *senders;
@property (retain) NSMutableArray *subjectMatrix;
@property (retain) NSMutableArray *subjectWords;
@property (readonly) Class superclass;
@property bool trained;
@property (retain) NSMutableArray *trainingSet;
@property bool useSubject;

+ (id)recommenderFromModelPath:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)actionLogger;
- (bool)addMessages:(id)arg1;
- (id)ccRecipientMatrix;
- (id)ccRecipients;
- (bool)clear;
- (id)computeLikelihoods:(id)arg1;
- (id)computePriors;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithModelPath:(id)arg1 usingSubject:(bool)arg2;
- (id)initializeMatrix:(id)arg1 columns:(unsigned long long)arg2;
- (bool)isValidTrainingMessage:(id)arg1;
- (id)labelCounts;
- (id)labels;
- (double)likelihoodForMatrix:(id)arg1 featureSet:(id)arg2 feature:(id)arg3 label:(id)arg4;
- (void)logUserAction:(unsigned long long)arg1 inContext:(unsigned long long)arg2 forMessage:(id)arg3 available:(id)arg4 displayed:(id)arg5 selected:(id)arg6;
- (id)modelPath;
- (id)recipientMatrix;
- (id)recipients;
- (id)recommendationsForMessage:(id)arg1 error:(id*)arg2;
- (bool)removeMessage:(id)arg1;
- (id)senderMatrix;
- (id)senders;
- (void)setActionLogger:(id)arg1;
- (void)setCcRecipientMatrix:(id)arg1;
- (void)setCcRecipients:(id)arg1;
- (void)setLabelCounts:(id)arg1;
- (void)setLabels:(id)arg1;
- (void)setModelPath:(id)arg1;
- (void)setRecipientMatrix:(id)arg1;
- (void)setRecipients:(id)arg1;
- (void)setSenderMatrix:(id)arg1;
- (void)setSenders:(id)arg1;
- (void)setSubjectMatrix:(id)arg1;
- (void)setSubjectWords:(id)arg1;
- (void)setTrained:(bool)arg1;
- (void)setTrainingSet:(id)arg1;
- (void)setUseSubject:(bool)arg1;
- (id)sortLabelsForScores:(id)arg1;
- (id)subjectMatrix;
- (id)subjectWords;
- (bool)synchronize;
- (bool)train;
- (bool)trained;
- (id)trainingSet;
- (void)updateCountsForMatrix:(id)arg1 label:(unsigned long long)arg2 feature:(unsigned long long)arg3;
- (void)updateFeatureSet:(id)arg1 feature:(id)arg2;
- (void)updateFeatureSet:(id)arg1 peopleArray:(id)arg2;
- (void)updateLabelCount:(id)arg1;
- (bool)useSubject;
- (bool)verifyBoundsForMatrix:(id)arg1 row:(unsigned long long)arg2 column:(unsigned long long)arg3;

@end
