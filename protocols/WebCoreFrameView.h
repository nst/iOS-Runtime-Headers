/* Generated by RuntimeBrowser.
 */

@protocol WebCoreFrameView

@required

- (struct Frame { int (**x1)(); struct atomic<unsigned int> { unsigned int x_2_1_1; } x2; struct Ref<WebCore::WindowProxy, WTF::DumbPtrTraits<WebCore::WindowProxy> > { struct WindowProxy {} *x_3_1_1; } x3; struct HashSet<WebCore::FrameDestructionObserver *, WTF::PtrHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *> > { struct HashTable<WebCore::FrameDestructionObserver *, WebCore::FrameDestructionObserver *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *> > { struct FrameDestructionObserver {} **x_1_2_1; unsigned int x_1_2_2; unsigned int x_1_2_3; unsigned int x_1_2_4; unsigned int x_1_2_5; } x_4_1_1; } x4; struct Frame {} *x5; struct Page {} *x6; struct RefPtr<WebCore::Settings, WTF::DumbPtrTraits<WebCore::Settings> > { struct Settings {} *x_7_1_1; } x7; struct FrameTree { struct Frame {} *x_8_1_1; struct Frame {} *x_8_1_2; struct AtomicString { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_3_2_1; } x_8_1_3; struct AtomicString { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_4_2_1; } x_8_1_4; struct RefPtr<WebCore::Frame, WTF::DumbPtrTraits<WebCore::Frame> > { struct Frame {} *x_5_2_1; } x_8_1_5; struct Frame {} *x_8_1_6; struct RefPtr<WebCore::Frame, WTF::DumbPtrTraits<WebCore::Frame> > { struct Frame {} *x_7_2_1; } x_8_1_7; struct Frame {} *x_8_1_8; unsigned int x_8_1_9; unsigned long long x_8_1_10; } x8; }*)_web_frame:(void *)arg1; // needs 1 arg types, found 17: float, struct IntPoint { int x1; int x2; }, struct ViewportArguments { int x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; int x14; bool x15; }, bool, struct VisibleSelection { struct Position { struct RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> > { struct Node {} *x_1_2_1; } x_1_1_1; int x_1_1_2; unsigned int x_1_1_3 : 3; unsigned int x_1_1_4 : 1; } x1; struct Position { struct RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> > { struct Node {} *x_1_2_1; } x_2_1_1; int x_2_1_2; unsigned int x_2_1_3 : 3; unsigned int x_2_1_4 : 1; } x2; struct Position { struct RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> > { struct Node {} *x_1_2_1; } x_3_1_1; int x_3_1_2; unsigned int x_3_1_3 : 3; unsigned int x_3_1_4 : 1; } x3; struct Position { struct RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> > { struct Node {} *x_1_2_1; } x_4_1_1; int x_4_1_2; unsigned int x_4_1_3 : 3; unsigned int x_4_1_4 : 1; } x4; int x5; int x6; unsigned int x7 : 1; unsigned int x8 : 1; }, struct VisibleSelection { struct Position { struct RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> > { struct Node {} *x_1_2_1; } x_1_1_1; int x_1_1_2; unsigned int x_1_1_3 : 3; unsigned int x_1_1_4 : 1; } x1; struct Position { struct RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> > { struct Node {} *x_1_2_1; } x_2_1_1; int x_2_1_2; unsigned int x_2_1_3 : 3; unsigned int x_2_1_4 : 1; } x2; struct Position { struct RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> > { struct Node {} *x_1_2_1; } x_3_1_1; int x_3_1_2; unsigned int x_3_1_3 : 3; unsigned int x_3_1_4 : 1; } x3; struct Position { struct RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> > { struct Node {} *x_1_2_1; } x_4_1_1; int x_4_1_2; unsigned int x_4_1_3 : 3; unsigned int x_4_1_4 : 1; } x4; int x5; int x6; unsigned int x7 : 1; unsigned int x8 : 1; }, float, float, int, bool, unsigned int, unsigned int, bool, struct UniqueRef<WebCore::EventHandler> { struct unique_ptr<WebCore::EventHandler, std::__1::default_delete<WebCore::EventHandler> > { struct __compressed_pair<WebCore::EventHandler *, std::__1::default_delete<WebCore::EventHandler> > { struct EventHandler {} *x_1_2_1; } x_1_1_1; } x1; }, void*, id, SEL

@end
