/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TVRemoteUI.framework/TVRemoteUI
 */

@interface TVRUIButton : UIControl {
    long long  _buttonType;
    UIColor * _defaultBackgroundColor;
    _TVRButtonHaptic * _haptic;
    UIViewPropertyAnimator * _highlightAnimator;
    UIImageView * _imageView;
    bool  _tapAction;
    UILabel * _titleLabel;
    UIViewPropertyAnimator * _unhighlightAnimator;
}

@property (nonatomic, readonly) long long buttonType;
@property (nonatomic, retain) UIColor *defaultBackgroundColor;
@property (nonatomic, retain) _TVRButtonHaptic *haptic;
@property (nonatomic, retain) UIViewPropertyAnimator *highlightAnimator;
@property (nonatomic, retain) UIImageView *imageView;
@property (getter=hasTapAction, nonatomic, readonly) bool tapAction;
@property (nonatomic, retain) UILabel *titleLabel;
@property (nonatomic, retain) UIViewPropertyAnimator *unhighlightAnimator;

+ (bool)buttonTypeHasTapAction:(long long)arg1;
+ (bool)isValidButtonType:(long long)arg1;

- (void).cxx_destruct;
- (unsigned long long)_controlEventsForActionTriggered;
- (void)_touchDown:(id)arg1;
- (void)_touchUp:(id)arg1;
- (long long)buttonType;
- (id)defaultBackgroundColor;
- (id)haptic;
- (bool)hasTapAction;
- (id)highlightAnimator;
- (id)imageView;
- (id)initWithType:(long long)arg1 hasTapAction:(bool)arg2;
- (void)layoutSubviews;
- (void)setDefaultBackgroundColor:(id)arg1;
- (void)setHaptic:(id)arg1;
- (void)setHighlightAnimator:(id)arg1;
- (void)setImageView:(id)arg1;
- (void)setTitleLabel:(id)arg1;
- (void)setUnhighlightAnimator:(id)arg1;
- (id)titleLabel;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (id)unhighlightAnimator;

@end
