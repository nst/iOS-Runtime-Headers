/* Generated by RuntimeBrowser.
 */

@protocol CFXEffectBrowserViewControllerDelegate <CFXEffectBrowserContentPresenterDelegate>

@required

- (bool)allowLandscapeForEffectBrowserViewController:(CFXEffectBrowserViewController *)arg1;
- (void)effectBrowserViewController:(CFXEffectBrowserViewController *)arg1 didDropOverlayEffect:(CFXEffect *)arg2 atScreenLocation:(struct CGPoint { double x1; double x2; })arg3 atScreenSize:(struct CGSize { double x1; double x2; })arg4 rotationAngle:(double)arg5;
- (void)effectBrowserViewController:(CFXEffectBrowserViewController *)arg1 didRemoveAllEffectsOfType:(CFXEffectType *)arg2;
- (void)effectBrowserViewController:(CFXEffectBrowserViewController *)arg1 didSelectEffect:(CFXEffect *)arg2;
- (void)effectBrowserViewController:(void *)arg1 filterPickerPreviewBackgroundImageAtSizeInPixels:(void *)arg2 completion:(void *)arg3; // needs 3 arg types, found 9: CFXEffectBrowserViewController *, struct CGSize { double x1; double x2; }, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, UIImage *, NSError *, void*
- (NSString *)localizedPromptForHidingAnimojiForEffectBrowserViewController:(CFXEffectBrowserViewController *)arg1;
- (NSString *)selectedAnimojiIdentifierForEffectBrowserViewController:(CFXEffectBrowserViewController *)arg1;
- (NSString *)selectedFilterIdentifierForEffectBrowserViewController:(CFXEffectBrowserViewController *)arg1;
- (bool)shouldAlwaysPresentExpandedAppsForEffectBrowserViewController:(CFXEffectBrowserViewController *)arg1;

@optional

- (void)effectBrowserViewController:(CFXEffectBrowserViewController *)arg1 didDismissPickerForEffectType:(CFXEffectType *)arg2;
- (void)effectBrowserViewController:(CFXEffectBrowserViewController *)arg1 didPresentPickerForEffectType:(CFXEffectType *)arg2;
- (void)effectBrowserViewController:(CFXEffectBrowserViewController *)arg1 didSelectApp:(NSString *)arg2;
- (void)effectBrowserViewController:(CFXEffectBrowserViewController *)arg1 didSelectAppWithIdentifier:(NSString *)arg2;
- (void)effectBrowserViewControllerDidStartCaptureSession:(CFXEffectBrowserViewController *)arg1;
- (void)effectBrowserViewControllerDidStopCaptureSession:(CFXEffectBrowserViewController *)arg1;
- (CFXMediaItem *)mediaItemForEffectBrowserViewController:(CFXEffectBrowserViewController *)arg1;
- (bool)shouldRotateCellsForDeviceOrientation;

@end
