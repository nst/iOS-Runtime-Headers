/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
 */

@interface FBSystemService : NSObject {
    <FBSystemServiceDelegate> * _delegate;
    int  _pendingExit;
    FBSSerialQueue * _queue;
    FBSystemServiceServer * _server;
}

@property (nonatomic) <FBSystemServiceDelegate> *delegate;
@property (getter=isPendingExit, readonly) bool pendingExit;
@property (nonatomic, readonly, retain) FBSSerialQueue *queue;
@property (nonatomic, retain) FBSystemServiceServer *server;

+ (id)sharedInstance;

- (void)_activateApplication:(id)arg1 options:(id)arg2 source:(id)arg3 originalSource:(id)arg4 withResult:(id)arg5;
- (bool)_isTrustedRequestToOpenApplication:(id)arg1 options:(id)arg2 source:(id)arg3 originalSource:(id)arg4;
- (bool)_isWhitelistedLaunchSuspendedApp:(id)arg1;
- (void)_logPendedActivationRequestForMismatchedClientSequenceNumber:(unsigned long long)arg1 clientCacheGUID:(id)arg2 ourSequenceNumber:(unsigned long long)arg3 ourCacheGUID:(id)arg4;
- (void)_performExitTasksForRelaunch:(bool)arg1;
- (void)_reallyActivateApplication:(id)arg1 options:(id)arg2 source:(id)arg3 originalSource:(id)arg4 isTrusted:(bool)arg5 sequenceNumber:(unsigned long long)arg6 cacheGUID:(id)arg7 ourSequenceNumber:(unsigned long long)arg8 ourCacheGUID:(id)arg9 withResult:(id)arg10;
- (bool)_requireEntitlementToOpenURL:(id)arg1;
- (bool)_shouldPendRequestForClientSequenceNumber:(unsigned long long)arg1 clientCacheGUID:(id)arg2 ourSequenceNumber:(unsigned long long)arg3 ourCacheGUID:(id)arg4;
- (void)_terminateProcess:(id)arg1 forReason:(long long)arg2 andReport:(bool)arg3 withDescription:(id)arg4 completion:(id)arg5;
- (void)activateApplication:(id)arg1 options:(id)arg2 source:(id)arg3 originalSource:(id)arg4 withResult:(id)arg5;
- (void)canActivateApplication:(id)arg1 source:(id)arg2 withResult:(id)arg3;
- (void)dataReset:(id)arg1 completion:(id)arg2;
- (void)dealloc;
- (id)delegate;
- (void)exitAndRelaunch:(bool)arg1;
- (void)exitAndRelaunch:(bool)arg1 withOptions:(unsigned long long)arg2;
- (void)handleActions:(id)arg1 source:(id)arg2 withResult:(id)arg3;
- (id)initWithQueue:(id)arg1;
- (void)isPasscodeLockedOrBlockedWithResult:(id)arg1;
- (bool)isPendingExit;
- (void)prepareForExitAndRelaunch:(bool)arg1;
- (id)queue;
- (id)server;
- (void)setDelegate:(id)arg1;
- (void)setPendingExit:(bool)arg1;
- (void)setServer:(id)arg1;
- (void)shutdownAndReboot:(bool)arg1;
- (void)shutdownWithOptions:(unsigned long long)arg1;
- (id)systemApplicationBundleIdentifier;
- (void)terminateApplication:(id)arg1 forReason:(long long)arg2 andReport:(bool)arg3 withDescription:(id)arg4 source:(id)arg5 completion:(id)arg6;
- (void)terminateApplicationGroup:(long long)arg1 forReason:(long long)arg2 andReport:(bool)arg3 withDescription:(id)arg4 source:(id)arg5;
- (void)terminateApplicationGroup:(long long)arg1 forReason:(long long)arg2 andReport:(bool)arg3 withDescription:(id)arg4 source:(id)arg5 completion:(id)arg6;

@end
