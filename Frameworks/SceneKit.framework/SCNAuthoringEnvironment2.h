/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SceneKit.framework/SceneKit
 */

@interface SCNAuthoringEnvironment2 : NSObject {
    UIColor * _blue;
    SCNGeometry * _cameraFrustumGeometry;
    SCNGeometry * _cameraGeometry;
    SCNGeometry * _cameraNearPlaneGeometry;
    SCNNode * _cameraRoot;
    struct __CFDictionary { } * _camerasDictionary;
    UIColor * _cyan;
    long long  _displayMask;
    UIColor * _grayDark;
    UIColor * _grayLight;
    UIColor * _grayMedium;
    UIColor * _green;
    SCNGeometry * _jointGeometry;
    struct __CFDictionary { } * _jointsDictionary;
    SCNNode * _jointsRoot;
    SCNNode * _layerRoot;
    SCNGeometry * _lightGeometry;
    SCNNode * _lightRoot;
    struct __CFDictionary { } * _lightsDictionary;
    UIColor * _orange;
    UIColor * _paleBlue;
    UIColor * _paleGreen;
    struct __CFDictionary { } * _particlesDictionary;
    SCNGeometry * _particlesGeometry;
    SCNNode * _particlesRoot;
    UIColor * _pink;
    UIColor * _red;
    SCNRenderer * _renderer;
    struct __C3DScene { } * _scene;
    NSMutableSet * _selection;
    UIColor * _white;
    UIColor * _yellow;
}

@property long long displayMask;

+ (id)authoringEnvironmentForScene:(id)arg1;

- (void)addCameraNode:(id)arg1;
- (void)addJointNode:(id)arg1;
- (void)addLightNode:(id)arg1;
- (void)addNodeToSelection:(id)arg1;
- (void)addParticlesNode:(id)arg1;
- (void)addedNode:(id)arg1;
- (id)cameraFrustumGeometry;
- (id)cameraGeometry;
- (id)cameraNearPlaneGeometry;
- (void)cancelSelection;
- (void)dealloc;
- (bool)didTapAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (long long)displayMask;
- (id)initWithScene:(id)arg1;
- (id)jointGeometry;
- (id)lightGeometry;
- (id)particlesGeometry;
- (void)prepareScene:(id)arg1;
- (void)removeCameraNode:(id)arg1;
- (void)removeJointNode:(id)arg1;
- (void)removeLightNode:(id)arg1;
- (void)removeParticlesNode:(id)arg1;
- (void)removedNode:(id)arg1;
- (void)selectNode:(id)arg1;
- (void)selectNodes:(id)arg1;
- (void)setDisplayMask:(long long)arg1;
- (void)updateCameraNode:(id)arg1 withSourceNode:(id)arg2;
- (void)updateJointNode:(id)arg1 withSourceNode:(id)arg2;
- (void)updateLightNode:(id)arg1 withSourceNode:(id)arg2;
- (void)updateLightTypeForNode:(id)arg1 source:(id)arg2 light:(id)arg3 andRatio:(float)arg4;
- (void)updateParticlesNode:(id)arg1 withSourceNode:(id)arg2;
- (void)updateWithRenderer:(id)arg1;

@end
