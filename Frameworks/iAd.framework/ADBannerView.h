/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/iAd.framework/iAd
 */

@interface ADBannerView : UIView <ADAdRecipient, ADDimmerViewDelegate> {
    ADAdSpace * _adSpace;
    long long  _adType;
    NSString * _advertisingSection;
    NSString * _authenticationUserName;
    bool  _bannerViewActionInProgress;
    double  _constraintBasedWidth;
    bool  _createdForIBInternal;
    bool  _debugHighlightEnabled;
    bool  _determiningConstraintBasedWidth;
    bool  _dimmed;
    ADDimmerView * _dimmerView;
    int  _displayMode;
    bool  _displayed;
    UIView * _highlightClippedView;
    UIView * _highlightHittableView;
    NSTimer * _highlightUpdateTimer;
    bool  _imageUpdateEnabled;
    bool  _inSecondConstraintsPass;
    int  _internalAdType;
    long long  _options;
    ADPrivacyButton * _privacyButton;
    bool  _scrolling;
    NSURL * _serverURL;
    int  _state;
    id  _stateChangedBlock;
    <ADBannerViewDelegate> * _weakDelegate;
    <ADBannerViewInternalDelegate> * _weakInternalDelegate;
}

@property (nonatomic, retain) ADAdSpace *adSpace;
@property (nonatomic, readonly) UIView *adSpaceView;
@property (nonatomic, readonly) long long adType;
@property (nonatomic, copy) NSString *advertisingSection;
@property (nonatomic, copy) NSString *authenticationUserName;
@property (getter=isBannerLoaded, nonatomic, readonly) bool bannerLoaded;
@property (getter=isBannerViewActionInProgress, nonatomic) bool bannerViewActionInProgress;
@property (nonatomic) double constraintBasedWidth;
@property (nonatomic, readonly) bool createdForIBInternal;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) bool debugHighlightEnabled;
@property (nonatomic) <ADBannerViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool determiningConstraintBasedWidth;
@property (nonatomic) bool dimmed;
@property (nonatomic, retain) ADDimmerView *dimmerView;
@property (nonatomic) int displayMode;
@property (nonatomic) bool displayed;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIView *highlightClippedView;
@property (nonatomic, retain) UIView *highlightHittableView;
@property (nonatomic, retain) NSTimer *highlightUpdateTimer;
@property (nonatomic) bool imageUpdateEnabled;
@property (nonatomic) bool inSecondConstraintsPass;
@property (nonatomic, readonly) int internalAdType;
@property (nonatomic, readonly) long long options;
@property (nonatomic, readonly) UIViewController *presentingViewController;
@property (nonatomic, retain) ADPrivacyButton *privacyButton;
@property (nonatomic) bool scrolling;
@property (nonatomic, copy) NSURL *serverURL;
@property (nonatomic) int state;
@property (nonatomic, copy) id stateChangedBlock;
@property (readonly) Class superclass;

+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_adWindowBounds;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameThatFits:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 adType:(int)arg2 statusBarOrientationIsPortrait:(bool)arg3;
+ (struct CGSize { double x1; double x2; })_landscapeBannerSize;
+ (struct CGSize { double x1; double x2; })_portraitBannerSize;
+ (struct CGSize { double x1; double x2; })_sizeThatFitsSize:(struct CGSize { double x1; double x2; })arg1 adType:(int)arg2 statusBarOrientationIsPortrait:(bool)arg3;
+ (bool)requiresConstraintBasedLayout;
+ (void)setServerURL:(id)arg1;
+ (struct CGSize { double x1; double x2; })sizeFromBannerContentSizeIdentifier:(id)arg1;

- (id)_accessibilityUserTestingElementAttributes;
- (void)_commonInit;
- (void)_forwardErrorToDelegate:(id)arg1;
- (id)_initWithInternalAdType:(int)arg1 options:(long long)arg2;
- (bool)_needsDoubleUpdateConstraintsPass;
- (void)_prepareForFirstIntrinsicContentSizeCalculation;
- (void)_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_resetHighlightTimer;
- (void)_resetToBeginningOfDoublePass;
- (void)_setInSecondConstraintsPass:(bool)arg1;
- (void)_updateHighlight:(id)arg1;
- (int)action;
- (id)adSpace;
- (id)adSpaceView;
- (long long)adType;
- (id)advertisingSection;
- (id)audioURL;
- (id)authenticationUserName;
- (void)bannerDidAppear;
- (void)bannerDidDisappear;
- (void)bannerTappedAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)beginAction;
- (void)cancelBannerViewAction;
- (void)cancelScheduledAd;
- (void)changeBannerViewState:(int)arg1;
- (double)constraintBasedWidth;
- (id)context;
- (bool)createdForIBInternal;
- (id)currentContentSizeIdentifier;
- (void)cycleImpressionImmediately;
- (void)dealloc;
- (bool)debugHighlightEnabled;
- (id)delegate;
- (id)descriptionForLCD;
- (bool)determiningConstraintBasedWidth;
- (void)didMoveToWindow;
- (bool)dimmed;
- (id)dimmerView;
- (void)dimmerView:(id)arg1 didReceiveTouchUpAtPoint:(struct CGPoint { double x1; double x2; })arg2;
- (int)displayMode;
- (bool)displayed;
- (bool)enableDimmerView:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (bool)hasAction;
- (bool)hasTransparencyDetails;
- (id)headlineForLCD;
- (id)highlightClippedView;
- (id)highlightHittableView;
- (id)highlightUpdateTimer;
- (id)identifier;
- (bool)imageUpdateEnabled;
- (bool)inSecondConstraintsPass;
- (id)initFromIBWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initFromIBWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 adType:(long long)arg2;
- (id)initWithAdType:(long long)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (int)internalAdType;
- (id)internalDelegate;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (bool)isBannerLoaded;
- (bool)isBannerViewActionInProgress;
- (bool)isiAdContentServer;
- (void)layoutSubviews;
- (void)loadAd:(id)arg1;
- (id)logoImageURL;
- (id)nativeMetadata;
- (long long)options;
- (void)pauseBannerMedia;
- (void)playbackFailed:(id)arg1;
- (void)playbackFinished:(id)arg1;
- (void)playbackPaused;
- (void)playbackResumed;
- (void)playbackStarted;
- (void)playbackStartedForImpressionSource:(int)arg1;
- (void)prerollDidStart;
- (void)prerollDidStop;
- (id)presentingViewController;
- (id)privacyButton;
- (void)privacyButtonWasTapped;
- (id)publicImpressionAttributes;
- (void)reportNativeClickEvent;
- (id)requiredContentSizeIdentifiers;
- (void)resizeWithOldSuperviewSize:(struct CGSize { double x1; double x2; })arg1;
- (void)resumeBannerMedia;
- (void)resumeImpressionCycling;
- (void)scheduleAd;
- (bool)scrolling;
- (void)serverBannerViewDidFailToReceiveAdWithError:(id)arg1;
- (void)serverBannerViewDidLoad;
- (void)serverBannerViewWillLoad;
- (void)serverStoryboardDidTransitionOut;
- (id)serverURL;
- (void)setAdSpace:(id)arg1;
- (void)setAdvertisingSection:(id)arg1;
- (void)setAlpha:(double)arg1;
- (void)setAuthenticationUserName:(id)arg1;
- (void)setAutoresizingMask:(unsigned long long)arg1;
- (void)setBannerViewActionInProgress:(bool)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)setConstraintBasedWidth:(double)arg1;
- (void)setContext:(id)arg1;
- (void)setCurrentContentSizeIdentifier:(id)arg1;
- (void)setDebugHighlightEnabled:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeterminingConstraintBasedWidth:(bool)arg1;
- (void)setDimmed:(bool)arg1;
- (void)setDimmerView:(id)arg1;
- (void)setDisplayMode:(int)arg1;
- (void)setDisplayed:(bool)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHidden:(bool)arg1;
- (void)setHighlightClippedView:(id)arg1;
- (void)setHighlightHittableView:(id)arg1;
- (void)setHighlightUpdateTimer:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setImageUpdateEnabled:(bool)arg1;
- (void)setInSecondConstraintsPass:(bool)arg1;
- (void)setInternalDelegate:(id)arg1;
- (void)setPrivacyButton:(id)arg1;
- (void)setRequiredContentSizeIdentifiers:(id)arg1;
- (void)setScrolling:(bool)arg1;
- (void)setServerURL:(id)arg1;
- (void)setState:(int)arg1;
- (void)setStateChangedBlock:(id)arg1;
- (void)setTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (bool)shouldTestVisibilityAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (double)skipThreshold;
- (int)state;
- (id)stateChangedBlock;
- (id)staticImageURL;
- (void)storyboardViewControllerDidPresent;
- (void)suspendImpressionCycling;
- (void)traitCollectionDidChange:(id)arg1;
- (id)uniqueIdentifier;
- (void)updateConstraints;
- (void)updatePlaceholderImage;
- (void)userDidSkipPreroll;
- (id)videoAssets;

@end
