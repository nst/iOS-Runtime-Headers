/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks
 */

@interface WebBookmark : NSObject <NSCopying> {
    NSString * _UUID;
    int  _archiveStatus;
    bool  _deletable;
    bool  _editable;
    NSDictionary * _extraAttributes;
    bool  _fetchedIconData;
    bool  _folder;
    bool  _hidden;
    NSData * _iconData;
    int  _id;
    bool  _inserted;
    NSDictionary * _localAttributes;
    bool  _locallyAdded;
    unsigned long long  _modifiedAttributes;
    bool  _needsSyncUpdate;
    unsigned int  _orderIndex;
    int  _parentID;
    NSString * _serverID;
    int  _specialID;
    NSData * _syncData;
    NSString * _syncKey;
    bool  _syncable;
    NSString * _title;
    NSString * _url;
    bool  _usedForInMemoryChangeTracking;
    int  _webFilterStatus;
}

@property (nonatomic, readonly) NSString *UUID;
@property (nonatomic, readonly) UIImage *_sf_icon;
@property (setter=_sf_setIconKeyColor:, nonatomic, retain) UIColor *_sf_iconKeyColor;
@property (nonatomic, retain) NSString *address;
@property (nonatomic) int archiveStatus;
@property (nonatomic, retain) NSDate *dateAdded;
@property (nonatomic, retain) NSDate *dateLastArchived;
@property (nonatomic, retain) NSDate *dateLastFetched;
@property (nonatomic, retain) NSDate *dateLastViewed;
@property (getter=isDeletable, nonatomic, readonly) bool deletable;
@property (nonatomic, readonly, copy) NSDictionary *dictionaryRepresentationForInMemoryChangeTracking;
@property (getter=isEditable, nonatomic, readonly) bool editable;
@property (nonatomic, retain) NSDictionary *extraAttributes;
@property (nonatomic) bool fetchedIconData;
@property (getter=isFolder, nonatomic, readonly) bool folder;
@property (nonatomic) bool hasFetchedMetadata;
@property (getter=isHidden, nonatomic, readonly) bool hidden;
@property (nonatomic, retain) NSData *iconData;
@property (nonatomic, readonly) int identifier;
@property (getter=isInserted, nonatomic, readonly) bool inserted;
@property (nonatomic, retain) NSDictionary *localAttributes;
@property (nonatomic, retain) NSString *localPreviewText;
@property (nonatomic) bool locallyAdded;
@property (nonatomic, readonly) unsigned long long modifiedAttributes;
@property (nonatomic) bool needsSyncUpdate;
@property (nonatomic, retain) NSDictionary *nextPageURLs;
@property (nonatomic, readonly) int parentID;
@property (nonatomic, retain) NSString *previewText;
@property (nonatomic, retain) NSString *readingListIconURL;
@property (nonatomic, retain) NSString *readingListIconUUID;
@property (nonatomic, retain) NSString *serverID;
@property (nonatomic) bool shouldArchive;
@property (nonatomic, readonly) int specialID;
@property (nonatomic, retain) NSData *syncData;
@property (nonatomic, retain) NSString *syncKey;
@property (getter=isSyncable, nonatomic, readonly) bool syncable;
@property (nonatomic, retain) NSString *title;
@property (nonatomic) int webFilterStatus;

// Image: /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks

+ (id)_trimmedPreviewText:(id)arg1;
+ (id)_trimmedTitle:(id)arg1;

- (void).cxx_destruct;
- (id)UUID;
- (bool)_attributesMarkedAsModified:(unsigned long long)arg1;
- (id)_initWithSqliteRow:(struct sqlite3_stmt { }*)arg1;
- (id)_initWithSqliteRow:(struct sqlite3_stmt { }*)arg1 hasIcon:(bool)arg2;
- (void)_markAttributesAsModified:(unsigned long long)arg1;
- (void)_markSpecial:(int)arg1;
- (void)_modifyExtraReadingListAttributes:(id /* block */)arg1;
- (void)_modifyLocalReadingListAttributes:(id /* block */)arg1;
- (unsigned int)_orderIndex;
- (id)_readingListPropertyNamed:(id)arg1;
- (void)_removeDirectoryAtPath:(id)arg1;
- (void)_setHidden:(bool)arg1;
- (void)_setID:(int)arg1;
- (void)_setInserted:(bool)arg1;
- (void)_setOrderIndex:(unsigned int)arg1;
- (void)_setParentID:(int)arg1;
- (void)_setSyncable:(bool)arg1;
- (void)_setUUID:(id)arg1;
- (void)_setUsedForInMemoryChangeTracking:(bool)arg1;
- (unsigned long long)_sizeForFileOrDirectory:(id)arg1 withAttributes:(id)arg2;
- (id)_suggestedFileNameForWebView:(id)arg1;
- (bool)_usedForInMemoryChangeTracking;
- (id)address;
- (unsigned long long)archiveSize;
- (int)archiveStatus;
- (void)cleanupRedundantPreviewText;
- (void)clearArchive;
- (void)clearArchiveSynchronously;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dateAdded;
- (id)dateLastArchived;
- (id)dateLastFetched;
- (id)dateLastViewed;
- (id)description;
- (id)dictionaryRepresentationForInMemoryChangeTracking;
- (id)extraAttributes;
- (bool)fetchedIconData;
- (bool)fullArchiveAvailable;
- (bool)hasFetchedMetadata;
- (unsigned long long)hash;
- (id)iconData;
- (int)identifier;
- (id)init;
- (id)initBuiltinBookmarkWithTitle:(id)arg1 address:(id)arg2;
- (id)initBuiltinDeviceBookmarkWithTitle:(id)arg1 address:(id)arg2;
- (id)initCarrierBookmarkWithTitle:(id)arg1 address:(id)arg2;
- (id)initFolderWithParentID:(int)arg1;
- (id)initFrequentlyVisitedSiteWithWebBookmark:(id)arg1 title:(id)arg2;
- (id)initReadingListBookmarkWithTitle:(id)arg1 address:(id)arg2 previewText:(id)arg3;
- (id)initWhiteListBookmarkWithTitle:(id)arg1 address:(id)arg2;
- (id)initWithDictionaryRepresentationForInMemoryChangeTracking:(id)arg1;
- (id)initWithTitle:(id)arg1 address:(id)arg2;
- (bool)isBookmarksBarFolder;
- (bool)isBookmarksMenuFolder;
- (bool)isDeletable;
- (bool)isEditable;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToBookmark:(id)arg1;
- (bool)isFolder;
- (bool)isFrequentlyVisitedSitesFolder;
- (bool)isHidden;
- (bool)isInserted;
- (bool)isReadingListFolder;
- (bool)isReadingListItem;
- (bool)isSyncable;
- (bool)isWebFilterWhiteListFolder;
- (id)localAttributes;
- (id)localPreviewText;
- (id)localizedTitle;
- (bool)locallyAdded;
- (unsigned long long)modifiedAttributes;
- (bool)needsSyncUpdate;
- (id)nextPageURLs;
- (id)offlineArchiveDirectoryPath;
- (int)parentID;
- (id)previewText;
- (id)readingListIconURL;
- (id)readingListIconUUID;
- (id)serverID;
- (void)setAddress:(id)arg1;
- (void)setArchiveStatus:(int)arg1;
- (void)setDateAdded:(id)arg1;
- (void)setDateLastArchived:(id)arg1;
- (void)setDateLastFetched:(id)arg1;
- (void)setDateLastViewed:(id)arg1;
- (void)setExtraAttributes:(id)arg1;
- (void)setFetchedIconData:(bool)arg1;
- (void)setHasFetchedMetadata:(bool)arg1;
- (void)setIconData:(id)arg1;
- (void)setLocalAttributes:(id)arg1;
- (void)setLocalPreviewText:(id)arg1;
- (void)setLocallyAdded:(bool)arg1;
- (void)setNeedsSyncUpdate:(bool)arg1;
- (void)setNextPageURLs:(id)arg1;
- (void)setPreviewText:(id)arg1;
- (void)setReadingListIconURL:(id)arg1;
- (void)setReadingListIconUUID:(id)arg1;
- (void)setServerID:(id)arg1;
- (void)setShouldArchive:(bool)arg1;
- (void)setSyncData:(id)arg1;
- (void)setSyncKey:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitle:(id)arg1 previewText:(id)arg2 dateLastFetched:(id)arg3;
- (void)setWebFilterStatus:(int)arg1;
- (id)shortTypeDescription;
- (bool)shouldArchive;
- (bool)shouldReattemptArchiveWithAutomaticArchivingEnabled:(bool)arg1;
- (int)specialID;
- (id)syncData;
- (id)syncKey;
- (id)title;
- (int)webFilterStatus;
- (id)webarchivePathForNextPageURL:(id)arg1;
- (id)webarchivePathInReaderForm:(bool)arg1 fileExists:(bool*)arg2;
- (bool)writeOfflineWebView:(id)arg1 asArchive:(bool)arg2 inReaderForm:(bool)arg3;

// Image: /System/Library/Frameworks/SafariServices.framework/SafariServices

+ (unsigned long long)_sf_operationForDropSession:(id)arg1;
+ (void)_sf_webBookmarksFromDropSession:(id)arg1 completionHandler:(id /* block */)arg2;

- (id)_sf_icon;
- (id)_sf_iconKeyColor;
- (void)_sf_setIconKeyColor:(id)arg1;

@end
