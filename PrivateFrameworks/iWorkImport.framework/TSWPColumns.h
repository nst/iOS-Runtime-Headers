/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSWPColumns : NSObject {
    unsigned long long  _columnCount;
    bool  _equalWidth;
    double  _gapArray;
    double  _widthArray;
}

@property (nonatomic, readonly) unsigned long long columnCount;
@property (nonatomic, readonly) bool equalWidth;

+ (id)columns;

- (unsigned long long)columnCount;
- (id)copyWithColumnCount:(unsigned long long)arg1;
- (id)copyWithEqualWidth:(bool)arg1;
- (id)copyWithGap:(double)arg1 forColumnIndex:(unsigned long long)arg2 bodyWidth:(double)arg3;
- (id)copyWithWidth:(double)arg1 forColumnIndex:(unsigned long long)arg2 bodyWidth:(double)arg3;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (bool)equalWidth;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (id)init;
- (id)initWithArchive:(const struct ColumnsArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct ColumnsArchive_EqualColumnsArchive {} *x5; struct ColumnsArchive_NonEqualColumnsArchive {} *x6; }*)arg1 unarchiver:(id)arg2;
- (id)initWithColumnCount:(unsigned long long)arg1;
- (id)initWithColumnCount:(unsigned long long)arg1 equalWidth:(bool)arg2 widthArray:(double*)arg3 gapArray:(double*)arg4;
- (id)initWithEqualColumnCount:(unsigned long long)arg1 gapFraction:(double)arg2;
- (bool)isEqual:(id)arg1;
- (id)p_description;
- (double)p_equalGapForEqualWidth:(double)arg1;
- (double)p_equalWidthForEqualGap:(double)arg1;
- (double)p_maxEqualGapForBodyWidth:(double)arg1;
- (void)p_setColumnCount:(unsigned long long)arg1;
- (void)p_setColumnCount:(unsigned long long)arg1 gapFraction:(double)arg2;
- (void)p_setEqualWidth:(double)arg1 equalGap:(double)arg2;
- (void)p_setGap:(double)arg1 forColumnIndex:(unsigned long long)arg2 bodyWidth:(double)arg3;
- (void)p_setWidth:(double)arg1 forColumnIndex:(unsigned long long)arg2 bodyWidth:(double)arg3;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 outWidth:(double*)arg3 outGap:(double*)arg4;
- (void)saveToArchive:(struct ColumnsArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct ColumnsArchive_EqualColumnsArchive {} *x5; struct ColumnsArchive_NonEqualColumnsArchive {} *x6; }*)arg1 archiver:(id)arg2;
- (void)setEqualWidth:(bool)arg1;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;

@end
