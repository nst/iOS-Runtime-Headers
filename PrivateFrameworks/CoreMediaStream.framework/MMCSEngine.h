/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreMediaStream.framework/CoreMediaStream
 */

@interface MMCSEngine : NSObject {
    NSString * _appIDHeader;
    bool  _autoGenerateItemID;
    NSMutableDictionary * _autoItemIDDictionary;
    NSObject<OS_dispatch_queue> * _autoItemIDDictionaryQueue;
    NSURL * _autoItemIDPersistenceURL;
    NSString * _dataClass;
    <MMCSEngineDelegate> * _delegate;
    struct _mmcs_engine { } * _engine;
    struct { 
        long long version; 
        void *context; 
        int (*getFileDescriptorAndContentTypeFromItemCallback)(); 
        int (*getItemProgressCallback)(); 
        int (*getItemDoneCallback)(); 
        int (*putItemProgressCallback)(); 
        int (*putItemDoneCallback)(); 
        int (*requestCompletedCallback)(); 
    }  _engineClientContext;
    bool  _isDone;
    bool  _isMetricsGatheringEnabled;
    NSMutableDictionary * _itemIDToAssetMap;
    NSObject<OS_dispatch_queue> * _itemIDToAssetMapQueue;
    NSDictionary * _options;
    NSObject<OS_dispatch_queue> * _reqestorContextQueue;
    NSMutableArray * _requestorContexts;
    NSTimer * _threadKeepAliveTimer;
    NSURL * _workPathURL;
    NSThread * _workThread;
}

@property (nonatomic) bool autoGenerateItemID;
@property (nonatomic) <MMCSEngineDelegate> *delegate;
@property (nonatomic, readonly) bool hasOutstandingActivity;
@property (nonatomic) bool isDone;
@property (nonatomic) bool isMetricsGatheringEnabled;
@property (nonatomic, retain) NSTimer *threadKeepAliveTimer;
@property (nonatomic, retain) NSThread *workThread;

+ (id)logStringForGetItemState:(int)arg1;
+ (id)logStringForPutItemState:(int)arg1;

- (void).cxx_destruct;
- (id)_assetWithItemID:(unsigned long long)arg1;
- (void)_doNothingTimerHandler:(id)arg1;
- (bool)_getFileDescriptorAndContentTypeFromItemID:(unsigned long long)arg1 outFD:(int*)arg2 outItemType:(id*)arg3 outError:(id*)arg4;
- (void)_getItemDoneItemID:(unsigned long long)arg1 path:(id)arg2 requestorContext:(id)arg3 error:(id)arg4;
- (void)_getItemProgressItemID:(unsigned long long)arg1 state:(int)arg2 progress:(double)arg3 requestorContext:(id)arg4 error:(id)arg5;
- (void)_initItemIDPersistence;
- (unsigned long long)_nextItemID;
- (void)_putItemDoneItemID:(unsigned long long)arg1 requestorContext:(id)arg2 putReceipt:(id)arg3 error:(id)arg4;
- (void)_putItemProgressItemID:(unsigned long long)arg1 state:(int)arg2 progress:(double)arg3 requestorContext:(id)arg4 error:(id)arg5;
- (void)_registerAsset:(id)arg1;
- (void)_registerRequestorContext:(id)arg1;
- (void)_removeAssetForItemID:(unsigned long long)arg1;
- (void)_removeRequestorContext:(id)arg1;
- (void)_requestCompletedRequestorContext:(id)arg1;
- (bool)autoGenerateItemID;
- (void)cancelAllOperations;
- (void)cancelOperationsWithContext:(id)arg1;
- (id)delegate;
- (void)getAssets:(id)arg1 requestURL:(id)arg2 DSID:(id)arg3 options:(id)arg4;
- (bool)hasOutstandingActivity;
- (id)initWithWorkPath:(id)arg1 appIDHeader:(id)arg2 dataClass:(id)arg3 options:(id)arg4;
- (id)initWithWorkPath:(id)arg1 appIDHeader:(id)arg2 dataClass:(id)arg3 options:(id)arg4 modes:(id)arg5;
- (bool)isActive;
- (bool)isDone;
- (bool)isMetricsGatheringEnabled;
- (void)performBlock:(id /* block */)arg1;
- (void)performBlockOnWorkThread:(id /* block */)arg1;
- (void)performBlockOnWorkThread:(id /* block */)arg1 waitUntilDone:(bool)arg2;
- (void)putAssets:(id)arg1 requestURL:(id)arg2 DSID:(id)arg3 options:(id)arg4;
- (void)registerAssetForUpload:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)registerAssets:(id)arg1 forDownloadCompletionBlock:(id /* block */)arg2;
- (void)reregisterAssetForDownload:(id)arg1;
- (void)reregisterAssetForUpload:(id)arg1;
- (void)setAutoGenerateItemID:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setIsDone:(bool)arg1;
- (void)setIsMetricsGatheringEnabled:(bool)arg1;
- (void)setThreadKeepAliveTimer:(id)arg1;
- (void)setWorkThread:(id)arg1;
- (void)shutDownCompletionBlock:(id /* block */)arg1;
- (id)threadKeepAliveTimer;
- (void)threadMain:(id)arg1;
- (void)unregisterAsset:(id)arg1;
- (void)unregisterAssets:(id)arg1;
- (id)workThread;

@end
