/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NanoMusicSync.framework/NanoMusicSync
 */

@interface NMSSyncManager : NSObject <ATSessionObserver> {
    id  _activeSyncSessionIdentifier;
    unsigned long long  _aggregateAssetPlaylistItemBytes;
    bool  _assetPlaylistItemsPendingDownload;
    float  _estimatedSyncProgress;
    NSTimer * _maskedPendingSyncStateRevealTimer;
    unsigned long long  _numberOfAssetPlaylistItems;
    unsigned long long  _numberOfAssetPlaylistItemsNeedingDownload;
    ATSession * _observedSession;
    bool  _syncPending;
    bool  _syncing;
    bool  _waitingForActiveSyncSessionIdentifierChange;
}

@property (nonatomic, retain) id activeSyncSessionIdentifier;
@property (nonatomic) unsigned long long aggregateAssetPlaylistItemBytes;
@property (getter=hasAssetPlaylistItemsPendingDownload, nonatomic) bool assetPlaylistItemsPendingDownload;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) float estimatedSyncProgress;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long numberOfAssetPlaylistItems;
@property (nonatomic) unsigned long long numberOfAssetPlaylistItemsNeedingDownload;
@property (readonly) Class superclass;
@property (getter=isSyncPending, nonatomic) bool syncPending;
@property (getter=isSyncing, nonatomic) bool syncing;

+ (id)sharedManager;

- (void).cxx_destruct;
- (id)_assetPlaylistTracksQuery;
- (id)_assetSyncAutofillTracksPredicate;
- (id)_assetSyncPlaylistTracksNeedingDownloadPredicate;
- (id)_assetSyncPlaylistTracksPredicate;
- (id)_assetSyncTracksPredicate;
- (unsigned long long)_estimatedArtworkSizeInBytes;
- (unsigned long long)_estimatedAssetPlaylistAggregateItemSizeInBytes;
- (unsigned long long)_estimatedAssetPlaylistAverageItemSizeInBytes;
- (void)_handleSyncPreferencesDidChangeNotification;
- (void)_invokeOnMainThread:(id)arg1;
- (bool)_isPendingAssetPlaylistSync;
- (unsigned long long)_numberOfAssetPlaylistItems;
- (unsigned long long)_numberOfAssetPlaylistItemsNeedingDownload;
- (void)_startObservingSyncSession;
- (void)_stopObservingSyncSession;
- (id)_tracksQueryWithPredicate:(id)arg1;
- (void)_updateObservedSyncSession;
- (void)_updateSyncState;
- (id)activeSyncSessionIdentifier;
- (unsigned long long)aggregateAssetPlaylistItemBytes;
- (float)estimatedSyncProgress;
- (bool)hasAssetPlaylistItemsPendingDownload;
- (id)init;
- (bool)isSyncPending;
- (bool)isSyncing;
- (unsigned long long)numberOfAssetPlaylistItems;
- (unsigned long long)numberOfAssetPlaylistItemsNeedingDownload;
- (void)session:(id)arg1 didBeginSessionTask:(id)arg2;
- (void)session:(id)arg1 didFinishSessionTask:(id)arg2;
- (void)session:(id)arg1 didUpdateSessionTask:(id)arg2;
- (void)session:(id)arg1 willBeginSessionTask:(id)arg2;
- (void)sessionDidFinish:(id)arg1;
- (void)sessionWillBegin:(id)arg1;
- (void)setActiveSyncSessionIdentifier:(id)arg1;
- (void)setAggregateAssetPlaylistItemBytes:(unsigned long long)arg1;
- (void)setAssetPlaylistItemsPendingDownload:(bool)arg1;
- (void)setEstimatedSyncProgress:(float)arg1;
- (void)setNumberOfAssetPlaylistItems:(unsigned long long)arg1;
- (void)setNumberOfAssetPlaylistItemsNeedingDownload:(unsigned long long)arg1;
- (void)setSyncPending:(bool)arg1;
- (void)setSyncing:(bool)arg1;

@end
