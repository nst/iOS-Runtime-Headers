/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NotesUI.framework/NotesUI
 */

@interface NoteContentLayer : UIView <NoteTextViewActionDelegate, NoteTextViewLayoutDelegate, UITextViewDelegate, UIWebDraggingDelegate> {
    NSLayoutConstraint * _bottomMarginConstraint;
    bool  _containsCJK;
    NSLayoutConstraint * _dateHorizontalContraint;
    NoteDateLabel * _dateLabel;
    NSLayoutConstraint * _dateTopMarginConstraint;
    <NoteContentLayerDelegate> * _delegate;
    UIView * _horizontalLayoutGuide;
    NSLayoutConstraint * _leftConstraint;
    NSString * _noteIdentifierForCurrentlyDraggedItems;
    NSLayoutConstraint * _rightConstraint;
    NotesScrollView * _scrollView;
    NSLayoutConstraint * _textTopMarginConstraint;
    NoteTextView * _textView;
    bool  _tracksMaximumContentLength;
    bool  _updatedTitleRange;
}

@property (nonatomic, retain) NSLayoutConstraint *bottomMarginConstraint;
@property (nonatomic) bool containsCJK;
@property (nonatomic, readonly) bool contentContainsValuableContent;
@property (nonatomic) struct CGPoint { double x1; double x2; } contentOffset;
@property (nonatomic, readonly) UIScrollView *contentScrollView;
@property (nonatomic, readonly) _UICompatibilityTextView *contentTextView;
@property (nonatomic, retain) NSLayoutConstraint *dateHorizontalContraint;
@property (nonatomic, retain) NoteDateLabel *dateLabel;
@property (nonatomic, retain) NSLayoutConstraint *dateTopMarginConstraint;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <NoteContentLayerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isEditable, nonatomic) bool editable;
@property (nonatomic, readonly) bool hasFullHeight;
@property (nonatomic, readonly) bool hasFullWidth;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIView *horizontalLayoutGuide;
@property (nonatomic, readonly) DOMHTMLDocument *htmlDocument;
@property (nonatomic, retain) NSLayoutConstraint *leftConstraint;
@property (nonatomic, retain) NSString *noteIdentifierForCurrentlyDraggedItems;
@property (nonatomic, retain) NSLayoutConstraint *rightConstraint;
@property (nonatomic, retain) NotesScrollView *scrollView;
@property (nonatomic, readonly) NSArray *subWebResources;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSLayoutConstraint *textTopMarginConstraint;
@property (nonatomic, retain) NoteTextView *textView;
@property (nonatomic) <NotesTextureScrolling> *textureScrollingDelegate;
@property (nonatomic, readonly) NSString *title;
@property (nonatomic) bool tracksMaximumContentLength;
@property (nonatomic) bool updatedTitleRange;

- (void).cxx_destruct;
- (id)_webView:(id)arg1 adjustedItemProviders:(id)arg2;
- (bool)_webView:(id)arg1 allowsSelectingContentAfterDropForSession:(id)arg2;
- (long long)_webView:(id)arg1 dataOwnerForDragSession:(id)arg2;
- (long long)_webView:(id)arg1 dataOwnerForDropSession:(id)arg2;
- (void)_webView:(id)arg1 dropInteraction:(id)arg2 concludeDrop:(id)arg3;
- (bool)_webView:(id)arg1 performDropWithItemProviders:(id)arg2;
- (void)_webView:(id)arg1 sessionDidEnter:(id)arg2;
- (void)_webView:(id)arg1 sessionDidExit:(id)arg2;
- (id)_webView:(id)arg1 willUpdateDropProposalToProposal:(id)arg2 forSession:(id)arg3;
- (void)addSubWebResourcesObject:(id)arg1;
- (bool)allowsAttachmentsInTextView:(id)arg1;
- (bool)becomeFirstResponder;
- (id)bottomMarginConstraint;
- (bool)canBecomeFirstResponder;
- (bool)canInsertImagesInTextView:(id)arg1;
- (bool)canResignFirstResponder;
- (bool)containsCJK;
- (id)contentAsPasteboardItems;
- (id)contentAsPlainText:(bool)arg1;
- (bool)contentContainsValuableContent;
- (struct CGPoint { double x1; double x2; })contentOffset;
- (id)contentScrollView;
- (id)contentTextView;
- (id)dateHorizontalContraint;
- (id)dateLabel;
- (id)dateTopMarginConstraint;
- (void)dealloc;
- (id)delegate;
- (void)didChangeFullSizeClass;
- (void)flashScrollIndicators;
- (void)forcedSetContainsCJK:(bool)arg1;
- (bool)hasFullHeight;
- (bool)hasFullWidth;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)horizontalLayoutGuide;
- (id)htmlDocument;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)insertImageInTextView:(id)arg1;
- (void)invalidateSizeRelatedConstraints;
- (bool)isEditable;
- (bool)isFirstResponder;
- (bool)isNoteTextViewVisible:(id)arg1;
- (id)keyCommands;
- (void)layoutSubviews;
- (id)leftConstraint;
- (id)noteIdentifierForCurrentlyDraggedItems;
- (bool)noteTextView:(id)arg1 acceptContentsFromPasteboard:(id)arg2;
- (bool)noteTextView:(id)arg1 canHandleLongPressOnElement:(id)arg2;
- (void)noteTextView:(id)arg1 didChangeContentSize:(struct CGSize { double x1; double x2; })arg2;
- (void)noteTextView:(id)arg1 handleLongPressOnElement:(id)arg2 atPoint:(struct CGPoint { double x1; double x2; })arg3;
- (id)readerDelegateInTextView:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectForDOMNode:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectForSelection;
- (void)reloadInterface;
- (void)replaceSelectionWithNode:(id)arg1;
- (bool)resignFirstResponder;
- (id)rightConstraint;
- (void)scrollSelectionToVisible:(bool)arg1;
- (void)scrollToTopAnimated:(bool)arg1;
- (id)scrollView;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (id)selectedDOMRange;
- (void)setBottomMarginConstraint:(id)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setContainsCJK:(bool)arg1;
- (void)setContent:(id)arg1 isPlainText:(bool)arg2 isCJK:(bool)arg3;
- (void)setContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setDateHorizontalContraint:(id)arg1;
- (void)setDateLabel:(id)arg1;
- (void)setDateTopMarginConstraint:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEditable:(bool)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHorizontalLayoutGuide:(id)arg1;
- (void)setLeftConstraint:(id)arg1;
- (void)setNoteIdentifierForCurrentlyDraggedItems:(id)arg1;
- (void)setNotesWebPreferencesOnWebView:(id)arg1;
- (void)setRightConstraint:(id)arg1;
- (void)setScrollIndicatorInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setScrollView:(id)arg1;
- (void)setSelectedDOMRange:(id)arg1 affinity:(int)arg2;
- (void)setSelectionToStart;
- (void)setTextTopMarginConstraint:(id)arg1;
- (void)setTextView:(id)arg1;
- (void)setTextureScrollingDelegate:(id)arg1;
- (void)setTimestampDate:(id)arg1;
- (void)setTracksMaximumContentLength:(bool)arg1;
- (void)setUpdatedTitleRange:(bool)arg1;
- (void)setupDateHorizontalConstraint;
- (id)subWebResources;
- (id)textTopMarginConstraint;
- (id)textView;
- (bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementText:(id)arg3;
- (void)textViewDidBeginEditing:(id)arg1;
- (void)textViewDidEndEditing:(id)arg1;
- (bool)textViewShouldBeginEditing:(id)arg1;
- (id)textureScrollingDelegate;
- (id)title;
- (bool)tracksMaximumContentLength;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateConstraints;
- (void)updateDateLabel;
- (void)updateHorizontalConstraints;
- (void)updateMarginConstraints;
- (bool)updatedTitleRange;
- (id)viewPrintFormatter;
- (id)webArchive;
- (void)webViewDidChangeNotification:(id)arg1;

@end
