/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Message.framework/Message
 */

@interface MFMailMessageLibrary : MFMessageLibrary <MFContentProtectionObserver, MFLibrarySearchableIndexDataSource, MFSQLiteConnectionPoolDelegate> {
    NSString * _activeAccountClause;
    MFFileCompressionQueue * _compressionQueue;
    MFSQLiteConnectionPool * _connectionPool;
    <MFMailMessageLibraryDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _keyBagQueue;
    _MFMailMessageLibraryStatistics * _lastStats;
    MFWeakObjectCache * _libraryMessageCache;
    struct __CFDictionary { } * _mailboxCache;
    <MFMailboxPathProvider> * _mailboxPathProvider;
    NSMutableSet * _messagesToThreadAtUnlock;
    MFWeakSet * _middleware;
    MFMailMessageLibraryMigrator * _migrator;
    NSString * _nonLocalAccountClause;
    int  _protectedDataAvailability;
    NSObject<OS_dispatch_queue> * _queue;
    MFLibrarySearchableIndex * _searchableIndex;
    NSObject<OS_dispatch_queue> * _statsQueue;
    NSObject<OS_dispatch_source> * _suspendTimer;
    NSString * _threadLocalHandleKey;
    NSString * _threadLocalJournalKey;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MFMailMessageLibraryDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) unsigned long long pendingIndexItemsCount;
@property (nonatomic, readonly) unsigned long long protectedDataAvailability;
@property (nonatomic, retain) MFLibrarySearchableIndex *searchableIndex;
@property (readonly) Class superclass;

+ (void)_removeLibrary:(bool)arg1 atPath:(id)arg2;
+ (id)defaultInstance;
+ (id)defaultPath;
+ (void)removeLibraryAtPath:(id)arg1;
+ (void)removeLibraryOnNextLaunch;
+ (void)setDefaultInstance:(id)arg1;

- (id)UIDsToDeleteInMailbox:(id)arg1;
- (id)_activeAccountsClause;
- (id)_activeConnection;
- (id)_activeConnectionWithDB:(struct sqlite3 { }*)arg1;
- (id)_activeConnectionWrapper;
- (id)_activeJournal;
- (void)_addMessageToThreadAtUnlock:(unsigned int)arg1;
- (id)_addThreadingInfoWithContext:(id)arg1 usingDatabase:(struct sqlite3 { }*)arg2;
- (void)_assignTransaction:(long long)arg1 forSpotlightTombstones:(id)arg2 type:(long long)arg3 database:(struct sqlite3 { }*)arg4;
- (void)_assignTransaction:(long long)arg1 messageIndexingState:(long long)arg2 forLibraryIDIndexSet:(id)arg3 missingLibraryIDIndexSet:(id*)arg4 database:(struct sqlite3 { }*)arg5;
- (void)_assignTransaction:(long long)arg1 messageIndexingState:(long long)arg2 forLibraryIDs:(id)arg3 missingLibraryIDIndexSet:(id*)arg4 database:(struct sqlite3 { }*)arg5;
- (unsigned int)_attachmentCountForAggregatedMailboxes:(id)arg1;
- (bool)_canAccessProtectedData;
- (bool)_canSelectMessagesWithOptions:(unsigned int)arg1 db:(struct sqlite3 { }*)arg2;
- (void)_collectStatistics_nts;
- (unsigned int)_computeUnreadCountForMailboxes:(id)arg1;
- (id)_connectionForWriting:(bool)arg1;
- (struct __CFDictionary { }*)_copyReferenceHashesWithoutMessagesForMessageWithConversation:(id)arg1;
- (unsigned long long)_deleteJournaledEntries;
- (id)_emailAddressesForVerificationFromLibraryString:(id)arg1;
- (id)_firstDateForQuery:(id)arg1 inMailbox:(id)arg2;
- (unsigned int)_flaggedCountForAggregatedMailboxes:(id)arg1;
- (id)_getReferencesForHashesWithOwners:(struct __CFDictionary { }*)arg1;
- (void)_handleBusyError;
- (void)_handleCorruptDatabase;
- (void)_handleDetachedDatabaseIOError;
- (void)_handleFailedMigration;
- (void)_handleFullDatabase;
- (void)_handleIOError;
- (void)_handleInvalidDatabaseIOError;
- (void)_handleJournalMergeFailure;
- (void)_handleJournalWriteFailure;
- (void)_handleProtectedDataIOError;
- (void)_handleProtectedDataInconsistencies;
- (void)_handleSQLiteErrorCode:(int)arg1 db:(struct sqlite3 { }*)arg2;
- (unsigned int)_includesMeCountForAggregatedMailboxes:(id)arg1;
- (id)_indexSetOfMessagesDeleted;
- (bool)_insertThreadReferences:(id)arg1 toMessageWithLibraryID:(unsigned int)arg2 usingDatabase:(struct sqlite3 { }*)arg3;
- (int)_integerForQuery:(id)arg1 withTextArgument:(id)arg2;
- (unsigned int)_libraryIDForOldestKnownMessageInMailbox:(id)arg1;
- (id)_libraryMessageCache;
- (id)_libraryMessageWithLibraryID:(unsigned int)arg1 wasCached:(bool*)arg2;
- (void)_logStatistics;
- (id)_mailboxesClauseForAccounts:(id)arg1;
- (id)_messageForStatement:(struct sqlite3_stmt { }*)arg1 options:(unsigned int)arg2 timestamp:(unsigned long long)arg3 isProtectedDataAvailable:(bool)arg4;
- (id)_newConnection;
- (id)_nonLocalAccountsClause;
- (void)_notifyDidCompact:(bool)arg1 messages:(id)arg2 mailboxes:(id)arg3;
- (int)_performTransaction:(id /* block */)arg1 forWriting:(bool)arg2;
- (struct sqlite3_stmt { }*)_prepareBatchStatement:(struct sqlite3 { }*)arg1 pattern:(id)arg2 libraryIDs:(unsigned long long*)arg3 batchSize:(unsigned long long)arg4;
- (struct sqlite3_stmt { }*)_prepareBatchStatement:(struct sqlite3 { }*)arg1 pattern:(id)arg2 objects:(id*)arg3 count:(unsigned long long)arg4;
- (void)_purgeSpotlightTombstonesBeforeTransaction:(long long)arg1 database:(struct sqlite3 { }*)arg2;
- (id)_queryForMailboxesIDsFromMailboxes:(id)arg1;
- (void)_reconcileAfterKeybagUnlock;
- (long long)_reconcileJournal;
- (void)_resetTransactionIndexForAccount:(id)arg1 mailboxID:(unsigned int)arg2;
- (void)_schedulePeriodicStatisticsLogging;
- (id)_searchableItemIndexesForDb:(struct sqlite3 { }*)arg1 indexingType:(long long)arg2 nonLocalAccountsClause:(id)arg3 protectedDataAvailable:(bool)arg4 whereClause:(id)arg5 limit:(unsigned long long)arg6;
- (id)_setActiveConnection:(id)arg1 forWriting:(bool)arg2;
- (void)_setActiveJournal:(id)arg1;
- (bool)_setMessageData:(id)arg1 libraryID:(unsigned int)arg2 part:(id)arg3 partial:(bool)arg4 complete:(bool)arg5;
- (void)_setMessageDataString:(id)arg1 forKey:(id)arg2 forMessage:(id)arg3;
- (void)_setOrAdjust:(bool)arg1 lastSyncAndMostRecentStatusCountWithValue:(long long)arg2 forMailbox:(id)arg3;
- (void)_setProtectedDataAvailabilityState:(unsigned long long)arg1;
- (id)_stringsForIndexSet:(id)arg1;
- (void)_tellMiddleWareDidIndexMessages:(id)arg1;
- (void)_tellMiddlewareDidAddMessages:(id)arg1;
- (id)_tellMiddlewareWillAddMessage:(id)arg1;
- (id)_verificationDataSamplesForSearchableIndex:(id)arg1 nonLocalAccountClause:(id)arg2;
- (bool)_writeEmlxFile:(id)arg1 withBodyData:(id)arg2 protectionClass:(int)arg3;
- (id)accountForMessage:(id)arg1;
- (id)addMessages:(id)arg1 withMailbox:(id)arg2 fetchBodies:(bool)arg3 newMessagesByOldMessage:(id)arg4 remoteIDs:(id)arg5 setFlags:(unsigned long long)arg6 clearFlags:(unsigned long long)arg7 messageFlagsForMessages:(id)arg8 copyFiles:(bool)arg9 addPOPUIDs:(bool)arg10 dataSectionsByMessage:(id)arg11;
- (void)addMiddleware:(id)arg1;
- (long long)addReferenceForContext:(id)arg1 usingDatabase:(struct sqlite3 { }*)arg2 mergeHandler:(id /* block */)arg3;
- (void)addSpotlightTombstones:(id)arg1 type:(long long)arg2;
- (void)adjustLastSyncStatusCountBy:(long long)arg1 forMailbox:(id)arg2;
- (id)allMailboxURLStrings;
- (unsigned int)allNonDeleteCountForMailbox:(id)arg1 includeServerSearchResults:(bool)arg2 includeThreadSearchResults:(bool)arg3;
- (id)allUIDsInMailbox:(id)arg1;
- (void)appendOfflineCacheOperation:(id)arg1 forAccount:(long long)arg2 lastTemporaryID:(unsigned int)arg3;
- (void)appendOfflineCacheReplayData:(id)arg1 forAccountID:(long long)arg2;
- (bool)appendToJournal:(const char *)arg1 mergeUpdateStatement:(const char *)arg2;
- (void)applicationWillResume;
- (void)applicationWillSuspend;
- (unsigned int)attachmentCountForMailbox:(id)arg1;
- (unsigned int)attachmentCountForMailboxes:(id)arg1;
- (id)attachmentsDirectoryURLForMessage:(id)arg1;
- (id)attachmentsDirectoryURLForMessage:(id)arg1 inMailboxFileURL:(id)arg2;
- (int)beginTransaction:(struct sqlite3 { }*)arg1 withType:(long long)arg2;
- (int)beginTransaction:(struct sqlite3 { }*)arg1 withType:(long long)arg2 forMailbox:(id)arg3;
- (id)bodyDataAtPath:(id)arg1 headerData:(id*)arg2;
- (id)bodyDataForMessage:(id)arg1;
- (id)bodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id*)arg2 isComplete:(bool*)arg3;
- (bool)canProvideMinimumRemoteID;
- (void)cancelSuspendTimer;
- (bool)checkDatabaseConsistency;
- (bool)cleanupProtectedTables;
- (void)closeDatabaseConnections;
- (int)commitTransaction:(struct sqlite3 { }*)arg1;
- (void)compactMailbox:(id)arg1;
- (void)compactMessages:(id)arg1 permanently:(bool)arg2;
- (void)consumeOfflineCacheReplayDataForAccount:(long long)arg1 usingBlock:(id /* block */)arg2;
- (void)contentProtectionStateChanged:(int)arg1 previousState:(int)arg2;
- (id)conversationIDsOfMessagesInSameThreadAsMessageWithLibraryID:(unsigned int)arg1 messageIDHash:(long long)arg2;
- (long long)conversationIdForMessageIds:(id)arg1;
- (id)copyMessageInfosForConversationsContainingMessagesMatchingCriterion:(id)arg1 forMailbox:(id)arg2;
- (id)copyMessageInfosForMailbox:(id)arg1;
- (id)copyMessageInfosMatchingCriterion:(id)arg1;
- (id)copyMessagesWithRemoteIDs:(id)arg1 options:(unsigned int)arg2 inRemoteMailbox:(id)arg3;
- (struct __CFDictionary { }*)copySendersByLibraryIDForConversation:(long long)arg1 mailbox:(id)arg2 limit:(long long)arg3;
- (unsigned long long)countMessagesMatchingCriterion:(id)arg1;
- (id)countMessagesMatchingCriterion:(id)arg1 groupBy:(unsigned long long)arg2;
- (long long)countOfMessagesMissingFromThreadContainingMessage:(id)arg1;
- (unsigned int)countOfRelatedMessagesMatchingCriterion:(id)arg1 forConversationsContainingMessagesMatchingCriterion:(id)arg2 forMailboxCriterion:(id)arg3;
- (long long)createLibraryIDForAccount:(id)arg1;
- (id)dataConsumerForMessage:(id)arg1;
- (id)dataConsumerForMessage:(id)arg1 isPartial:(bool)arg2;
- (id)dataConsumerForMessage:(id)arg1 part:(id)arg2;
- (id)dataConsumerForMessage:(id)arg1 part:(id)arg2 incomplete:(bool)arg3;
- (id)dataForMimePart:(id)arg1 isComplete:(bool*)arg2;
- (id)dataPathForMessage:(id)arg1;
- (id)dataPathForMessage:(id)arg1 part:(id)arg2;
- (id)dataPathForMessage:(id)arg1 type:(int)arg2;
- (id)dateOfNewestNonSearchResultMessageInMailbox:(id)arg1;
- (id)dateOfOldestNonIndexedNonSearchResultMessageInMailbox:(id)arg1;
- (id)dateOfOldestNonSearchResultMessageInMailbox:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (void)deleteAccount:(id)arg1;
- (long long)deleteAttachmentsForMessage:(id)arg1 inMailboxFileURL:(id)arg2;
- (void)deleteDataForMessage:(id)arg1;
- (void)deleteMailboxes:(id)arg1 account:(id)arg2;
- (void)deleteOfflineCacheDataForAccount:(long long)arg1;
- (void)deletePOPUID:(id)arg1 inMailbox:(id)arg2;
- (unsigned int)deletedCountForMailbox:(id)arg1;
- (id)deletedUIDsInMailbox:(id)arg1;
- (id)equalToMailboxIDsFromCriterion:(id)arg1;
- (id)filterContiguousMessages:(id)arg1 forCriterion:(id)arg2 options:(unsigned int)arg3;
- (unsigned int)flaggedCountForMailbox:(id)arg1;
- (unsigned long long)flagsForConversationId:(long long)arg1;
- (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id*)arg2;
- (id)getDetailsForAllMessagesFromMailbox:(id)arg1;
- (id)getDetailsForMessages:(unsigned long long)arg1 absoluteBottom:(unsigned long long)arg2 topOfDesiredRange:(unsigned long long)arg3 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg4 fromMailbox:(id)arg5;
- (id)getDetailsForMessagesWithRemoteIDInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 fromMailbox:(id)arg2;
- (struct sqlite3 { }*)getReaderDB;
- (struct sqlite3 { }*)getWriterDB;
- (int)handleSqliteError:(struct sqlite3 { }*)arg1 format:(id)arg2;
- (bool)hasCompleteDataForMimePart:(id)arg1;
- (id)headerDataAtPath:(id)arg1;
- (id)headerDataForMessage:(id)arg1;
- (id)hiddenPOPUIDsInMailbox:(id)arg1;
- (unsigned int)includesMeCountForMailbox:(id)arg1;
- (unsigned long long)indexedCountForMailbox:(id)arg1 limit:(unsigned long long)arg2;
- (id)initWithPath:(id)arg1;
- (void)invalidateAccount:(id)arg1;
- (void)invalidateAndWait;
- (bool)isMessageContentsLocallyAvailable:(id)arg1;
- (bool)isProtectedDataAvailable:(struct sqlite3 { }*)arg1;
- (void)iterateMessagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2 handler:(id /* block */)arg3;
- (void)iterateMessagesMatchingCriterion:(id)arg1 withResultHandler:(id)arg2 options:(unsigned int)arg3 withMonitor:(id)arg4;
- (void)iterateStatement:(struct sqlite3_stmt { }*)arg1 db:(struct sqlite3 { }*)arg2 withProgressMonitor:(id)arg3 andRowHandler:(int (*)arg4 context:(void*)arg5;
- (long long)libraryIDForAccount:(id)arg1;
- (id)loadData:(id)arg1 forMessage:(id)arg2 usingBlock:(id /* block */)arg3;
- (id)loadMeetingDataForMessage:(id)arg1;
- (id)loadMeetingExternalIDForMessage:(id)arg1;
- (id)loadMeetingMetadataForMessage:(id)arg1;
- (long long)loadMoreMessagesForThreadContainingMessage:(id)arg1 hasNoMoreMessages:(bool*)arg2;
- (unsigned int)mailboxIDForURLString:(id)arg1;
- (long long)mailboxLocationOfMessageID:(unsigned int)arg1 usingDatabase:(struct sqlite3 { }*)arg2;
- (id)mailboxURLForMessage:(id)arg1;
- (id)mailboxURLsForIDs:(id)arg1;
- (id)mailboxUidForMessage:(id)arg1;
- (void)markOfflineCacheOperationAsComplete:(id)arg1;
- (unsigned int)maximumRemoteIDForMailbox:(id)arg1;
- (id)messageIdsForConversationId:(long long)arg1 limit:(unsigned long long)arg2;
- (id)messageWithLibraryID:(unsigned int)arg1 options:(unsigned int)arg2 inMailbox:(id)arg3;
- (id)messageWithMessageID:(id)arg1 inMailbox:(id)arg2;
- (id)messageWithMessageID:(id)arg1 options:(unsigned int)arg2 inMailbox:(id)arg3;
- (id)messageWithRemoteID:(id)arg1 inRemoteMailbox:(id)arg2;
- (id)messagesForMailbox:(id)arg1 olderThanNumberOfDays:(int)arg2;
- (id)messagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2;
- (id)messagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (id)messagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 success:(bool*)arg4;
- (id)messagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2 success:(bool*)arg3;
- (id)messagesNeedingSyncConfirmationForMailbox:(id)arg1;
- (id)messagesWithMessageIDHeader:(id)arg1;
- (id)messagesWithSummariesForMailbox:(id)arg1 fromRowID:(unsigned int)arg2 limit:(unsigned int)arg3;
- (id)messagesWithSummariesForMailbox:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)messagesWithoutSummariesForMailbox:(id)arg1;
- (id)messagesWithoutSummariesForMailbox:(id)arg1 fromRowID:(unsigned int)arg2 limit:(unsigned int)arg3;
- (id)metadataForMessage:(id)arg1;
- (id)metadataForMessage:(id)arg1 key:(id)arg2;
- (bool)migrate;
- (unsigned int)minimumRemoteIDForMailbox:(id)arg1;
- (id)missingReferencesForConversationContainingMessage:(id)arg1;
- (unsigned long long)mostRecentStatusCountForMailbox:(id)arg1;
- (id)newConnectionForConnectionPool:(id)arg1;
- (unsigned int)nonDeletedCountForAggregatedMailboxes:(id)arg1;
- (unsigned int)nonDeletedCountForAggregatedMailboxes:(id)arg1 includeServerSearchResults:(bool)arg2 includeThreadSearchResults:(bool)arg3;
- (unsigned int)nonDeletedCountForMailbox:(id)arg1;
- (unsigned int)nonDeletedCountForMailbox:(id)arg1 includeServerSearchResults:(bool)arg2 includeThreadSearchResults:(bool)arg3;
- (void)notifyConversation:(long long)arg1 hasMergedIntoConversation:(long long)arg2;
- (void)notifyNewDataAvailableForMessages:(id)arg1;
- (id)offlineCacheOperationsForAccount:(long long)arg1 lastTemporaryID:(unsigned int*)arg2;
- (long long)oldestKnownConversationInMailbox:(id)arg1;
- (id)oldestKnownMessageInMailbox:(id)arg1;
- (id)oldestMessageInMailbox:(id)arg1;
- (id)orderedBatchOfMessagesEndingAtRowId:(unsigned int)arg1 limit:(unsigned int)arg2 success:(bool*)arg3;
- (id)pathForMailboxURL:(id)arg1;
- (unsigned long long)pendingIndexItemsCount;
- (void)performIncrementalVacuumForSchema:(id)arg1;
- (int)performReadTransaction:(id /* block */)arg1;
- (int)performWriteTransaction:(id /* block */)arg1;
- (struct sqlite3_stmt { }*)preparedStatement:(struct sqlite3 { }*)arg1 pattern:(id)arg2;
- (unsigned long long)protectedDataAvailability;
- (void)pruneConversationTables:(double)arg1;
- (id)queryForCriterion:(id)arg1 db:(struct sqlite3 { }*)arg2 options:(unsigned int)arg3;
- (id)queryForCriterion:(id)arg1 db:(struct sqlite3 { }*)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4;
- (id)queryForCriterion:(id)arg1 db:(struct sqlite3 { }*)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4 isSubquery:(bool)arg5;
- (id)queryForCriterion:(id)arg1 db:(struct sqlite3 { }*)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4 isSubquery:(bool)arg5 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg6;
- (id)queryForCriterion:(id)arg1 db:(struct sqlite3 { }*)arg2 options:(unsigned int)arg3 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4;
- (void)rebuildActiveAccountsClauseWithAccounts:(id)arg1;
- (void)recomputeUnreadCountForMailboxWithURL:(id)arg1;
- (void)reconcileJournalOnStartup;
- (id)referencesFromHeaders:(id)arg1;
- (void)reindexAllSearchableItemsWithAcknowledgementHandler:(id /* block */)arg1;
- (void)reindexSearchableItemsWithIdentifiers:(id)arg1 acknowledgementHandler:(id /* block */)arg2;
- (id)remoteStoreForMessage:(id)arg1;
- (void)removeAllMessagesFromMailbox:(id)arg1 removeMailbox:(bool)arg2 andNotify:(bool)arg3;
- (void)removeMiddleware:(id)arg1;
- (void)removeSearchableItemsForAccount:(id)arg1;
- (void)removeSearchableItemsForAccount:(id)arg1 mailboxID:(unsigned int)arg2;
- (void)removeSearchableItemsForMailbox:(id)arg1;
- (void)removeSearchableItemsForMessages:(id)arg1;
- (void)removeSearchableItemsWithLibraryIDs:(id)arg1;
- (bool)renameMailboxes:(id)arg1 to:(id)arg2;
- (void)renameOrRemoveDatabase;
- (void)renameOrRemoveDatabaseIfNeeded;
- (int)rollbackTransaction:(struct sqlite3 { }*)arg1;
- (void)scheduleIncrementalVacuum;
- (id)searchableIndex;
- (id)searchableIndex:(id)arg1 assignTransaction:(long long)arg2 updates:(id)arg3;
- (void)searchableIndex:(id)arg1 invalidateItemsGreaterThanTransaction:(long long)arg2;
- (void)sendMessagesForStatement:(struct sqlite3_stmt { }*)arg1 db:(struct sqlite3 { }*)arg2 to:(id)arg3 options:(unsigned int)arg4 timestamp:(unsigned long long)arg5;
- (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3;
- (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4;
- (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg5;
- (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg5 success:(bool*)arg6;
- (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4;
- (void)sendMessagesMatchingQuery:(const char *)arg1 db:(struct sqlite3 { }*)arg2 to:(id)arg3 options:(unsigned int)arg4;
- (id)sequenceIdentifierForMailbox:(id)arg1;
- (id)sequenceIdentifierForMessagesWithRemoteIDs:(id)arg1 inMailbox:(id)arg2;
- (id)serverSearchResultMessagesForMailbox:(id)arg1;
- (unsigned long long)serverUnreadOnlyOnServerCountForMailbox:(id)arg1;
- (void)setConversationInfo:(long long)arg1 syncKey:(id)arg2 flags:(unsigned long long)arg3;
- (void)setData:(id)arg1 forMessage:(id)arg2 isPartial:(bool)arg3;
- (void)setDelegate:(id)arg1;
- (void)setFlags:(unsigned long long)arg1 forConversationId:(long long)arg2;
- (void)setFlags:(unsigned long long)arg1 forMessage:(id)arg2;
- (void)setFlagsForMessages:(id)arg1 mask:(unsigned long long)arg2;
- (id)setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (void)setFlagsFromDictionary:(id)arg1 forMessagesInMailboxURLString:(id)arg2;
- (void)setLastSyncAndMostRecentStatusCount:(unsigned long long)arg1 forMailbox:(id)arg2;
- (void)setMailboxPathProvider:(id)arg1;
- (void)setMessage:(id)arg1 isPartial:(bool)arg2;
- (void)setMostRecentStatusCount:(unsigned long long)arg1 forMailbox:(id)arg2;
- (void)setNumberOfAttachments:(unsigned int)arg1 isSigned:(bool)arg2 isEncrypted:(bool)arg3 forMessage:(id)arg4;
- (void)setSearchableIndex:(id)arg1;
- (void)setSequenceIdentifier:(id)arg1 forMailbox:(id)arg2;
- (void)setSequenceIdentifier:(id)arg1 forMessageWithLibraryID:(unsigned int)arg2;
- (void)setSequenceIdentifier:(id)arg1 forMessagesWithRemoteIDs:(id)arg2 inMailbox:(id)arg3;
- (void)setServerUnreadOnlyOnServerCount:(unsigned long long)arg1 forMailbox:(id)arg2;
- (void)setStoredIntegerPropertyWithName:(id)arg1 value:(id)arg2;
- (void)setSummary:(id)arg1 forMessage:(id)arg2;
- (bool)shouldCancel;
- (void)startSuspendTimer;
- (long long)statusCountDeltaForMailbox:(id)arg1;
- (id)storedIntegerPropertyWithName:(id)arg1;
- (id)stringForQuery:(id)arg1;
- (id)stringForQuery:(id)arg1 monitor:(id)arg2;
- (id)syncedConversations;
- (unsigned int)totalCountForMailbox:(id)arg1;
- (void)unlockDB:(struct sqlite3 { }*)arg1;
- (unsigned int)unreadCountForAggregatedMailboxes:(id)arg1;
- (unsigned int)unreadCountForAggregatedMailboxes:(id)arg1 matchingCriterion:(id)arg2;
- (unsigned int)unreadCountForMailbox:(id)arg1;
- (unsigned int)unreadCountForMailbox:(id)arg1 matchingCriterion:(id)arg2;
- (void)updateAdditionalThreadingInfoForSentMessageWithHeaders:(id)arg1 externalConversationID:(long long)arg2;
- (id)updateFlagsForMessages:(id)arg1 changes:(id)arg2 transformer:(id /* block */)arg3;
- (void)updateFlagsForMessagesInPlace:(id)arg1 success:(bool*)arg2;
- (void)updateMessage:(id)arg1 withMetadata:(id /* block */)arg2;
- (void)updateThreadingInfoForMessage:(id)arg1 fromHeaders:(id)arg2;
- (id)updatesForSearchableIndex:(id)arg1 count:(unsigned long long)arg2;
- (id)urlForMailboxID:(unsigned int)arg1;
- (void)vacuumDataForObsoleteAccountURLString:(id)arg1;
- (id)verificationDataSamplesForSearchableIndex:(id)arg1;
- (void)withReaderDB:(id /* block */)arg1;

@end
