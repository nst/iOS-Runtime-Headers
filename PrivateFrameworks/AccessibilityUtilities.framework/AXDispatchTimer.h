/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
 */

@interface AXDispatchTimer : NSObject <AXAccessQueueTimer> {
    bool  _active;
    bool  _automaticallyCancelPendingBlockUponSchedulingNewBlock;
    id  _cancelBlock;
    bool  _cancelled;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    NSObject<OS_dispatch_source> * _dispatchTimer;
    NSString * _label;
    bool  _pending;
    id  _processBlock;
}

@property (getter=isActive, nonatomic) bool active;
@property (nonatomic) bool automaticallyCancelPendingBlockUponSchedulingNewBlock;
@property (nonatomic, copy) id cancelBlock;
@property (getter=isCancelled, nonatomic) bool cancelled;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *dispatchTimer;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSString *label;
@property (getter=isPending, nonatomic) bool pending;
@property (nonatomic, copy) id processBlock;
@property (readonly) Class superclass;

- (void)_reallyCancel;
- (void)afterDelay:(double)arg1 processBlock:(id)arg2;
- (void)afterDelay:(double)arg1 processBlock:(id)arg2 cancelBlock:(id)arg3;
- (bool)automaticallyCancelPendingBlockUponSchedulingNewBlock;
- (void)cancel;
- (id)cancelBlock;
- (void)dealloc;
- (id)description;
- (id)dispatchQueue;
- (id)dispatchTimer;
- (id)init;
- (id)initWithTargetSerialQueue:(id)arg1;
- (bool)isActive;
- (bool)isCancelled;
- (bool)isPending;
- (id)label;
- (id)processBlock;
- (void)setActive:(bool)arg1;
- (void)setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:(bool)arg1;
- (void)setCancelBlock:(id)arg1;
- (void)setCancelled:(bool)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setDispatchTimer:(id)arg1;
- (void)setLabel:(id)arg1;
- (void)setPending:(bool)arg1;
- (void)setProcessBlock:(id)arg1;

@end
