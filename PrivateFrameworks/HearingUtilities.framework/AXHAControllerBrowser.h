/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Accessibility.framework/Frameworks/AXHearingSupport.framework/AXHearingSupport
 */

@interface AXHAControllerBrowser : AXIDCManager <AXHADeviceControllerProtocol, AXIDCRemoteControllerDelegate, NSNetServiceBrowserDelegate> {
    NSMutableDictionary * _deviceUpdatesDescription;
    NSObject<OS_dispatch_queue> * _deviceUpdatesQueue;
    AXHearingSlaveController * _slaveController;
    NSMutableArray * _updateDeviceBlocks;
    struct __WiFiManagerClient { } * _wifiClient;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) <AXIDCManagerSecurityDelegate> *securityDelegate;
@property (nonatomic, retain) AXHearingSlaveController *slaveController;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSMutableArray *updateDeviceBlocks;

+ (id)sharedInstance;

- (void).cxx_destruct;
- (void)becomeMaster;
- (void)controller:(id)arg1 didCloseConnectionWithError:(id)arg2;
- (void)controller:(id)arg1 didFinishSendingData:(id)arg2;
- (void)controller:(id)arg1 didReceiveData:(id)arg2;
- (void)controllerDidFinishConnecting:(id)arg1;
- (void)dealloc;
- (void)device:(id)arg1 didUpdateProperty:(unsigned long long)arg2;
- (id)init;
- (void)logWifiName;
- (void)netServiceBrowser:(id)arg1 didFindService:(id)arg2 moreComing:(bool)arg3;
- (void)netServiceBrowser:(id)arg1 didNotSearch:(id)arg2;
- (void)netServiceBrowserDidStopSearch:(id)arg1;
- (void)netServiceBrowserWillSearch:(id)arg1;
- (void)registerForPropertyUpdates:(id /* block */)arg1;
- (void)repairSplitConnection;
- (void)resolveMasterWithCompletion:(id /* block */)arg1;
- (void)setSlaveController:(id)arg1;
- (void)setUpdateDeviceBlocks:(id)arg1;
- (bool)shouldBecomeMaster;
- (bool)shouldRelinquishConnectionForReason:(long long)arg1;
- (id)slaveController;
- (void)stopPropertyUpdates;
- (id)updateDeviceBlocks;
- (void)updateProperty:(unsigned long long)arg1 forDeviceID:(id)arg2;
- (void)writePayload:(id)arg1 toControllers:(id)arg2;
- (void)writeValue:(id)arg1 forProperty:(unsigned long long)arg2 forControllers:(id)arg3;
- (void)writeValue:(id)arg1 forProperty:(unsigned long long)arg2 forDeviceID:(id)arg3;

@end
