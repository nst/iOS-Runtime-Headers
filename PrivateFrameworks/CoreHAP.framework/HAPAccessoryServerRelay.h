/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP
 */

@interface HAPAccessoryServerRelay : HAPAccessoryServer <HAPFragmentationStreamDelegate, HAPSecuritySessionDelegate, HAPStreamDelegate, HMFTimerDelegate> {
    NSOperationQueue * _clientOperationQueue;
    unsigned long long  _configurationNumber;
    bool  _discovered;
    HAPFragmentationStream * _fragmentationStream;
    unsigned short  _nextRequestTransactionIdentifier;
    NSOperationQueue * _pairVerifyOperationQueue;
    HAPCharacteristic * _pairingsCharacteristic;
    NSMutableArray * _pendingRequests;
    NSMapTable * _pendingResponses;
    HMFExponentialBackoffTimer * _reachabilityProbeTimer;
    NSOperationQueue * _requestOperationQueue;
    HAPSecuritySession * _securitySession;
    bool  _securitySessionOpening;
    bool  _shouldDiscover;
    HAPRelayStream * _stream;
}

@property (nonatomic, readonly) NSOperationQueue *clientOperationQueue;
@property (nonatomic) unsigned long long configurationNumber;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=hasDiscovered, nonatomic) bool discovered;
@property (nonatomic, readonly) HAPFragmentationStream *fragmentationStream;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) unsigned short nextRequestTransactionIdentifier;
@property (nonatomic, readonly) NSOperationQueue *pairVerifyOperationQueue;
@property (nonatomic) HAPCharacteristic *pairingsCharacteristic;
@property (nonatomic, readonly) NSMutableArray *pendingRequests;
@property (nonatomic, readonly) NSMapTable *pendingResponses;
@property (nonatomic, retain) HMFExponentialBackoffTimer *reachabilityProbeTimer;
@property (nonatomic, readonly) NSOperationQueue *requestOperationQueue;
@property (nonatomic, retain) HAPSecuritySession *securitySession;
@property (getter=isSecuritySessionOpening, nonatomic) bool securitySessionOpening;
@property (nonatomic) bool shouldDiscover;
@property (nonatomic, readonly) HAPRelayStream *stream;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_cancelAllQueuedOperationsWithError:(id)arg1;
- (id)_decryptData:(id)arg1 error:(id*)arg2;
- (id)_encryptData:(id)arg1 error:(id*)arg2;
- (void)_endReachabilityProbe;
- (void)_enqueueRequest:(id)arg1;
- (void)_establishSecuritySession;
- (void)_handleCharacteristicPrepareWriteResponse:(id)arg1 characteristicWriteRequestTuples:(id)arg2 prepareIdentifier:(id)arg3 error:(id)arg4 timeout:(double)arg5 completionQueue:(id)arg6 completionHandler:(id /* block */)arg7;
- (void)_handleCharacteristicReadResponse:(id)arg1 characteristics:(id)arg2 error:(id)arg3 completionQueue:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)_handleCharacteristicWriteResponse:(id)arg1 characteristicWriteRequestTuples:(id)arg2 error:(id)arg3 completionQueue:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)_handleFragmentedResponse:(id)arg1 transactionIdentifier:(unsigned short)arg2 error:(id)arg3;
- (void)_handleNotificationResponse:(id)arg1;
- (void)_handleReachabilityProbeFire;
- (void)_handleReceivedMessageData:(id)arg1 withIdentifier:(id)arg2 error:(id)arg3;
- (void)_handleSecuritySessionSetupExchangeData:(id)arg1;
- (void)_listPairingWithCompletionQueue:(id)arg1 pairingsCharacteristic:(id)arg2 completion:(id /* block */)arg3;
- (unsigned short)_nextTransactionIdentifier;
- (void)_parseAttributeDatabase:(id)arg1 configurationNumber:(id)arg2;
- (void)_parseServicesFromPrimaryAccessory:(id)arg1;
- (void)_performExecuteWriteValues:(id)arg1 prepareIdentifier:(id)arg2 timeout:(double)arg3 completionQueue:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)_performTimedWriteValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)_performWriteValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)_readCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)_removePairingWithIdentifier:(id)arg1 publicKey:(id)arg2 pairingsCharacteristic:(id)arg3 queue:(id)arg4 completion:(id /* block */)arg5;
- (void)_resumeAllOperations;
- (void)_sendRequest:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_startAddPairingWithIdentifier:(id)arg1 publicKey:(id)arg2 admin:(bool)arg3 pairingsCharacteristic:(id)arg4 queue:(id)arg5 completion:(id /* block */)arg6;
- (void)_startReachabilityProbe;
- (void)_suspendAllOperations;
- (void)_tearDownSessionWithError:(id)arg1;
- (void)_writeCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)addPairing:(id)arg1 completionQueue:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)clientOperationQueue;
- (unsigned long long)configurationNumber;
- (void)continuePairingAfterAuthPrompt;
- (void)dealloc;
- (void)discoverAccessories;
- (void)enableEvents:(bool)arg1 forCharacteristics:(id)arg2 withCompletionHandler:(id /* block */)arg3 queue:(id)arg4;
- (id)fragmentationStream;
- (void)fragmentationStream:(id)arg1 didCloseWithError:(id)arg2;
- (void)fragmentationStream:(id)arg1 didReceiveData:(id)arg2 transactionIdentifier:(unsigned short)arg3 error:(id)arg4;
- (id)getLocalPairingIdentityAndAllowCreation:(bool)arg1 error:(id*)arg2;
- (bool)hasDiscovered;
- (bool)hasPairings;
- (void)identifyWithCompletion:(id /* block */)arg1;
- (id)initWithStream:(id)arg1 name:(id)arg2 identifier:(id)arg3 keyStore:(id)arg4;
- (bool)isPaired;
- (bool)isSecuritySessionOpening;
- (long long)linkType;
- (void)listPairingsWithCompletionQueue:(id)arg1 completionHandler:(id /* block */)arg2;
- (unsigned short)nextRequestTransactionIdentifier;
- (id)pairVerifyOperationQueue;
- (id)pairingsCharacteristic;
- (id)pendingRequests;
- (id)pendingResponses;
- (id)reachabilityProbeTimer;
- (void)readCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)removePairing:(id)arg1 completionQueue:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)removePairingForCurrentControllerOnQueue:(id)arg1 completion:(id /* block */)arg2;
- (id)requestOperationQueue;
- (id)securitySession;
- (void)securitySession:(id)arg1 didCloseWithError:(id)arg2;
- (id)securitySession:(id)arg1 didReceiveLocalPairingIdentityRequestWithError:(id*)arg2;
- (id)securitySession:(id)arg1 didReceiveRequestForPeerPairingIdentityWithIdentifier:(id)arg2 error:(id*)arg3;
- (void)securitySession:(id)arg1 didReceiveSetupExchangeData:(id)arg2;
- (void)securitySessionDidOpen:(id)arg1;
- (void)securitySessionIsOpening:(id)arg1;
- (void)setConfigurationNumber:(unsigned long long)arg1;
- (void)setDiscovered:(bool)arg1;
- (void)setPairingsCharacteristic:(id)arg1;
- (void)setReachabilityProbeTimer:(id)arg1;
- (void)setSecuritySession:(id)arg1;
- (void)setSecuritySessionOpening:(bool)arg1;
- (void)setShouldDiscover:(bool)arg1;
- (bool)shouldDiscover;
- (void)startPairing;
- (bool)stopPairingWithError:(id*)arg1;
- (id)stream;
- (void)stream:(id)arg1 didCloseWithError:(id)arg2;
- (void)stream:(id)arg1 didFailToWriteDataWithIdentifier:(id)arg2 error:(id)arg3;
- (void)stream:(id)arg1 didReceiveData:(id)arg2 withIdentifier:(id)arg3;
- (void)streamDidResume:(id)arg1;
- (void)streamDidSuspend:(id)arg1;
- (void)timerDidFire:(id)arg1;
- (bool)tryPairingPassword:(id)arg1 error:(id*)arg2;
- (void)writeCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(id /* block */)arg4;

@end
