/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos
 */

@interface RCGLWaveformViewController : UIViewController <RCGLWaveformRendererDelegate, RCWaveformSelectionOverlayDelegate, UIScrollViewDelegate> {
    RCUIConfiguration * _UIConfiguration;
    RCAcousticAnnotationView * _acousticAnnotationView;
    UIView * _backgroundView;
    UIView * _bottomLineView;
    bool  _capturing;
    bool  _clipTimeMarkersToDuration;
    double  _currentTime;
    unsigned long long  _currentTimeDisplayOptions;
    <RCGLWaveformViewDelegate> * _delegate;
    bool  _dragEnding;
    double  _duration;
    struct { 
        double beginTime; 
        double endTime; 
    }  _highlightTimeRange;
    bool  _isScrollViewAutoScrolling;
    bool  _isScrollViewAutoScrollingBeginning;
    bool  _isScrollViewAutoScrollingPaused;
    RCLayoutMetrics * _layoutMetrics;
    double  _layoutWidth;
    double  _maximumSelectionDuration;
    double  _overlayAutoscrollBaseDuration;
    double  _overlayAutoscrollRateForSelectionTracking;
    NSTimer * _overlayAutoscrollTimer;
    bool  _playing;
    RCGLWaveformRenderer * _rendererController;
    float  _resumingToForegroundAutoscrollRate;
    RCWaveformScrollView * _scrollView;
    bool  _scrubbing;
    bool  _scrubbingEnabled;
    struct { 
        double beginTime; 
        double endTime; 
    }  _selectedTimeRange;
    bool  _selectedTimeRangeEditingEnabled;
    bool  _selectedTimeRangeScrubbingEnabled;
    RCWaveformSelectionOverlay * _selectionOverlay;
    double  _selectionVisibleMargin;
    bool  _shouldUpdateInDisplayLink;
    double  _timeBeganAutoscrolling;
    NSMutableArray * _timeMarkerViews;
    bool  _timeMarkerViewsNeedInitialLayout;
    bool  _timeMarkerViewsUpdatesDisabled;
    UIView * _topLineView;
    struct { 
        double beginTime; 
        double endTime; 
    }  _visibleTimeRange;
    struct { 
        double beginTime; 
        double endTime; 
    }  _visibleTimeRangeBeforeSelectionTracking;
}

@property (nonatomic, copy) RCUIConfiguration *UIConfiguration;
@property (getter=isAutoscrolling, nonatomic, readonly) bool autoscrolling;
@property (nonatomic) bool capturing;
@property (nonatomic) bool clipTimeMarkersToDuration;
@property (nonatomic) double currentTime;
@property (nonatomic) unsigned long long currentTimeDisplayOptions;
@property (nonatomic, retain) RCWaveformDataSource *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <RCGLWaveformViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) double duration;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct { double x1; double x2; } highlightTimeRange;
@property (nonatomic, retain) RCLayoutMetrics *layoutMetrics;
@property (nonatomic) double maximumSelectionDuration;
@property (nonatomic) bool playing;
@property (nonatomic) bool scrubbingEnabled;
@property (nonatomic) struct { double x1; double x2; } selectedTimeRange;
@property (getter=isSelectedTimeRangeEditingEnabled, nonatomic) bool selectedTimeRangeEditingEnabled;
@property (getter=isSelectedTimeRangeEditingEnabled, nonatomic) bool selectedTimeRangeScrubbingEnabled;
@property (nonatomic) double selectionVisibleMargin;
@property (readonly) Class superclass;
@property (nonatomic) struct { double x1; double x2; } visibleTimeRange;

- (void).cxx_destruct;
- (id)UIConfiguration;
- (void)_applyUIConfiguration;
- (void)_autoscrollOverlayIfNecessary;
- (void)_displayLinkDidUpdate:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForTimeMarkerView:(id)arg1;
- (bool)_isScrubbing;
- (bool)_isScrubbingSelectionTimeRange;
- (void)_layoutTimeMarkerViewsForCurrentlyVisibleTimeRange;
- (void)_scrollViewPanGestureRecognized:(id)arg1;
- (void)_scrubbingDidFinish;
- (void)_setSelectedTimeRange:(struct { double x1; double x2; })arg1 updateVisibleTimeRange:(bool)arg2 notifyDelegate:(bool)arg3 animationDuration:(double)arg4;
- (void)_setTimeMarkerViewUpdatesDisabled:(bool)arg1;
- (void)_setTimeMarkerViewsNeedInitialLayout:(bool)arg1;
- (void)_setVisibleTimeRange:(struct { double x1; double x2; })arg1 animationDuration:(double)arg2 completionBlock:(id /* block */)arg3;
- (bool)_shouldAutoAnimateScrollChanges;
- (bool)_shouldCenterTimeIndicator;
- (void)_startDisplayLink;
- (void)_stopDisplayLink;
- (void)_updateAnnotationViews;
- (void)_updateCurrentTimeDisplay;
- (void)_updateRendererControllerPausedState;
- (void)_updateSelectionOverlayWithAnimationDuration:(double)arg1;
- (void)_updateVisibleAreaWithAnimationDuration:(double)arg1;
- (void)_updateWaveformViewContentSizeAndOffset;
- (struct { double x1; double x2; })_visibleTimeRangeForCurrentSelectionTimeRange;
- (void)beginAutoscrollingAtTime:(double)arg1 atRate:(float)arg2;
- (bool)capturing;
- (bool)clipTimeMarkersToDuration;
- (double)currentTime;
- (unsigned long long)currentTimeDisplayOptions;
- (double)currentTimeIndicatorCoordinate;
- (id)dataSource;
- (void)dealloc;
- (id)delegate;
- (double)duration;
- (void)endAutoscrolling;
- (void)fixupScrollPositionToMatchIndicatorPositionTime;
- (struct { double x1; double x2; })highlightTimeRange;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (bool)isAutoscrolling;
- (bool)isScrollViewAutoScrolling;
- (bool)isSelectedTimeRangeEditingEnabled;
- (bool)isSelectedTimeRangeEditingEnabled;
- (id)layoutMetrics;
- (double)maximumSelectionDuration;
- (void)pauseAutoscrolling;
- (bool)playing;
- (void)rc_screenUpdatesDisabledDidChange;
- (void)reloadOverlayOffsets;
- (void)resumeAutoscrollingIfPaused;
- (void)scrollView:(id)arg1 didChangeContentOffsetToOffset:(struct CGPoint { double x1; double x2; })arg2;
- (void)scrollView:(id)arg1 willChangeContentOffsetToOffset:(struct CGPoint { double x1; double x2; })arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3;
- (bool)scrubbingEnabled;
- (struct { double x1; double x2; })selectedTimeRange;
- (double)selectionVisibleMargin;
- (void)setAutoscrolling:(bool)arg1;
- (void)setCapturing:(bool)arg1;
- (void)setClipTimeMarkersToDuration:(bool)arg1;
- (void)setCurrentTime:(double)arg1;
- (void)setCurrentTimeDisplayOptions:(unsigned long long)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDuration:(double)arg1;
- (struct { double x1; double x2; })setHighlightTimeRange;
- (void)setHighlightTimeRange:(struct { double x1; double x2; })arg1;
- (void)setLayoutMetrics:(id)arg1;
- (void)setMaximumSelectionDuration:(double)arg1;
- (void)setPlaying:(bool)arg1;
- (void)setScrubbingEnabled:(bool)arg1;
- (void)setSelectedTimeRange:(struct { double x1; double x2; })arg1;
- (void)setSelectedTimeRange:(struct { double x1; double x2; })arg1 animationDuration:(double)arg2;
- (void)setSelectedTimeRangeEditingEnabled:(bool)arg1;
- (void)setSelectedTimeRangeScrubbingEnabled:(bool)arg1;
- (void)setSelectionVisibleMargin:(double)arg1;
- (void)setUIConfiguration:(id)arg1;
- (void)setVisibleTimeRange:(struct { double x1; double x2; })arg1;
- (void)setVisibleTimeRange:(struct { double x1; double x2; })arg1 animationDuration:(double)arg2;
- (struct { double x1; double x2; })timeRangeByInsettingVisibleTimeRange:(struct { double x1; double x2; })arg1 inset:(double)arg2;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (struct { double x1; double x2; })visibleTimeRange;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })waveformRectForLayoutBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)waveformRenderer:(id)arg1 contentWidthDidChange:(double)arg2;
- (void)waveformRendererContentDidFinishLoading:(id)arg1;
- (void)waveformRendererDidSynchronizeToDisplayLink:(id)arg1;
- (void)waveformSelectionOverlay:(id)arg1 didFinishTrackingSelectionBeginTime:(bool)arg2 endTime:(bool)arg3 assetCurrentTime:(bool)arg4;
- (double)waveformSelectionOverlay:(id)arg1 offsetForTime:(double)arg2;
- (double)waveformSelectionOverlay:(id)arg1 timeForOffset:(double)arg2;
- (void)waveformSelectionOverlay:(id)arg1 willBeginTrackingSelectionBeginTime:(bool)arg2 endTime:(bool)arg3 assetCurrentTime:(bool)arg4;
- (double)waveformSelectionOverlay:(id)arg1 willChangeAssetCurrentTime:(double)arg2 isTracking:(bool)arg3;
- (struct { double x1; double x2; })waveformSelectionOverlay:(id)arg1 willChangeSelectedTimeRange:(struct { double x1; double x2; })arg2 isTracking:(bool)arg3;
- (double)waveformSelectionOverlayGetCurrentTime:(id)arg1;

@end
