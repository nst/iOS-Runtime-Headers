/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreCDPInternal.framework/CoreCDPInternal
 */

@interface CDPDSecureBackupController : NSObject {
    NSDictionary * _cachedAccountInfo;
    NSDictionary * _cachedAccountLockoutInfo;
    CDPDSecureBackupConfiguration * _configuration;
    CDPContext * _context;
    <CDPDSecureBackupDelegate> * _delegate;
    bool  _fakeNearlyDepletedRecords;
    <CDPDSecureBackupProxy> * _secureBackupProxy;
    <CDPStateUIProviderInternal> * _uiProvider;
}

@property (nonatomic, retain) NSDictionary *cachedAccountInfo;
@property (nonatomic, retain) NSDictionary *cachedAccountLockoutInfo;
@property (nonatomic, retain) CDPDSecureBackupConfiguration *configuration;
@property (nonatomic, readonly) CDPContext *context;
@property (nonatomic, readonly) <CDPDSecureBackupDelegate> *delegate;
@property (nonatomic) bool fakeNearlyDepletedRecords;
@property (nonatomic, retain) <CDPDSecureBackupProxy> *secureBackupProxy;
@property (nonatomic, readonly) <CDPStateUIProviderInternal> *uiProvider;

+ (id)_sanitizedInfoDictionary:(id)arg1;

- (void).cxx_destruct;
- (void)_accountInfoWithCompletion:(id)arg1;
- (void)_accountLockoutInfoWithCompletion:(id)arg1;
- (void)_authenticatedEnableSecureBackupWithSecret:(id)arg1 secretType:(unsigned long long)arg2 useCachedSecret:(bool)arg3 completion:(id)arg4;
- (id)_clientMetadataWithSecretType:(unsigned long long)arg1 length:(unsigned long long)arg2;
- (id)_currentAnisetteData;
- (id)_dateWithSecureBackupDateString:(id)arg1;
- (void)_deleteAllBackupRecordsWithCompletion:(id)arg1;
- (void)_deleteSingleICSCBackupWithCompletion:(id)arg1;
- (void)_disableSecureBackupWithCompletion:(id)arg1;
- (void)_disableThenEnableWithInfo:(id)arg1 completion:(id)arg2;
- (void)_enableSecureBackupWithSecret:(id)arg1 secretType:(unsigned long long)arg2 useCachedSecret:(bool)arg3 completion:(id)arg4;
- (void)_getBackupRecordDevicesIncludingUnrecoverableRecords:(bool)arg1 completion:(id)arg2;
- (void)_recoverBackupDictionaryWithContext:(id)arg1 completion:(id)arg2;
- (id)_recoveryInfoDictionaryFromContext:(id)arg1;
- (void)_setBackoffDate:(id)arg1 withCompletion:(id)arg2;
- (id)_stashedPRK;
- (void)accountInfoWithCompletion:(id)arg1;
- (void)accountLockoutInfoWithCompletion:(id)arg1;
- (void)backupRecordsArePresentWithCompletion:(id)arg1;
- (id)cachedAccountInfo;
- (id)cachedAccountLockoutInfo;
- (void)cdpBackupRecordsArePresentWithCompletion:(id)arg1;
- (void)checkForExistingRecord:(id)arg1;
- (void)checkForExistingRecordMatchingPredicate:(id)arg1 completion:(id)arg2;
- (void)checkForExistingRecordWithPeerId:(id)arg1 completion:(id)arg2;
- (id)configuration;
- (id)context;
- (id)delegate;
- (void)deleteAllBackupRecordsWithCompletion:(id)arg1;
- (void)deleteSingleICSCBackupWithCompletion:(id)arg1;
- (void)disableSecureBackupWithCompletion:(id)arg1;
- (void)enableSecureBackupRemovingExistingRecordWithSecret:(id)arg1 secretType:(unsigned long long)arg2 useCachedSecret:(bool)arg3 completion:(id)arg4;
- (void)enableSecureBackupWithSecret:(id)arg1 secretType:(unsigned long long)arg2 useCachedSecret:(bool)arg3 completion:(id)arg4;
- (bool)fakeNearlyDepletedRecords;
- (void)getBackupRecordDevicesWithCompletion:(id)arg1;
- (id)init;
- (id)initWithContext:(id)arg1 uiProvider:(id)arg2 delegate:(id)arg3;
- (void)isAccountLockedWithShouldReset:(bool)arg1 completion:(id)arg2;
- (void)isEligibleForCDPWithCompletion:(id)arg1;
- (void)lockAccountOutWithCompletion:(id)arg1;
- (void)recoverSecureBackupWithContext:(id)arg1 completion:(id)arg2;
- (void)resetAccountLockOutWithCompletion:(id)arg1;
- (id)secureBackupProxy;
- (void)setBackoffDate:(id)arg1 withCompletion:(id)arg2;
- (void)setCachedAccountInfo:(id)arg1;
- (void)setCachedAccountLockoutInfo:(id)arg1;
- (void)setConfiguration:(id)arg1;
- (void)setFakeNearlyDepletedRecords:(bool)arg1;
- (void)setSecureBackupProxy:(id)arg1;
- (void)synchronizeKeyValueStoreWithCompletion:(id)arg1;
- (id)uiProvider;

@end
