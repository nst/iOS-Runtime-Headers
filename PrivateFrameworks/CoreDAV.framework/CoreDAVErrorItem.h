/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreDAV.framework/CoreDAV
 */

@interface CoreDAVErrorItem : CoreDAVItem {
    CoreDAVItemWithNoChildren * _ctagOkay;
    CoreDAVItemWithNoChildren * _imageError;
    CoreDAVItemWithNoChildren * _invalidImageType;
    CoreDAVItemWithNoChildren * _maxAttendees;
    CoreDAVItemWithNoChildren * _maxImageSize;
    CoreDAVItemWithNoChildren * _maxResourceSize;
    CoreDAVItemWithNoChildren * _maxResources;
    CoreDAVItemWithNoChildren * _noUIDConflict;
    CoreDAVItemWithNoChildren * _numberOfMatchesWithinLimits;
    CoreDAVItemWithNoChildren * _quotaExceeded;
    CoreDAVLeafItem * _status;
    CoreDAVItemWithNoChildren * _uid;
    CoreDAVItemWithNoChildren * _validAddressData;
    CoreDAVItemWithNoChildren * _validSplit;
    CoreDAVItemWithNoChildren * _validSyncToken;
    CoreDAVItemWithNoChildren * _validTimezone;
}

@property (nonatomic, retain) CoreDAVItemWithNoChildren *ctagOkay;
@property (nonatomic, retain) CoreDAVItemWithNoChildren *imageError;
@property (nonatomic, retain) CoreDAVItemWithNoChildren *invalidImageType;
@property (nonatomic, retain) CoreDAVItemWithNoChildren *maxAttendees;
@property (nonatomic, retain) CoreDAVItemWithNoChildren *maxImageSize;
@property (nonatomic, retain) CoreDAVItemWithNoChildren *maxResourceSize;
@property (nonatomic, retain) CoreDAVItemWithNoChildren *maxResources;
@property (nonatomic, retain) CoreDAVItemWithNoChildren *noUIDConflict;
@property (nonatomic, retain) CoreDAVItemWithNoChildren *numberOfMatchesWithinLimits;
@property (nonatomic, retain) CoreDAVItemWithNoChildren *quotaExceeded;
@property (nonatomic, retain) CoreDAVLeafItem *status;
@property (nonatomic, retain) CoreDAVItemWithNoChildren *uid;
@property (nonatomic, retain) CoreDAVItemWithNoChildren *validAddressData;
@property (nonatomic, retain) CoreDAVItemWithNoChildren *validSplit;
@property (nonatomic, retain) CoreDAVItemWithNoChildren *validSyncToken;
@property (nonatomic, retain) CoreDAVItemWithNoChildren *validTimezone;

+ (id)copyParseRules;

- (void).cxx_destruct;
- (id)ctagOkay;
- (id)description;
- (id)imageError;
- (id)init;
- (id)invalidImageType;
- (id)maxAttendees;
- (id)maxImageSize;
- (id)maxResourceSize;
- (id)maxResources;
- (id)noUIDConflict;
- (id)numberOfMatchesWithinLimits;
- (id)quotaExceeded;
- (void)setCtagOkay:(id)arg1;
- (void)setImageError:(id)arg1;
- (void)setInvalidImageType:(id)arg1;
- (void)setMaxAttendees:(id)arg1;
- (void)setMaxImageSize:(id)arg1;
- (void)setMaxResourceSize:(id)arg1;
- (void)setMaxResources:(id)arg1;
- (void)setNoUIDConflict:(id)arg1;
- (void)setNumberOfMatchesWithinLimits:(id)arg1;
- (void)setQuotaExceeded:(id)arg1;
- (void)setStatus:(id)arg1;
- (void)setUid:(id)arg1;
- (void)setValidAddressData:(id)arg1;
- (void)setValidSplit:(id)arg1;
- (void)setValidSyncToken:(id)arg1;
- (void)setValidTimezone:(id)arg1;
- (id)status;
- (id)uid;
- (id)validAddressData;
- (id)validSplit;
- (id)validSyncToken;
- (id)validTimezone;

@end
