/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEOResourceManifestManager : NSObject <GEOResourceManifestServerProxyDelegate> {
    GEOActiveTileGroup * _activeTileGroup;
    NSLock * _activeTileGroupLock;
    NSSet * _allRegionalResourceNames;
    NSSet * _allResourceNames;
    NSObject<OS_dispatch_source> * _cachedResourceInfoPurgeTimer;
    long long  _closedCount;
    NSLock * _closedCountLock;
    GEOResourceManifestConfiguration * _configuration;
    bool  _constantlyChangeTileGroup;
    unsigned long long  _handle;
    bool  _isLoadingResources;
    bool  _isUpdatingManifest;
    GEOLocalizationRegionsInfo * _localizationRegionsInfo;
    bool  _needsToLoadTileGroupFromDisk;
    NSMutableArray * _networkActivityHandlers;
    NSDictionary * _resourceNamesToPaths;
    NSLock * _resourceNamesToPathsLock;
    <GEOResourceManifestServerProxy> * _serverProxy;
    NSHashTable * _serverProxyObservers;
    NSMutableArray * _tileGroupObservers;
    NSLock * _tileGroupObserversLock;
}

@property (nonatomic, readonly) GEOActiveTileGroup *activeTileGroup;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool hasActiveTileGroup;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) <GEOResourceManifestServerProxy> *serverProxy;
@property (readonly) Class superclass;

+ (id)additionalMigrationTaskClasses;
+ (void)disableServerConnection;
+ (id)modernManager;
+ (id)modernManagerForConfiguration:(id)arg1;
+ (id)modernManagerForTileGroupIdentifier:(unsigned int)arg1;
+ (void)setAdditionalMigrationTaskClasses:(id)arg1;
+ (void)setHiDPI:(bool)arg1;
+ (void)setServerProxyClass:(Class)arg1;
+ (id)sharedManager;
+ (struct os_state_data_s { unsigned int x1; union { unsigned int x_2_1_1 : 32; unsigned int x_2_1_2; } x2; struct os_state_data_decoder_s { BOOL x_3_1_1[64]; BOOL x_3_1_2[64]; } x3; BOOL x4[64]; unsigned char x5[0]; }*)stateDataForDictionary:(id)arg1 title:(id)arg2;
+ (void)useLocalProxy;
+ (void)useRemoteProxy;

- (void).cxx_destruct;
- (id)_activeTileSetForKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1;
- (void)_buildResourceNamesToPaths;
- (id)_detailedDescriptionDictionaryRepresentationForTileGroup:(id)arg1;
- (id)_loadActiveTileGroupIfNecessary:(bool)arg1;
- (void)_localeChanged:(id)arg1;
- (void)_notifyObserversOfResourcesChange;
- (void)_registerHandlerForStateCapture;
- (void)_scheduleCachedResourceInfoPurgeTimer;
- (struct os_state_data_s { unsigned int x1; union { unsigned int x_2_1_1 : 32; unsigned int x_2_1_2; } x2; struct os_state_data_decoder_s { BOOL x_3_1_1[64]; BOOL x_3_1_2[64]; } x3; BOOL x4[64]; unsigned char x5[0]; }*)_stateCapture;
- (void)_unregisterHandlerForStateCapture;
- (void)activateResourceScale:(int)arg1;
- (void)activateResourceScenario:(int)arg1;
- (id)activeTileGroup;
- (unsigned int)activeTileGroupIdentifier;
- (void)addNetworkActivityHandler:(id /* block */)arg1;
- (void)addServerProxyObserver:(id)arg1;
- (void)addTileGroupObserver:(id)arg1 queue:(id)arg2;
- (id)allRegionalResourceNames;
- (id)allResourceNames;
- (id)allResourcePaths;
- (id)authToken;
- (id)baseURLStringForTileKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1;
- (void)cancelCurrentManifestUpdate;
- (void)closeServerConnection;
- (void)deactivateResourceScale:(int)arg1;
- (void)deactivateResourceScenario:(int)arg1;
- (void)dealloc;
- (id)detailedDescription;
- (id)detailedDescriptionDictionaryRepresentation;
- (void)devResourcesFolderDidChange;
- (id)disputedBordersQueryItemsForTileKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1 country:(id)arg2 region:(id)arg3;
- (void)fakeTileGroupChange;
- (void)forceUpdate;
- (void)getResourceManifestWithHandler:(id /* block */)arg1;
- (bool)hasActiveTileGroup;
- (bool)hasResourceManifest;
- (id)init;
- (id)initWithConfiguration:(id)arg1;
- (bool)isAvailableForTileKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1;
- (bool)isDisputedBordersWhitelistedForTileKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1 country:(id)arg2 region:(id)arg3;
- (id)languageForTileKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1;
- (id)languageForTileKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1 overrideLocale:(id)arg2;
- (id)localizationURLStringIfNecessaryForTileKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1 overrideLocale:(id)arg2;
- (int)mapMatchingTileSetStyle;
- (unsigned int)mapMatchingZoomLevel;
- (void)openServerConnection;
- (id)pathForResourceWithName:(id)arg1;
- (void)removeDevResources;
- (void)removeServerProxyObserver:(id)arg1;
- (void)removeTileGroupObserver:(id)arg1;
- (int)requestStyleForTileKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1;
- (void)resetActiveTileGroup;
- (id)serverProxy;
- (oneway void)serverProxy:(id)arg1 didChangeActiveTileGroup:(id)arg2 finishedCallback:(id /* block */)arg3;
- (oneway void)serverProxyDidStopLoadingResources:(id)arg1;
- (oneway void)serverProxyDidStopUpdatingResourceManifest:(id)arg1;
- (void)serverProxyNeedsWiFiResourceActivity:(id)arg1;
- (oneway void)serverProxyWillStartLoadingResources:(id)arg1;
- (oneway void)serverProxyWillStartUpdatingResourceManifest:(id)arg1;
- (void)setActiveTileGroupIdentifier:(unsigned int)arg1;
- (void)setConstantlyChangeTileGroup:(bool)arg1;
- (void)setManifestToken:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)startObservingDevResources;
- (void)stopObservingDevResources;
- (bool)supportsTileStyle:(int)arg1 size:(int)arg2 scale:(int)arg3;
- (double)timeToLiveForTileKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1;
- (void)updateManifest:(id /* block */)arg1;
- (void)updateManifest:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)updateManifestIfNecessary:(id /* block */)arg1;
- (id)updateProgress;
- (unsigned int)versionForTileKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1;

@end
