/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreImage.framework/CoreImage
 */

@interface Rgon : NSObject <NSCoding, NSCopying> {
    NSArray * _enclosedPoints;
    float * _pointerToRgonArray;
    float  aspectRatio;
    double  count;
    float  currentArea;
    int  lastFaceFlunked;
    int  maxAxisIndex;
    float  maxDiameter;
    int  minAxisIndex;
    float  minDiameter;
    float  oblongness;
    long long  pointCount;
    float  rgonArray;
    float * rgonPtr;
    int  verticesUpToDate;
    float  xmax;
    float  xmin;
    float  ymax;
    float  ymin;
}

@property float aspectRatio;
@property double count;
@property float currentArea;
@property (readonly) NSArray *enclosedPoints;
@property int maxAxisIndex;
@property long long pointCount;
@property float*pointerToRgonArray;
@property float*rgonPtr;
@property float xmax;
@property float xmin;
@property float ymax;
@property float ymin;

+ (id)newInterpolatedRgonFrom:(id)arg1 withRgon:(id)arg2 param:(float)arg3;

- (int)AdjustForPointX:(float)arg1 Y:(float)arg2;
- (float)Area;
- (int)AspectIndex;
- (float)AspectRatio;
- (void)CalculateAndReturnVertices:(float*)arg1;
- (void)CalculateEdges;
- (void)CalculateFromVertices;
- (void)CalculateVertices;
- (bool)CollapseOrphans;
- (float)CommonCenterForIndex:(int)arg1;
- (double)Density;
- (float)Diameter;
- (float)DiameterAtFacetCountMeasuredFromVertical:(int)arg1;
- (void)Dilate:(float)arg1;
- (void)DirectionalDilateByAmount:(float)arg1 xDirection:(float)arg2 yDirection:(float)arg3;
- (float)DistToPointX:(float)arg1 Y:(float)arg2;
- (float)DistanceBetweenCenters:(id)arg1;
- (float)DistanceCenterToRGon:(id)arg1;
- (float)DistanceFromRgon:(id)arg1;
- (void)IntersectionOfEdge:(int)arg1 withEdge:(int)arg2 resultPoint:(float)arg3;
- (bool)IntersectionRgonOf:(id)arg1 withRgon:(id)arg2;
- (float)MeanVertexDistFromX:(float)arg1 Y:(float)arg2;
- (float)MinDiameter;
- (int)OutsideReturnFirstEdgeExcludingX:(float)arg1 Y:(float)arg2;
- (float)Perimeter;
- (void)PrintConstraints;
- (void)PrintVertices;
- (void)PrintVerticesWithZCoord:(double)arg1;
- (float)Radius;
- (void)Reset;
- (void)RoundToPercent:(float)arg1;
- (void)ShrinkByAmount:(float)arg1;
- (void)UnionWith:(id)arg1;
- (float)XCenter;
- (float)YCenter;
- (float)aspectRatio;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundsFloatRect;
- (int)containsPointX:(float)arg1 Y:(float)arg2;
- (int)containsPointX:(float)arg1 Y:(float)arg2 inArray:(int*)arg3 ofCount:(int)arg4;
- (int)containsPointX:(float)arg1 Y:(float)arg2 withTolerance:(float)arg3 returnIndex:(int*)arg4;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (double)count;
- (id)createWithCollapsedOrphans2;
- (float)currentArea;
- (float)dASide:(int)arg1 movesds:(float)arg2;
- (float)dASide:(int)arg1 movesds:(float)arg2 retaining:(int)arg3 pointsFromArray:(id)arg4;
- (void)dealloc;
- (void)dentRgonInwardByAmount:(float)arg1 xDirection:(float)arg2 yDirection:(float)arg3;
- (id)enclosedPoints;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (struct { float x1; float x2; })intersectionEdge:(int)arg1 withEdge:(int)arg2;
- (int)maxAxisIndex;
- (long long)pointCount;
- (int)pointX:(float)arg1 Y:(float)arg2 isOutsideBorderlinesInArray:(int*)arg3 ofCount:(int)arg4;
- (float*)pointerToRgonArray;
- (void)recalculateMaxMins;
- (float*)rgonPtr;
- (void)setAspectRatio:(float)arg1;
- (void)setCount:(double)arg1;
- (void)setCurrentArea:(float)arg1;
- (void)setMaxAxisIndex:(int)arg1;
- (void)setPointCount:(long long)arg1;
- (void)setPointerToRgonArray:(float*)arg1;
- (void)setRgonPtr:(float*)arg1;
- (void)setXmax:(float)arg1;
- (void)setXmin:(float)arg1;
- (void)setYmax:(float)arg1;
- (void)setYmin:(float)arg1;
- (void)translateByAmount:(float)arg1 xDirection:(float)arg2 yDirection:(float)arg3;
- (id)unionRgonOf:(id)arg1 withRgon:(id)arg2;
- (float*)vertexAtClockHour:(float)arg1;
- (float)xmax;
- (float)xmin;
- (float)ymax;
- (float)ymin;

@end
