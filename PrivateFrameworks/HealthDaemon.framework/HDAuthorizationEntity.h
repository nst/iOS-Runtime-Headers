/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
 */

@interface HDAuthorizationEntity : HDHealthEntity

+ (void)_addAuthorizationWithRow:(struct HDSQLiteRow { }*)arg1 toCodableCollection:(id)arg2;
+ (bool)_getAuthorizationRecordsBySourceWithDictionary:(id)arg1 predicate:(id)arg2 profile:(id)arg3 error:(id*)arg4;
+ (bool)_getAuthorizationRecordsByTypeWithDictionary:(id)arg1 predicate:(id)arg2 healthDatabase:(id)arg3 error:(id*)arg4;
+ (bool)_getAuthorizationStatusesByTypeWithDictionary:(id)arg1 predicate:(id)arg2 healthDatabase:(id)arg3 error:(id*)arg4;
+ (bool)_insertAuthorizationWithSourceIdentifier:(long long)arg1 dataTypeCode:(long long)arg2 authorizationStatus:(long long)arg3 authorizationRequest:(long long)arg4 modificationDate:(double)arg5 syncProvenance:(long long)arg6 objectAnchor:(long long)arg7 database:(id)arg8 error:(id*)arg9;
+ (bool)_insertCodableAuthorizations:(id)arg1 sourceEntity:(id)arg2 syncProvenance:(long long)arg3 objectAnchor:(unsigned long long)arg4 database:(id)arg5 error:(id*)arg6;
+ (bool)_insertCodableSourceAuthorizations:(id)arg1 syncStore:(id)arg2 profile:(id)arg3 error:(id*)arg4;
+ (id)_maxObjectPersistentIDForProfile:(id)arg1 error:(id*)arg2;
+ (id)_predicateForBundleIdentifier:(id)arg1 profile:(id)arg2 error:(id*)arg3;
+ (id)_predicateForSourceEntity:(id)arg1;
+ (id)_predicateForSourceEntity:(id)arg1 types:(id)arg2;
+ (id)_predicateForSourceIdentifier:(id)arg1;
+ (id)_predicateForType:(id)arg1;
+ (id)_predicateForTypes:(id)arg1;
+ (id)_propertiesForCodableAuthorization;
+ (bool)_resetAuthorizationStatusesWithPredicate:(id)arg1 profile:(id)arg2 error:(id*)arg3;
+ (bool)_setAuthorizationStatuses:(id)arg1 authorizationRequests:(id)arg2 sourceEntity:(id)arg3 dateModified:(id)arg4 syncProvenance:(long long)arg5 objectAnchor:(long long)arg6 database:(id)arg7 error:(id*)arg8;
+ (id)authorizationRecordsBySourceForType:(id)arg1 profile:(id)arg2 error:(id*)arg3;
+ (id)authorizationRecordsByTypeForBundleIdentifier:(id)arg1 profile:(id)arg2 error:(id*)arg3;
+ (id)columnsDefinition;
+ (id)databaseTable;
+ (bool)getAuthorizationRecordsByTypeWithDictionary:(id)arg1 sourceEntity:(id)arg2 types:(id)arg3 profile:(id)arg4 error:(id*)arg5;
+ (bool)getAuthorizationStatusesWithDictionary:(id)arg1 sourceEntity:(id)arg2 types:(id)arg3 profile:(id)arg4 error:(id*)arg5;
+ (id)modificationDateForSourceEntity:(id)arg1 type:(id)arg2 profile:(id)arg3 error:(id*)arg4;
+ (id)propertyForSyncProvenance;
+ (long long)protectionClass;
+ (bool)resetAllAuthorizationStatusesWithProfile:(id)arg1 error:(id*)arg2;
+ (bool)resetAuthorizationStatusesForBundleIdentifier:(id)arg1 profile:(id)arg2 error:(id*)arg3;
+ (bool)setAuthorizationStatuses:(id)arg1 authorizationRequests:(id)arg2 sourceEntity:(id)arg3 profile:(id)arg4 error:(id*)arg5;
+ (bool)setAuthorizationStatuses:(id)arg1 sourceEntity:(id)arg2 profile:(id)arg3 error:(id*)arg4;
+ (id)uniquedColumns;

@end
