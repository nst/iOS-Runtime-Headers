/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface _UIRemoteViewController : UIViewController <UIActionSheetDelegate, _UIRemoteViewController_ViewControllerOperatorInterface> {
    bool  __automatic_invalidation_invalidated;
    int  __automatic_invalidation_retainCount;
    bool  __shouldUpdateRemoteTextEffectsWindow;
    NSArray * _allowedNotifications;
    bool  _alreadySentFence;
    int  _applicationDeactivationReason;
    unsigned int  _deferredContextID;
    NSString * _deferredDisplayUUID;
    _UITextEffectsRemoteView * _fullScreenTextEffectsRemoteView;
    UIView * _fullScreenTextEffectsSnapshotView;
    UIActionSheet * _hostedActionSheet;
    UIDimmingView * _hostedDimmingView;
    bool  _isFocusDeferred;
    bool  _isUnderlappingStatusBar;
    bool  _isUpdatingSize;
    long long  _preferredAdaptivityStyle;
    long long  _preferredStatusBarStyle;
    long long  _preferredStatusBarUpdateAnimation;
    long long  _prefersStatusBarHidden;
    long long  _proxiedEditAlertToken;
    UIAlertView * _proxiedEditAlertView;
    long long  _redoButtonIndex;
    _UITextEffectsRemoteView * _remoteKeyboardRemoteView;
    _UIRemoteViewService * _remoteViewService;
    unsigned int  _serviceAccessibilityServerPort;
    NSString * _serviceBundleIdentifier;
    _UIViewServiceInterface * _serviceInterface;
    unsigned long long  _serviceRegisteredScrollToTopViewCount;
    unsigned int  _serviceScreenDisplayID;
    struct CGSize { 
        double width; 
        double height; 
    }  _serviceScreenSize;
    id  _serviceViewControllerControlMessageProxy;
    id  _serviceViewControllerProxy;
    _UIRemoteView * _serviceViewControllerRemoteView;
    NSArray * _serviceViewControllerSupportedInterfaceOrientations;
    bool  _serviceViewShouldShareTouchesWithHost;
    NSArray * _sizeTrackingConstraints;
    _UISizeTrackingView * _sizeTrackingView;
    int  _sizeTrackingViewAutoResizeMask;
    bool  _sizeTrackingViewShouldTranslateAutoResizeMaskIntoConstraints;
    bool  _snapshotTextEffectsAfterRotation;
    NSError * _terminationError;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _terminationErrorLock;
    _UIAsyncInvocation * _terminationInvocation;
    _UITextEffectsRemoteView * _textEffectsAboveStatusBarRemoteView;
    _UIAsyncInvocation * _textEffectsOperatorHalfDisconnectionInvocation;
    id  _textEffectsOperatorProxy;
    _UITextServiceSession * _textServiceSession;
    BKSTouchDeliveryPolicyAssertion * _touchDeliveryPolicyAssertion;
    UIView * _touchGrabbingView;
    long long  _undoButtonIndex;
    _UIAsyncInvocation * _viewControllerOperatorHalfDisconnectionInvocation;
    id  _viewControllerOperatorProxy;
    UIView * _viewServiceTouchInterdictionView;
}

@property (setter=_setIsUpdatingSize:, nonatomic) bool _isUpdatingSize;
@property (setter=_setShouldUpdateRemoteTextEffectsWindow:, nonatomic) bool _shouldUpdateRemoteTextEffectsWindow;
@property (setter=_setTouchDeliveryPolicyAssertion:, nonatomic, retain) BKSTouchDeliveryPolicyAssertion *_touchDeliveryPolicyAssertion;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) struct { unsigned int x1[8]; } serviceAuditToken;
@property (nonatomic, readonly) NSString *serviceBundleIdentifier;
@property (nonatomic, readonly) int serviceProcessIdentifier;
@property (nonatomic) bool serviceViewShouldShareTouchesWithHost;
@property (readonly) Class superclass;

+ (bool)__shouldAllowHostProcessToTakeFocus;
+ (bool)__shouldHostRemoteTextEffectsWindow;
+ (id)_requestViewController:(id)arg1 traitCollection:(id)arg2 fromServiceWithBundleIdentifier:(id)arg3 service:(id)arg4 connectionHandler:(id)arg5;
+ (bool)_shouldForwardViewWillTransitionToSize;
+ (bool)_shouldSendLegacyMethodsFromViewWillTransitionToSize;
+ (id)exportedInterface;
+ (id)requestViewController:(id)arg1 fromServiceWithBundleIdentifier:(id)arg2 connectionHandler:(id)arg3;
+ (id)requestViewController:(id)arg1 traitCollection:(id)arg2 fromServiceWithBundleIdentifier:(id)arg3 connectionHandler:(id)arg4;
+ (id)requestViewControllerWithService:(id)arg1 connectionHandler:(id)arg2;
+ (id)requestViewControllerWithService:(id)arg1 traitCollection:(id)arg2 connectionHandler:(id)arg3;
+ (id)serviceViewControllerInterface;
+ (bool)shouldPropagateAppearanceCustomizations;

- (void).cxx_destruct;
- (int)__automatic_invalidation_logic;
- (void)__dismissActionSheetWithClickedButtonIndex:(long long)arg1 animated:(bool)arg2;
- (void)__dismissTextServiceSessionAnimated:(bool)arg1;
- (long long)__getPreferredInterfaceOrientation;
- (void)__handleFocusMovementAction:(id)arg1;
- (bool)__interdictServiceViewTouches;
- (void)__presentActionSheetFromYCoordinate:(double)arg1 withTitle:(id)arg2 buttonTitles:(id)arg3 cancelButtonIndex:(long long)arg4 destructiveButtonIndex:(long long)arg5 style:(long long)arg6;
- (void)__setInterdictServiceViewTouches:(bool)arg1;
- (void)__setSupportedInterfaceOrientations:(id)arg1;
- (void)__setViewServiceIsDisplayingPopover:(bool)arg1;
- (bool)__shouldRemoteViewControllerFenceOperations;
- (void)__showEditAlertViewWithToken:(long long)arg1 canUndo:(bool)arg2 canRedo:(bool)arg3;
- (void)__showServiceForText:(id)arg1 selectedTextRangeValue:(id)arg2 type:(long long)arg3 fromRectValue:(id)arg4 replyHandler:(id)arg5;
- (void)__showServiceForText:(id)arg1 type:(long long)arg2 fromRectValue:(id)arg3 replyHandler:(id)arg4;
- (void)__trampolineButtonPressData:(id)arg1 canceled:(bool)arg2;
- (void)__updateDeferralPropertiesForScreen:(id)arg1;
- (void)__viewServiceDidPromoteFirstResponder;
- (void)__viewServiceDidRegisterScrollToTopView;
- (void)__viewServiceDidUnregisterScrollToTopView;
- (void)__viewServiceDidUpdatePreferredStatusBarStyle:(long long)arg1 hidden:(long long)arg2 updateAnimation:(long long)arg3;
- (void)__viewServiceDidUpdatePreferredWhitePointAdaptationStyle:(long long)arg1 animationSettings:(id)arg2;
- (void)__viewServiceDidUpdateTintColor:(id)arg1 duration:(double)arg2;
- (void)__viewServiceInstrinsicContentSizeDidChange:(struct CGSize { double x1; double x2; })arg1 fence:(id)arg2;
- (void)__viewServicePopoverDidChangeContentSize:(struct CGSize { double x1; double x2; })arg1 animated:(bool)arg2 fence:(id)arg3 withReplyHandler:(id)arg4;
- (void)__viewServicePopoverDidSetUseToolbarShine:(bool)arg1;
- (void)__viewServicePreferredContentSizeDidChange:(struct CGSize { double x1; double x2; })arg1 fence:(id)arg2;
- (void)__willChangeToIdiom:(long long)arg1 onScreen:(id)arg2;
- (id)_addAutoAllowedNotifications:(id)arg1;
- (void)_appearanceInvocationsDidChange:(id)arg1;
- (id)_appearanceSource;
- (void)_applicationDidAddDeactivationReason:(id)arg1;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationDidFinishSuspendSnapshot:(id)arg1;
- (void)_applicationWillDeactivate:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_awakeWithConnectionInfo:(id)arg1;
- (void)_cancelProxiedEditAlertViewAnimated:(bool)arg1;
- (id)_cancelTouchesForCurrentEventInHostedContent;
- (id)_clientDeferralProperties;
- (bool)_customizesForPresentationInPopover;
- (void)_didResignContentViewControllerOfPopover:(id)arg1;
- (void)_didRotateFromInterfaceOrientation:(long long)arg1 forwardToChildControllers:(bool)arg2 skipSelf:(bool)arg3;
- (id)_fenceForSynchronizedDrawing;
- (void)_firstResponderDidChange:(id)arg1;
- (id)_hostDeferralProperties;
- (void)_hostDidEnterBackground:(id)arg1;
- (void)_hostWillEnterForeground:(id)arg1;
- (bool)_ignoreAppSupportedOrientations;
- (id)_initWithViewServiceBundleIdentifier:(id)arg1;
- (void)_initializeAccessibilityPortInformation;
- (bool)_isDeallocating;
- (bool)_isUpdatingSize;
- (bool)_needsUnderflowPropertyUpdate;
- (void)_prepareTouchDeliveryPolicy;
- (bool)_requiresKeyboardWindowWhenFirstResponder;
- (void)_restoreTextEffectsRemoteView;
- (void)_screenDidConnect:(id)arg1;
- (void)_screenDidDisconnect:(id)arg1;
- (void)_screenIDChanged:(id)arg1;
- (void)_scrollToTopFromTouchAtViewLocation:(struct CGPoint { double x1; double x2; })arg1 resultHandler:(id)arg2;
- (bool)_serviceHasScrollToTopView;
- (void)_setContentOverlayInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)_setDeferred:(bool)arg1 forDisplayUUID:(id)arg2;
- (void)_setIsUpdatingSize:(bool)arg1;
- (void)_setShouldUpdateRemoteTextEffectsWindow:(bool)arg1;
- (void)_setTouchDeliveryPolicyAssertion:(id)arg1;
- (bool)_shouldDeferEventsForFocusOnScreen:(id)arg1;
- (bool)_shouldUpdateRemoteTextEffectsWindow;
- (void)_snapshotAndRemoveTextEffectsRemoteView;
- (void)_statusBarHeightDidChange:(id)arg1;
- (void)_statusBarOrientationDidChange:(id)arg1;
- (void)_terminateUnconditionallyThen:(id)arg1;
- (id)_terminateWithError:(id)arg1;
- (id)_touchDeliveryPolicyAssertion;
- (void)_traitCollectionDidChange:(id)arg1;
- (bool)_tryRetain;
- (void)_updateTintColor;
- (void)_updateTouchGrabbingView;
- (void)_updateUnderflowProperties;
- (void)_willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2 forwardToChildControllers:(bool)arg3 skipSelf:(bool)arg4;
- (void)_willBecomeContentViewControllerOfPopover:(id)arg1;
- (void)_willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2 forwardToChildControllers:(bool)arg3 skipSelf:(bool)arg4;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertViewCancel:(id)arg1;
- (id)allowedNotifications;
- (id)autorelease;
- (bool)canBecomeFirstResponder;
- (void)dealloc;
- (void)didMoveToParentViewController:(id)arg1;
- (void)dimmingViewWasTapped:(id)arg1;
- (id)disconnect;
- (id)forbiddenNotifications;
- (bool)inheritsSecurity;
- (struct CGSize { double x1; double x2; })intrinsicContentSizeForServiceSize:(struct CGSize { double x1; double x2; })arg1;
- (void)loadView;
- (long long)preferredStatusBarStyle;
- (long long)preferredStatusBarUpdateAnimation;
- (long long)preferredWhitePointAdaptivityStyle;
- (bool)prefersStatusBarHidden;
- (oneway void)release;
- (void)restoreStateForSession:(id)arg1 anchor:(id)arg2;
- (id)retain;
- (unsigned long long)retainCount;
- (void)saveStateForSession:(id)arg1 anchor:(id)arg2;
- (struct { unsigned int x1[8]; })serviceAuditToken;
- (id)serviceBundleIdentifier;
- (int)serviceProcessIdentifier;
- (id)serviceViewControllerProxy;
- (id)serviceViewControllerProxyWithErrorHandler:(id)arg1;
- (bool)serviceViewShouldShareTouchesWithHost;
- (void)setAllowedNotifications:(id)arg1;
- (void)setInheritsSecurity:(bool)arg1;
- (void)setServiceViewShouldShareTouchesWithHost:(bool)arg1;
- (bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (bool)shouldPropagateAppearanceCustomizations;
- (unsigned long long)supportedInterfaceOrientations;
- (void)synchronizeAnimationsInActions:(id)arg1;
- (id)textEffectsWindowForServiceScreen;
- (void)updateTouchInterdictionViewLayout;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidInvalidateIntrinsicContentSize;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (void)viewServiceDidTerminateWithError:(id)arg1;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;

@end
