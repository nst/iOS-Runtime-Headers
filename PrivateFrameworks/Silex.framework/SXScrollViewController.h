/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Silex.framework/Silex
 */

@interface SXScrollViewController : UIViewController <STScrollViewDelegate, SXAdControllerPresentationDelegate, SXComponentHosting, SXDocumentSectionHosting, SXFormatInteractorDelegate, SXKeyboardSupport, SXPresentationDelegate, SXPresentationEnvironment, SXPreviewViewControllerManagerDelegate, SXScrollPositionRestoring, SXTangierControllerDelegate, SXViewportChangeListener, UIGestureRecognizerDelegate> {
    <SXActionManager> * _actionManager;
    <SXAdControllerContainer> * _adControllerContainer;
    <SXAdDocumentStateManager> * _adDocumentStateManager;
    <SXAnalyticsReportingContainer> * _analyticsReportingContainer;
    SXComponentAnimationController * _animationController;
    <SXAppStateMonitor> * _appStateMonitor;
    NSMutableArray * _articleScrollEvents;
    SXComponentBehaviorController * _behaviorController;
    <SXComponentController> * _componentController;
    SXContext * _context;
    SXFullscreenCanvasController * _currentCanvasController;
    <SXScrollViewControllerDelegate> * _delegate;
    <SXDocumentControllerContainer> * _documentControllerContainer;
    SXDocumentProvider * _documentProvider;
    <SXDocumentSectionManager> * _documentSectionManager;
    <SXDocumentStyleRenderer> * _documentStyleRenderer;
    SXComponentView * _focussedComponentView;
    SXFontIndex * _fontIndex;
    <SXDocumentSectionBlueprint> * _footerBlueprint;
    SXFullscreenCanvasViewController * _fullscreenCanvasViewController;
    SXFullscreenVideoPlaybackManager * _fullscreenVideoPlaybackManager;
    <SXDocumentSectionBlueprint> * _headerBlueprint;
    double  _headerHeight;
    <SXFormatInteractor> * _interactor;
    bool  _isPreviewing;
    SXMediaPlaybackController * _mediaPlaybackController;
    <SXMediaSharingPolicyProvider> * _mediaSharingPolicyProvider;
    SXPresentationAttributes * _presentationAttributes;
    <SXPresentationAttributesManager> * _presentationAttributesManager;
    <SXPresentationDelegateContainer> * _presentationDelegateContainer;
    <SXPreviewViewControllerManager> * _previewViewControllerManager;
    <UIViewControllerPreviewing> * _previewingContext;
    <SXResourceDataSourceContainer> * _resourceDataSourceContainer;
    bool  _restoreScrollPositionOnNextLayout;
    SXScrollPosition * _restoredScrollPosition;
    <SXScrollPositionManager> * _scrollPositionManager;
    <SXScrollReporting> * _scrollReporter;
    UIScrollView * _scrollView;
    NSOrderedSet * _snapLines;
    SXTangierController * _tangierController;
    <SXTextSelectionManager> * _textSelectionManager;
    <SXTransitionDataSourceProvider> * _transitionDataSourceProvider;
    bool  _transitioning;
    SXVideoPlayerViewControllerManager * _videoPlayerViewControllerManager;
    SXViewControllerPresentingManager * _viewControllerPresentingManager;
    SXViewport * _viewport;
    SXViewportDebugger * _viewportDebugger;
}

@property (nonatomic, readonly) <SXActionManager> *actionManager;
@property (nonatomic, readonly) <SXAdControllerContainer> *adControllerContainer;
@property (nonatomic, readonly) <SXAdDocumentStateManager> *adDocumentStateManager;
@property (nonatomic, readonly) <SXAnalyticsReportingContainer> *analyticsReportingContainer;
@property (nonatomic, readonly) SXComponentAnimationController *animationController;
@property (nonatomic, readonly) <SXAppStateMonitor> *appStateMonitor;
@property (nonatomic, retain) NSMutableArray *articleScrollEvents;
@property (nonatomic, readonly) SXComponentBehaviorController *behaviorController;
@property (nonatomic, readonly) <SXComponentController> *componentController;
@property (nonatomic, readonly) SXContext *context;
@property (nonatomic, retain) SXFullscreenCanvasController *currentCanvasController;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SXScrollViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) <SXDocumentControllerContainer> *documentControllerContainer;
@property (nonatomic, readonly) SXDocumentProvider *documentProvider;
@property (nonatomic, readonly) <SXDocumentSectionManager> *documentSectionManager;
@property (nonatomic, readonly) <SXDocumentStyleRenderer> *documentStyleRenderer;
@property (nonatomic, retain) SXComponentView *focussedComponentView;
@property (nonatomic, readonly) SXFontIndex *fontIndex;
@property (nonatomic, readonly) <SXDocumentSectionBlueprint> *footerBlueprint;
@property (nonatomic, retain) SXFullscreenCanvasViewController *fullscreenCanvasViewController;
@property (nonatomic, readonly) SXFullscreenVideoPlaybackManager *fullscreenVideoPlaybackManager;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) <SXDocumentSectionBlueprint> *headerBlueprint;
@property (nonatomic) double headerHeight;
@property (nonatomic, readonly) <SXFormatInteractor> *interactor;
@property (nonatomic, readonly) bool isPresentingFullscreenCanvas;
@property (nonatomic) bool isPreviewing;
@property (nonatomic, readonly) SXMediaPlaybackController *mediaPlaybackController;
@property (nonatomic, readonly) <SXMediaSharingPolicyProvider> *mediaSharingPolicyProvider;
@property (nonatomic, readonly) SXPresentationAttributes *presentationAttributes;
@property (nonatomic, readonly) <SXPresentationAttributesManager> *presentationAttributesManager;
@property (nonatomic, readonly) <SXPresentationDelegateContainer> *presentationDelegateContainer;
@property (nonatomic, readonly) <SXPreviewViewControllerManager> *previewViewControllerManager;
@property (nonatomic, retain) <UIViewControllerPreviewing> *previewingContext;
@property (nonatomic, readonly) <SXResourceDataSourceContainer> *resourceDataSourceContainer;
@property (nonatomic) bool restoreScrollPositionOnNextLayout;
@property (nonatomic, retain) SXScrollPosition *restoredScrollPosition;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } safeAreaInsets;
@property (nonatomic, readonly) <SXScrollPositionManager> *scrollPositionManager;
@property (nonatomic, readonly) <SXScrollReporting> *scrollReporter;
@property (nonatomic, readonly) UIScrollView *scrollView;
@property (nonatomic, retain) NSOrderedSet *snapLines;
@property (readonly) Class superclass;
@property (nonatomic, retain) SXTangierController *tangierController;
@property (nonatomic, readonly) <SXTextSelectionManager> *textSelectionManager;
@property (nonatomic, readonly) UITraitCollection *traitCollection;
@property (nonatomic, readonly) <SXTransitionDataSourceProvider> *transitionDataSourceProvider;
@property (nonatomic) bool transitioning;
@property (nonatomic, readonly) SXVideoPlayerViewControllerManager *videoPlayerViewControllerManager;
@property (nonatomic, readonly) SXViewControllerPresentingManager *viewControllerPresentingManager;
@property (nonatomic, readonly) unsigned long long viewingLocation;
@property (nonatomic, retain) SXViewport *viewport;
@property (nonatomic, retain) SXViewportDebugger *viewportDebugger;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } viewportSize;

- (void).cxx_destruct;
- (void)_applicationWillEnterForeground:(id)arg1;
- (bool)accessibilityShouldScrollForScrollView:(id)arg1 defaultValue:(bool)arg2;
- (id)actionManager;
- (id)adControllerContainer;
- (id)adDocumentStateManager;
- (void)addComponentView:(id)arg1;
- (bool)addInteractivityFocusForComponent:(id)arg1;
- (bool)allowInteractivityFocusForComponent:(id)arg1;
- (id)analyticsReportingContainer;
- (id)animationController;
- (id)appStateMonitor;
- (void)applyFooterBlueprint:(id)arg1;
- (void)applyHeaderBlueprint:(id)arg1;
- (id)articleScrollEvents;
- (void)assistiveTechnologyStatusDidChange:(id)arg1;
- (id)behaviorController;
- (id)canvasViewController;
- (id)componentController;
- (id)context;
- (id)currentCanvasController;
- (void)dealloc;
- (id)delegate;
- (void)dictionaryWithComponentOffsets:(id)arg1 forComponentViews:(id)arg2;
- (void)didTouchScrollView:(id)arg1 withEvent:(id)arg2;
- (void)dismissFullscreenCanvasForComponent:(id)arg1;
- (void)displayContentsAfterLayoutWithInteractor:(id)arg1;
- (id)documentControllerContainer;
- (id)documentProvider;
- (id)documentSectionManager;
- (id)documentStyleRenderer;
- (void)finishArticleScrollEvents;
- (id)focussedComponentView;
- (id)fontIndex;
- (id)footerBlueprint;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameOfComponentWithVideoPlayerViewController:(id)arg1;
- (id)fullscreenCanvasViewController;
- (id)fullscreenVideoPlaybackManager;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)headerBlueprint;
- (double)headerHeight;
- (id)headlineAccessibilityElement;
- (void)hideContentsForLayoutWithInteractor:(id)arg1;
- (id)initWithScrollView:(id)arg1 documentControllerContainer:(id)arg2 resourceDataSourceContainer:(id)arg3 analyticsReportingContainer:(id)arg4 presentationDelegateContainer:(id)arg5 adControllerContainer:(id)arg6 presentationAttributeManager:(id)arg7 viewport:(id)arg8 tangierController:(id)arg9 componentController:(id)arg10 interactor:(id)arg11 appStateMonitor:(id)arg12 viewControllerPresentingManager:(id)arg13 scrollPositionManager:(id)arg14 documentStyleRenderer:(id)arg15 previewViewControllerManager:(id)arg16 scrollReporter:(id)arg17 videoPlayerViewControllerManager:(id)arg18 mediaSharingPolicyProvider:(id)arg19 fontIndex:(id)arg20 documentProvider:(id)arg21 transitionDataSourceProvider:(id)arg22;
- (id)interactiveCanvasController;
- (id)interactor;
- (void)interactor:(id)arg1 didIntegrateBlueprint:(id)arg2;
- (void)interactor:(id)arg1 willIntegrateBlueprint:(id)arg2;
- (void)interactor:(id)arg1 willLayoutWithOptions:(id)arg2;
- (bool)isPresentingFullscreenCanvas;
- (bool)isPreviewing;
- (bool)isScrolling;
- (bool)isValidBlueprintForCurrentSize:(id)arg1;
- (void)loadContext:(id)arg1 analyticsReporting:(id)arg2 adControllerFactory:(id)arg3;
- (id)mediaPlaybackController;
- (id)mediaSharingPolicyProvider;
- (void)presentFullscreenGalleryWithComponentIdentifier:(id)arg1;
- (id)presentationAttributes;
- (id)presentationAttributesManager;
- (id)presentationDelegateContainer;
- (id)presentingContentViewController;
- (id)presentingViewControllerForAdController:(id)arg1;
- (id)previewViewControllerManager;
- (id)previewingContext;
- (void)removeComponentView:(id)arg1;
- (void)removeInteractivityFocusForComponent:(id)arg1;
- (id)requestFullScreenCanvasViewControllerForComponent:(id)arg1 canvasController:(id)arg2 withCompletionBlock:(id /* block */)arg3;
- (id)requestFullScreenCanvasViewControllerForComponent:(id)arg1 withCompletionBlock:(id /* block */)arg2;
- (id)resourceDataSourceContainer;
- (bool)restoreScrollPositionOnNextLayout;
- (id)restoredScrollPosition;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })safeAreaInsets;
- (id)scrollPosition;
- (id)scrollPositionForComponentViews:(id)arg1;
- (id)scrollPositionForPlayingVideoComponentInComponentViews:(id)arg1;
- (id)scrollPositionManager;
- (id)scrollReporter;
- (void)scrollToRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 animated:(bool)arg2;
- (id)scrollView;
- (bool)scrollView:(id)arg1 shouldOccludeAccessibilityElement:(id)arg2;
- (id)scrollViewForFullscreenGalleryWithComponentIdentifier:(id)arg1;
- (id)scrollViewForStripGalleryWithComponentIdentifier:(id)arg1;
- (id)sectionHostingView;
- (id)sectionHostingViewController;
- (void)setArticleScrollEvents:(id)arg1;
- (void)setCurrentCanvasController:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFocussedComponentView:(id)arg1;
- (void)setFullscreenCanvasViewController:(id)arg1;
- (void)setHeaderHeight:(double)arg1;
- (void)setIsPreviewing:(bool)arg1;
- (void)setPreviewingContext:(id)arg1;
- (void)setRestoreScrollPositionOnNextLayout:(bool)arg1;
- (void)setRestoredScrollPosition:(id)arg1;
- (void)setSnapLines:(id)arg1;
- (void)setTangierController:(id)arg1;
- (void)setTransitioning:(bool)arg1;
- (void)setViewport:(id)arg1;
- (void)setViewportDebugger:(id)arg1;
- (bool)shouldAutomaticallyForwardAppearanceMethods;
- (bool)shouldPreventDraggingForScrollView:(id)arg1;
- (bool)shouldRestoreScrollPositionForLayoutBlueprint:(id)arg1;
- (bool)shouldStartPreviewForPreviewViewControllerManager:(id)arg1;
- (void)showScrollViewIfNeeded;
- (id)snapLines;
- (double)snaplineForContentOffset:(double)arg1 velocity:(double)arg2;
- (void)spacebarPressedWithModifierFlags:(long long)arg1;
- (id)tangierController;
- (void)tangierController:(id)arg1 scrollViewDidEndDragging:(id)arg2 willDecelerate:(bool)arg3;
- (void)tangierController:(id)arg1 scrollViewWillBeginDragging:(id)arg2;
- (void)tangierController:(id)arg1 scrollViewWillEndDragging:(id)arg2 withVelocity:(struct CGPoint { double x1; double x2; })arg3 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg4;
- (void)tangierControllerDidScroll:(id)arg1;
- (void)tangierControllerDidStopScrolling:(id)arg1;
- (void)tangierControllerWillStartScrolling:(id)arg1;
- (id)textScrollPositionForComponentViews:(id)arg1;
- (id)textSelectionManager;
- (void)traitCollectionDidChange:(id)arg1;
- (id)transitionDataSourceProvider;
- (bool)transitioning;
- (void)updateBehaviorForComponentView:(id)arg1;
- (void)updatePresentationWithAttributes:(id)arg1;
- (void)updateScrollPosition:(id)arg1 animated:(bool)arg2;
- (void)updateStickyHeaders;
- (void)updateViewportForBlueprint:(id)arg1;
- (id)videoComponentViewForVideoPlayerViewController:(id)arg1;
- (id)videoPlayerViewControllerManager;
- (id)viewControllerPresentingManager;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (id)viewport;
- (void)viewport:(id)arg1 appearStateChangedFromState:(unsigned long long)arg2;
- (id)viewportDebugger;
- (struct CGSize { double x1; double x2; })viewportSize;
- (void)willEndPreviewingForPreviewViewControllerManager:(id)arg1;
- (void)willStartPreviewingForPreviewViewControllerManager:(id)arg1;

@end
