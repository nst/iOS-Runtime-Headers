/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
 */

@interface MPCRadioStreamTrackAVItem : MPCRadioAVItem <AVAssetResourceLoaderDelegate> {
    _MPCRadioStreamMetadata * _adamIDMetadata;
    long long  _albumStoreID;
    NSArray * _buyOffers;
    _MPCRadioStreamMetadata * _effectiveMetadata;
    NSData * _jingleTimedMetadata;
    double  _playStartDateTimeSinceReferenceDate;
    NSData * _previousAdamIDBlob;
    _MPCRadioStreamMetadata * _radioStreamTrackMetadata;
    long long  _storeID;
    _MPCRadioStreamMetadata * _timedMetadata;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:(id)arg1;
- (id)_artworkCollection;
- (id)_createMetadataForRadioStreamTrack;
- (double)_expectedDuration;
- (long long)_expectedPlaybackMode;
- (void)_getCurrentTimedMetadata:(id*)arg1 pings:(id*)arg2 adamIDBlob:(id*)arg3 jingleTimedMetadata:(id*)arg4;
- (void)_handleStoreIDDidChange;
- (bool)_hasLyrics;
- (float)_maximumBitRateForNetworkType:(long long)arg1;
- (void)_networkTypeDidChangeNotification:(id)arg1;
- (void)_reloadMetadataAndPostNotificationsIfNeeded:(bool)arg1;
- (void)_updateEffectiveMetadataAndPostNotifications:(bool)arg1;
- (id)album;
- (id)albumBuyButtonText;
- (long long)albumBuyButtonType;
- (long long)albumStoreID;
- (id)artist;
- (id)buyOffers;
- (void)dealloc;
- (id)effectiveArtworkCollection;
- (id)initWithStreamTrack:(id)arg1;
- (bool)isAlwaysLive;
- (bool)isExplicitTrack;
- (bool)isLikedStateEnabled;
- (void)loadAssetAndPlayerItem;
- (id)mainTitle;
- (id)mpcReporting_jingleTimedMetadata;
- (bool)mpcReporting_shouldUseRelativeTimePositions;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;
- (void)setPlayerItem:(id)arg1;
- (long long)storeItemInt64ID;
- (id)streamTrack;
- (bool)supportsRadioTrackActions;

@end
