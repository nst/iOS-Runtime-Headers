/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

@interface CKDURLRequest : NSObject <C2RequestDelegate, CKDFlowControllable, CKDProtobufMessageSigningDelegate, CKDZoneGatekeeperWaiter> {
    <CKDAccountInfoProvider> * _accountInfoProvider;
    bool  _allowAutomaticRedirects;
    <CKDURLRequestAuthRetryDelegate> * _authRetryDelegate;
    NSString * _automatedDeviceGroup;
    C2RequestOptions * _c2RequestOptions;
    long long  _cachedPartitionType;
    long long  _cachedServerType;
    bool  _cancelled;
    NSDictionary * _clientProvidedAdditionalHeaderValues;
    NSString * _cloudKitAuthToken;
    id /* block */  _completionBlock;
    NSMutableDictionary * _countsByRequestOperationType;
    NSDate * _dateRequestWentOut;
    NSString * _deviceID;
    bool  _didFinishLoading;
    bool  _didReceiveResponseBodyData;
    bool  _didRetryAuth;
    bool  _didRetrySignature;
    bool  _didSendRequest;
    NSError * _error;
    NSData * _fakeResponseData;
    NSDictionary * _fakeResponseOperationResultByItemID;
    bool  _finished;
    bool  _haveCachedPartitionType;
    bool  _haveCachedServerType;
    bool  _haveParsedFakeResponseData;
    NSString * _iCloudAuthToken;
    bool  _isHandlingAuthRetry;
    bool  _isWaitingOnAuthRenew;
    NSObject<OS_dispatch_queue> * _lifecycleQueue;
    struct CC_SHA256state_st { 
        unsigned int count[2]; 
        unsigned int hash[8]; 
        unsigned int wbuf[16]; 
    }  _mescalTxSignature;
    CKDOperationMetrics * _metrics;
    <CKDURLRequestMetricsDelegate> * _metricsDelegate;
    bool  _needsAuthRetry;
    unsigned long long  _numDownloadedElements;
    CKDOperation * _operation;
    NSObject<OS_os_activity> * _osActivity;
    NSMutableDictionary * _overriddenHeaders;
    NSMutableArray * _redirectHistory;
    NSURLRequest * _request;
    NSArray * _requestOperations;
    id /* block */  _requestProgressBlock;
    NSDictionary * _requestProperties;
    NSString * _requestUUID;
    NSHTTPURLResponse * _response;
    CKDResponseBodyParser * _responseBodyParser;
    NSMutableSet * _responseObjectUUIDs;
    id /* block */  _responseProgressBlock;
    long long  _responseStatusCode;
    NSString * _serverProvidedAutoBugCaptureReason;
    NSString * _serverProvidedAutoSysdiagnoseCollectionReason;
    CKDTapToRadarRequest * _serverProvidedTapToRadarRequest;
    CKDProtobufStreamWriter * _streamWriter;
    CKTimeLogger * _timeLogger;
    NSDictionary * _timingData;
    CKDTrafficLogger * _trafficLogger;
    CKDProtocolTranslator * _translator;
    NSObject<OS_os_activity> * _transmissionActivity;
    NSURLSession * _urlSession;
    NSURLSessionDataTask * _urlSessionTask;
    NSObject<OS_voucher> * _voucher;
}

@property (nonatomic, readonly) NSString *acceptContentType;
@property (nonatomic, retain) <CKDAccountInfoProvider> *accountInfoProvider;
@property (nonatomic, readonly) NSDictionary *additionalHeaderValues;
@property (nonatomic) bool allowAutomaticRedirects;
@property (nonatomic, readonly) bool allowsBackgroundNetworking;
@property (nonatomic, readonly) bool allowsCellularAccess;
@property (nonatomic, readonly) bool allowsPowerNapScheduling;
@property (nonatomic, readonly) NSString *authPromptReason;
@property (nonatomic) <CKDURLRequestAuthRetryDelegate> *authRetryDelegate;
@property (nonatomic, retain) NSString *automatedDeviceGroup;
@property (nonatomic, readonly) bool automaticallyRetryNetworkFailures;
@property (retain) C2RequestOptions *c2RequestOptions;
@property (nonatomic) long long cachedPartitionType;
@property (nonatomic) long long cachedServerType;
@property (getter=isCancelled) bool cancelled;
@property (nonatomic, retain) NSDictionary *clientProvidedAdditionalHeaderValues;
@property (nonatomic, retain) NSString *cloudKitAuthToken;
@property (nonatomic, copy) id /* block */ completionBlock;
@property (nonatomic, readonly) CKDClientContext *context;
@property (nonatomic, retain) NSMutableDictionary *countsByRequestOperationType;
@property (nonatomic, readonly) long long databaseScope;
@property (retain) NSDate *dateRequestWentOut;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSString *deviceID;
@property (nonatomic) bool didReceiveResponseBodyData;
@property (nonatomic) bool didRetryAuth;
@property (nonatomic, readonly) unsigned long long discretionaryNetworkBehavior;
@property (retain) NSError *error;
@property (nonatomic, readonly) bool expectsResponseBody;
@property (nonatomic, retain) NSDictionary *fakeResponseOperationResultByItemID;
@property (nonatomic, readonly) NSString *flowControlKey;
@property (nonatomic, readonly) bool hasRequestBody;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool haveCachedPartitionType;
@property (nonatomic) bool haveCachedServerType;
@property (nonatomic, readonly) NSString *httpMethod;
@property (nonatomic, retain) NSString *iCloudAuthToken;
@property (readonly) bool isFinished;
@property bool isHandlingAuthRetry;
@property bool isWaitingOnAuthRenew;
@property (nonatomic, readonly) int isolationLevel;
@property (nonatomic, readonly) NSURL *lastRedirectURL;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *lifecycleQueue;
@property (nonatomic, retain) CKDOperationMetrics *metrics;
@property (nonatomic) <CKDURLRequestMetricsDelegate> *metricsDelegate;
@property bool needsAuthRetry;
@property (nonatomic, readonly) unsigned long long networkServiceType;
@property (nonatomic) unsigned long long numDownloadedElements;
@property (nonatomic) CKDOperation *operation;
@property (nonatomic, readonly) NSString *operationGroupID;
@property (nonatomic, readonly) NSString *operationGroupName;
@property (nonatomic, readonly) NSNumber *operationGroupQuantity;
@property (nonatomic, readonly) NSString *operationID;
@property (nonatomic, readonly) NSString *operationIDForProtobuf;
@property (nonatomic, readonly) int operationType;
@property (nonatomic, retain) NSMutableDictionary *overriddenHeaders;
@property (nonatomic, readonly) long long partitionType;
@property (nonatomic, readonly) NSString *path;
@property (nonatomic, readonly) bool preferAnonymousRequests;
@property (nonatomic, readonly) NSString *protobufOperationName;
@property (nonatomic, readonly) long long qualityOfService;
@property (nonatomic, retain) NSMutableArray *redirectHistory;
@property (retain) NSURLRequest *request;
@property (nonatomic, readonly) NSInputStream *requestBodyStream;
@property (nonatomic, readonly) NSString *requestContentType;
@property (nonatomic, readonly) bool requestGETPreAuth;
@property (nonatomic, readonly) NSArray *requestOperationClasses;
@property (nonatomic, readonly) NSArray *requestOperations;
@property (nonatomic, copy) id /* block */ requestProgressBlock;
@property (nonatomic, retain) NSDictionary *requestProperties;
@property (nonatomic, readonly) NSString *requestUUID;
@property (retain) NSHTTPURLResponse *response;
@property (nonatomic, retain) CKDResponseBodyParser *responseBodyParser;
@property (nonatomic, readonly) NSDictionary *responseHeaders;
@property (nonatomic, retain) NSMutableSet *responseObjectUUIDs;
@property (nonatomic, copy) id /* block */ responseProgressBlock;
@property (nonatomic, readonly) long long responseStatusCode;
@property (nonatomic, readonly) NSString *sectionID;
@property (nonatomic, readonly) bool sendRequestAnonymously;
@property (nonatomic, copy) NSString *serverProvidedAutoBugCaptureReason;
@property (nonatomic, retain) NSString *serverProvidedAutoSysdiagnoseCollectionReason;
@property (nonatomic, retain) CKDTapToRadarRequest *serverProvidedTapToRadarRequest;
@property (nonatomic, readonly) long long serverType;
@property (nonatomic, readonly) bool shouldCompressBody;
@property (nonatomic, readonly) NSString *sourceApplicationBundleIdentifier;
@property (nonatomic, readonly) NSString *sourceApplicationSecondaryIdentifier;
@property (nonatomic, readonly) CKDProtobufStreamWriter *streamWriter;
@property (readonly) Class superclass;
@property (nonatomic, retain) CKTimeLogger *timeLogger;
@property (nonatomic, retain) NSDictionary *timingData;
@property (nonatomic, retain) CKDTrafficLogger *trafficLogger;
@property (nonatomic, retain) CKDProtocolTranslator *translator;
@property (nonatomic, readonly) NSURL *url;
@property (retain) NSURLSession *urlSession;
@property (retain) NSURLSessionDataTask *urlSessionTask;
@property (nonatomic, readonly) bool usesBackgroundSession;
@property (nonatomic, retain) NSObject<OS_voucher> *voucher;

- (void).cxx_destruct;
- (id)CKDescriptionPropertiesWithPublic:(bool)arg1 private:(bool)arg2 shouldExpand:(bool)arg3;
- (void)URLSession:(id)arg1 _taskIsWaitingForConnection:(id)arg2;
- (void)URLSession:(id)arg1 _willRetryBackgroundDataTask:(id)arg2 withError:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 _conditionalRequirementsChanged:(bool)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 _willSendRequestForEstablishedConnection:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(id /* block */)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(id /* block */)arg5;
- (id)_CFNetworkTaskIdentifierString;
- (void)_acquireZoneGates;
- (void)_addRequestHeadersToTransmittedSignature:(id)arg1;
- (void)_authTokenWithCompletionHandler:(id /* block */)arg1;
- (id)_errorFromHTTPResponse:(id)arg1;
- (void)_fetchContainerScopedUserID;
- (void)_fetchDeviceID;
- (void)_finishOnLifecycleQueueWithError:(id)arg1;
- (void)_handleAuthFailure;
- (void)_handleBadPasswordResponse;
- (long long)_handlePlistResult:(id)arg1;
- (long long)_handleServerJSONResult:(id)arg1;
- (long long)_handleServerProtobufResult:(id)arg1 rawData:(id)arg2;
- (id /* block */)_jsonObjectParsedBlock;
- (void)_loadRequest:(id)arg1;
- (bool)_onLifecycleQueue;
- (void)_performRequest;
- (void)_prepareAuthTokens;
- (void)_prepareCloudKitAuthToken;
- (id /* block */)_protobufObjectParsedBlock;
- (void)_registerPushTokens;
- (void)_registerRequestOperationTypesForOperations:(id)arg1;
- (void)_renewAuthTokenWithCompletionHandler:(id /* block */)arg1;
- (void)_setupConfiguration;
- (void)_setupMescal;
- (void)_setupPrivateDatabaseURL;
- (void)_setupPublicDatabaseURL;
- (void)_tearDownStreamWriter;
- (void)_triggerAutoBugCaptureWithErrorPayload:(id)arg1;
- (id)_wrapErrorIfNecessary:(id)arg1;
- (id /* block */)_xmlObjectParsedBlock;
- (id)acceptContentType;
- (id)accountInfoProvider;
- (id)additionalHeaderValues;
- (bool)allowAutomaticRedirects;
- (bool)allowsAnonymousAccount;
- (bool)allowsAuthedAccount;
- (bool)allowsBackgroundNetworking;
- (bool)allowsCellularAccess;
- (bool)allowsPowerNapScheduling;
- (id)authPromptReason;
- (id)authRetryDelegate;
- (id)automatedDeviceGroup;
- (bool)automaticallyRetryNetworkFailures;
- (id)c2RequestOptions;
- (long long)cachedPartitionType;
- (long long)cachedServerType;
- (void)cancel;
- (id)ckShortDescription;
- (id)clientProvidedAdditionalHeaderValues;
- (id)cloudKitAuthToken;
- (id /* block */)completionBlock;
- (id)context;
- (id)countsByRequestOperationType;
- (id)createAssetAuthorizeGetRequestOptionsHeaderInfoWithKey:(id)arg1 value:(id)arg2;
- (long long)databaseScope;
- (id)dateRequestWentOut;
- (void)dealloc;
- (id)defaultParserForContentType:(id)arg1;
- (id)description;
- (id)deviceID;
- (id)deviceIdentifier;
- (bool)didReceiveResponseBodyData;
- (bool)didRetryAuth;
- (unsigned long long)discretionaryNetworkBehavior;
- (id)error;
- (Class)expectedResponseClass;
- (bool)expectsResponseBody;
- (bool)expectsSingleObject;
- (id)fakeResponseOperationResultByItemID;
- (void)finishWithError:(id)arg1;
- (id)flowControlKey;
- (id)generateRequestOperations;
- (void)generateSignature:(id /* block */)arg1;
- (bool)hasRequestBody;
- (bool)haveCachedPartitionType;
- (bool)haveCachedServerType;
- (id)httpMethod;
- (id)iCloudAuthToken;
- (bool)includeContainerInfo;
- (id)init;
- (bool)isCancelled;
- (bool)isFinished;
- (bool)isHandlingAuthRetry;
- (bool)isWaitingOnAuthRenew;
- (int)isolationLevel;
- (id)lastRedirectURL;
- (id)lifecycleQueue;
- (bool)markAsFinished;
- (id)metrics;
- (id)metricsDelegate;
- (bool)needsAuthRetry;
- (unsigned long long)networkServiceType;
- (unsigned long long)numDownloadedElements;
- (id)operation;
- (id)operationGroupID;
- (id)operationGroupName;
- (id)operationGroupQuantity;
- (id)operationID;
- (id)operationIDForProtobuf;
- (id)operationRequestWithType:(int)arg1;
- (int)operationType;
- (id)overriddenHeaders;
- (void)overrideRequestHeader:(id)arg1 withValue:(id)arg2;
- (bool)parsingStandaloneMessage;
- (long long)partitionType;
- (id)path;
- (void)performASyncOnLifecycleQueueIfNotFinished:(id /* block */)arg1;
- (void)performOnLifecycleQueueIfNotFinished:(id /* block */)arg1;
- (void)performRequest;
- (bool)preferAnonymousRequests;
- (void)prepareRequestWithCompletion:(id /* block */)arg1;
- (id)protobufOperationName;
- (long long)qualityOfService;
- (id)redirectHistory;
- (void)reportStatusWithError:(id)arg1;
- (id)request;
- (id)requestBodyStream;
- (id)requestContentType;
- (void)requestDidComplete;
- (void)requestDidParse509CertObject:(id)arg1;
- (void)requestDidParseJSONObject:(id)arg1;
- (void)requestDidParseNodeFailure:(id)arg1;
- (void)requestDidParsePlaintextObject:(id)arg1;
- (void)requestDidParsePlistObject:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (bool)requestGETPreAuth;
- (Class)requestMessageClass;
- (id)requestOperationClasses;
- (id)requestOperationCountsByOperationType;
- (id)requestOperations;
- (id)requestOptions;
- (id /* block */)requestProgressBlock;
- (id)requestProperties;
- (id)requestUUID;
- (bool)requiresAppPartitionURL;
- (bool)requiresConfiguration;
- (bool)requiresDeviceID;
- (bool)requiresSignature;
- (bool)requiresTokenRegistration;
- (bool)requiresUserPartitionURL;
- (id)response;
- (id)responseBodyParser;
- (id)responseHeaders;
- (id)responseObjectUUIDs;
- (id /* block */)responseProgressBlock;
- (long long)responseStatusCode;
- (id)sectionID;
- (bool)sendRequestAnonymously;
- (id)serverProvidedAutoBugCaptureReason;
- (id)serverProvidedAutoSysdiagnoseCollectionReason;
- (id)serverProvidedTapToRadarRequest;
- (long long)serverType;
- (void)setAccountInfoProvider:(id)arg1;
- (void)setAllowAutomaticRedirects:(bool)arg1;
- (void)setAuthRetryDelegate:(id)arg1;
- (void)setAutomatedDeviceGroup:(id)arg1;
- (void)setC2RequestOptions:(id)arg1;
- (void)setCachedPartitionType:(long long)arg1;
- (void)setCachedServerType:(long long)arg1;
- (void)setCancelled:(bool)arg1;
- (void)setClientProvidedAdditionalHeaderValues:(id)arg1;
- (void)setCloudKitAuthToken:(id)arg1;
- (void)setCompletionBlock:(id /* block */)arg1;
- (void)setCountsByRequestOperationType:(id)arg1;
- (void)setDateRequestWentOut:(id)arg1;
- (void)setDeviceID:(id)arg1;
- (void)setDidReceiveResponseBodyData:(bool)arg1;
- (void)setDidRetryAuth:(bool)arg1;
- (void)setError:(id)arg1;
- (void)setFakeResponseOperationResultByItemID:(id)arg1;
- (void)setHaveCachedPartitionType:(bool)arg1;
- (void)setHaveCachedServerType:(bool)arg1;
- (void)setICloudAuthToken:(id)arg1;
- (void)setIsHandlingAuthRetry:(bool)arg1;
- (void)setIsWaitingOnAuthRenew:(bool)arg1;
- (void)setLifecycleQueue:(id)arg1;
- (void)setMetrics:(id)arg1;
- (void)setMetricsDelegate:(id)arg1;
- (void)setNeedsAuthRetry:(bool)arg1;
- (void)setNumDownloadedElements:(unsigned long long)arg1;
- (void)setOperation:(id)arg1;
- (void)setOverriddenHeaders:(id)arg1;
- (void)setRedirectHistory:(id)arg1;
- (void)setRequest:(id)arg1;
- (void)setRequestProgressBlock:(id /* block */)arg1;
- (void)setRequestProperties:(id)arg1;
- (void)setResponse:(id)arg1;
- (void)setResponseBodyParser:(id)arg1;
- (void)setResponseObjectUUIDs:(id)arg1;
- (void)setResponseProgressBlock:(id /* block */)arg1;
- (void)setServerProvidedAutoBugCaptureReason:(id)arg1;
- (void)setServerProvidedAutoSysdiagnoseCollectionReason:(id)arg1;
- (void)setServerProvidedTapToRadarRequest:(id)arg1;
- (void)setTimeLogger:(id)arg1;
- (void)setTimingData:(id)arg1;
- (void)setTrafficLogger:(id)arg1;
- (void)setTranslator:(id)arg1;
- (void)setUrlSession:(id)arg1;
- (void)setUrlSessionTask:(id)arg1;
- (void)setVoucher:(id)arg1;
- (bool)shouldCompressBody;
- (bool)shouldLogResponseBody;
- (id)sourceApplicationBundleIdentifier;
- (id)sourceApplicationSecondaryIdentifier;
- (id)statusReportWithIndent:(unsigned long long)arg1;
- (id)streamWriter;
- (void)tearDownResources;
- (void)tearDownResourcesAndReleaseTheZoneLocks;
- (id)timeLogger;
- (double)timeoutIntervalForRequest;
- (double)timeoutIntervalForResource;
- (id)timingData;
- (id)trafficLogger;
- (id)translator;
- (void)updateSignatureWithTransmittedBytes:(id)arg1;
- (id)url;
- (id)urlSession;
- (id)urlSessionTask;
- (bool)usesBackgroundSession;
- (bool)usesCloudKitAuthToken;
- (bool)usesiCloudAuthToken;
- (bool)validate:(id*)arg1;
- (id)voucher;
- (id)zoneIDsToLock;

@end
