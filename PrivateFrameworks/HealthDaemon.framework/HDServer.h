/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
 */

@interface HDServer : NSObject <HDDeepBreathingSessionServerDelegate, HDDiagnosticObject, HDProcessStateObserver, HDQueryServerDelegate, HDServer, HDServerPrivate, HDUnitPreferencesManagerObserver> {
    NSMutableSet * _activeSeriesSamples;
    HDAuthorizationServer * _authorizationServer;
    HDClient * _client;
    NSString * _clientDebuggingIdentifier;
    NSString * _clientSourceVersion;
    NSObject<OS_dispatch_source> * _clientTransactionTimer;
    HKServerConfiguration * _configuration;
    HDDaemon * _daemon;
    HDDataCollectionManager * _dataCollectMgr;
    HDDatabase * _database;
    NSMutableDictionary * _deepBreathingSessionServersByUUID;
    HDFitnessFriendsServer * _fitnessFriendsServer;
    HDHealthServicesServer * _healthServicesServer;
    HDMedicalIDServer * _medicalIDServer;
    HDNanoSyncServer * _nanoSyncServer;
    NSMutableSet * _processStateObservingQueryServerUUIDs;
    bool  _processStateSuspended;
    HDProfile * _profile;
    NSMutableDictionary * _queryServersByUUID;
    NSObject<OS_dispatch_queue> * _queue;
    NSString * _serverID;
    NSMutableSet * _subservers;
    HDUtilityServer * _utilityServer;
    HDWorkoutServer * _workoutServer;
}

@property (nonatomic, retain) HDAuthorizationServer *authorizationServer;
@property (nonatomic, retain) HDClient *client;
@property (nonatomic, retain) NSString *clientDebuggingIdentifier;
@property (nonatomic, readonly) HKServerConfiguration *configuration;
@property (nonatomic, readonly) HDDaemon *daemon;
@property (nonatomic, retain) HDDataCollectionManager *dataCollectMgr;
@property (nonatomic, readonly) HDDatabase *database;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) HDFitnessFriendsServer *fitnessFriendsServer;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) HDHealthServicesServer *healthServicesServer;
@property (nonatomic, retain) HDMedicalIDServer *medicalIDServer;
@property (nonatomic, retain) HDNanoSyncServer *nanoSyncServer;
@property (nonatomic, readonly) HDProfile *profile;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) NSString *serverID;
@property (nonatomic, retain) NSMutableSet *subservers;
@property (readonly) Class superclass;
@property (nonatomic, retain) HDUtilityServer *utilityServer;
@property (nonatomic, retain) HDWorkoutServer *workoutServer;

- (void).cxx_destruct;
- (id)_authorizationPromptHandler;
- (void)_cancelActiveClientTransaction;
- (bool)_clientHasPrivateHealthKitEntitlementWithError:(id*)arg1;
- (bool)_clientHasUtilityEntitlementWithError:(id*)arg1;
- (id)_clientRemoteObjectProxy;
- (id)_clientSourceVersion;
- (void)_discardLocationSeries:(id)arg1 completion:(id)arg2;
- (id)_entityForLocationSeriesSample:(id)arg1 database:(id)arg2 error:(id*)arg3;
- (void)_finishIfNeeded:(id)arg1;
- (void)_finishLocationSeries:(id)arg1 withMetadata:(id)arg2 completion:(id)arg3;
- (void)_finishSeriesBuilder:(id)arg1;
- (void)_holdActiveClientTransactionWithCompletion:(id)arg1;
- (bool)_insertedObjects:(id)arg1 containsQuantitySampleWithType:(id)arg2;
- (id)_objectAuthorizationPromptHandler;
- (id)_objectsToInsertWithObjects:(id)arg1 error:(id*)arg2;
- (void)_openAppForAuthorizationForSession:(id)arg1 completion:(id)arg2;
- (void)_performIfAuthorizedToDeleteObjects:(id)arg1 usingBlock:(id)arg2 errorHandler:(id)arg3;
- (void)_performIfAuthorizedToReadTypes:(id)arg1 usingBlock:(id)arg2 errorHandler:(id)arg3;
- (void)_performIfAuthorizedToSaveObjects:(id)arg1 usingBlock:(id)arg2 errorHandler:(id)arg3;
- (id)_permissionBlockForRestrictedSourceEntity:(id)arg1;
- (id)_queryServersByUUID;
- (void)_queue_cancelActiveClientTransaction;
- (void)_queue_deactivateDeepBreathingSessionServerWithUUID:(id)arg1;
- (void)_queue_holdActiveClientTransactionWithCompletion:(id)arg1;
- (bool)_queue_insertObjects:(id)arg1 sourceEntity:(id)arg2 sourceVersionOverride:(id)arg3 shouldJournal:(bool)arg4 error:(id*)arg5;
- (bool)_queue_isServerActive;
- (id)_queue_objectsByProvenanceForInsertion:(id)arg1 sourceEntity:(id)arg2 sourceVersionOverride:(id)arg3 error:(id*)arg4;
- (void)_queue_registerForProcessStateUpdatesWithUUID:(id)arg1;
- (void)_queue_serverActivityChanged;
- (void)_queue_unregisterFromProcessStateUpdatesWithUUID:(id)arg1;
- (void)_remote_attachDeepBreathingSessionServerWithClient:(id)arg1 sessionConfiguration:(id)arg2 handler:(id)arg3;
- (void)_requireEntitlement:(id)arg1 usingBlock:(id)arg2 errorHandler:(id)arg3;
- (void)_requirePrivateHealthKitEntitlementUsingBlock:(id)arg1 errorHandler:(id)arg2;
- (void)_saveDataObjects:(id)arg1 sourceEntity:(id)arg2 sourceVersion:(id)arg3 handler:(id)arg4;
- (void)_saveLocationSeriesData:(id)arg1 withSeriesSample:(id)arg2 completion:(id)arg3;
- (void)_saveValidatedDataObjects:(id)arg1 transactionIdentifier:(id)arg2 final:(bool)arg3 handler:(id)arg4;
- (void)_serverActivityChanged;
- (id)_sourceForClient:(id)arg1 error:(id*)arg2;
- (id)_sourceWithError:(id*)arg1;
- (void)_startQueryServer:(id)arg1 handler:(id)arg2;
- (id)authorizationServer;
- (id)client;
- (id)clientDebuggingIdentifier;
- (id)configuration;
- (id)daemon;
- (id)dataCollectMgr;
- (id)database;
- (void)dealloc;
- (void)deepBreathingServerDidDeactivate:(id)arg1;
- (void)deliverWorkoutEvent:(id)arg1 forSessionUUID:(id)arg2;
- (void)deliverWorkoutSessionChangedToState:(long long)arg1 fromState:(long long)arg2 date:(id)arg3 forSessionUUID:(id)arg4;
- (void)deliverWorkoutSessionError:(id)arg1 forSessionUUID:(id)arg2;
- (id)diagnosticDescription;
- (id)firstPartyWorkoutSnapshot;
- (id)fitnessFriendsServer;
- (id)healthServicesServer;
- (id)initWithClient:(id)arg1 healthDaemon:(id)arg2 queue:(id)arg3 configuration:(id)arg4;
- (void)invalidate;
- (id)medicalIDServer;
- (id)nanoSyncServer;
- (void)pauseActiveWorkoutsWithCompletion:(id)arg1;
- (void)processResumed:(id)arg1;
- (void)processSuspended:(id)arg1;
- (id)profile;
- (id)queryServer:(id)arg1 filterSamplesForReadAuthorization:(id)arg2;
- (bool)queryServer:(id)arg1 isAuthorizationStatusDeterminedForTypes:(id)arg2 error:(id*)arg3;
- (bool)queryServer:(id)arg1 isAuthorizedToReadType:(id)arg2 withRestrictedSourceIdentifier:(id*)arg3 authorizationAnchor:(id*)arg4;
- (void)queryServer:(id)arg1 requestsAuthorizationForSamples:(id)arg2 completion:(id)arg3;
- (bool)queryServerClientHasActiveWorkout:(id)arg1;
- (bool)queryServerClientIsInBackground:(id)arg1;
- (void)queryServerDidFinish:(id)arg1;
- (bool)queryServerShouldObserveInBackground:(id)arg1;
- (id)queue;
- (void)remote_addSourceWithBundleIdentifier:(id)arg1 name:(id)arg2 completion:(id)arg3;
- (void)remote_allAuthorizationRecordsForBundleIdentifier:(id)arg1 completion:(id)arg2;
- (void)remote_allAuthorizationRecordsForType:(id)arg1 completion:(id)arg2;
- (void)remote_allObjectAuthorizationRecordsForSampleWithUUID:(id)arg1 completion:(id)arg2;
- (void)remote_allSourcesWithCompletion:(id)arg1;
- (void)remote_authorizationStatusForType:(id)arg1 completion:(id)arg2;
- (void)remote_badgeHealthAppForEmergencyContactsConsolidationWithCompletion:(id)arg1;
- (void)remote_beginAuthorizationDelegateTransactionWithSessionIdentifier:(id)arg1 handler:(id)arg2;
- (void)remote_clientResumedWithCompletion:(id)arg1;
- (void)remote_clientWillSuspendWithCompletion:(id)arg1;
- (void)remote_closeTransactionWithDataType:(id)arg1 anchor:(id)arg2 ackTime:(id)arg3 completion:(id)arg4;
- (void)remote_currentlyPairedWatchIdentifiersWithCompletion:(id)arg1;
- (void)remote_deleteAllSamplesWithTypes:(id)arg1 sourceBundleIdentifier:(id)arg2 options:(unsigned long long)arg3 completion:(id)arg4;
- (void)remote_deleteDataObjects:(id)arg1 options:(unsigned long long)arg2 handler:(id)arg3;
- (void)remote_deleteDataObjectsOfType:(id)arg1 matchingFilter:(id)arg2 options:(unsigned long long)arg3 handler:(id)arg4;
- (void)remote_deleteObjectsWithUUIDs:(id)arg1 options:(unsigned long long)arg2 completion:(id)arg3;
- (void)remote_deleteSourceWithBundleIdentifier:(id)arg1 completion:(id)arg2;
- (void)remote_discardLocationSeries:(id)arg1 completion:(id)arg2;
- (void)remote_endAuthorizationDelegateTransactionWithSessionIdentifier:(id)arg1 error:(id)arg2;
- (void)remote_fetchCharacteristicWithDataType:(id)arg1 handler:(id)arg2;
- (void)remote_fetchDaemonPreferenceForKey:(id)arg1 completion:(id)arg2;
- (void)remote_fetchDevicesMatchingProperty:(id)arg1 values:(id)arg2 completion:(id)arg3;
- (void)remote_fetchUnitPreferencesForTypes:(id)arg1 withCompletion:(id)arg2;
- (void)remote_finishLocationSeries:(id)arg1 withMetadata:(id)arg2 completion:(id)arg3;
- (void)remote_getDefaultForKey:(id)arg1 withHandler:(id)arg2;
- (void)remote_getHealthDirectorySizeInBytesWithCompletion:(id)arg1;
- (void)remote_getHealthLiteValueForKey:(id)arg1 completion:(id)arg2;
- (void)remote_handleAuthorizationForExtensionWithCompletion:(id)arg1;
- (void)remote_hasSourceWithBundleIdentifier:(id)arg1 completion:(id)arg2;
- (void)remote_invalidateActivityAlertSuppressionForIdentifier:(id)arg1 completion:(id)arg2;
- (void)remote_orderedSourcesForObjectType:(id)arg1 completion:(id)arg2;
- (void)remote_performMigrationWithCompletion:(id)arg1;
- (void)remote_proxyForFitnessFriendsServerWithCompletion:(id)arg1;
- (void)remote_proxyForHealthServicesServerWithCompletion:(id)arg1;
- (void)remote_proxyForMedicalIDServerWithCompletion:(id)arg1;
- (void)remote_proxyForNanoSyncServerWithCompletion:(id)arg1;
- (void)remote_proxyForUtilityServerWithCompletion:(id)arg1;
- (void)remote_proxyForWorkoutServerWithCompletion:(id)arg1;
- (void)remote_registerKeepAliveWithIdentifier:(id)arg1 completion:(id)arg2;
- (void)remote_removeDefaultForKey:(id)arg1 withCompletion:(id)arg2;
- (void)remote_requestAuthorizationToShareTypes:(id)arg1 readTypes:(id)arg2 shouldPrompt:(bool)arg3 completion:(id)arg4;
- (void)remote_resetAuthorizationStatusForBundleIdentifier:(id)arg1 completion:(id)arg2;
- (void)remote_resetObjectAuthorizationStatusForBundleIdentifier:(id)arg1 objectType:(id)arg2 completion:(id)arg3;
- (void)remote_resetObjectAuthorizationStatusForObjects:(id)arg1 completion:(id)arg2;
- (void)remote_retrieveAllAuthorizationRecordsForDocumentType:(id)arg1 bundleIdentifier:(id)arg2 completion:(id)arg3;
- (void)remote_saveDataObjects:(id)arg1 handler:(id)arg2;
- (void)remote_saveDataObjects:(id)arg1 transactionIdentifier:(id)arg2 final:(bool)arg3 handler:(id)arg4;
- (void)remote_saveLocationSeriesData:(id)arg1 withSeriesSample:(id)arg2 completion:(id)arg3;
- (void)remote_setAuthorizationStatuses:(id)arg1 forBundleIdentifier:(id)arg2 completion:(id)arg3;
- (void)remote_setBackgroundDeliveryFrequency:(long long)arg1 forDataType:(id)arg2 handler:(id)arg3;
- (void)remote_setCharacteristic:(id)arg1 forDataType:(id)arg2 handler:(id)arg3;
- (void)remote_setDefaultValue:(id)arg1 forKey:(id)arg2 withCompletion:(id)arg3;
- (void)remote_setHealthLiteValue:(id)arg1 forKey:(id)arg2 completion:(id)arg3;
- (void)remote_setObjectAuthorizationStatuses:(id)arg1 forBundleIdentifier:(id)arg2 completion:(id)arg3;
- (void)remote_setPreferredUnit:(id)arg1 forType:(id)arg2 completion:(id)arg3;
- (void)remote_setRequestedAuthorizationForBundleIdentifier:(id)arg1 shareTypes:(id)arg2 readTypes:(id)arg3 prompt:(bool)arg4 completion:(id)arg5;
- (void)remote_splitTotalCalories:(double)arg1 timeInterval:(double)arg2 withCompletion:(id)arg3;
- (void)remote_startQueryWithUUID:(id)arg1 serverDataObject:(id)arg2 queryClass:(Class)arg3 client:(id)arg4 handler:(id)arg5;
- (void)remote_submitMetricsIgnoringAnchor:(bool)arg1 completion:(id)arg2;
- (void)remote_suppressActivityAlertsForIdentifier:(id)arg1 suppressionReason:(long long)arg2 timeoutUntilDate:(id)arg3 completion:(id)arg4;
- (void)remote_unregisterKeepAliveWithIdentifier:(id)arg1 completion:(id)arg2;
- (void)remote_updateOrderedSources:(id)arg1 forObjectType:(id)arg2 completion:(id)arg3;
- (void)remote_weeklySummaryInfoForDate:(id)arg1 withCompletion:(id)arg2;
- (id)serverID;
- (void)setAuthorizationServer:(id)arg1;
- (void)setClient:(id)arg1;
- (void)setClientDebuggingIdentifier:(id)arg1;
- (void)setDataCollectMgr:(id)arg1;
- (void)setFitnessFriendsServer:(id)arg1;
- (void)setHealthServicesServer:(id)arg1;
- (void)setMedicalIDServer:(id)arg1;
- (void)setNanoSyncServer:(id)arg1;
- (void)setServerID:(id)arg1;
- (void)setSubservers:(id)arg1;
- (void)setUtilityServer:(id)arg1;
- (void)setWorkoutServer:(id)arg1;
- (void)start;
- (id)subservers;
- (void)unitPreferencesManagerDidUpdateUnitPreferences:(id)arg1;
- (id)utilityServer;
- (id)workoutServer;

@end
