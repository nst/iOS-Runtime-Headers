/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSCH3DSession : NSObject {
    NSMutableSet * mActiveResourceSet;
    NSMutableSet * mAllResourceSet;
    TSCH3DResourceCache * mCache;
    TSCH3DContext * mContext;
    TSCH3DDocumentDataCache * mDataCache;
    unsigned long long  mFailures;
    bool  mInteractiveCanvas;
    NSCountedSet * mScopeProtectedResourceSet;
    TSCH3DGPUSharegroup * mSharegroup;
    long long  mVirtualScreen;
}

@property (nonatomic, readonly) TSCH3DContext *context;
@property (nonatomic, readonly) TSCH3DDocumentDataCache *dataCache;
@property (nonatomic, readonly) bool hasFailed;
@property (nonatomic, readonly) bool isOneShot;
@property (nonatomic, readonly) bool mustRunOnMainThread;
@property (nonatomic) int performance;
@property (nonatomic, readonly) TSCH3DContext *sharegroupContext;
@property (nonatomic) long long virtualScreen;

- (void)addActiveResource:(id)arg1;
- (void)beginFrameWithSharegroupDelegate:(id)arg1;
- (id)context;
- (id)dataCache;
- (void)dealloc;
- (void)endFrameWithSharegroupDelegate:(id)arg1;
- (void)flushMemoryForResources:(id)arg1;
- (void)flushResources:(id)arg1;
- (void)flushResourcesIfNecessary;
- (void)flushTrackedResources;
- (void)forceFlushResources:(id)arg1;
- (void)garbageCollectAllUnretainedResources;
- (id)handleOfResource:(id)arg1 loader:(id)arg2;
- (bool)hasEnoughFreeMemoryOfBytes:(unsigned long long)arg1;
- (bool)hasFailed;
- (id)init;
- (id)initWithSharegroupToken:(id)arg1 dataCache:(id)arg2;
- (bool)isOneShot;
- (bool)isProtectedResource:(id)arg1;
- (id)loadResource:(id)arg1 reload:(bool)arg2 withLoader:(id)arg3 config:(id)arg4;
- (bool)mustRunOnMainThread;
- (id)p_contextOrNil;
- (void)p_lock;
- (void)p_setContext:(id)arg1;
- (void)p_unlock;
- (int)performance;
- (void)protectResource:(id)arg1 unprotectOnFail:(bool)arg2;
- (void)resetFailures;
- (void)resetTrackingToActiveResources;
- (void)setFailed;
- (void)setIfIsMoreDemandingPerformance:(int)arg1;
- (void)setPerformance:(int)arg1;
- (void)setVirtualScreen:(long long)arg1;
- (id)shaderForShaderContext:(id)arg1 initializeProgramBlock:(id /* block */)arg2;
- (id)sharegroupContext;
- (void)trackResourcesInBlock:(id /* block */)arg1;
- (void)unprotectResource:(id)arg1 clearOnFailProtection:(bool)arg2;
- (long long)virtualScreen;

@end
