/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEODeviceState : PBCodable <NSCopying> {
    GEOCarInfo * _carInfo;
    int  _deviceBatteryState;
    NSString * _deviceCarrierName;
    int  _deviceConnectivity;
    NSString * _deviceCountryCode;
    NSString * _deviceInputLocale;
    int  _deviceInterfaceOrientation;
    NSString * _deviceLocale;
    NSString * _deviceOutputLocale;
    struct { 
        unsigned int deviceBatteryState : 1; 
        unsigned int deviceConnectivity : 1; 
        unsigned int deviceInterfaceOrientation : 1; 
    }  _has;
}

@property (nonatomic, retain) GEOCarInfo *carInfo;
@property (nonatomic) int deviceBatteryState;
@property (nonatomic, retain) NSString *deviceCarrierName;
@property (nonatomic) int deviceConnectivity;
@property (nonatomic, retain) NSString *deviceCountryCode;
@property (nonatomic, retain) NSString *deviceInputLocale;
@property (nonatomic) int deviceInterfaceOrientation;
@property (nonatomic, retain) NSString *deviceLocale;
@property (nonatomic, retain) NSString *deviceOutputLocale;
@property (nonatomic, readonly) bool hasCarInfo;
@property (nonatomic) bool hasDeviceBatteryState;
@property (nonatomic, readonly) bool hasDeviceCarrierName;
@property (nonatomic) bool hasDeviceConnectivity;
@property (nonatomic, readonly) bool hasDeviceCountryCode;
@property (nonatomic, readonly) bool hasDeviceInputLocale;
@property (nonatomic) bool hasDeviceInterfaceOrientation;
@property (nonatomic, readonly) bool hasDeviceLocale;
@property (nonatomic, readonly) bool hasDeviceOutputLocale;

- (int)StringAsDeviceBatteryState:(id)arg1;
- (int)StringAsDeviceConnectivity:(id)arg1;
- (int)StringAsDeviceInterfaceOrientation:(id)arg1;
- (id)carInfo;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (int)deviceBatteryState;
- (id)deviceBatteryStateAsString:(int)arg1;
- (id)deviceCarrierName;
- (int)deviceConnectivity;
- (id)deviceConnectivityAsString:(int)arg1;
- (id)deviceCountryCode;
- (id)deviceInputLocale;
- (int)deviceInterfaceOrientation;
- (id)deviceInterfaceOrientationAsString:(int)arg1;
- (id)deviceLocale;
- (id)deviceOutputLocale;
- (id)dictionaryRepresentation;
- (bool)hasCarInfo;
- (bool)hasDeviceBatteryState;
- (bool)hasDeviceCarrierName;
- (bool)hasDeviceConnectivity;
- (bool)hasDeviceCountryCode;
- (bool)hasDeviceInputLocale;
- (bool)hasDeviceInterfaceOrientation;
- (bool)hasDeviceLocale;
- (bool)hasDeviceOutputLocale;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)setCarInfo:(id)arg1;
- (void)setDeviceBatteryState:(int)arg1;
- (void)setDeviceCarrierName:(id)arg1;
- (void)setDeviceConnectivity:(int)arg1;
- (void)setDeviceCountryCode:(id)arg1;
- (void)setDeviceInputLocale:(id)arg1;
- (void)setDeviceInterfaceOrientation:(int)arg1;
- (void)setDeviceLocale:(id)arg1;
- (void)setDeviceOutputLocale:(id)arg1;
- (void)setHasDeviceBatteryState:(bool)arg1;
- (void)setHasDeviceConnectivity:(bool)arg1;
- (void)setHasDeviceInterfaceOrientation:(bool)arg1;
- (void)writeTo:(id)arg1;

@end
