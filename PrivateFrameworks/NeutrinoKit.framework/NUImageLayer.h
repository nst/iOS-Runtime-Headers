/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NeutrinoKit.framework/NeutrinoKit
 */

@interface NUImageLayer : NUGLLayer {
    NUImageGeometry * __geometry;
    <NUTextureImage> * __image;
    struct CGColor { } * _debugColor;
    bool  _debugTextureDrawing;
    NUGLPipeline * _pipeline;
    NUGLVertexArray * _vertices;
}

@property (retain) NUImageGeometry *_geometry;
@property (retain) <NUTextureImage> *_image;
@property struct CGColor { }*debugColor;
@property (retain) NUImageGeometry *geometry;
@property (retain) <NUTextureImage> *image;

+ (id)fragmentShaderProgram;
+ (id)vertexLayout;
+ (id)vertexShaderProgram;

- (void).cxx_destruct;
- (id)_geometry;
- (id)_image;
- (void)clearBackground:(struct CGColor { }*)arg1 context:(id)arg2;
- (struct CGColor { }*)debugColor;
- (void)draw:(id)arg1;
- (void)drawImage:(id)arg1 region:(id)arg2 context:(id)arg3;
- (void)drawTexture:(id)arg1 inRect:(struct { struct { long long x_1_1_1; long long x_1_1_2; } x1; struct { long long x_2_1_1; long long x_2_1_2; } x2; })arg2 atPoint:(struct { long long x1; long long x2; })arg3 context:(id)arg4;
- (id)geometry;
- (id)image;
- (id)init;
- (void)reset:(id)arg1;
- (void)setDebugColor:(struct CGColor { }*)arg1;
- (void)setGeometry:(id)arg1;
- (void)setImage:(id)arg1;
- (void)set_geometry:(id)arg1;
- (void)set_image:(id)arg1;

@end
