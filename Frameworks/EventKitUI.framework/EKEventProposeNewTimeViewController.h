/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI
 */

@interface EKEventProposeNewTimeViewController : UITableViewController <EKCalendarItemEditItemDelegate, EKEditItemViewControllerDelegate, EKEditItemViewControllerProtocol, EKEventDateEditItemDelegate, EKUIEventStatusButtonsViewDelegate, UITableViewDataSource, UITableViewDelegate> {
    EKUIInviteesViewAllInviteesCanAttendSection * _allInviteesCanAttendSection;
    EKInviteeAlternativeTimeSearcher * _availabilitySearcher;
    EKEvent * _event;
    EKUIInviteesViewOriginalConflictSection * _originalConflictSection;
    NSDate * _originalDate;
    EKEventDateEditItem * _proposeTimeItem;
    NSDate * _proposedStartDate;
    bool  _resetConflictResolutionSections;
    NSArray * _sections;
    NSDate * _selectedEndDate;
    NSDate * _selectedStartDate;
    EKUIInviteesViewSomeInviteesCanAttendSection * _someInviteesCanAttendSection;
    SingleToolbarItemContainerView * _statusButtonsContainerView;
    EKUIEventStatusButtonsView * _statusButtonsView;
    double  _statusButtonsViewCachedFontSize;
    bool  _viewIsVisible;
}

@property (nonatomic, retain) EKUIInviteesViewAllInviteesCanAttendSection *allInviteesCanAttendSection;
@property (nonatomic, retain) EKInviteeAlternativeTimeSearcher *availabilitySearcher;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) <EKEditItemViewControllerDelegate> *editDelegate;
@property (nonatomic) bool editItemShouldBeAskedForInjectableViewController;
@property (nonatomic, retain) EKEvent *event;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) EKUIInviteesViewOriginalConflictSection *originalConflictSection;
@property (nonatomic, retain) NSDate *originalDate;
@property (nonatomic) bool presentModally;
@property (nonatomic, retain) EKEventDateEditItem *proposeTimeItem;
@property (nonatomic, retain) NSDate *proposedStartDate;
@property (nonatomic) bool resetConflictResolutionSections;
@property (nonatomic, retain) NSArray *sections;
@property (nonatomic, readonly) NSDate *selectedEndDate;
@property (nonatomic, readonly) NSDate *selectedStartDate;
@property (nonatomic, retain) EKUIInviteesViewSomeInviteesCanAttendSection *someInviteesCanAttendSection;
@property (nonatomic, retain) SingleToolbarItemContainerView *statusButtonsContainerView;
@property (nonatomic, retain) EKUIEventStatusButtonsView *statusButtonsView;
@property (nonatomic) double statusButtonsViewCachedFontSize;
@property (readonly) Class superclass;
@property (nonatomic) bool useCustomBackButton;
@property (nonatomic) bool viewIsVisible;

+ (id)_participantsInArray:(id)arg1 thatAreNotInArray:(id)arg2;

- (void).cxx_destruct;
- (id)_attendeesWithoutOrganizerAndLocations;
- (void)_dismiss:(id)arg1;
- (void)_dismissPresentedViewControllerAnimated:(bool)arg1;
- (void)_eventModified:(id)arg1;
- (void)_fontSizeDefinitionsChanged:(id)arg1;
- (long long)_indexForSection:(id)arg1;
- (void)_presentViewController:(id)arg1;
- (void)_refreshIfNeeded;
- (void)_searcherStateChanged:(long long)arg1;
- (id)_sectionForIndex:(unsigned long long)arg1;
- (id)_statusButtons;
- (void)_updateStatusButtons;
- (id)_viewControllerForPresentingViewControllers;
- (id)allInviteesCanAttendSection;
- (id)availabilitySearcher;
- (void)dateChangedTo:(id)arg1;
- (void)dealloc;
- (id)defaultAlertTitleForEditItem:(id)arg1;
- (void)editItem:(id)arg1 wantsDoneButtonDisabled:(bool)arg2;
- (void)editItem:(id)arg1 wantsRowInsertions:(id)arg2 rowDeletions:(id)arg3;
- (void)editItem:(id)arg1 wantsRowInsertions:(id)arg2 rowDeletions:(id)arg3 rowReloads:(id)arg4;
- (void)editItem:(id)arg1 wantsRowReload:(id)arg2;
- (void)editItem:(id)arg1 wantsRowsScrolledToVisible:(id)arg2;
- (void)editItemViewController:(id)arg1 didCompleteWithAction:(int)arg2;
- (bool)editItemViewControllerShouldShowDetachAlert;
- (id)event;
- (void)eventStatusButtonsView:(id)arg1 calculatedFontSizeToFit:(double)arg2;
- (void)eventStatusButtonsView:(id)arg1 didSelectAction:(long long)arg2;
- (double)eventStatusButtonsViewButtonFontSize:(id)arg1;
- (id)initWithEvent:(id)arg1;
- (void)loadView;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)originalConflictSection;
- (id)originalDate;
- (id)proposeTimeItem;
- (id)proposedStartDate;
- (bool)proposedTimeChanged;
- (bool)resetConflictResolutionSections;
- (id)sections;
- (id)selectedEndDate;
- (id)selectedStartDate;
- (void)setAllInviteesCanAttendSection:(id)arg1;
- (void)setAvailabilitySearcher:(id)arg1;
- (void)setEvent:(id)arg1;
- (void)setOriginalConflictSection:(id)arg1;
- (void)setOriginalDate:(id)arg1;
- (void)setProposeTimeItem:(id)arg1;
- (void)setProposedStartDate:(id)arg1;
- (void)setResetConflictResolutionSections:(bool)arg1;
- (void)setSections:(id)arg1;
- (void)setSomeInviteesCanAttendSection:(id)arg1;
- (void)setStatusButtonsContainerView:(id)arg1;
- (void)setStatusButtonsView:(id)arg1;
- (void)setStatusButtonsViewCachedFontSize:(double)arg1;
- (void)setViewIsVisible:(bool)arg1;
- (id)someInviteesCanAttendSection;
- (id)statusButtonsContainerView;
- (id)statusButtonsView;
- (double)statusButtonsViewCachedFontSize;
- (unsigned long long)supportedInterfaceOrientations;
- (bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didDeselectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateCheckmark;
- (void)updateCustomBackButton;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLoad;
- (bool)viewIsVisible;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;

@end
