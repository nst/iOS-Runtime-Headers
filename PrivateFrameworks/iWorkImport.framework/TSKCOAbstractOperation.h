/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSKCOAbstractOperation : NSObject {
    struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { 
        struct UUIDData<TSP::UUIDData> {} *__begin_; 
        struct UUIDData<TSP::UUIDData> {} *__end_; 
        struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { 
            struct UUIDData<TSP::UUIDData> {} *__value_; 
        } __end_cap_; 
    }  _address;
    bool  _noop;
}

@property (nonatomic, readonly) const /* Warning: unhandled struct encoding: '{vector<TSU::UUIDData<TSP::UUIDData>' */ struct *UUIDAddress; /* unknown property attribute:  std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >=^{UUIDData<TSP::UUIDData>}}} */
@property (nonatomic, readonly) TSUUUIDPath *UUIDPath;
@property (nonatomic, readonly) bool isNoop;
@property (nonatomic, readonly) NSString *toString;

+ (id)newObjectForUnarchiver:(id)arg1 message:(const struct Message { int (**x1)(); }*)arg2;

- (id).cxx_construct;
- (void).cxx_destruct;
- (const struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; }*)UUIDAddress;
- (id)UUIDPath;
- (id)description;
- (unsigned long long)hash;
- (id)initWithAddress:(const struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; }*)arg1 noop:(bool)arg2;
- (id)initWithUnarchiver:(id)arg1 message:(const struct Operation { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_4_1_1; } x4; struct RepeatedField<unsigned long long> { int x_5_1_1; int x_5_1_2; union Pointer { struct Arena {} *x_3_2_1; struct Rep {} *x_3_2_2; } x_5_1_3; } x5; int x6; struct RepeatedField<unsigned int> { int x_7_1_1; int x_7_1_2; union Pointer { struct Arena {} *x_3_2_1; struct Rep {} *x_3_2_2; } x_7_1_3; } x7; int x8; bool x9; bool x10; bool x11; unsigned int x12; int x13; int x14; unsigned long long x15; int x16; unsigned int x17; int x18; int x19; }*)arg2;
- (bool)isEqual:(id)arg1;
- (bool)isNoop;
- (struct shared_ptr<TSKCO::AbstractOperation> { struct AbstractOperation {} *x1; struct __shared_weak_count {} *x2; })newTransformableOperation;
- (void)populateAddressFromIdentifier:(const struct RepeatedField<unsigned long long> { int x1; int x2; union Pointer { struct Arena {} *x_3_1_1; struct Rep {} *x_3_1_2; } x3; }*)arg1;
- (void)populateRangeVector:(struct vector<_NSRange, std::__1::allocator<_NSRange> > { struct _NSRange {} *x1; struct _NSRange {} *x2; struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange> > { struct _NSRange {} *x_3_1_1; } x3; }*)arg1 fromRangeList:(const struct RepeatedField<unsigned int> { int x1; int x2; union Pointer { struct Arena {} *x_3_1_1; struct Rep {} *x_3_1_2; } x3; }*)arg2;
- (void)saveAddress:(const struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; }*)arg1 identifier:(struct RepeatedField<unsigned long long> { int x1; int x2; union Pointer { struct Arena {} *x_3_1_1; struct Rep {} *x_3_1_2; } x3; }*)arg2;
- (void)saveRangeVector:(struct vector<_NSRange, std::__1::allocator<_NSRange> > { struct _NSRange {} *x1; struct _NSRange {} *x2; struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange> > { struct _NSRange {} *x_3_1_1; } x3; }*)arg1 rangeList:(struct RepeatedField<unsigned int> { int x1; int x2; union Pointer { struct Arena {} *x_3_1_1; struct Rep {} *x_3_1_2; } x3; }*)arg2;
- (void)saveToArchiver:(id)arg1 message:(struct Operation { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_4_1_1; } x4; struct RepeatedField<unsigned long long> { int x_5_1_1; int x_5_1_2; union Pointer { struct Arena {} *x_3_2_1; struct Rep {} *x_3_2_2; } x_5_1_3; } x5; int x6; struct RepeatedField<unsigned int> { int x_7_1_1; int x_7_1_2; union Pointer { struct Arena {} *x_3_2_1; struct Rep {} *x_3_2_2; } x_7_1_3; } x7; int x8; bool x9; bool x10; bool x11; unsigned int x12; int x13; int x14; unsigned long long x15; int x16; unsigned int x17; int x18; int x19; }*)arg2;
- (id)toString;

@end
