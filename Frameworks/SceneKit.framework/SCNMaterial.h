/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SceneKit.framework/SceneKit
 */

@interface SCNMaterial : NSObject <NSCopying, NSSecureCoding, SCNAnimatable, SCNShadable> {
    SCNMaterialProperty * _ambient;
    SCNMaterialProperty * _ambientOcclusion;
    SCNOrderedDictionary * _animations;
    bool  _avoidsOverLighting;
    long long  _blendMode;
    long long  _cullMode;
    SCNMaterialProperty * _diffuse;
    bool  _doubleSided;
    SCNMaterialProperty * _emission;
    long long  _fillMode;
    float  _fresnelExponent;
    float  _indexOfRefraction;
    bool  _isPresentationInstance;
    NSString * _lightingModelName;
    bool  _litPerPixel;
    bool  _locksAmbientWithDiffuse;
    struct __C3DMaterial { } * _material;
    SCNMaterialProperty * _metalness;
    SCNMaterialProperty * _multiply;
    NSString * _name;
    SCNMaterialProperty * _normal;
    bool  _readsFromDepthBuffer;
    SCNMaterialProperty * _reflective;
    SCNMaterialProperty * _roughness;
    SCNMaterialProperty * _selfIllumination;
    float  _selfIlluminationOcclusion;
    SCNShadableHelper * _shadableHelper;
    float  _shininess;
    SCNMaterialProperty * _specular;
    float  _transparency;
    long long  _transparencyMode;
    SCNMaterialProperty * _transparent;
    NSMutableDictionary * _valuesForUndefinedKeys;
    bool  _writesToDepthBuffer;
}

@property (nonatomic, readonly) SCNMaterialProperty *ambient;
@property (nonatomic, readonly) SCNMaterialProperty *ambientOcclusion;
@property (readonly) NSArray *animationKeys;
@property (nonatomic) long long blendMode;
@property (nonatomic) long long cullMode;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) SCNMaterialProperty *diffuse;
@property (getter=isDoubleSided, nonatomic) bool doubleSided;
@property (nonatomic, readonly) SCNMaterialProperty *emission;
@property (nonatomic) double fresnelExponent;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSString *lightingModelName;
@property (getter=isLitPerPixel, nonatomic) bool litPerPixel;
@property (nonatomic) bool locksAmbientWithDiffuse;
@property (nonatomic, readonly) SCNMaterialProperty *metalness;
@property (nonatomic, readonly) SCNMaterialProperty *multiply;
@property (nonatomic, copy) NSString *name;
@property (nonatomic, readonly) SCNMaterialProperty *normal;
@property (nonatomic, retain) SCNProgram *program;
@property (nonatomic) bool readsFromDepthBuffer;
@property (nonatomic, readonly) SCNMaterialProperty *reflective;
@property (nonatomic, readonly) SCNMaterialProperty *roughness;
@property (nonatomic, readonly) SCNMaterialProperty *selfIllumination;
@property (nonatomic, copy) NSDictionary *shaderModifiers;
@property (nonatomic) double shininess;
@property (nonatomic, readonly) SCNMaterialProperty *specular;
@property (readonly) Class superclass;
@property (nonatomic) double transparency;
@property (nonatomic) long long transparencyMode;
@property (nonatomic, readonly) SCNMaterialProperty *transparent;
@property (nonatomic) bool writesToDepthBuffer;

+ (bool)accessInstanceVariablesDirectly;
+ (id)material;
+ (id)materialNamed:(id)arg1;
+ (id)materialWithColor:(id)arg1;
+ (id)materialWithContents:(id)arg1;
+ (id)materialWithMDLMaterial:(id)arg1;
+ (id)materialWithMaterialRef:(struct __C3DMaterial { }*)arg1;
+ (bool)resolveInstanceMethod:(SEL)arg1;
+ (bool)supportsSecureCoding;

- (const void*)__CFObject;
- (bool)__removeAnimation:(id)arg1 forKey:(id)arg2;
- (void)_customDecodingOfSCNMaterial:(id)arg1;
- (void)_customEncodingOfSCNMaterial:(id)arg1;
- (id)_integrateModelKitComputedMaps:(id)arg1 withGeometry:(id)arg2 node:(id)arg3 texturePathProvider:(id)arg4 vertexAttributeNamed:(id)arg5 materialPropertyNamed:(id)arg6 filePath:(id)arg7;
- (Class)_materialPropertyClass;
- (void)_pauseAnimation:(bool)arg1 forKey:(id)arg2;
- (id)_property:(id*)arg1;
- (void)_setAttributes:(id)arg1;
- (void)_setupMaterialProperty:(id*)arg1;
- (void)_setupShadableHelperIfNeeded;
- (void)_syncEntityObjCModel;
- (void)_syncObjCAnimations;
- (void)_syncObjCModel;
- (void)addAnimation:(id)arg1;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;
- (id)ambient;
- (id)ambientOcclusion;
- (id)animationForKey:(id)arg1;
- (id)animationKeys;
- (struct __C3DAnimationManager { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned char x_1_1_2[4]; unsigned int x_1_1_3; } x1; struct __C3DModelValueStorage {} *x2; struct __CFDictionary {} *x3; struct __CFDictionary {} *x4; struct __CFSet {} *x5; struct __CFArray {} *x6; struct __CFArray {} *x7; bool x8; bool x9; bool x10; struct _C3DAnimationPendingEvent {} *x11; struct __C3DAllocator {} *x12; struct __CFDictionary {} *x13; struct __CFArray {} *x14; double x15; double x16; double x17; struct _opaque_pthread_mutex_t { long long x_18_1_1; BOOL x_18_1_2[56]; } x18; int x19; int x20; int x21; int x22; }*)animationManager;
- (bool)avoidsOverLighting;
- (void)bindAnimatablePath:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (long long)blendMode;
- (id)color;
- (struct __C3DEffectCommonProfile { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned char x_1_1_2[4]; unsigned int x_1_1_3; } x1; struct __C3DMaterial {} *x2; int x3; struct __C3DEffectSlot {} *x4; struct __C3DEffectSlot {} *x5; struct __C3DEffectSlot {} *x6; struct __C3DEffectSlot {} *x7; struct __C3DEffectSlot {} *x8; struct __C3DEffectSlot {} *x9; struct __C3DEffectSlot {} *x10; struct __C3DEffectSlot {} *x11; struct __C3DEffectSlot {} *x12; struct __C3DEffectSlot {} *x13; struct __C3DEffectSlot {} *x14; struct __C3DEffectSlot {} *x15; float x16; float x17; float x18; float x19; float x20; BOOL x21; long long x22; bool x23; bool x24; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 1; unsigned int x31 : 1; unsigned int x32 : 1; unsigned int x33 : 1; unsigned int x34 : 13; }*)commonProfile;
- (id)content;
- (id)contents;
- (id)copy;
- (struct __C3DAnimationChannel { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned char x_1_1_2[4]; unsigned int x_1_1_3; } x1; struct __C3DAnimation {} *x2; struct __CFArray {} *x3; void *x4; struct __C3DModelTarget {} *x5; struct __CFString {} *x6; }*)copyAnimationChannelForKeyPath:(id)arg1 animation:(id)arg2;
- (struct __C3DAnimationChannel { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned char x_1_1_2[4]; unsigned int x_1_1_3; } x1; struct __C3DAnimation {} *x2; struct __CFArray {} *x3; void *x4; struct __C3DModelTarget {} *x5; struct __CFString {} *x6; }*)copyAnimationChannelForKeyPath:(id)arg1 property:(id)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (long long)cullMode;
- (void)dealloc;
- (id)debugQuickLookData;
- (id)debugQuickLookObject;
- (id)description;
- (id)diffuse;
- (id)emission;
- (void)encodeWithCoder:(id)arg1;
- (long long)fillMode;
- (double)fresnelExponent;
- (void)handleBindingOfSymbol:(id)arg1 usingBlock:(id)arg2;
- (void)handleUnbindingOfSymbol:(id)arg1 usingBlock:(id)arg2;
- (id)identifier;
- (double)indexOfRefraction;
- (id)init;
- (id)initPresentationMaterialWithMaterialRef:(struct __C3DMaterial { }*)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithMaterialRef:(struct __C3DMaterial { }*)arg1;
- (bool)isAnimationForKeyPaused:(id)arg1;
- (bool)isDoubleSided;
- (bool)isLitPerPixel;
- (bool)isPausedOrPausedByInheritance;
- (id)lightingModelName;
- (bool)locksAmbientWithDiffuse;
- (struct __C3DMaterial { }*)materialRef;
- (struct __C3DMaterial { }*)materialRefCreateIfNeeded;
- (id)metalness;
- (id)multiply;
- (id)name;
- (id)normal;
- (void)pauseAnimationForKey:(id)arg1;
- (id)presentationInstance;
- (id)presentationMaterial;
- (id)program;
- (id)properties;
- (bool)readsFromDepthBuffer;
- (id)reflective;
- (void)removeAllAnimations;
- (void)removeAnimationForKey:(id)arg1;
- (void)removeAnimationForKey:(id)arg1 fadeOutDuration:(double)arg2;
- (void)resumeAnimationForKey:(id)arg1;
- (id)roughness;
- (id)scene;
- (struct __C3DScene { }*)sceneRef;
- (id)selfIllumination;
- (double)selfIlluminationOcclusion;
- (void)setAvoidsOverLighting:(bool)arg1;
- (void)setBlendMode:(long long)arg1;
- (void)setColor:(id)arg1;
- (void)setContent:(id)arg1;
- (void)setContents:(id)arg1;
- (void)setCullMode:(long long)arg1;
- (void)setDoubleSided:(bool)arg1;
- (void)setFillMode:(long long)arg1;
- (void)setFresnelExponent:(double)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setIndexOfRefraction:(double)arg1;
- (void)setLightingModelName:(id)arg1;
- (void)setLitPerPixel:(bool)arg1;
- (void)setLocksAmbientWithDiffuse:(bool)arg1;
- (void)setName:(id)arg1;
- (void)setProgram:(id)arg1;
- (void)setReadsFromDepthBuffer:(bool)arg1;
- (void)setSelfIlluminationOcclusion:(double)arg1;
- (void)setShaderModifiers:(id)arg1;
- (void)setShininess:(double)arg1;
- (void)setSpeed:(double)arg1 forAnimationKey:(id)arg2;
- (void)setTransparency:(double)arg1;
- (void)setTransparencyMode:(long long)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setWritesToDepthBuffer:(bool)arg1;
- (id)shaderModifiers;
- (double)shininess;
- (id)specular;
- (double)transparency;
- (long long)transparencyMode;
- (id)transparent;
- (void)unbindAnimatablePath:(id)arg1;
- (id)valueForUndefinedKey:(id)arg1;
- (bool)writesToDepthBuffer;

@end
