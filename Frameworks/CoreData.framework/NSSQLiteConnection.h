/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreData.framework/CoreData
 */

@interface NSSQLiteConnection : NSObject {
    NSMutableArray * _activeGenerations;
    NSSQLiteStatement * _beginStatement;
    struct __CFDictionary { } * _cachedEntityConstrainedValuesUpdateStatements;
    struct __CFDictionary { } * _cachedEntityUpdateStatements;
    NSArray * _columnsToFetch;
    NSSQLiteStatement * _commitStatement;
    struct sqlite3 { } * _db;
    NSString * _dbPath;
    NSString * _dbPathRegisteredWithBackupd;
    unsigned long long  _debugInode;
    void * _extraBuffersForRegisteredFunctions;
    struct sqlite3_stmt { } * _fetchPKStatement;
    NSSQLEntity * _finalEntity;
    NSSQLEntity * _lastEntity;
    unsigned int  _lastEntityKey;
    NSMutableSet * _mObjectIDsUpdatedByTriggers;
    NSArray * _metadataColumns;
    NSMutableDictionary * _pragmaSettings;
    NSSQLitePrefetchRequestCache * _prefetchRequestCache;
    NSObject<OS_dispatch_queue> * _queue;
    NSSQLiteStatement * _rollbackStatement;
    int  _rowsProcessedCount;
    NSSQLCore * _sqlCore;
    NSSQLiteStatement * _sqlStatement;
    struct __sqliteConnectionFlags { 
        unsigned int _readyToBind : 1; 
        unsigned int _fetchInProgress : 1; 
        unsigned int _fileSystemType : 2; 
        unsigned int _proxyLocking : 1; 
        unsigned int _vacuumSetupNeeded : 1; 
        unsigned int _usingWAL : 1; 
        unsigned int _disallowReconnect : 1; 
        unsigned int _isWriter : 1; 
        unsigned int _reserved : 23; 
    }  _sqliteConnectionFlags;
    struct __CFDictionary { } * _statementCachesByEntity;
    NSMutableArray * _temporaryTables;
    double  _timeOutIncrement;
    double  _timeOutOption;
    bool  _transactionIsOpen;
    struct sqlite3_stmt { } * _updatePKStatement;
    bool  _useSyntaxColoredLogging;
    long long  _vacuumTracker;
    NSMutableSet * _vmCachedStatements;
    struct sqlite3_stmt { } * _vmstatement;
    NSURL * _workingURL;
}

@property (nonatomic) bool isWriter;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;

+ (void)__INode_Changed_AllThatIsLeftToUsIsHonor__;
+ (const char *)_databaseOpenURLStringForURL:(id)arg1;
+ (bool)_destroyPersistentStoreAtURL:(id)arg1 options:(id)arg2 error:(id*)arg3;
+ (bool)_replacePersistentStoreAtURL:(id)arg1 destinationOptions:(id)arg2 withPersistentStoreFromURL:(id)arg3 sourceOptions:(id)arg4 error:(id*)arg5;
+ (void)_setDebugFlags:(int)arg1;
+ (void)initialize;
+ (int)openAtPath:(const char *)arg1 handle:(struct sqlite3 {}**)arg2 flags:(int)arg3 module:(const char *)arg4;
+ (int)readMagicWordFromPath:(const char *)arg1;

- (id)_beginPowerAssertionWithAssert:(unsigned long long*)arg1;
- (void)_bindVariablesForConstrainedValuesWithRow:(id)arg1;
- (void)_bindVariablesWithDeletedRow:(id)arg1;
- (void)_bindVariablesWithInsertedRow:(id)arg1;
- (void)_bindVariablesWithUpdatedRow:(id)arg1 andOriginalRow:(id)arg2 forDeltasMask:(struct __CFBitVector { }*)arg3;
- (void**)_buffersForRegisteredFunctions;
- (void)_clearBindVariablesForConstrainedValuesUpdateStatement:(id)arg1;
- (void)_clearBindVariablesForInsertedRow;
- (void)_clearBindVariablesForUpdateStatement:(id)arg1 forDeltasMask:(struct __CFBitVector { }*)arg2;
- (void)_clearCachedStatements;
- (void)_clearOtherStatements;
- (void)_clearTransactionCaches;
- (id)_compressedDataWithModel:(id)arg1;
- (void)_configureAutoVacuum;
- (void)_configureIntegrityCheck;
- (void)_configurePageSize;
- (void)_configurePragmaOptions:(int)arg1 createdSchema:(bool)arg2;
- (void)_configureSynchronousMode;
- (id)_currentQueryGenerationIdentifier:(id*)arg1;
- (id)_decompressedModelWithData:(id)arg1;
- (void)_endFetch;
- (void)_endPowerAssertionWithAssert:(unsigned long long)arg1 andApp:(id)arg2;
- (void)_ensureDatabaseOpen;
- (void)_ensureNoFetchInProgress;
- (void)_ensureNoStatementPrepared;
- (void)_ensureNoTransactionOpen;
- (void)_ensureWalFileExists;
- (void)_executeSQLString:(id)arg1;
- (long long)_fetchMaxPrimaryKeyForEntity:(id)arg1;
- (void)_finalizeStatement;
- (void)_forceDisconnectOnError;
- (void)_freeQueryGenerationIdentifier:(id)arg1;
- (long long)_getCurrentAutoVacuumValue;
- (bool)_hasTableWithName:(id)arg1;
- (bool)_isQueryGenerationTrackingConnection;
- (id)_newValueForColumn:(id)arg1 atIndex:(unsigned int)arg2 inStatement:(struct sqlite3_stmt { }*)arg3;
- (void)_performPostSaveTasks;
- (void)_registerExtraFunctions;
- (void)_restoreBusyTimeOutSettings;
- (int)_rowsChangedByLastExecute;
- (void)_setupVacuumIfNecessary;
- (struct sqlite3_stmt { }*)_vmstatement;
- (id)adapter;
- (void)addPeerRange:(id)arg1;
- (void)addPeerRangeForPeerID:(id)arg1 entityName:(id)arg2 rangeStart:(id)arg3 rangeEnd:(id)arg4 peerRangeStart:(id)arg5 peerRangeEnd:(id)arg6;
- (void)addVMCachedStatement:(id)arg1;
- (void)adoptQueryGenerationIdentifier:(id)arg1;
- (id)allPeerRanges;
- (void)beginReadTransaction;
- (void)beginTransaction;
- (void)bindTempTableForBindIntarray:(id)arg1;
- (void)bindTempTablesForStatementIfNecessary:(id)arg1;
- (void)cacheCurrentDBStatementOn:(id)arg1;
- (void)cacheUpdateConstrainedValuesStatement:(id)arg1 forEntity:(id)arg2;
- (void)cacheUpdateStatement:(id)arg1 forEntity:(id)arg2 andDeltasMask:(struct __CFBitVector { }*)arg3;
- (id)cachedUpdateConstrainedValuesStatmentForEntity:(id)arg1;
- (id)cachedUpdateStatementForEntity:(id)arg1 andDeltasMask:(struct __CFBitVector { }*)arg2;
- (bool)canConnect;
- (void)clearObjectIDsUpdatedByTriggers;
- (id)columnsToFetch;
- (void)commitTransaction;
- (void)configureUbiquityMetadataTable;
- (void)connect;
- (id)connectionManager;
- (void)createCachedModelTable;
- (void)createIndexesForEntity:(id)arg1;
- (void)createManyToManyTablesForEntity:(id)arg1;
- (id)createMapOfEntityNameToPKMaxForEntities:(id)arg1;
- (id)createMapOfEntityNameToPKMaxForEntitiesFromPKTable:(id)arg1;
- (id)createMapOfEntityNameToPKMaxForEntitiesFromUBRangeTable:(id)arg1;
- (void)createMetadata;
- (void)createPrimaryKeyTableForModel:(id)arg1 knownEmpty:(bool)arg2;
- (void)createSchema;
- (id)createSetOfObjectIDsUpdatedByTriggers;
- (void)createTableForEntity:(id)arg1;
- (void)createTablesForEntities:(id)arg1;
- (void)createTriggersForEntities:(id)arg1;
- (id)currentQueryGenerationIdentifier;
- (bool)databaseIsEmpty;
- (void)dealloc;
- (bool)deleteRow:(id)arg1 forRequestContext:(id)arg2;
- (void)didCreateSchema;
- (void)disconnect;
- (void)dropUbiquityTables;
- (void)endFetchAndRecycleStatement:(bool)arg1;
- (void)execute;
- (id)executeAttributeUniquenessCheckSQLStatement:(id)arg1 returningColumns:(id)arg2;
- (void)executeCorrelationChangesForValue1:(unsigned long long)arg1 value2:(unsigned long long)arg2 value3:(unsigned long long)arg3 value4:(unsigned long long)arg4;
- (id)executeMulticolumnUniquenessCheckSQLStatement:(id)arg1 returningColumns:(id)arg2;
- (id)fetchCachedModel;
- (long long)fetchMaxPrimaryKeyForEntity:(id)arg1;
- (id)fetchMetadata;
- (int)fetchResultSet:(void*)arg1 usingFetchPlan:(id)arg2;
- (id)fetchTableCreationSQL;
- (id)fetchTableNames;
- (id)fetchUbiquityKnowledgeVector;
- (void)forceTransactionClosed;
- (void)freeQueryGenerationWithIdentifier:(id)arg1;
- (long long)generatePrimaryKeysForEntity:(id)arg1 batch:(unsigned int)arg2;
- (void)handleCorruptedDB:(id)arg1;
- (bool)hasCachedModelTable;
- (bool)hasMetadataTable;
- (bool)hasOpenTransaction;
- (bool)hasPrimaryKeyTable;
- (id)initAsQueryGenerationTrackingConnectionForSQLCore:(id)arg1;
- (id)initForSQLCore:(id)arg1;
- (void)insertRow:(id)arg1;
- (bool)isFetchInProgress;
- (bool)isLocalFS;
- (bool)isOpen;
- (bool)isWriter;
- (id)metadataColumns;
- (id)newFetchUUIDSForSubentitiesRootedAt:(id)arg1;
- (id)newFetchedArray;
- (void)performAndWait:(id)arg1;
- (bool)performIntegrityCheck;
- (id)prefetchRequestCache;
- (void)prepareAndExecuteSQLStatement:(id)arg1;
- (void)prepareSQLStatement:(id)arg1;
- (id)queue;
- (struct __CFArray { }*)rawIntegerRowsForSQL:(id)arg1;
- (void)recreateIndices;
- (void)registerCurrentQueryGenerationWithStore:(id)arg1;
- (void)registerCurrentQueryGenerationWithStore:(id)arg1 retries:(unsigned long long)arg2;
- (bool)registerNewQueryGenerationIdentifier:(id)arg1;
- (void)releaseSQLStatement;
- (void)replaceUbiquityKnowledgeVector:(id)arg1;
- (void)resetSQLStatement;
- (void)rollbackTransaction;
- (int)rowsChangedByLastStatement;
- (void)saveCachedModel:(id)arg1;
- (void)saveMetadata:(id)arg1;
- (bool)selectCountWithStatement:(id)arg1;
- (void)selectRowsWithStatement:(id)arg1 cached:(bool)arg2;
- (void)setColumnsToFetch:(id)arg1;
- (void)setExclusiveLockingMode:(bool)arg1;
- (void)setIsWriter:(bool)arg1;
- (void)setUbiquityTableValue:(id)arg1 forKey:(id)arg2;
- (id)sqlStatement;
- (id)statementCacheForEntity:(id)arg1;
- (void)transactionDidBegin;
- (void)transactionDidCommit;
- (void)transactionDidRollback;
- (void)triggerUpdatedRowInTable:(id)arg1 withEntityID:(long long)arg2 primaryKey:(long long)arg3 columnName:(id)arg4 newValue:(long long)arg5;
- (id)ubiquityTableKeysAndValues;
- (id)ubiquityTableValueForKey:(id)arg1;
- (void)uncacheVMStatement:(id)arg1;
- (void)updateConstrainedValuesForRow:(id)arg1;
- (void)updateRow:(id)arg1 forRequestContext:(id)arg2;
- (void)updateUbiquityKnowledgeForPeerWithID:(id)arg1 andTransactionNumber:(id)arg2;
- (void)updateUbiquityKnowledgeVector:(id)arg1;
- (void)willCreateSchema;
- (void)writeCorrelationChangesFromTracker:(id)arg1;
- (void)writeCorrelationDeletesFromTracker:(id)arg1;
- (void)writeCorrelationInsertsFromTracker:(id)arg1;
- (void)writeCorrelationMasterReordersFromTracker:(id)arg1;
- (void)writeCorrelationReordersFromTracker:(id)arg1;

@end
