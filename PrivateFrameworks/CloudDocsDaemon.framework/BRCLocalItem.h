/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon
 */

@interface BRCLocalItem : NSObject <BRCItem, BRCJobsMatching, BRCSyncThrottleItemProtocol> {
    BRCAppLibrary * _appLibrary;
    BRCClientZone * _clientZone;
    BRCPQLConnection * _db;
    unsigned long long  _dbRowID;
    bool  _forceDelete;
    bool  _forceDeletedAlready;
    bool  _forceNotif;
    NSNumber * _isInDocumentScope;
    bool  _isUserVisible;
    BRCItemID * _itemID;
    NSNumber * _knownByServer;
    unsigned long long  _localDiffs;
    NSNumber * _minimumSupportedOSRowID;
    unsigned long long  _notifsRank;
    BRCLocalItem * _orig;
    NSNumber * _ownerKey;
    NSNumber * _parentFileID;
    BRCZoneRowID * _parentZoneRowID;
    NSString * _path;
    bool  _resolvedPath;
    id  _serverPathMatchID;
    BRCServerZone * _serverZone;
    BRCAccountSession * _session;
    unsigned long long  _sharingOptions;
    BRCLocalStatInfo * _st;
    unsigned int  _syncUpState;
}

@property (nonatomic, retain) BRCAppLibrary *appLibrary;
@property (nonatomic, readonly) NSString *appLibraryID;
@property (nonatomic, readonly) BRCAliasItem *asBRAlias;
@property (nonatomic, readonly) BRCDirectoryItem *asDirectory;
@property (nonatomic, readonly) BRCDocumentItem *asDocument;
@property (nonatomic, readonly) BRCDirectoryItem<BRCFSRooted> *asFSRoot;
@property (nonatomic, readonly) BRCFinderBookmarkItem *asFinderBookmark;
@property (nonatomic, readonly) BRCShareAcceptationFault *asShareAcceptationFault;
@property (nonatomic, readonly) BRCLocalItem<BRCTopLevelShareable> *asShareableItem;
@property (nonatomic, readonly) BRCLocalItem<BRCSharedToMeTopLevel> *asSharedToMeTopLevelItem;
@property (nonatomic, readonly) BRCSymlinkItem *asSymlink;
@property (nonatomic, readonly) NSString *bookmarkData;
@property (nonatomic, readonly) BRCClientZone *clientZone;
@property (nonatomic, readonly) BRCPQLConnection *db;
@property (nonatomic, readonly) unsigned long long dbRowID;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSString *digestDescription;
@property (nonatomic, readonly) NSString *extension;
@property (nonatomic, readonly) NSNumber *fileID;
@property (nonatomic, readonly) bool fromReadOnlyDB;
@property (nonatomic, readonly) bool hasShareIDAndIsOwnedByMe;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isAlmostDead;
@property (nonatomic, readonly) bool isBRAlias;
@property (nonatomic, readonly) bool isDead;
@property (nonatomic, readonly) bool isDeadOrMissingInServerTruth;
@property (nonatomic, readonly) bool isDirectory;
@property (nonatomic, readonly) bool isDirectoryWithPackageName;
@property (nonatomic, readonly) bool isDocument;
@property (nonatomic, readonly) bool isFSRoot;
@property (nonatomic, readonly) bool isFault;
@property (nonatomic, readonly) bool isFinderBookmark;
@property (nonatomic, readonly) bool isFromInitialScan;
@property (nonatomic, readonly) bool isIdleOrRejected;
@property (nonatomic, readonly) bool isInDataScope;
@property (nonatomic, readonly) bool isInDocumentOrTrashScope;
@property (nonatomic, readonly) bool isInDocumentScope;
@property (nonatomic, readonly) bool isInTrashScope;
@property (nonatomic, readonly) bool isKnownByServer;
@property (nonatomic, readonly) bool isKnownByServerOrInFlight;
@property (nonatomic, readonly) bool isLive;
@property (nonatomic, readonly) bool isLost;
@property (nonatomic, readonly) bool isOnDisk;
@property (nonatomic, readonly) bool isOwnedByMe;
@property (nonatomic, readonly) bool isPackage;
@property (nonatomic, readonly) bool isReadAndUploaded;
@property (nonatomic, readonly) bool isRejected;
@property (nonatomic, readonly) bool isReserved;
@property (nonatomic, readonly) bool isShareAcceptationFault;
@property (nonatomic, readonly) bool isSharedByMe;
@property (nonatomic, readonly) bool isSharedToMe;
@property (nonatomic, readonly) bool isSharedToMeChildItem;
@property (nonatomic, readonly) bool isSharedToMeTopLevelItem;
@property (nonatomic, readonly) bool isSymLink;
@property (nonatomic, readonly) bool isZoneRoot;
@property (nonatomic, readonly) BRCItemID *itemID;
@property (nonatomic, readonly) unsigned long long localDiffs;
@property (nonatomic, readonly) NSString *logicalName;
@property (nonatomic, readonly) bool needsInsert;
@property (nonatomic, readonly) bool needsOSUpgradeToSyncUp;
@property (nonatomic, readonly) bool needsReading;
@property (nonatomic, readonly) bool needsSyncUp;
@property (nonatomic, readonly) bool needsUpload;
@property (nonatomic, readonly) unsigned long long notifsRank;
@property (nonatomic, readonly) BRCLocalItem *orig;
@property (nonatomic, readonly) NSNumber *ownerKey;
@property (nonatomic, readonly) BRCClientZone *parentClientZone;
@property (nonatomic, readonly) NSNumber *parentFileID;
@property (nonatomic, readonly) BRFileObjectID *parentFileObjectID;
@property (nonatomic, readonly) NSString *path;
@property (nonatomic, readonly) bool physicalNameNeedsRename;
@property (nonatomic, readonly) BRCItemID *serverPathMatchItemID;
@property (nonatomic, readonly) BRCServerZone *serverZone;
@property (nonatomic, readonly) BRCAccountSession *session;
@property (nonatomic, readonly) NSMutableSet *setOfAppLibraryIDsWithReverseAliases;
@property (nonatomic) unsigned long long sharingOptions;
@property (nonatomic, readonly) BRCLocalStatInfo *st;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSError *syncUpError;
@property (nonatomic, readonly) unsigned int syncUpState;
@property (nonatomic, readonly) unsigned int uploadStatus;

+ (id)_bookmarkDataWithItemResolutionString:(id)arg1 serverZone:(id)arg2 salted:(bool)arg3;
+ (id)bookmarkDataWithItemResolutionString:(id)arg1 serverZone:(id)arg2;
+ (id)bookmarkDataWithRelativePath:(id)arg1 serverZone:(id)arg2;
+ (id)itemResolutionStringWithRelativePath:(id)arg1;
+ (id)newItemWithPath:(id)arg1 parentGlobalID:(id)arg2;
+ (bool)parseBookmarkData:(id)arg1 inAccountSession:(id)arg2 docID:(id*)arg3 itemID:(id*)arg4 mangledID:(id*)arg5 unsaltedBookmarkData:(id*)arg6 error:(id*)arg7;
+ (bool)supportsSecureCoding;
+ (id)unsaltedBookmarkDataWithItemResolutionString:(id)arg1 serverZone:(id)arg2;
+ (id)unsaltedBookmarkDataWithRelativePath:(id)arg1 serverZone:(id)arg2;

- (void).cxx_destruct;
- (void)_ascendItemHierarchyWithBlock:(id /* block */)arg1;
- (void)_cheapCheckSavingItem;
- (bool)_checkForSharedToMeItemInTrashWithPath:(id)arg1;
- (bool)_checkZoneUpdateFromFSAtPath:(id)arg1 parentGlobalID:(id)arg2;
- (bool)_computedUserVisibleStatusAtPath:(id)arg1;
- (bool)_contentXattrsHaveChangedAtRelativeAPath:(id)arg1;
- (bool)_deleteFromDB:(id)arg1 keepAliases:(bool)arg2;
- (id)_initFromPQLResultSet:(id)arg1 session:(id)arg2 db:(id)arg3 error:(id*)arg4;
- (id)_initWithLocalItem:(id)arg1;
- (id)_initWithRelativePath:(id)arg1 parentGlobalID:(id)arg2;
- (id)_initWithServerItem:(id)arg1 dbRowID:(unsigned long long)arg2;
- (bool)_insertInDB:(id)arg1 dbRowID:(unsigned long long)arg2;
- (bool)_isIndexable;
- (bool)_isInterestingUpdateForNotifs;
- (bool)_isInterestingUpdateForNotifsWithDiffs:(unsigned long long)arg1;
- (void)_markLostWhenReplacedByItem:(id)arg1 backoffMode:(unsigned char)arg2;
- (void)_markNeedsSyncingUp;
- (void)_queueParentIDUpdate:(id)arg1;
- (void)_refreshAppLibraryFromParent;
- (void)_sendNotificationIfNeededWithDiffs:(unsigned long long)arg1 regather:(bool)arg2;
- (id)_setOfParentIDs;
- (id)_syncZones;
- (void)_updateAppLibraryPristineStatesAfterCreationOrUpdate;
- (void)_updateAppLibraryPristineStatesAfterMarkingDead;
- (bool)_updateInDB:(id)arg1 diffs:(unsigned long long)arg2;
- (void)_updatePropagatedInfoFromFSAtPath:(id)arg1;
- (void)_updateSharedZoneBoostingWithDiffs:(unsigned long long)arg1;
- (void)_updateSyncUpSchedulerWithDiffs:(unsigned long long)arg1;
- (id)appLibrary;
- (id)appLibraryID;
- (void)applyMetadataOnFileID:(unsigned long long)arg1 liveFD:(unsigned long long)arg2 sharingOptions:(unsigned long long)arg3;
- (id)asBRAlias;
- (id)asDirectory;
- (id)asDocument;
- (struct BRCDirectoryItem { Class x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; }*)asFSRoot;
- (id)asFinderBookmark;
- (id)asShareAcceptationFault;
- (id)asShareableItem;
- (id)asSharedToMeTopLevelItem;
- (id)asSymlink;
- (id)baseStructureRecord;
- (void)beginBounceAndSaveToDBWithBounceNumber:(unsigned long long)arg1;
- (id)bookmarkData;
- (void)bouncePhysicalNameToRepresentableName;
- (void)bounceReservedItemWithBounceNumber:(unsigned long long)arg1;
- (bool)changedAtRelativePath:(id)arg1 scanPackage:(bool)arg2;
- (bool)checkIsInDocumentsScopeWithParent:(id)arg1;
- (void)clearFromStage;
- (id)clientZone;
- (id)computedDestinationFilenameFromServerItem:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)createSyncUpJob;
- (id)db;
- (unsigned long long)dbRowID;
- (id)debugDescription;
- (id)description;
- (id)descriptionWithContext:(id)arg1;
- (unsigned long long)diffAgainstLocalItem:(id)arg1;
- (unsigned long long)diffAgainstOriginalItem;
- (unsigned long long)diffAgainstServerAliasItem:(id)arg1;
- (unsigned long long)diffAgainstServerItem:(id)arg1;
- (id)digestDescription;
- (void)encodeWithCoder:(id)arg1;
- (bool)evictInTask:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
- (id)extension;
- (id)fetchParentFileIDs;
- (id)fileID;
- (void)fixupStagedItemAtStartup;
- (bool)fromReadOnlyDB;
- (void)handleUnknownItemError;
- (bool)hasShareIDAndIsOwnedByMe;
- (void)inheritOSUpgradeNeededFromItem:(id)arg1;
- (id)initFromPQLResultSet:(id)arg1 error:(id*)arg2;
- (id)initFromPQLResultSet:(id)arg1 session:(id)arg2 db:(id)arg3 error:(id*)arg4;
- (id)initWithCoder:(id)arg1;
- (bool)isAlmostDead;
- (bool)isBRAlias;
- (bool)isDead;
- (bool)isDeadOrMissingInServerTruth;
- (bool)isDirectory;
- (bool)isDirectoryWithPackageName;
- (bool)isDocument;
- (bool)isFSRoot;
- (bool)isFault;
- (bool)isFinderBookmark;
- (bool)isFromInitialScan;
- (bool)isIdleOrRejected;
- (bool)isInDataScope;
- (bool)isInDocumentOrTrashScope;
- (bool)isInDocumentScope;
- (bool)isInTrashScope;
- (bool)isKnownByServer;
- (bool)isKnownByServerOrInFlight;
- (bool)isLive;
- (bool)isLost;
- (bool)isOnDisk;
- (bool)isOwnedByMe;
- (bool)isPackage;
- (bool)isReadAndUploaded;
- (bool)isRejected;
- (bool)isReserved;
- (bool)isShareAcceptationFault;
- (bool)isSharedByMe;
- (bool)isSharedToMe;
- (bool)isSharedToMeChildItem;
- (bool)isSharedToMeTopLevelItem;
- (bool)isSymLink;
- (bool)isZoneRoot;
- (id)itemGlobalID;
- (id)itemID;
- (id)itemParentGlobalID;
- (id)itemResolutionString;
- (id)jobsDescription;
- (void)learnItemID:(id)arg1 ownerKey:(id)arg2 path:(id)arg3 markLost:(bool)arg4;
- (bool)learnStagedInfoFromDownloadStageID:(id)arg1 error:(id*)arg2;
- (unsigned long long)localDiffs;
- (id)logicalName;
- (void)markBounceFailed;
- (void)markBounceFinished;
- (void)markDead;
- (void)markForceNeedsSyncUp;
- (void)markForceNotify;
- (void)markForceRejected;
- (void)markFound;
- (void)markItemForgottenByServer;
- (bool)markLatestRequestAcknowledgedInZone:(id)arg1;
- (void)markLatestSyncRequestFailedInZone:(id)arg1;
- (void)markLatestSyncRequestRejectedInZone:(id)arg1;
- (void)markLiveFromStageWithPath:(id)arg1;
- (void)markLostClearGenerationID:(bool)arg1 backoffMode:(unsigned char)arg2;
- (void)markLostWhenReplacedByItem:(id)arg1;
- (void)markLostWithoutBackoff;
- (void)markMetadataLive;
- (void)markNeedsDeleteForRescheduleOfItem:(id)arg1;
- (void)markNeedsDeleteWhenAlreadyDeadInServerTruth;
- (void)markNeedsOSUpgradeToSyncUpWithName:(id)arg1;
- (void)markNeedsUploadOrSyncingUp;
- (void)markRemovedFromFilesystemForServerEdit:(bool)arg1;
- (void)markRenamedUsingServerItem:(id)arg1 toRelpath:(id)arg2 logicalName:(id)arg3 filename:(id)arg4;
- (void)markReserved;
- (void)markStagedWithFileID:(unsigned long long)arg1 generationID:(unsigned int)arg2;
- (void)markStagedWithFileID:(unsigned long long)arg1 generationID:(unsigned int)arg2 documentID:(unsigned int)arg3;
- (unsigned long long)maskForDiffsToSyncUpForZone:(id)arg1;
- (id)matchingJobsWhereSQLClause;
- (unsigned long long)metadataSyncUpMask;
- (void)moveAsideLocally;
- (bool)needsInsert;
- (bool)needsOSUpgradeToSyncUp;
- (bool)needsReading;
- (bool)needsSyncUp;
- (bool)needsUpload;
- (unsigned long long)notifsRank;
- (id)orig;
- (id)osNameNeededToSyncUp;
- (id)ownerKey;
- (id)parentClientZone;
- (id)parentFileID;
- (id)parentFileObjectID;
- (id)parentItemIDInZone;
- (id)parentItemOnFS;
- (id)path;
- (bool)physicalNameNeedsRename;
- (void)prepareForSyncUpInZone:(id)arg1;
- (void)resetAfterSyncJobsDeletion;
- (bool)saveToDB;
- (bool)saveToDBForServerEdit:(bool)arg1 keepAliases:(bool)arg2;
- (void)scheduleSyncDownForOOBModifyRecordsAck;
- (void)serializeStructuralPluginHints:(id)arg1;
- (id)serverPathMatchItemID;
- (id)serverZone;
- (id)session;
- (void)setAppLibrary:(id)arg1;
- (id)setOfAppLibraryIDsWithReverseAliases;
- (void)setSharingOptions:(unsigned long long)arg1;
- (id)sharedAliasItemID;
- (unsigned long long)sharingOptions;
- (id)st;
- (bool)startDownloadInTask:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
- (id)structureRecordBeingDeadInServerTruth:(bool)arg1 pcsChained:(bool)arg2 inZone:(id)arg3;
- (id)structureRecordBeingDeadInServerTruth:(bool)arg1 stageID:(id)arg2 pcsChained:(bool)arg3;
- (id)structureRecordID;
- (id)structureRecordIDInZone:(id)arg1;
- (id)syncUpError;
- (unsigned int)syncUpState;
- (void)triggerNotificationIfNeeded;
- (id)unsaltedBookmarkData;
- (void)updateFromFSAtPath:(id)arg1;
- (bool)updateFromFSAtPath:(id)arg1 parentGlobalID:(id)arg2;
- (void)updateItemMetadataFromServerItem:(id)arg1 appliedSharingPermission:(bool)arg2;
- (bool)updateLocationAndMetaFromFSAtPath:(id)arg1 parentGlobalID:(id)arg2;
- (void)updateParentZoneRowID:(id)arg1;
- (void)updateStatMetadataFromServerItem:(id)arg1;
- (void)updateStructuralCKInfoFromServerItem:(id)arg1;
- (bool)updateXattrInfoFromPath:(id)arg1 error:(id*)arg2;
- (unsigned int)uploadStatus;
- (bool)validateLoggingToFile:(struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; }*)arg1;
- (void)wasMarkedDead;

@end
