/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TVRemoteUI.framework/TVRemoteUI
 */

@interface TVRUIRemoteViewController : UIViewController <TVRUIDeviceDelegate, TVRUIDeviceSearchDelegate, _TVRAlertControllerDelegate, _TVRUIDevicePickerDelegate, _TVRUIEventDelegate, _TVRUINetworkObserverDelegate> {
    <TVRUIDevice> * _activeDevice;
    NSString * _activeDeviceIdentifier;
    <TVRUIDevice> * _authenticatingDevice;
    _TVRAlertController * _authenticationAlertController;
    UIView * _backgroundView;
    UIView * _blackGradientView;
    TVRUIControlPanelViewController * _controlPanelViewController;
    TVRUIDevicePickerViewController * _devicePickerViewController;
    <TVRUIDeviceQuery> * _deviceQuery;
    bool  _editingSessionActive;
    _TVRUICubicSpringAnimator * _introAnimationHideLabelAnimator;
    UILabel * _introAnimationHintLabel;
    CCUICAPackageView * _introAnimationPackageView;
    _TVRUICubicSpringAnimator * _introAnimationShowLabelAnimator;
    UIView * _introAnimationView;
    _TVRAlertController * _keyboardController;
    _TVRKeyboardHaptic * _keyboardHaptic;
    TVRUIMediaControlsViewController * _mediaControlsViewController;
    _TVRMessageView * _messageView;
    _TVRUINetworkObserver * _networkObserver;
    NSString * _preferredDeviceIdentifier;
    bool  _registeredForVolumeEvents;
    SFClient * _sharingClient;
    _TVRSiriHaptic * _siriHaptic;
    <TVRUIStyleProvider> * _styleProvider;
    CUSystemMonitor * _systemMonitor;
    UIButton * _tapToRadarButton;
    TVRUITouchpadViewController * _touchpadViewController;
}

@property (nonatomic, retain) <TVRUIDevice> *activeDevice;
@property (nonatomic, copy) NSString *activeDeviceIdentifier;
@property (nonatomic, retain) <TVRUIDevice> *authenticatingDevice;
@property (nonatomic, retain) _TVRAlertController *authenticationAlertController;
@property (nonatomic, retain) UIView *backgroundView;
@property (nonatomic, retain) UIView *blackGradientView;
@property (nonatomic, retain) TVRUIControlPanelViewController *controlPanelViewController;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) TVRUIDevicePickerViewController *devicePickerViewController;
@property (nonatomic, retain) <TVRUIDeviceQuery> *deviceQuery;
@property (getter=isEditingSessionActive, nonatomic) bool editingSessionActive;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) _TVRUICubicSpringAnimator *introAnimationHideLabelAnimator;
@property (nonatomic, retain) UILabel *introAnimationHintLabel;
@property (nonatomic, retain) CCUICAPackageView *introAnimationPackageView;
@property (nonatomic, retain) _TVRUICubicSpringAnimator *introAnimationShowLabelAnimator;
@property (nonatomic, retain) UIView *introAnimationView;
@property (nonatomic, retain) _TVRAlertController *keyboardController;
@property (nonatomic, retain) _TVRKeyboardHaptic *keyboardHaptic;
@property (nonatomic, retain) TVRUIMediaControlsViewController *mediaControlsViewController;
@property (nonatomic, retain) _TVRMessageView *messageView;
@property (nonatomic, retain) _TVRUINetworkObserver *networkObserver;
@property (nonatomic, retain) NSString *preferredDeviceIdentifier;
@property (nonatomic) bool registeredForVolumeEvents;
@property (nonatomic, retain) SFClient *sharingClient;
@property (nonatomic, retain) _TVRSiriHaptic *siriHaptic;
@property (nonatomic, retain) <TVRUIStyleProvider> *styleProvider;
@property (readonly) Class superclass;
@property (nonatomic, retain) CUSystemMonitor *systemMonitor;
@property (nonatomic, retain) UIButton *tapToRadarButton;
@property (nonatomic, retain) TVRUITouchpadViewController *touchpadViewController;

- (void).cxx_destruct;
- (void)_cancelHideConnectingAndShowDevicePicker;
- (void)_cancelPairing;
- (void)_cleanupIntroAnimation;
- (void)_connectToDevice:(id)arg1;
- (void)_createBlackGradientView;
- (void)_disableSearch;
- (void)_disableVolumeControl;
- (void)_disconnectSystemInitiated;
- (void)_disconnectUserInitiated;
- (void)_dismissAnyPresentedContentAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (void)_enableMediaControls:(bool)arg1 animated:(bool)arg2;
- (void)_enableSearch;
- (void)_enableVolumeControl;
- (void)_hideConnectingAndShowDevicePicker;
- (void)_hideMessageContent;
- (void)_installTapToRadarButton;
- (void)_layoutTouchpad:(bool)arg1;
- (void)_performSiriEffectsWithButtonEvent:(id)arg1;
- (void)_presentAlertWithTitle:(id)arg1 message:(id)arg2;
- (void)_presentKeyboardWithAttributes:(id)arg1 initialText:(id)arg2;
- (void)_presentPairingAlert;
- (void)_setupChildViewControllers;
- (void)_setupDevicePickerController;
- (void)_showConnectingSpinner;
- (void)_showSearchingSpinnerIfNeeded;
- (void)_startIntroAnimation;
- (void)_switchToDismissalState;
- (void)_switchToPresentationState;
- (void)_tapToRadar;
- (void)_toggleControlAvailability;
- (void)_volumeDownButtonTouchDown:(id)arg1;
- (void)_volumeDownButtonTouchUp:(id)arg1;
- (void)_volumeUpButtonTouchDown:(id)arg1;
- (void)_volumeUpButtonTouchUp:(id)arg1;
- (id)activeDevice;
- (id)activeDeviceIdentifier;
- (void)alertController:(id)arg1 enteredText:(id)arg2;
- (void)alertController:(id)arg1 generatedTextInputPayload:(id)arg2;
- (void)alertControllerCancelled:(id)arg1;
- (void)alertControllerHitKeyboardReturnKey:(id)arg1;
- (void)alertControllerPressedDictationButton:(id)arg1;
- (void)alertControllerReleasedDictationButton:(id)arg1;
- (id)animatorForDismissalAsAlert;
- (id)animatorForPresentationAsAlert;
- (id)authenticatingDevice;
- (id)authenticationAlertController;
- (id)backgroundView;
- (id)blackGradientView;
- (void)clearMessageContent;
- (void)configureWithDeviceIdentifier:(id)arg1 type:(long long)arg2 showPicker:(bool)arg3;
- (void)connectionServiceDidInvalidate:(id)arg1;
- (id)controlPanelViewController;
- (void)dealloc;
- (void)device:(id)arg1 beganTextEditingWithAttributes:(id)arg2 initialText:(id)arg3;
- (void)device:(id)arg1 didUpdateAttributes:(id)arg2;
- (void)device:(id)arg1 didUpdateText:(id)arg2;
- (void)device:(id)arg1 endedTextEditingWithAttributes:(id)arg2 endingText:(id)arg3;
- (void)device:(id)arg1 needsMediaControls:(id)arg2;
- (void)device:(id)arg1 supportsVolumeControl:(bool)arg2;
- (void)deviceBeganConnecting:(id)arg1;
- (void)deviceDidConnect:(id)arg1;
- (void)deviceDidDisconnect:(id)arg1 reason:(long long)arg2 error:(id)arg3;
- (void)deviceDidEncounterAuthenticationChallenge:(id)arg1;
- (void)deviceHidesMediaControls:(id)arg1;
- (void)deviceListUpdated:(id)arg1;
- (void)devicePicked:(id)arg1;
- (id)devicePickerViewController;
- (void)devicePickerWillChangeState:(bool)arg1 animated:(bool)arg2;
- (id)deviceQuery;
- (void)fetchPreferredDeviceIdentifier;
- (void)generatedButtonEvent:(id)arg1;
- (void)generatedTouchEvent:(id)arg1;
- (id)init;
- (id)introAnimationHideLabelAnimator;
- (id)introAnimationHintLabel;
- (id)introAnimationPackageView;
- (id)introAnimationShowLabelAnimator;
- (id)introAnimationView;
- (bool)isEditingSessionActive;
- (id)keyboardController;
- (id)keyboardHaptic;
- (void)keyboardRequested;
- (id)mediaControlsViewController;
- (id)messageView;
- (id)networkObserver;
- (void)networkObserverDidUpdateState:(id)arg1;
- (struct CGSize { double x1; double x2; })preferredContentSize;
- (id)preferredDeviceIdentifier;
- (bool)registeredForVolumeEvents;
- (void)setActiveDevice:(id)arg1;
- (void)setActiveDeviceIdentifier:(id)arg1;
- (void)setAuthenticatingDevice:(id)arg1;
- (void)setAuthenticationAlertController:(id)arg1;
- (void)setBackgroundView:(id)arg1;
- (void)setBlackGradientView:(id)arg1;
- (void)setControlPanelViewController:(id)arg1;
- (void)setDevicePickerViewController:(id)arg1;
- (void)setDeviceQuery:(id)arg1;
- (void)setEditingSessionActive:(bool)arg1;
- (void)setIntroAnimationHideLabelAnimator:(id)arg1;
- (void)setIntroAnimationHintLabel:(id)arg1;
- (void)setIntroAnimationPackageView:(id)arg1;
- (void)setIntroAnimationShowLabelAnimator:(id)arg1;
- (void)setIntroAnimationView:(id)arg1;
- (void)setKeyboardController:(id)arg1;
- (void)setKeyboardHaptic:(id)arg1;
- (void)setMediaControlsViewController:(id)arg1;
- (void)setMessageView:(id)arg1;
- (void)setNetworkObserver:(id)arg1;
- (void)setPreferredDeviceIdentifier:(id)arg1;
- (void)setRegisteredForVolumeEvents:(bool)arg1;
- (void)setSharingClient:(id)arg1;
- (void)setSiriHaptic:(id)arg1;
- (void)setStyleProvider:(id)arg1;
- (void)setSystemMonitor:(id)arg1;
- (void)setTapToRadarButton:(id)arg1;
- (void)setTouchpadViewController:(id)arg1;
- (id)sharingClient;
- (void)showGenericUnableToConnectMessage;
- (void)showLoadingSpinner;
- (void)showMessageWithError:(id)arg1 andDevice:(id)arg2;
- (void)showMessageWithTitle:(id)arg1 message:(id)arg2;
- (void)showNoAssociatedNetworkMessage;
- (void)showNoWIFIConnectionMessage;
- (void)showSearchingSpinner;
- (id)siriHaptic;
- (void)startConnections;
- (void)stopConnections;
- (id)stringForDeviceDeviceIdentifierType:(long long)arg1;
- (id)styleProvider;
- (unsigned long long)supportedInterfaceOrientations;
- (id)systemMonitor;
- (id)tapToRadarButton;
- (id)touchpadViewController;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)volumeDownEventGenerated;
- (void)volumeUpEventGenerated;

@end
