/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
 */

@interface MPCRadioQueueFeeder : MPQueueFeeder <MPCQueueBehaviorManaging> {
    bool  _canSeek;
    MPAVItem * _currentItem;
    bool  _didReceiveTracklistEnd;
    unsigned long long  _feederRevisionID;
    NSMapTable * _fetchingTracksCompletionHandlersByStation;
    bool  _hasReceivedStreamTrack;
    bool  _hasVerifiedCloudStatus;
    bool  _isPreparingStation;
    long long  _maximumGetTracksRetryCount;
    MPPlaceholderAVItem * _placeholderAVItem;
    NSArray * _previousDatabaseTrackPlaybackDescriptorQueue;
    RadioStation * _station;
    RadioStationSkipController * _stationSkipController;
    NSMapTable * _stationTracklistRetrievalRetryCount;
    NSArray * _tracks;
    bool  _wasUsingBackgroundNetwork;
}

@property (nonatomic, readonly) bool allowsUserVisibleUpcomingItems;
@property (nonatomic, readonly) bool canSeek;
@property (nonatomic, readonly) bool canSkipToPreviousItem;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) long long playbackMode;
@property (nonatomic, retain) RadioStation *station;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSArray *tracks;
@property (nonatomic, readonly) bool userCanChangeShuffleAndRepeatType;

// Image: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore

+ (void)_explicitContentAllowedDidChangeNotification:(id)arg1;
+ (id)_tracksByRemovingPromotionalContentFromTracks:(id)arg1;
+ (id)_tracksWithPromotionalContentFromTracks:(id)arg1;
+ (void)_updateIsExplicitContentRestrictedAndPostNotification:(bool)arg1 removeTracks:(bool)arg2;
+ (bool)isExplicitTracksEnabled;
+ (bool)isProfileExplicitContentRestricted;
+ (bool)isUserDefaultExplicitTracksEnabled;
+ (long long)maximumNumberOfTracksToFetch;
+ (void)setIgnoresUserDefaultExplicitTracksEnabled:(bool)arg1;
+ (void)setUserDefaultExplicitTracksEnabled:(bool)arg1;
+ (bool)supportsStateRestoration;

- (void).cxx_destruct;
- (void)_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:(id)arg1;
- (void)_applicationWillTerminateNotification:(id)arg1;
- (bool)_canHavePlaceholderTrack;
- (void)_commonInit;
- (void)_configurePlaceholderAVItem;
- (id)_currentTrackPlaybackDescriptorQueueWithCurrentItem:(id)arg1 shouldIncludePlaybackInformation:(bool)arg2 skipDate:(id)arg3;
- (void)_fetchAdditionalTracksWithBaseIndex:(long long)arg1 withCompletionHandler:(id)arg2;
- (bool)_hasReceivedStreamTrack;
- (unsigned long long)_indexOfCurrentItem;
- (unsigned long long)_indexOfItem:(id)arg1;
- (unsigned long long)_indexOfItem:(id)arg1 inTracks:(id)arg2;
- (void)_isExplicitTracksEnabledDidChangeNotification:(id)arg1;
- (void)_numberOfAvailableSkipsDidChangeNotification:(id)arg1;
- (void)_performGetTracksOperationForStation:(id)arg1 withNumberOfTracks:(long long)arg2;
- (void)_radioModelDidChangeNotification:(id)arg1;
- (void)_removeAllTracks;
- (void)_sendContentsDidChangeWithCurrentItem;
- (void)_storeBagDidLoadNotification:(id)arg1;
- (id)_trackAtIndex:(unsigned long long)arg1 shouldFetchAddtionalTracks:(bool)arg2;
- (id)_tracksByRemovingPlayedTracks:(id)arg1;
- (void)_updateForLoadedStoreBag:(id)arg1;
- (void)_updateTracksForChangedTrackPlaybackDescriptorQueue;
- (void)_updateWithTracks:(id)arg1 tracklistActionType:(long long)arg2 options:(long long)arg3;
- (void)_verifyCloudStatusIfNeeded;
- (bool)allowsUserVisibleUpcomingItems;
- (id)audioSessionModeForItemAtIndex:(unsigned long long)arg1;
- (bool)canReorder;
- (bool)canSeek;
- (bool)canSkipItem:(id)arg1;
- (bool)canSkipToPreviousItem;
- (id)copyRawItemAtIndex:(unsigned long long)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (bool)hasValidItemAtIndex:(unsigned long long)arg1;
- (id)identifierAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfItemWithIdentifier:(id)arg1;
- (unsigned long long)indexOfMediaItem:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)initialPlaybackQueueDepthForStartingIndex:(unsigned long long)arg1;
- (bool)isRadioQueueFeeder;
- (Class)itemClass;
- (unsigned long long)itemCount;
- (id)localizedAttributedPositionInPlaylistStringForItem:(id)arg1 withRegularTextAttributes:(id)arg2 emphasizedTextAttributes:(id)arg3;
- (id)localizedPositionInPlaylistString:(id)arg1;
- (id)mediaItemAtIndex:(unsigned long long)arg1;
- (id)modelPlayEvent;
- (id)playbackInfoForIdentifier:(id)arg1;
- (void)player:(id)arg1 currentItemDidChangeToItem:(id)arg2;
- (bool)player:(id)arg1 shouldContinuePlaybackForNetworkType:(long long)arg2 returningError:(id*)arg3;
- (bool)playerPreparesItemsForPlaybackAsynchronously;
- (bool)preventsHardQueueModificationsForItem:(id)arg1;
- (long long)realRepeatType;
- (void)reloadWithPlaybackContext:(id)arg1 completionHandler:(id)arg2;
- (void)restoreState:(id)arg1;
- (void)setStation:(id)arg1;
- (void)setTracks:(id)arg1;
- (bool)shouldContinuePlaybackForNetworkType:(long long)arg1 player:(id)arg2;
- (bool)shouldReuseQueueFeederForPlaybackContext:(id)arg1;
- (struct { long long x1; long long x2; double x3; })skipLimit;
- (id)station;
- (id)tracks;
- (bool)userCanChangeShuffleAndRepeatType;

// Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI

- (id)entityUniqueIdentifier;
- (id)imageURLForEntityArtworkProperty:(id)arg1 fittingSize:(struct CGSize { double x1; double x2; })arg2 destinationScale:(double)arg3;
- (id)valueForEntityProperty:(id)arg1;
- (id)valuesForEntityProperties:(id)arg1;

@end
