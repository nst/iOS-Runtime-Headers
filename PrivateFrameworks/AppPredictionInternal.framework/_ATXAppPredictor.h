/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AppPredictionInternal.framework/AppPredictionInternal
 */

@interface _ATXAppPredictor : NSObject {
    NSArray * _abGroupIdentifiers;
    ATXActionPredictionBlacklist * _actionPredictionBlacklist;
    _ATXAppDailyDose * _appDailyDose;
    _ATXAppInfoManager * _appInfoManager;
    _ATXAppInstallMonitor * _appInstallMonitor;
    APRAppIntentMonitor * _appIntentMonitor;
    bool  _appLaunchAndInstallMonitorsInitialized;
    _ATXAppLaunchLocation * _appLaunchLocation;
    _ATXAppLaunchMonitor * _appLaunchMonitor;
    _APRParzenModel * _appNonSiriKitIntentParzen;
    ATXAppPredictionBlacklist * _appPredictionBlacklist;
    _APRParzenModel * _appSiriKitIntentParzen;
    NSString * _dayZeroABGroupIdentifier;
    NSString * _dayZeroIntentABGroupIdentifier;
    NSDictionary * _dayZeroIntentParameters;
    NSDictionary * _dayZeroParameters;
    NSArray * _finalSubScores;
    NSArray * _interpreters;
    ATXMediaApplications * _mediaApps;
    ATXAppLaunchMicroLocation * _microLocation;
    ATXMagicalMomentsNowPlayingUpdateMonitor * _mmNowPlayingPredictionMonitor;
    ATXMagicalMomentsUpdateMonitor * _mmPredictionMonitor;
    ATXBBNotificationManager * _notificationManager;
    NSObject<OS_dispatch_queue> * _queue;
    _ATXRecentInstallCache * _recentInstallCache;
    NSDictionary * _sasBundleScoreBoost;
    NSUserDefaults * _userDefaults;
}

@property (nonatomic, retain) NSArray *abGroupIdentifiers;

+ (float)_computeL2DistanceFromBundleId:(id)arg1 to:(const float*)arg2 app2vecMapping:(id)arg3;
+ (bool)_predictNextAppLaunchEmbedding:(id)arg1 into:(float*)arg2;
+ (id)getParseTreeForConsumerSubType:(unsigned char)arg1;
+ (id)recreateSharedInstanceWithCurrentABGroup;
+ (void)removeOldLaunchInfoFrom:(id)arg1 appLaunchHistogram:(id)arg2 spotlightLaunchHistogram:(id)arg3 unlockTimeHistogram:(id)arg4 dayOfWeekHistogram:(id)arg5 airplaneModeLaunchHistogram:(id)arg6 trendingLaunchHistogram:(id)arg7 wifiLaunchHistogram:(id)arg8 coreMotionLaunchHistogram:(id)arg9 appIntentLaunchHistogram:(id)arg10 appIntentUnlockTimeHistogram:(id)arg11 appIntentDayOfWeekHistogram:(id)arg12 appIntentAirplaneModeLaunchHistogram:(id)arg13 appIntentTrendingLaunchHistogram:(id)arg14 appIntentWifiHistogram:(id)arg15 appIntentCoreMotionLaunchHistogram:(id)arg16 appForAllIntentsLaunchHistogram:(id)arg17 appForAllIntentsUnlockTimeHistogram:(id)arg18 appForAllIntentsDayOfWeekHistogram:(id)arg19 appForAllIntentsAirplaneModeLaunchHistogram:(id)arg20 appForAllIntentsTrendingLaunchHistogram:(id)arg21 appForAllIntentsWifiHistogram:(id)arg22 appForAllIntentsCoreMotionLaunchHistogram:(id)arg23 launchSequenceManager:(id)arg24 bundleIdTable:(id)arg25 aprExplicitConfirmsHistogram:(id)arg26 aprExplicitRejectsHistogram:(id)arg27 aprImplicitConfirmsHistogram:(id)arg28 aprImplicitRejectsHistogram:(id)arg29 aprSiriKitIntentsHistogram:(id)arg30 aprNonSiriKitIntentsHistogram:(id)arg31 actionConfirmsHistogram:(id)arg32 actionRejectsHistogram:(id)arg33 heuristicConfirmsHistogram:(id)arg34 heuristicRejectsHistogram:(id)arg35 appIntentPartOfWeekHistogram:(id)arg36;
+ (id)sharedInstance;
+ (double)time:(double)arg1 toAccuracyInSeconds:(double)arg2;

- (void).cxx_destruct;
- (void)_addZeroDayAppIntentKeysToBundleIdTable:(id)arg1;
- (id)_appPredictionsSeedAppsGivenSBAppList:(id)arg1 consumerSubType:(unsigned char)arg2;
- (id)_appsToPredictWithConsumerSubType:(unsigned char)arg1 intent:(id)arg2 candidateBundleIdentifiers:(id)arg3 allSBApps:(id)arg4 appPredictionBlacklist:(id)arg5 digitalHealthBlacklist:(id)arg6;
- (void)_copyValidScoreInputsFromPredictionItem:(const struct ATXPredictionItem { id x1; float x2[348]; float x3; }*)arg1 toPredictionItem:(struct ATXPredictionItem { id x1; float x2[348]; float x3; }*)arg2;
- (struct unordered_map<NSString *, const ATXPredictionItem *, ATXNSStringHash, ATXNSStringEqual, std::__1::allocator<std::__1::pair<NSString *const, const ATXPredictionItem *> > > { struct __hash_table<std::__1::__hash_value_type<NSString *, const ATXPredictionItem *>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, const ATXPredictionItem *>, ATXNSStringHash, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, const ATXPredictionItem *>, ATXNSStringEqual, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, const ATXPredictionItem *> > > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const ATXPredictionItem *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const ATXPredictionItem *>, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const ATXPredictionItem *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const ATXPredictionItem *>, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const ATXPredictionItem *>, void *> *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const ATXPredictionItem *>, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const ATXPredictionItem *>, void *> *> *> > { unsigned long long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; } x1; })_createMapOfKeyToItemForPredictionItems:(const struct vector<ATXPredictionItem, std::__1::allocator<ATXPredictionItem> > { struct ATXPredictionItem {} *x1; struct ATXPredictionItem {} *x2; struct __compressed_pair<ATXPredictionItem *, std::__1::allocator<ATXPredictionItem> > { struct ATXPredictionItem {} *x_3_1_1; } x3; }*)arg1;
- (struct vector<ATXPredictionItem, std::__1::allocator<ATXPredictionItem> > { struct ATXPredictionItem {} *x1; struct ATXPredictionItem {} *x2; struct __compressed_pair<ATXPredictionItem *, std::__1::allocator<ATXPredictionItem> > { struct ATXPredictionItem {} *x_3_1_1; } x3; })_evalFeaturesForActions:(id)arg1 scoreLogger:(id)arg2;
- (struct vector<ATXPredictionItem, std::__1::allocator<ATXPredictionItem> > { struct ATXPredictionItem {} *x1; struct ATXPredictionItem {} *x2; struct __compressed_pair<ATXPredictionItem *, std::__1::allocator<ATXPredictionItem> > { struct ATXPredictionItem {} *x_3_1_1; } x3; })_evalFeaturesForAppForAllIntents:(id)arg1 scoreLogger:(id)arg2;
- (struct vector<ATXPredictionItem, std::__1::allocator<ATXPredictionItem> > { struct ATXPredictionItem {} *x1; struct ATXPredictionItem {} *x2; struct __compressed_pair<ATXPredictionItem *, std::__1::allocator<ATXPredictionItem> > { struct ATXPredictionItem {} *x_3_1_1; } x3; })_evalFeaturesForAppIntents:(id)arg1 scoreLogger:(id)arg2;
- (struct vector<ATXPredictionItem, std::__1::allocator<ATXPredictionItem> > { struct ATXPredictionItem {} *x1; struct ATXPredictionItem {} *x2; struct __compressed_pair<ATXPredictionItem *, std::__1::allocator<ATXPredictionItem> > { struct ATXPredictionItem {} *x_3_1_1; } x3; })_evalFeaturesForApps:(id)arg1 consumerSubType:(unsigned char)arg2 intent:(id)arg3 scoreLogger:(id)arg4;
- (struct vector<ATXPredictionItem, std::__1::allocator<ATXPredictionItem> > { struct ATXPredictionItem {} *x1; struct ATXPredictionItem {} *x2; struct __compressed_pair<ATXPredictionItem *, std::__1::allocator<ATXPredictionItem> > { struct ATXPredictionItem {} *x_3_1_1; } x3; })_getPredictionForItems:(id)arg1 consumerSubType:(unsigned char)arg2 intent:(id)arg3 scoreLogger:(id)arg4;
- (bool)_initAppLaunchAndInstallMonitors;
- (id)_phoneAppsForWatchBundleIds:(id)arg1;
- (double)_predictionScoreForItem:(const struct ATXPredictionItem { id x1; float x2[348]; float x3; }*)arg1 consumerSubType:(unsigned char)arg2 scoreLogger:(id)arg3 intentType:(id)arg4;
- (void)_setActionBlacklist:(id)arg1;
- (void)_updateFromAppPreferencePredictorAsset;
- (void)_updateFromAsset;
- (void)_updateFromZeroDayAsset;
- (void)_updateFromZeroDayIntentAsset;
- (id)abGroupIdentifiers;
- (id)appInstallMonitor;
- (id)appIntentMonitor;
- (id)appLaunchMonitor;
- (void)dealloc;
- (id)getABGroups;
- (id)getPredictionModelDetails;
- (id)init;
- (id)initInternal;
- (void)iterZeroDayAppIntentKeysWithBlock:(id /* block */)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)predictWithLimit:(unsigned long long)arg1 consumerSubType:(unsigned char)arg2 intent:(id)arg3 candidateBundleIdentifiers:(id)arg4 candidateActiontypes:(id)arg5 scoreLogger:(id)arg6;
- (id)predictWithLimit:(unsigned long long)arg1 consumerSubType:(unsigned char)arg2 intent:(id)arg3 candidateBundleIdentifiers:(id)arg4 candidateActiontypes:(id)arg5 scoreLogger:(id)arg6 predictionItemsToKeep:(struct vector<ATXPredictionItem, std::__1::allocator<ATXPredictionItem> > { struct ATXPredictionItem {} *x1; struct ATXPredictionItem {} *x2; struct __compressed_pair<ATXPredictionItem *, std::__1::allocator<ATXPredictionItem> > { struct ATXPredictionItem {} *x_3_1_1; } x3; }*)arg7;
- (double)predictionScoreForItem:(const struct ATXPredictionItem { id x1; float x2[348]; float x3; }*)arg1 consumerSubType:(unsigned char)arg2;
- (void)receiveFeedbackForConsumerType:(unsigned long long)arg1 consumerSubType:(unsigned char)arg2 atxResponse:(id)arg3 aprResponse:(id)arg4 engagementType:(unsigned long long)arg5 engagedBundleId:(id)arg6 bundleIdsShown:(id)arg7;
- (void)resetRecentInstallCache;
- (void)restoreSerializedState:(id)arg1;
- (id)serializeState;
- (void)setAbGroupIdentifiers:(id)arg1;
- (void)setupScoreLogger:(id)arg1 forConsumerSubType:(unsigned char)arg2;
- (id)subscoresForInputScores:(id)arg1 consumerSubType:(unsigned char)arg2 intentType:(id)arg3;
- (void)train;
- (void)updateLaunchHistoryFromDuet;

@end
