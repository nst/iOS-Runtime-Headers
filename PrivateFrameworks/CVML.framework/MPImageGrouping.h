/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CVML.framework/CVML
 */

@interface MPImageGrouping : NSObject

+ (struct vector<MPClusteringTreeNode *, std::__1::allocator<MPClusteringTreeNode *> > { struct MPClusteringTreeNode {} **x1; struct MPClusteringTreeNode {} **x2; struct __compressed_pair<MPClusteringTreeNode **, std::__1::allocator<MPClusteringTreeNode *> > { struct MPClusteringTreeNode {} **x_3_1_1; } x3; })computeClusteringIntoKGroups:(int)arg1 forHierarchicalTree:(struct MPClusteringTreeNode { id x1; float x2; float x3; int x4; struct MPClusteringTreeNode {} *x5; struct MPClusteringTreeNode {} *x6; struct MPClusteringTreeNode {} *x7; struct MPClusteringTreeNode {} *x8; }*)arg2 context:(id)arg3;
+ (struct vector<MPClusteringTreeNode *, std::__1::allocator<MPClusteringTreeNode *> > { struct MPClusteringTreeNode {} **x1; struct MPClusteringTreeNode {} **x2; struct __compressed_pair<MPClusteringTreeNode **, std::__1::allocator<MPClusteringTreeNode *> > { struct MPClusteringTreeNode {} **x_3_1_1; } x3; })computeClusteringIntoKGroups:(int)arg1 orUsingDistanceThreshold:(float)arg2 forHierarchicalTree:(struct MPClusteringTreeNode { id x1; float x2; float x3; int x4; struct MPClusteringTreeNode {} *x5; struct MPClusteringTreeNode {} *x6; struct MPClusteringTreeNode {} *x7; struct MPClusteringTreeNode {} *x8; }*)arg3 context:(id)arg4;
+ (struct vector<MPClusteringTreeNode *, std::__1::allocator<MPClusteringTreeNode *> > { struct MPClusteringTreeNode {} **x1; struct MPClusteringTreeNode {} **x2; struct __compressed_pair<MPClusteringTreeNode **, std::__1::allocator<MPClusteringTreeNode *> > { struct MPClusteringTreeNode {} **x_3_1_1; } x3; })computeClusteringUsingDistanceThreshold:(float)arg1 forHierarchicalTree:(struct MPClusteringTreeNode { id x1; float x2; float x3; int x4; struct MPClusteringTreeNode {} *x5; struct MPClusteringTreeNode {} *x6; struct MPClusteringTreeNode {} *x7; struct MPClusteringTreeNode {} *x8; }*)arg2 context:(id)arg3;
+ (long long)computeHierarchicalClusteringOfImageDescriptors:(id)arg1 results:(struct MPClusteringTreeNode {}**)arg2 context:(id)arg3;
+ (struct vector<MPClusteringTreeNode *, std::__1::allocator<MPClusteringTreeNode *> > { struct MPClusteringTreeNode {} **x1; struct MPClusteringTreeNode {} **x2; struct __compressed_pair<MPClusteringTreeNode **, std::__1::allocator<MPClusteringTreeNode *> > { struct MPClusteringTreeNode {} **x_3_1_1; } x3; })computeNaturalClusteringForHierarchicalTree:(struct MPClusteringTreeNode { id x1; float x2; float x3; int x4; struct MPClusteringTreeNode {} *x5; struct MPClusteringTreeNode {} *x6; struct MPClusteringTreeNode {} *x7; struct MPClusteringTreeNode {} *x8; }*)arg1 context:(id)arg2;
+ (float)computeTimestampAdjustedDistanceForBaseDistance:(float)arg1 andTimestampDiff:(long long)arg2;
+ (float)computeTotalDistanceForDescriptorDistance:(float)arg1 timestampDiff:(long long)arg2 useTimestampAdjustment:(bool)arg3;
+ (float)getDistanceForClusterNode:(struct MPClusteringTreeNode { id x1; float x2; float x3; int x4; struct MPClusteringTreeNode {} *x5; struct MPClusteringTreeNode {} *x6; struct MPClusteringTreeNode {} *x7; struct MPClusteringTreeNode {} *x8; }*)arg1 splitDistanceType:(int)arg2;

@end
