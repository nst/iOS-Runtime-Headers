/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DiagnosticsKit.framework/DiagnosticsKit
 */

@interface DKHost : NSObject <DKAssetResponder, DKBrightnessResponder, DKVolumeHUDResponder> {
    <DKAssetResponder> * _assetResponder;
    <DKBrightnessResponder> * _brightnessResponder;
    DATestViewOperation * _currentLegacyDiagnostic;
    NSMutableDictionary * _diagnostics;
    bool  _discoveryComplete;
    NSCondition * _discoveryLock;
    NSObject<OS_dispatch_queue> * _discoveryQueue;
    id  _extensionDiscoveryToken;
    id  _extensionDiscoveryTokenRestricted;
    id  _extensionDiscoveryTokenRestrictedUI;
    id  _extensionDiscoveryTokenUI;
    NSMutableArray * _runningExtensions;
    <DKVolumeHUDResponder> * _volumeHUDResponder;
}

@property (nonatomic) <DKAssetResponder> *assetResponder;
@property (nonatomic) <DKBrightnessResponder> *brightnessResponder;
@property (nonatomic, retain) DATestViewOperation *currentLegacyDiagnostic;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSMutableDictionary *diagnostics;
@property (nonatomic) bool discoveryComplete;
@property (nonatomic, retain) NSCondition *discoveryLock;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *discoveryQueue;
@property (nonatomic, retain) id extensionDiscoveryToken;
@property (nonatomic, retain) id extensionDiscoveryTokenRestricted;
@property (nonatomic, retain) id extensionDiscoveryTokenRestrictedUI;
@property (nonatomic, retain) id extensionDiscoveryTokenUI;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSMutableArray *runningExtensions;
@property (readonly) Class superclass;
@property (nonatomic) <DKVolumeHUDResponder> *volumeHUDResponder;

- (void).cxx_destruct;
- (void)_beginExtensionDiscovery;
- (bool)_checkPrerequisitesForDiagnostic:(id)arg1 parameters:(id)arg2 error:(id*)arg3;
- (bool)_freeSpaceAvailable:(id)arg1;
- (void)_prepareHandlersForRequest:(id)arg1;
- (void)_startRequest:(id)arg1 parameters:(id)arg2;
- (id)assetResponder;
- (id)availableDiagnostics;
- (void)beginDiagnosticWithIdentifier:(id)arg1 parameters:(id)arg2 presentingViewController:(id)arg3 completion:(id)arg4;
- (id)brightnessResponder;
- (void)cancelAllDiagnostics;
- (id)currentLegacyDiagnostic;
- (id)diagnostics;
- (bool)discoveryComplete;
- (id)discoveryLock;
- (id)discoveryQueue;
- (void)enableVolumeHUD:(bool)arg1;
- (id)extensionDiscoveryToken;
- (id)extensionDiscoveryTokenRestricted;
- (id)extensionDiscoveryTokenRestrictedUI;
- (id)extensionDiscoveryTokenUI;
- (void)getAsset:(id)arg1 completion:(id)arg2;
- (id)init;
- (id)runningExtensions;
- (void)setAssetResponder:(id)arg1;
- (void)setBrightnessResponder:(id)arg1;
- (void)setCurrentLegacyDiagnostic:(id)arg1;
- (void)setDiagnostics:(id)arg1;
- (void)setDiscoveryComplete:(bool)arg1;
- (void)setDiscoveryLock:(id)arg1;
- (void)setDiscoveryQueue:(id)arg1;
- (void)setExtensionDiscoveryToken:(id)arg1;
- (void)setExtensionDiscoveryTokenRestricted:(id)arg1;
- (void)setExtensionDiscoveryTokenRestrictedUI:(id)arg1;
- (void)setExtensionDiscoveryTokenUI:(id)arg1;
- (void)setRunningExtensions:(id)arg1;
- (void)setScreenToBrightness:(float)arg1 animate:(bool)arg2;
- (void)setVolumeHUDResponder:(id)arg1;
- (id)volumeHUDResponder;

@end
