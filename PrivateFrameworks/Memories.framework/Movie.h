/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories
 */

@interface Movie : NSObject <NSCoding, NSCopying, PHAssetRepresentationPersistenceObserver, PHPhotoLibraryChangeObserver> {
    NSString * _assetFingerprint;
    int  _availability;
    NSDate * _creationDate;
    double  _durationInSeconds;
    bool  _favorite;
    NSURL * _identifierURL;
    CLLocation * _location;
    MapLocation * _mapLocation;
    NSString * _masterAssetFingerprint;
    PHAsset * _phAsset;
    PHAssetRepresentation * _phAssetRepresentation;
    bool  _titleIsLocalizable;
    NSDictionary * _userInfo;
    Project * _weakProject;
}

@property (nonatomic, readonly) NSURL *URL;
@property (nonatomic, retain) NSString *assetFingerprint;
@property (nonatomic) int availability;
@property (nonatomic, retain) NSDate *creationDate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) double durationInSeconds;
@property (getter=isFavorite, nonatomic) bool favorite;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSURL *identifierURL;
@property (nonatomic, retain) CLLocation *location;
@property (nonatomic, retain) MapLocation *mapLocation;
@property (nonatomic, retain) NSString *masterAssetFingerprint;
@property (nonatomic, retain) PHAsset *phAsset;
@property (nonatomic, retain) PHAssetRepresentation *phAssetRepresentation;
@property (readonly) Class superclass;
@property (nonatomic) bool titleIsLocalizable;
@property (nonatomic, retain) NSDictionary *userInfo;
@property (nonatomic) Project *weakProject;

+ (void)initialize;
+ (void)mediaserverdCrashed;
+ (id)objectFromPlist:(id)arg1 inProject:(id)arg2;
+ (void)replaceURL:(id)arg1 withURL:(id)arg2;

- (void).cxx_destruct;
- (id)URL;
- (void)addToList;
- (id)assetFingerprint;
- (bool)attemptRepairWithFingerprint;
- (int)availability;
- (id)awakeAfterUsingCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)creationDate;
- (void)dealloc;
- (id)decodeIdentifierURLWithCoder:(id)arg1;
- (id)description;
- (int)duration;
- (double)durationInSeconds;
- (void)encodeWithCoder:(id)arg1;
- (struct CGSize { double x1; double x2; })encodedPixelSize;
- (struct CGSize { double x1; double x2; })encodedPixelSizeWithTransform;
- (float)frameRate;
- (bool)hasAudioTracks;
- (bool)hasVideoTracks;
- (id)identifierURL;
- (id)initWithAssetRepresentation:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifierURL:(id)arg1;
- (id)initWithIdentifierURL:(id)arg1 userInfo:(id)arg2;
- (bool)isDeleted;
- (bool)isFavorite;
- (bool)isHighFrameRate;
- (bool)isKenBurnsMovie;
- (bool)isMono;
- (bool)isOffline;
- (bool)isOnline;
- (bool)isTimelapse;
- (bool)isUnsupportedFormat;
- (id)location;
- (id)mapLocation;
- (id)masterAssetFingerprint;
- (void)mediaserverdCrashed;
- (struct CGSize { double x1; double x2; })naturalSize;
- (struct CGSize { double x1; double x2; })naturalSizeWithTransform;
- (void)persistenceStateOfAssetRepresentationDidChange:(id)arg1;
- (id)phAsset;
- (id)phAssetRepresentation;
- (void)photoLibraryDidChange:(id)arg1;
- (id)plistRepresentation;
- (void)removeFromList;
- (void)replaceURL:(id)arg1 withURL:(id)arg2;
- (id)resolveRelativePath:(id)arg1;
- (void)setAssetFingerprint:(id)arg1;
- (void)setAvailability:(int)arg1;
- (void)setCreationDate:(id)arg1;
- (void)setDurationInSeconds:(double)arg1;
- (void)setFavorite:(bool)arg1;
- (void)setIdentifierURL:(id)arg1;
- (void)setLocation:(id)arg1;
- (void)setMapLocation:(id)arg1;
- (void)setMasterAssetFingerprint:(id)arg1;
- (void)setPhAsset:(id)arg1;
- (void)setPhAssetRepresentation:(id)arg1;
- (void)setTitleIsLocalizable:(bool)arg1;
- (void)setUserInfo:(id)arg1;
- (void)setWeakProject:(id)arg1;
- (void)stealthlySetIdentifierURL:(id)arg1;
- (void)syncFavorite;
- (bool)titleIsLocalizable;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transform;
- (void)updateAsset;
- (void)updateAssetAvailability;
- (void)updateCreationDate;
- (void)updateDuration;
- (void)updateFavorite;
- (void)updateLocation;
- (void)updateMetadata;
- (id)userInfo;
- (id)weakProject;

@end
