/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore
 */

@interface PLEntry : NSObject <NSCopying> {
    NSMutableDictionary * _dictionary;
    NSDate * _entryDate;
    NSDictionary * _entryDefinition;
    long long  _entryID;
    NSString * _entryKey;
    bool  _existsInDB;
    bool  _isErrorEntry;
    NSObject<OS_dispatch_semaphore> * _sem;
    bool  _writeToDB;
}

@property (readonly) NSArray *arrayKeys;
@property (readonly) NSArray *definedKeys;
@property (retain) NSMutableDictionary *dictionary;
@property (readonly) NSArray *dynamicKeys;
@property (nonatomic, retain) NSDate *entryDate;
@property (nonatomic, retain) NSDictionary *entryDefinition;
@property (nonatomic) long long entryID;
@property (nonatomic, retain) NSString *entryKey;
@property bool existsInDB;
@property (readonly) bool hasArrayKeys;
@property (readonly) bool hasDynamicKeys;
@property bool isErrorEntry;
@property (readonly) NSMutableArray *keys;
@property (nonatomic, retain) NSObject<OS_dispatch_semaphore> *sem;
@property (readonly) id subEntryKey;
@property (getter=allValues, readonly) NSMutableArray *values;
@property bool writeToDB;

+ (Class)classForEntryKey:(id)arg1;
+ (id)entryKey;
+ (id)entryWithEntryKey:(id)arg1 withData:(id)arg2;
+ (id)entryWithEntryKey:(id)arg1 withRawData:(id)arg2;
+ (void)load;
+ (void)registerEntry:(Class)arg1;
+ (id)summarizeAggregateEntries:(id)arg1;
+ (id)summarizeAggregateEntries:(id)arg1 withPrimaryKeys:(id)arg2;

- (void).cxx_destruct;
- (id)allValues;
- (id)arrayKeys;
- (void)checkOverridesEntryDateWithNowDate:(id)arg1;
- (long long)compare:(id)arg1;
- (long long)compare:(id)arg1 options:(short)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)definedKeys;
- (id)definitionForKey:(id)arg1;
- (id)description;
- (id)dictionary;
- (id)dynamicKeys;
- (id)entryDate;
- (id)entryDefinition;
- (long long)entryID;
- (id)entryKey;
- (bool)existsInDB;
- (bool)filterEntryLogging;
- (short)formaterForKey:(id)arg1;
- (bool)hasArrayKeys;
- (bool)hasDynamicKeys;
- (id)init;
- (id)initEntryWithData:(id)arg1;
- (id)initEntryWithRawData:(id)arg1;
- (id)initWithEntryDate:(id)arg1;
- (id)initWithEntryKey:(id)arg1;
- (id)initWithEntryKey:(id)arg1 withData:(id)arg2;
- (id)initWithEntryKey:(id)arg1 withDate:(id)arg2;
- (id)initWithEntryKey:(id)arg1 withRawData:(id)arg2;
- (bool)isErrorEntry;
- (bool)isKeyAggregateValue:(id)arg1;
- (bool)isKeyDynamic:(id)arg1;
- (id)keyValuePathForKey:(id)arg1;
- (id)keys;
- (void)loadDynamicKeys;
- (id)objectForKey:(id)arg1;
- (id)objectForKeyedSubscript:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (id)sem;
- (id)serialized;
- (id)serializedForJSON;
- (void)setDictionary:(id)arg1;
- (void)setDynamicObjectsFromRawData:(id)arg1;
- (void)setEntryDate:(id)arg1;
- (void)setEntryDefinition:(id)arg1;
- (void)setEntryID:(long long)arg1;
- (void)setEntryKey:(id)arg1;
- (void)setExistsInDB:(bool)arg1;
- (void)setIsErrorEntry:(bool)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)setObjectsFromData:(id)arg1;
- (void)setObjectsFromRawData:(id)arg1;
- (void)setSem:(id)arg1;
- (void)setWriteToDB:(bool)arg1;
- (int)staticArraySizeForKey:(id)arg1;
- (id)subEntryKey;
- (id)unitForKey:(id)arg1;
- (bool)writeToDB;

@end
