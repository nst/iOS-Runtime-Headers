/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MarkupUI.framework/MarkupUI
 */

@interface MarkupViewController : UIViewController <MUContentViewControllerDelegate, UINavigationBarDelegate, UIToolbarDelegate> {
    NSUndoManager * _akUndoManager;
    bool  _allowShakeToUndo;
    bool  _alreadyLoggedSavingForThisDocument;
    NSData * _archivedModelData;
    UIColor * _backgroundColor;
    UIBarButtonItem * _cancelButton;
    bool  _centersIgnoringContentInsets;
    UIView * _contentContainerView;
    UIViewController<MUContentViewControllerProtocol> * _contentViewController;
    <MarkupViewControllerDelegate> * _delegate;
    id  _digestedSourceContent;
    UIBarButtonItem * _doneButton;
    bool  _encryptPrivateMetadata;
    bool  _forcesPDFViewTopAlignment;
    NSString * _hostProcessBundleIdentifier;
    double  _initialContentScale;
    unsigned long long  _inkStyle;
    bool  _isAnimatingMarkupExtensionTransition;
    AKToolbarView * _modernToolbar;
    UINavigationBar * _navBar;
    UIColor * _navBarTitleColor;
    UINavigationItem * _navItem;
    bool  _navigationModeHorizontal;
    bool  _needToPerformDocumentClosedTeardown;
    bool  _needToPerformFullTeardown;
    bool  _observingAKCurrentPageIndex;
    bool  _pencilAlwaysDraws;
    UIImage * _placeholderImage;
    UIImageView * _placeholderImageView;
    NSString * _preferredFileDisplayName;
    bool  _shapeDetectionEnabled;
    bool  _showAsFormSheet;
    bool  _showShareButtonInToolbar;
    bool  _showThumbnailViewForMultipage;
    id  _sourceContent;
    NSString * _sourceContentType;
    bool  _thumbnailViewHidden;
    UIView * _toolbar;
    NSLayoutConstraint * _toolbarBottomConstraint;
    bool  _toolbarHidden;
    UIColor * _toolbarItemTintColor;
    long long  _toolbarPosition;
    UIColor * _toolbarTintColor;
    NSLayoutConstraint * _toolbarTopAttachedConstraint;
    NSLayoutConstraint * _toolbarTopConstraint;
    UIView * _transitionDimmingView;
    bool  _useFancyTransition;
    bool  _userDidCancel;
    UIView * _whiteView;
}

@property (nonatomic, retain) NSUndoManager *akUndoManager;
@property (nonatomic) bool allEditingDisabled;
@property (nonatomic) bool allowShakeToUndo;
@property (nonatomic) bool alreadyLoggedSavingForThisDocument;
@property (nonatomic, readonly) AKController *annotationController;
@property (nonatomic) bool annotationEditingEnabled;
@property (retain) NSData *archivedModelData;
@property (copy) UIColor *backgroundColor;
@property (retain) UIBarButtonItem *cancelButton;
@property (nonatomic) bool centersIgnoringContentInsets;
@property (retain) UIView *contentContainerView;
@property (retain) UIViewController<MUContentViewControllerProtocol> *contentViewController;
@property (nonatomic, readonly) UIScrollView *contentViewScrollView;
@property (nonatomic) unsigned long long currentPDFPageIndex;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MarkupViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (retain) id digestedSourceContent;
@property (retain) UIBarButtonItem *doneButton;
@property bool encryptPrivateMetadata;
@property (nonatomic) bool forcesPDFViewTopAlignment;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSString *hostProcessBundleIdentifier;
@property double initialContentScale;
@property unsigned long long inkStyle;
@property bool isAnimatingMarkupExtensionTransition;
@property (readonly) bool isUsedOnDarkBackground;
@property (retain) AKToolbarView *modernToolbar;
@property (nonatomic, retain) UINavigationBar *navBar;
@property (copy) UIColor *navBarTitleColor;
@property (nonatomic, retain) UINavigationItem *navItem;
@property (getter=isNavigationModeHorizontal, nonatomic) bool navigationModeHorizontal;
@property bool needToPerformDocumentClosedTeardown;
@property bool needToPerformFullTeardown;
@property (getter=isObservingAKCurrentPageIndex) bool observingAKCurrentPageIndex;
@property (nonatomic, readonly) NSString *outputType;
@property (readonly) PDFDocument *pdfDocument;
@property (readonly) PDFView *pdfView;
@property (nonatomic) bool pencilAlwaysDraws;
@property (retain) UIImage *placeholderImage;
@property (retain) UIImageView *placeholderImageView;
@property (nonatomic, copy) NSString *preferredFileDisplayName;
@property (getter=isShapeDetectionEnabled, nonatomic) bool shapeDetectionEnabled;
@property bool showAsFormSheet;
@property (nonatomic) bool showShareButtonInToolbar;
@property (nonatomic) bool showThumbnailViewForMultipage;
@property (nonatomic, retain) id sourceContent;
@property (retain) NSString *sourceContentType;
@property (readonly) Class superclass;
@property (getter=isThumbnailViewHidden, nonatomic) bool thumbnailViewHidden;
@property (nonatomic, retain) UIView *toolbar;
@property (retain) NSLayoutConstraint *toolbarBottomConstraint;
@property (getter=isToolbarHidden, nonatomic) bool toolbarHidden;
@property (copy) UIColor *toolbarItemTintColor;
@property (nonatomic) long long toolbarPosition;
@property (copy) UIColor *toolbarTintColor;
@property (retain) NSLayoutConstraint *toolbarTopAttachedConstraint;
@property (retain) NSLayoutConstraint *toolbarTopConstraint;
@property (retain) UIView *transitionDimmingView;
@property bool useFancyTransition;
@property bool userDidCancel;
@property (retain) UIView *whiteView;

+ (bool)_isInLowMemoryEnvironment;
+ (double)_maxImageDimensionInView;
+ (id)cleanImageMetadataFromData:(id)arg1;
+ (bool)hasPrivateImageMetadata:(id)arg1;
+ (id)markupBarButtonItemWithTarget:(id)arg1 action:(SEL)arg2;

- (void).cxx_destruct;
- (void)_bailFailedAnimateEnterMarkup;
- (void)_cancel;
- (void)_cleanupPlaceholderImage;
- (void)_commonInit;
- (void)_createCancelDoneNavBar;
- (id)_effectiveBackgroundColor;
- (id)_effectiveNavBarTitleColor;
- (id)_effectiveToolbarItemTintColor;
- (id)_effectiveToolbarTintColor;
- (void)_installContentViewControllerForUTI:(id)arg1;
- (void)_loadSourceContentWithCompletion:(id /* block */)arg1;
- (id)_markupBlackColor;
- (void)_presentPlaceholderImage;
- (void)_saveEditing:(id)arg1;
- (void)_setData:(id)arg1 withArchivedModelData:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)_setFileURL:(id)arg1 withArchivedModelData:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)_setupAnnotationController;
- (void)_setupInitialBaseModelScaleFactorWithScreenSize:(struct CGSize { double x1; double x2; })arg1 windowDecorationSize:(struct CGSize { double x1; double x2; })arg2;
- (void)_showTextStyleOptions:(id)arg1;
- (bool)_sourceImageMayContainBaseImageAndModel;
- (void)_startObservingAnnotationController;
- (void)_stopObservingAnnotationController;
- (void)_toolbarShareButtonTapped:(id)arg1;
- (void)_updateAndLoadSourceContent:(id)arg1 withArchivedModelData:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)_updateAppearanceForTraitCollection:(id)arg1;
- (void)_updateConstraintsForBarPosition:(long long)arg1;
- (void)_updateundoBarButtonWithController:(id)arg1;
- (bool)_useLegacyToolbar;
- (bool)_writeToDataConsumer:(struct CGDataConsumer { }*)arg1 embedSourceImageAndEditModel:(bool)arg2 error:(id*)arg3;
- (void)adjustContentInsetsForBars;
- (id)akUndoManager;
- (bool)allEditingDisabled;
- (bool)allowShakeToUndo;
- (bool)alreadyLoggedSavingForThisDocument;
- (id)annotationController;
- (id)annotationControllerOfContentViewController:(id)arg1 willSetToolbarItems:(id)arg2;
- (bool)annotationEditingEnabled;
- (id)archivedModelData;
- (id)backgroundColor;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)cancel:(id)arg1;
- (id)cancelButton;
- (bool)centersIgnoringContentInsets;
- (id)contentContainerView;
- (id)contentViewController;
- (bool)contentViewController:(id)arg1 shouldHandleURL:(id)arg2;
- (id)contentViewScrollView;
- (void)controllerWillDismissSignatureCaptureView:(id)arg1;
- (void)controllerWillDismissSignatureManagerView:(id)arg1;
- (void)controllerWillShowSignatureCaptureView:(id)arg1;
- (void)controllerWillShowSignatureManagerView:(id)arg1;
- (id)createArchivedModelData;
- (unsigned long long)currentPDFPageIndex;
- (id)dataRepresentationEmbeddingSourceImageAndEditModel:(bool)arg1 error:(id*)arg2;
- (id)dataRepresentationWithError:(id*)arg1;
- (void)dealloc;
- (id)delegate;
- (void)delete:(id)arg1;
- (id)digestedSourceContent;
- (void)documentDidCloseTeardown;
- (void)done:(id)arg1;
- (id)doneButton;
- (void)duplicate:(id)arg1;
- (void)editCheckpointReachedForAnnotationController:(id)arg1;
- (void)editDetectedForAnnotationController:(id)arg1;
- (void)editTextAnnotation:(id)arg1;
- (bool)encryptPrivateMetadata;
- (id)filteredToolbarItemsForItems:(id)arg1 fromController:(id)arg2;
- (bool)forcesPDFViewTopAlignment;
- (void)fullTeardown;
- (id)hostProcessBundleIdentifier;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (double)initialContentScale;
- (unsigned long long)inkStyle;
- (bool)isAnimatingMarkupExtensionTransition;
- (bool)isNavigationModeHorizontal;
- (bool)isObservingAKCurrentPageIndex;
- (bool)isShapeDetectionEnabled;
- (bool)isThumbnailViewHidden;
- (bool)isToolbarHidden;
- (bool)isUsedOnDarkBackground;
- (double)modelBaseScaleFactorOfPageAtIndex:(unsigned long long)arg1 forContentViewController:(id)arg2;
- (id)modernToolbar;
- (void)motionEnded:(long long)arg1 withEvent:(id)arg2;
- (id)navBar;
- (id)navBarTitleColor;
- (id)navItem;
- (bool)needToPerformDocumentClosedTeardown;
- (bool)needToPerformFullTeardown;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)outputType;
- (id)pdfDocument;
- (id)pdfView;
- (void)penStrokeCompletedForAnnotationController:(id)arg1;
- (bool)pencilAlwaysDraws;
- (id)placeholderImage;
- (id)placeholderImageView;
- (id)popoverPresentingViewControllerForAnnotationController:(id)arg1;
- (long long)positionForBar:(id)arg1;
- (void)positionSketchOverlay:(id)arg1 forContentViewController:(id)arg2;
- (id)preferredFileDisplayName;
- (long long)preferredStatusBarStyle;
- (void)restoreToolModeForContentType;
- (void)revert;
- (void)setAkUndoManager:(id)arg1;
- (void)setAllEditingDisabled:(bool)arg1;
- (void)setAllowShakeToUndo:(bool)arg1;
- (void)setAlreadyLoggedSavingForThisDocument:(bool)arg1;
- (void)setAnnotationEditingEnabled:(bool)arg1;
- (void)setArchivedModelData:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setCancelButton:(id)arg1;
- (void)setCentersIgnoringContentInsets:(bool)arg1;
- (void)setContentContainerView:(id)arg1;
- (void)setContentViewController:(id)arg1;
- (void)setCurrentPDFPageIndex:(unsigned long long)arg1;
- (void)setData:(id)arg1;
- (void)setData:(id)arg1 withArchivedModelData:(id)arg2;
- (void)setData:(id)arg1 withArchivedModelData:(id)arg2 placeholderImage:(id)arg3;
- (void)setDelegate:(id)arg1;
- (void)setDigestedSourceContent:(id)arg1;
- (void)setDoneButton:(id)arg1;
- (void)setEncryptPrivateMetadata:(bool)arg1;
- (void)setFileURL:(id)arg1;
- (void)setFileURL:(id)arg1 withArchivedModelData:(id)arg2;
- (void)setFileURL:(id)arg1 withArchivedModelData:(id)arg2 placeholderImage:(id)arg3;
- (void)setForcesPDFViewTopAlignment:(bool)arg1;
- (void)setHostProcessBundleIdentifier:(id)arg1;
- (void)setImage:(id)arg1;
- (void)setImage:(id)arg1 withArchivedModelData:(id)arg2;
- (void)setImage:(id)arg1 withArchivedModelData:(id)arg2 placeholderImage:(id)arg3;
- (void)setInitialContentScale:(double)arg1;
- (void)setInkStyle:(unsigned long long)arg1;
- (void)setIsAnimatingMarkupExtensionTransition:(bool)arg1;
- (void)setModernToolbar:(id)arg1;
- (void)setNavBar:(id)arg1;
- (void)setNavBarTitleColor:(id)arg1;
- (void)setNavItem:(id)arg1;
- (void)setNavigationModeHorizontal:(bool)arg1;
- (void)setNeedToPerformDocumentClosedTeardown:(bool)arg1;
- (void)setNeedToPerformFullTeardown:(bool)arg1;
- (void)setObservingAKCurrentPageIndex:(bool)arg1;
- (void)setPencilAlwaysDraws:(bool)arg1;
- (void)setPlaceholderImage:(id)arg1;
- (void)setPlaceholderImageView:(id)arg1;
- (void)setPreferredFileDisplayName:(id)arg1;
- (void)setShapeDetectionEnabled:(bool)arg1;
- (void)setShowAsFormSheet:(bool)arg1;
- (void)setShowShareButtonInToolbar:(bool)arg1;
- (void)setShowThumbnailViewForMultipage:(bool)arg1;
- (void)setSourceContent:(id)arg1;
- (void)setSourceContent:(id)arg1 withArchivedModelData:(id)arg2;
- (void)setSourceContentType:(id)arg1;
- (void)setThumbnailViewHidden:(bool)arg1;
- (void)setToolbar:(id)arg1;
- (void)setToolbarBottomConstraint:(id)arg1;
- (void)setToolbarHidden:(bool)arg1;
- (void)setToolbarHidden:(bool)arg1 animated:(bool)arg2;
- (void)setToolbarItemTintColor:(id)arg1;
- (void)setToolbarPosition:(long long)arg1;
- (void)setToolbarTintColor:(id)arg1;
- (void)setToolbarTopAttachedConstraint:(id)arg1;
- (void)setToolbarTopConstraint:(id)arg1;
- (void)setTransitionDimmingView:(id)arg1;
- (void)setUseFancyTransition:(bool)arg1;
- (void)setUserDidCancel:(bool)arg1;
- (void)setWhiteView:(id)arg1;
- (bool)showAsFormSheet;
- (bool)showShareButtonInToolbar;
- (bool)showThumbnailViewForMultipage;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })sketchOverlayInsets;
- (id)sourceContent;
- (id)sourceContentType;
- (id)toolbar;
- (id)toolbarBottomConstraint;
- (long long)toolbarController:(id)arg1 positionForBar:(id)arg2;
- (id)toolbarItemTintColor;
- (long long)toolbarPosition;
- (id)toolbarTintColor;
- (id)toolbarTopAttachedConstraint;
- (id)toolbarTopConstraint;
- (void)traitCollectionDidChange:(id)arg1;
- (id)transitionDimmingView;
- (id)undoManager;
- (id)undoManagerForContentViewController:(id)arg1;
- (bool)useFancyTransition;
- (bool)userDidCancel;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (id)whiteView;
- (void)willBeginLoadingNewDocument;
- (bool)writeToURL:(id)arg1 embeddingSourceImageAndEditModel:(bool)arg2 error:(id*)arg3;
- (bool)writeToURL:(id)arg1 error:(id*)arg2;

@end
