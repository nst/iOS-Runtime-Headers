/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI
 */

@interface CAMCaptureEngine : NSObject <CAMPanoramaProcessorDelegate> {
    CAMMemoizationCache * __captureEngineDeviceCache;
    NSObject<OS_dispatch_queue> * __captureServicesQueue;
    AVCaptureSession * __captureSession;
    NSObject<OS_dispatch_queue> * __captureSessionQueue;
    NSHashTable * __effectsPreviewSampleBufferDelegates;
    NSObject<OS_dispatch_queue> * __effectsPreviewSampleBufferQueue;
    CIContext * __effectsPreviewSurfaceFilteringContext;
    NSObject<OS_dispatch_queue> * __effectsPreviewSurfaceFilteringQueue;
    long long  __engineOptions;
    NSObject<OS_dispatch_queue> * __metadataObjectsQueue;
    unsigned long long  __numberOfRecoveryAttempts;
    unsigned int  __panoramaAssertionIdentifier;
    NSObject<OS_dispatch_semaphore> * __panoramaFirstImageQueueUpdateSemaphore;
    NSObject<OS_dispatch_queue> * __panoramaFirstImageQueueUpdateSemaphoreQueue;
    struct _CAImageQueue { } * __panoramaImageQueue;
    CAMPanoramaProcessor * __panoramaProcessor;
    NSObject<OS_dispatch_queue> * __panoramaSampleBufferQueue;
    NSObject<OS_dispatch_queue> * __panoramaSubgraphQueue;
    bool  __performingRecovery;
    CAMPowerController * __powerController;
    NSObject<OS_dispatch_queue> * __recoveryMutexQueue;
    NSMutableArray * __servicesQueueCaptureServices;
    NSMutableDictionary * __sessionQueueRegisteredStillImageRequests;
    NSMutableDictionary * __sessionQueueRequestsBeingRecorded;
    AVCaptureVideoPreviewLayer * __videoPreviewLayer;
    AVCaptureDevice * _audioCameraDevice;
    AVCaptureDeviceInput * _audioCaptureDeviceInput;
    AVCaptureDevice * _cameraDevice;
    AVCaptureVideoDataOutput * _effectsPreviewVideoDataOutput;
    bool  _interrupted;
    AVCaptureStillImageOutput * _legacyStillImageOutput;
    bool  _managedDevicesLockedForConfiguration;
    AVCaptureMetadataOutput * _metadataOutput;
    CAMCaptureMovieFileOutput * _movieFileOutput;
    CAMPanoramaConfiguration * _panoramaConfiguration;
    CAMPanoramaOutput * _panoramaVideoDataOutput;
    AVCapturePhotoOutput * _stillImageOutput;
}

@property (nonatomic, readonly) CAMMemoizationCache *_captureEngineDeviceCache;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *_captureServicesQueue;
@property (nonatomic, readonly) AVCaptureSession *_captureSession;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *_captureSessionQueue;
@property (nonatomic, readonly) NSHashTable *_effectsPreviewSampleBufferDelegates;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *_effectsPreviewSampleBufferQueue;
@property (nonatomic, readonly) CIContext *_effectsPreviewSurfaceFilteringContext;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *_effectsPreviewSurfaceFilteringQueue;
@property (nonatomic, readonly) long long _engineOptions;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *_metadataObjectsQueue;
@property (setter=_setNumberOfRecoveryAttempts:, nonatomic) unsigned long long _numberOfRecoveryAttempts;
@property (setter=_setPanoramaAssertionIdentifier:, nonatomic) unsigned int _panoramaAssertionIdentifier;
@property (setter=_setPanoramaFirstImageQueueUpdateSemaphore:, nonatomic, retain) NSObject<OS_dispatch_semaphore> *_panoramaFirstImageQueueUpdateSemaphore;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *_panoramaFirstImageQueueUpdateSemaphoreQueue;
@property (setter=_setPanoramaImageQueue:, nonatomic) struct _CAImageQueue { }*_panoramaImageQueue;
@property (setter=_setPanoramaProcessor:, nonatomic, retain) CAMPanoramaProcessor *_panoramaProcessor;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *_panoramaSampleBufferQueue;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *_panoramaSubgraphQueue;
@property (getter=_isPerformingRecovery, setter=_setPerformingRecovery:, nonatomic) bool _performingRecovery;
@property (nonatomic, readonly) CAMPowerController *_powerController;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *_recoveryMutexQueue;
@property (nonatomic, readonly) NSMutableArray *_servicesQueueCaptureServices;
@property (nonatomic, readonly) NSMutableDictionary *_sessionQueueRegisteredStillImageRequests;
@property (nonatomic, readonly) NSMutableDictionary *_sessionQueueRequestsBeingRecorded;
@property (nonatomic, readonly) AVCaptureVideoPreviewLayer *_videoPreviewLayer;
@property (nonatomic, retain) AVCaptureDevice *cameraDevice;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (getter=isInterrupted, setter=_setInterrupted:, nonatomic) bool interrupted;
@property (getter=areManagedDevicesLockedForConfiguration, nonatomic) bool managedDevicesLockedForConfiguration;
@property (readonly) Class superclass;
@property (nonatomic, readonly) AVCaptureVideoPreviewLayer *videoPreviewLayer;

+ (void)preheatCaptureResources;

- (void).cxx_destruct;
- (id)_accumulatedUserInfoFromCommand:(id)arg1;
- (void)_beginSessionConfigurationIfRequiredByCommand:(id)arg1 withContext:(id)arg2;
- (void)_cancelDelayedSessionNonstartRecovery;
- (id)_captureEngineDeviceCache;
- (id)_captureEngineDeviceForDevice:(long long)arg1;
- (void)_captureOutput:(id)arg1 didFinishRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3 forVideoCaptureRequest:(id)arg4 videoZoomFactor:(double)arg5 error:(id)arg6;
- (id)_captureServicesQueue;
- (id)_captureSession;
- (id)_captureSessionQueue;
- (void)_commitSessionConfigurationIfNecessary;
- (id)_correspondingCaptureEngineDeviceForCaptureInput:(id)arg1;
- (double)_delayForRecoveryAttempt:(unsigned long long)arg1;
- (void)_didFinishProcessingStillImageSurface:(struct __IOSurface { }*)arg1 ofSize:(unsigned long long)arg2 withPreviewSurface:(struct __IOSurface { }*)arg3 metadata:(id)arg4 forSettings:(id)arg5 error:(id)arg6;
- (id)_effectsPreviewSampleBufferDelegates;
- (id)_effectsPreviewSampleBufferQueue;
- (id)_effectsPreviewSurfaceFilteringContext;
- (id)_effectsPreviewSurfaceFilteringQueue;
- (long long)_engineOptions;
- (void)_executeCommand:(id)arg1 withContext:(id)arg2;
- (void)_handleApplicationDidEnterBackground:(id)arg1;
- (void)_handleApplicationWillEnterForeground:(id)arg1;
- (void)_handleFailedSessionRecoveryAttemptAfterDelay:(bool)arg1;
- (void)_handleSessionDidStartRunning:(id)arg1;
- (void)_handleSessionDidStopRunning:(id)arg1;
- (void)_handleSessionInterruption:(id)arg1;
- (void)_handleSessionInterruptionEnded:(id)arg1;
- (void)_handleSessionRuntimeError:(id)arg1;
- (bool)_isPerformingRecovery;
- (bool)_isSessionModificationRequiredByCommand:(id)arg1;
- (bool)_lockAllEngineManagedDevices;
- (bool)_lockManagedCapturedDevice:(id)arg1;
- (void)_markSessionRecoveryAsRecovered;
- (id)_metadataObjectsQueue;
- (struct __IOSurface { }*)_newFilteredSurfaceFromSurface:(struct __IOSurface { }*)arg1 filter:(id)arg2;
- (long long)_notificationForError:(struct __CFString { }*)arg1;
- (void)_notifyServicesOfCompletedCaptureRequest:(id)arg1 withStillImageResult:(id)arg2;
- (void)_notifyServicesOfPanoramaConfigurationChangeWithDirection:(long long)arg1;
- (unsigned long long)_numberOfRecoveryAttempts;
- (unsigned int)_panoramaAssertionIdentifier;
- (id)_panoramaFirstImageQueueUpdateSemaphore;
- (id)_panoramaFirstImageQueueUpdateSemaphoreQueue;
- (struct _CAImageQueue { }*)_panoramaImageQueue;
- (id)_panoramaProcessor;
- (id)_panoramaSampleBufferQueue;
- (void)_panoramaSampleBufferQueue_stopPanoramaCaptureIfNecessary;
- (id)_panoramaSubgraphQueue;
- (void)_performPostprocessingForRequest:(id)arg1 withStillImageResult:(id)arg2 filter:(id)arg3;
- (void)_performSessionNonstartRecoveryIfNeeded;
- (void)_performSessionRuntimeRecovery:(id)arg1;
- (id)_powerController;
- (void)_recoverFromSessionRuntimeError;
- (id)_recoveryMutexQueue;
- (id)_requestFromPossibleCaptureOutput:(id)arg1;
- (void)_scheduleDelayedRecoveryCheckIfNecessary;
- (void)_scheduleDelayedSessionNonstartRecovery;
- (id)_servicesQueueCaptureServices;
- (void)_sessionQueuePanoramaSetup;
- (void)_sessionQueuePanoramaTeardown;
- (id)_sessionQueueRegisteredStillImageRequests;
- (id)_sessionQueueRequestsBeingRecorded;
- (void)_setInterrupted:(bool)arg1;
- (void)_setNumberOfRecoveryAttempts:(unsigned long long)arg1;
- (void)_setPanoramaAssertionIdentifier:(unsigned int)arg1;
- (void)_setPanoramaFirstImageQueueUpdateSemaphore:(id)arg1;
- (void)_setPanoramaImageQueue:(struct _CAImageQueue { }*)arg1;
- (void)_setPanoramaProcessor:(id)arg1;
- (void)_setPerformingRecovery:(bool)arg1;
- (void)_setupKeyValueObservingForLegacyStillImageOutput;
- (bool)_shouldStartSessionOnConfigurationChanges;
- (void)_subgraphQueueCreatePanoramaImageQueueIfNecessary;
- (void)_subgraphQueueCreatePanoramaProcessorIfNecessary;
- (void)_subgraphQueueHandlePanoramaErrorNotification:(struct __CFString { }*)arg1;
- (void)_subgraphQueueHandlePanoramaStatusNotification:(struct __CFString { }*)arg1;
- (void)_subgraphQueueHandlePanoramaWarningNotification:(struct __CFString { }*)arg1;
- (void)_teardownKeyValueObservingForLegacyStillImageOutput;
- (void)_unlockAllEngineManagedDevices;
- (void)_unlockManagedCaptureDevice:(id)arg1;
- (void)_updateContext:(id)arg1;
- (void)_updateCurrentCameraDevice;
- (void)_updateEffectsSubgraph;
- (bool)_updatePanoramaSubgraphForEnteringBackground:(bool)arg1;
- (void)_validateSessionRecovery;
- (id)_validateVideoAtURL:(id)arg1 withCaptureError:(id)arg2 isVideoComplement:(bool)arg3 stillImageDisplayTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg4 reportedDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg5 outActualDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg6 outVideoRecordingStoppedReason:(long long*)arg7;
- (id)_videoPreviewLayer;
- (bool)areManagedDevicesLockedForConfiguration;
- (id)audioCaptureDevice;
- (id)audioCaptureDeviceInput;
- (id)backCameraDevice;
- (id)backDuoCameraDevice;
- (id)backTelephotoCameraDevice;
- (id)cameraDevice;
- (void)captureOutput:(id)arg1 didCapturePhotoForResolvedSettings:(id)arg2;
- (void)captureOutput:(id)arg1 didDropSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 fromConnection:(id)arg3;
- (void)captureOutput:(id)arg1 didFinishCaptureForResolvedSettings:(id)arg2 error:(id)arg3;
- (void)captureOutput:(id)arg1 didFinishProcessingLivePhotoToMovieFileAtURL:(id)arg2 duration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 photoDisplayTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg4 resolvedSettings:(id)arg5 error:(id)arg6;
- (void)captureOutput:(id)arg1 didFinishProcessingOriginalPhotoSurface:(struct __IOSurface { }*)arg2 originalPhotoSurfaceSize:(unsigned long long)arg3 previewPhotoSurface:(struct __IOSurface { }*)arg4 metadata:(id)arg5 resolvedSettings:(id)arg6 error:(id)arg7;
- (void)captureOutput:(id)arg1 didFinishProcessingPhotoSurface:(struct __IOSurface { }*)arg2 photoSurfaceSize:(unsigned long long)arg3 previewPhotoSurface:(struct __IOSurface { }*)arg4 metadata:(id)arg5 resolvedSettings:(id)arg6 error:(id)arg7;
- (void)captureOutput:(id)arg1 didFinishRecordingLivePhotoMovieForEventualFileAtURL:(id)arg2 resolvedSettings:(id)arg3;
- (void)captureOutput:(id)arg1 didFinishRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3 error:(id)arg4;
- (void)captureOutput:(id)arg1 didOutputMetadataObjects:(id)arg2 fromConnection:(id)arg3;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 fromConnection:(id)arg3;
- (void)captureOutput:(id)arg1 didStartRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3;
- (void)captureOutput:(id)arg1 willBeginCaptureForResolvedSettings:(id)arg2;
- (void)captureOutput:(id)arg1 willCapturePhotoForResolvedSettings:(id)arg2;
- (void)changeToPanoramaDirection:(long long)arg1;
- (void)completeLegacyStillImageCaptureRequest:(id)arg1 withResult:(id)arg2;
- (void)dealloc;
- (id)effectsPreviewVideoDataOutput;
- (void)enqueueCommand:(id)arg1;
- (void)enumerateCaptureServicesUsingBlock:(id)arg1;
- (id)frontCameraDevice;
- (id)initWithOptions:(long long)arg1;
- (id)initWithPowerController:(id)arg1 options:(long long)arg2;
- (bool)isInterrupted;
- (id)legacyStillImageOutput;
- (id)metadataOutput;
- (id)movieFileOutput;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)panoramaConfiguration;
- (void)panoramaProcessor:(id)arg1 didProcessSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 withStatus:(int)arg3 forRequest:(id)arg4;
- (id)panoramaVideoDataOutput;
- (void)registerCaptureService:(id)arg1;
- (void)registerEffectsPreviewSampleBufferDelegate:(id)arg1;
- (void)registerLegacyStillImageCaptureRequest:(id)arg1;
- (void)registerStillImageCaptureRequest:(id)arg1 withSettings:(id)arg2;
- (void)registerVideoCaptureRequest:(id)arg1;
- (void)setCameraDevice:(id)arg1;
- (void)setManagedDevicesLockedForConfiguration:(bool)arg1;
- (void)start;
- (void)startPanoramaCaptureWithRequest:(id)arg1;
- (id)stillImageOutput;
- (void)stop;
- (void)stopPanoramaCapture;
- (void)stopRecording;
- (void)unregisterCaptureService:(id)arg1;
- (void)unregisterEffectsPreviewSampleBufferDelegate:(id)arg1;
- (void)updateImageQueueForPanoramaPreviewView:(id)arg1;
- (id)videoPreviewLayer;

@end
