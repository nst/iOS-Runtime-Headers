/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation
 */

@interface IDSBaseMessage : NSObject <NSCopying> {
    NSURL * _URLOverride;
    bool  _alwaysForceCellular;
    NSDictionary * _cachedBody;
    NSDictionary * _clientInfo;
    id /* block */  _completionBlock;
    id  _context;
    NSDate * _creationDate;
    NSString * _dataUsageBundleIdentifier;
    id /* block */  _deliveryAcknowledgementBlock;
    long long  _deliveryMechanism;
    NSString * _dsAuthID;
    bool  _forceCellular;
    bool  _hasAttemptedAPSDelivery;
    bool  _hasReceivedPushAck;
    bool  _highPriority;
    bool  _httpDoNotDecodeData;
    long long  _importanceLevel;
    unsigned long long  _receivedByteCount;
    NSDictionary * _responseAlert;
    NSNumber * _retryCount;
    unsigned long long  _sentByteCount;
    NSString * _service;
    NSData * _serviceData;
    <IDSBaseMessageSigningSession> * _signingSession;
    NSString * _subService;
    double  _timeSent;
    double  _timeout;
    int  _timeoutRetries;
    NSString * _topic;
    NSString * _underlyingService;
    unsigned long long  _uniqueID;
    NSDictionary * _userInfo;
    bool  _usingOutgoingPush;
    bool  _wantsBinaryPush;
    bool  _wantsIntegerUniqueIDs;
    bool  _wantsMultipleResponses;
    bool  _wantsResponse;
}

@property (nonatomic, readonly, copy) NSData *IDCertificate;
@property (copy) NSURL *URLOverride;
@property (setter=_setCachedBody:, retain) NSDictionary *_cachedBody;
@property (setter=_setUsingOutgoingPush:) bool _usingOutgoingPush;
@property (readonly) NSDictionary *additionalInternalHeaders;
@property (readonly) NSDictionary *additionalMessageHeaders;
@property (readonly) NSDictionary *additionalMessageHeadersForOutgoingPush;
@property (readonly) NSDictionary *additionalQueryStringParameters;
@property (readonly) bool allowDualDelivery;
@property bool alwaysForceCellular;
@property (readonly) double anisetteHeadersTimeout;
@property (readonly) NSString *bagKey;
@property (nonatomic, copy) NSMutableArray *certDataArray;
@property (copy) NSDictionary *clientInfo;
@property (readonly) long long command;
@property (copy) id /* block */ completionBlock;
@property (retain) id context;
@property (retain) NSDate *creationDate;
@property (readonly) double customRetryInterval;
@property (readonly) NSString *dataUsageBundleIdentifier;
@property (copy) id /* block */ deliveryAcknowledgementBlock;
@property long long deliveryMechanism;
@property (setter=setDSAuthID:, nonatomic, copy) NSString *dsAuthID;
@property bool forceCellular;
@property bool hasAttemptedAPSDelivery;
@property bool hasReceivedPushAck;
@property bool highPriority;
@property bool httpDoNotDecodeData;
@property (nonatomic, readonly) struct __SecKey { }*identityPrivateKey;
@property (nonatomic, readonly) struct __SecKey { }*identityPublicKey;
@property (readonly) bool ignoresNetworkConnectivity;
@property long long importanceLevel;
@property (readonly) bool isValidMessage;
@property (readonly) bool isWebTunnelMessage;
@property (readonly) int maxTimeoutRetries;
@property (readonly) NSDictionary *messageBody;
@property (readonly) NSDictionary *messageBodyUsingCache;
@property (readonly) NSDictionary *nonStandardMessageHeadersForOutgoingPush;
@property (readonly) bool payloadCanBeLogged;
@property (nonatomic, copy) NSMutableArray *privateKeyArray;
@property (nonatomic, copy) NSMutableArray *publicKeyArray;
@property (nonatomic, copy) NSData *pushCertificate;
@property (nonatomic) struct __SecKey { }*pushPrivateKey;
@property (nonatomic) struct __SecKey { }*pushPublicKey;
@property (nonatomic, copy) NSData *pushToken;
@property (nonatomic) unsigned long long receivedByteCount;
@property (readonly) NSArray *requiredKeys;
@property (copy) NSDictionary *responseAlertInfo;
@property (readonly) long long responseCommand;
@property (nonatomic, copy) NSNumber *retryCount;
@property (readonly) NSString *retryCountKey;
@property (nonatomic) unsigned long long sentByteCount;
@property (nonatomic, copy) NSNumber *serverTimestamp;
@property (nonatomic, copy) NSNumber *serverTimestampReceivedDate;
@property (copy) NSString *service;
@property (copy) NSData *serviceData;
@property (nonatomic, retain) <IDSBaseMessageSigningSession> *signingSession;
@property (copy) NSString *subService;
@property double timeSent;
@property double timeout;
@property int timeoutRetries;
@property (retain) NSString *topic;
@property (copy) NSString *underlyingService;
@property unsigned long long uniqueID;
@property (readonly) NSString *uniqueIDString;
@property (readonly) NSString *userAgentHeaderString;
@property (nonatomic, copy) NSMutableArray *userIDArray;
@property (copy) NSDictionary *userInfo;
@property (readonly) bool wantsAPSRetries;
@property (readonly) bool wantsAnisetteHeaders;
@property (readonly) bool wantsBagKey;
@property bool wantsBinaryPush;
@property (readonly) bool wantsBodySignature;
@property (readonly) bool wantsCFNetworkTimeout;
@property (readonly) bool wantsCompressedBody;
@property (readonly) bool wantsCustomRetryInterval;
@property (readonly) bool wantsExtraTimeoutRetry;
@property (readonly) bool wantsHTTPGet;
@property (readonly) bool wantsHTTPHeaders;
@property (readonly) bool wantsIDSServer;
@property (readonly) bool wantsIDSSignatures;
@property bool wantsIntegerUniqueIDs;
@property (readonly) bool wantsJSONBody;
@property (readonly) bool wantsManagedRetries;
@property bool wantsMultipleResponses;
@property bool wantsResponse;
@property (readonly) bool wantsSignature;
@property (readonly) bool wantsUserAgentInHeaders;

- (void).cxx_destruct;
- (id)IDCertificate;
- (id)URLOverride;
- (void)_cacheBody;
- (id)_cachedBody;
- (void)_clearCache;
- (void)_setCachedBody:(id)arg1;
- (void)_setUsingOutgoingPush:(bool)arg1;
- (bool)_usingOutgoingPush;
- (id)additionalInternalHeaders;
- (id)additionalMessageHeaders;
- (id)additionalMessageHeadersForOutgoingPush;
- (id)additionalQueryStringParameters;
- (bool)allowDualDelivery;
- (bool)alwaysForceCellular;
- (double)anisetteHeadersTimeout;
- (id)bagKey;
- (id)certDataArray;
- (id)clientInfo;
- (long long)command;
- (id /* block */)completionBlock;
- (id)context;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)creationDate;
- (double)customRetryInterval;
- (id)dataUsageBundleIdentifier;
- (id /* block */)deliveryAcknowledgementBlock;
- (long long)deliveryMechanism;
- (id)dsAuthID;
- (bool)forceCellular;
- (void)handleResponseBody:(id)arg1;
- (void)handleResponseDictionary:(id)arg1;
- (void)handleResponseHeaders:(id)arg1;
- (void)handleResponseStatus:(unsigned long long)arg1;
- (bool)hasAttemptedAPSDelivery;
- (bool)hasReceivedPushAck;
- (bool)hasRequiredKeys:(id*)arg1;
- (bool)highPriority;
- (bool)httpDoNotDecodeData;
- (struct __SecKey { }*)identityPrivateKey;
- (struct __SecKey { }*)identityPublicKey;
- (bool)ignoresNetworkConnectivity;
- (long long)importanceLevel;
- (id)init;
- (bool)isIDSMessage;
- (bool)isValidMessage;
- (bool)isWebTunnelMessage;
- (void)logFailureInfo;
- (int)maxTimeoutRetries;
- (id)messageBody;
- (id)messageBodyDataOverride;
- (id)messageBodyUsingCache;
- (id)nonStandardMessageHeadersForOutgoingPush;
- (bool)payloadCanBeLogged;
- (id)privateKeyArray;
- (id)publicKeyArray;
- (id)pushCertificate;
- (struct __SecKey { }*)pushPrivateKey;
- (struct __SecKey { }*)pushPublicKey;
- (id)pushToken;
- (unsigned long long)receivedByteCount;
- (id)requiredKeys;
- (id)responseAlertInfo;
- (long long)responseCommand;
- (id)retryCount;
- (id)retryCountKey;
- (unsigned long long)sentByteCount;
- (id)serverTimestamp;
- (id)serverTimestampReceivedDate;
- (id)service;
- (id)serviceData;
- (void)setAlwaysForceCellular:(bool)arg1;
- (void)setCertDataArray:(id)arg1;
- (void)setClientInfo:(id)arg1;
- (void)setCompletionBlock:(id /* block */)arg1;
- (void)setContext:(id)arg1;
- (void)setCreationDate:(id)arg1;
- (void)setDSAuthID:(id)arg1;
- (void)setDeliveryAcknowledgementBlock:(id /* block */)arg1;
- (void)setDeliveryMechanism:(long long)arg1;
- (void)setForceCellular:(bool)arg1;
- (void)setHasAttemptedAPSDelivery:(bool)arg1;
- (void)setHasReceivedPushAck:(bool)arg1;
- (void)setHighPriority:(bool)arg1;
- (void)setHttpDoNotDecodeData:(bool)arg1;
- (void)setImportanceLevel:(long long)arg1;
- (void)setPrivateKeyArray:(id)arg1;
- (void)setPublicKeyArray:(id)arg1;
- (void)setPushCertificate:(id)arg1;
- (void)setPushPrivateKey:(struct __SecKey { }*)arg1;
- (void)setPushPublicKey:(struct __SecKey { }*)arg1;
- (void)setPushToken:(id)arg1;
- (void)setReceivedByteCount:(unsigned long long)arg1;
- (void)setResponseAlertInfo:(id)arg1;
- (void)setRetryCount:(id)arg1;
- (void)setSentByteCount:(unsigned long long)arg1;
- (void)setServerTimestamp:(id)arg1;
- (void)setServerTimestampReceivedDate:(id)arg1;
- (void)setService:(id)arg1;
- (void)setServiceData:(id)arg1;
- (void)setSigningSession:(id)arg1;
- (void)setSubService:(id)arg1;
- (void)setTimeSent:(double)arg1;
- (void)setTimeout:(double)arg1;
- (void)setTimeoutRetries:(int)arg1;
- (void)setTopic:(id)arg1;
- (void)setURLOverride:(id)arg1;
- (void)setUnderlyingService:(id)arg1;
- (void)setUniqueID:(unsigned long long)arg1;
- (void)setUserIDArray:(id)arg1;
- (void)setUserInfo:(id)arg1;
- (void)setWantsBinaryPush:(bool)arg1;
- (void)setWantsIntegerUniqueIDs:(bool)arg1;
- (void)setWantsMultipleResponses:(bool)arg1;
- (void)setWantsResponse:(bool)arg1;
- (bool)shouldForceDevicesToCarry;
- (id)signingSession;
- (id)subService;
- (double)timeSent;
- (double)timeout;
- (int)timeoutRetries;
- (id)topic;
- (id)underlyingService;
- (unsigned long long)uniqueID;
- (id)uniqueIDString;
- (id)userAgentHeaderString;
- (id)userIDArray;
- (id)userInfo;
- (bool)wantsAPSRetries;
- (bool)wantsAnisetteHeaders;
- (bool)wantsBagKey;
- (bool)wantsBinaryPush;
- (bool)wantsBodySignature;
- (bool)wantsCFNetworkTimeout;
- (bool)wantsCompressedBody;
- (bool)wantsCustomRetryInterval;
- (bool)wantsExtraTimeoutRetry;
- (bool)wantsHTTPGet;
- (bool)wantsHTTPHeaders;
- (bool)wantsIDSServer;
- (bool)wantsIDSSignatures;
- (bool)wantsIntegerUniqueIDs;
- (bool)wantsJSONBody;
- (bool)wantsManagedRetries;
- (bool)wantsMultipleResponses;
- (bool)wantsResponse;
- (bool)wantsSignature;
- (bool)wantsUserAgentInHeaders;

@end
