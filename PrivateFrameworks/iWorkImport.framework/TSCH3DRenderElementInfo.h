/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSCH3DRenderElementInfo : NSObject <NSCopying> {
    bool  _geometryOnly;
    struct tvec2<int> { 
        union { 
            int x; 
            int r; 
            int s; 
        } ; 
        union { 
            int y; 
            int g; 
            int t; 
        } ; 
    }  _index;
    TSCH3DSceneRenderPipeline * _pipeline;
    TSCH3DChartElementProperties * _properties;
    TSCHChartSeries * _series;
    bool  _transparent;
    bool  _twoPasses;
    bool  _useBoundsGeometry;
}

@property (nonatomic, readonly) bool geometryOnly;
@property (nonatomic, readonly) struct tvec2<int> { union { int x_1_1_1; int x_1_1_2; int x_1_1_3; } x1; union { int x_2_1_1; int x_2_1_2; int x_2_1_3; } x2; } index;
@property (nonatomic, readonly, retain) TSCH3DSceneRenderPipeline *pipeline;
@property (nonatomic, readonly, retain) TSCH3DRenderProcessor *processor;
@property (nonatomic, readonly, retain) TSCH3DChartElementProperties *properties;
@property (nonatomic, readonly, retain) TSCHChartSeries *series;
@property (nonatomic) bool transparent;
@property (nonatomic) bool twoPasses;
@property (nonatomic, readonly) bool useBoundsGeometry;

+ (id)infoWithPipeline:(id)arg1 properties:(id)arg2 series:(id)arg3 index:(struct tvec2<int> { union { int x_1_1_1; int x_1_1_2; int x_1_1_3; } x1; union { int x_2_1_1; int x_2_1_2; int x_2_1_3; } x2; })arg4 useBoundsGeometry:(bool)arg5 twoPasses:(bool)arg6 transparent:(bool)arg7 geometryOnly:(bool)arg8;

- (id).cxx_construct;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (bool)geometryOnly;
- (struct tvec2<int> { union { int x_1_1_1; int x_1_1_2; int x_1_1_3; } x1; union { int x_2_1_1; int x_2_1_2; int x_2_1_3; } x2; })index;
- (id)initWithPipeline:(id)arg1 properties:(id)arg2 series:(id)arg3 index:(struct tvec2<int> { union { int x_1_1_1; int x_1_1_2; int x_1_1_3; } x1; union { int x_2_1_1; int x_2_1_2; int x_2_1_3; } x2; })arg4 useBoundsGeometry:(bool)arg5 twoPasses:(bool)arg6 transparent:(bool)arg7 geometryOnly:(bool)arg8;
- (id)pipeline;
- (id)processor;
- (id)properties;
- (id)series;
- (void)setTransparent:(bool)arg1;
- (void)setTwoPasses:(bool)arg1;
- (bool)transparent;
- (bool)twoPasses;
- (bool)useBoundsGeometry;

@end
