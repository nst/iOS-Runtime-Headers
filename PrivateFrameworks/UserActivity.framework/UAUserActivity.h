/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity
 */

@interface UAUserActivity : NSObject <SFCompanionAdvertiserDelegate> {
    bool  _activityHasBeenSentToServer;
    SFCompanionAdvertiser * _advertiser;
    NSData * _cachedEncodedUserInfo;
    bool  _canCreateStreams;
    NSString * _contentUserAction;
    bool  _createsNewUUIDIfSaved;
    NSError * _decodeUserInfoError;
    <UAUserActivityDelegate> * _delegate;
    bool  _dirty;
    NSMutableSet * _dirtyPayloadIdentifiers;
    NSString * _dynamicIdentifier;
    bool  _eligibleForHandoff;
    bool  _eligibleForPublicIndexing;
    bool  _eligibleForReminders;
    bool  _eligibleForSearch;
    bool  _encodedContainsUnsynchronizedCloudDocument;
    bool  _encodedFileProviderURL;
    NSDate * _expirationDate;
    bool  _forceImmediateSendToServer;
    int  _forwardToCoreSpotlightIndexerCount;
    NSMutableDictionary * _frameworkPayload;
    long long  _inWillSaveCallback;
    bool  _indexInProcess;
    bool  _invalidated;
    NSSet * _keywords;
    double  _lastSaveTime;
    UAUserActivityManager * _manager;
    bool  _needsSave;
    bool  _needsSaveValueAtEndOfWillSaveCallback;
    NSDictionary * _options;
    NSUUID * _originalUniqueIdentifier;
    unsigned long long  _os_state_handler;
    NSMutableDictionary * _payloadDataCache;
    NSMutableDictionary * _payloadObjects;
    NSMutableDictionary * _payloadUpdateBlocks;
    NSURL * _referrerURL;
    NSSet * _requiredUserInfoKeys;
    SFCompanionAdvertiser * _resumerAdvertiser;
    bool  _saveScheduled;
    bool  _sendToServerPending;
    unsigned long long  _suggestedActionType;
    bool  _supportsContinuationStreams;
    NSString * _teamIdentifier;
    NSString * _title;
    NSString * _typeIdentifier;
    NSUUID * _uniqueIdentifier;
    bool  _userActivityWasCreatedSent;
    NSDictionary * _userInfo;
    bool  _userInfoContainsFileURLs;
    NSURL * _webpageURL;
    NSObject<OS_dispatch_queue> * _willCallSaveSerializationQueue;
}

@property (readonly) bool activityHasBeenSentToServer;
@property (copy) NSData *cachedEncodedUserInfo;
@property bool canCreateStreams;
@property (copy) CSSearchableItemAttributeSet *contentAttributeSet;
@property (copy) NSString *contentIdentifier;
@property (copy) NSString *contentUserAction;
@property bool createsNewUUIDIfSaved;
@property (readonly, copy) NSString *debugDescription;
@property (retain) NSError *decodeUserInfoError;
@property <UAUserActivityDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property bool dirty;
@property (retain) NSMutableSet *dirtyPayloadIdentifiers;
@property (copy) NSString *dynamicIdentifier;
@property (getter=isEligibleForHandoff) bool eligibleForHandoff;
@property (getter=isEligibleForPublicIndexing) bool eligibleForPublicIndexing;
@property (getter=isEligibleForReminders) bool eligibleForReminders;
@property (getter=isEligibleForSearch) bool eligibleForSearch;
@property bool encodedContainsUnsynchronizedCloudDocument;
@property bool encodedFileProviderURL;
@property (copy) NSDate *expirationDate;
@property bool forceImmediateSendToServer;
@property (readonly) bool forwardToCoreSpotlightIndexer;
@property (readonly) unsigned long long hash;
@property (getter=isInvalidated, readonly) bool invalidated;
@property (copy) NSSet *keywords;
@property (readonly) UAUserActivityManager *manager;
@property bool needsSave;
@property (copy) NSDictionary *options;
@property (readonly, copy) NSUUID *originalUniqueIdentifier;
@property (readonly) unsigned long long os_state_handler;
@property NSUserActivity *parentUserActivity;
@property (retain) NSMutableDictionary *payloadDataCache;
@property (retain) NSMutableDictionary *payloadObjects;
@property (retain) NSMutableDictionary *payloadUpdateBlocks;
@property (copy) NSURL *referrerURL;
@property (copy) NSSet *requiredUserInfoKeys;
@property bool sendToServerPending;
@property (copy) NSData *streamsData;
@property (copy) NSString *subtitle;
@property (readonly) unsigned long long suggestedActionType;
@property (readonly) Class superclass;
@property bool supportsContinuationStreams;
@property (copy) NSString *teamIdentifier;
@property (copy) NSString *title;
@property (copy) NSString *typeIdentifier;
@property (readonly, copy) NSUUID *uniqueIdentifier;
@property (copy) NSDictionary *userInfo;
@property bool userInfoContainsFileURLs;
@property (copy) NSURL *webpageURL;
@property (readonly, retain) NSObject<OS_dispatch_queue> *willCallSaveSerializationQueue;

+ (id)_decodeFromScanner:(id)arg1;
+ (id)_decodeFromString:(id)arg1;
+ (id)_encodeKeyAndValueIntoString:(id)arg1 value:(id)arg2;
+ (id)_encodeToString:(id)arg1;
+ (void)addDynamicUserActivity:(id)arg1 matching:(id)arg2;
+ (void)addUserActivityObserver:(id)arg1;
+ (id)allowedWebpageURLSchemes;
+ (bool)checkWebpageURL:(id)arg1 actionType:(unsigned long long)arg2 throwIfFailed:(bool)arg3;
+ (id)currentUserActivityUUID;
+ (bool)currentUserActivityUUIDWithOptions:(id)arg1 completionHandler:(id /* block */)arg2;
+ (bool)determineIfUserActivityIsCurrent:(id)arg1 completionHandler:(id /* block */)arg2;
+ (void)fetchUserActivityWithUUID:(id)arg1 completionHandler:(id /* block */)arg2;
+ (id)fetchUserActivityWithUUID:(id)arg1 intervalToWaitForDocumentSynchronizationToComplete:(double)arg2 completionHandler:(id /* block */)arg3;
+ (bool)isIndexPendingForUUID:(id)arg1;
+ (id)observers;
+ (id)registerForSuggestedActionNudgeOfType:(unsigned long long)arg1 withOptions:(id)arg2 block:(id /* block */)arg3;
+ (void)removeDynamicUserActivity:(id)arg1 matching:(id)arg2;
+ (void)removeUserActivityObserver:(id)arg1;
+ (void)setIndexPending:(bool)arg1 forUUID:(id)arg2;
+ (bool)supportsUserActivityAppLinks;
+ (void)unregisterForSuggestedActionNudgeOfType:(id)arg1;
+ (bool)userActivityContinuationSupported;
+ (id)userActivityFromUUID:(id)arg1 timeout:(double)arg2 withError:(id*)arg3;
+ (id)userActivityFromUUID:(id)arg1 withError:(id*)arg2;

- (void).cxx_destruct;
- (bool)_encodeIntoUserActivityDataWithSave:(bool)arg1 completionHandler:(id /* block */)arg2;
- (bool)_encodeIntoUserActivityStringWithSave:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)_resignCurrent;
- (bool)activityHasBeenSentToServer;
- (void)addContentAttribute:(id)arg1 forKey:(id)arg2;
- (void)addKeywordsFromArray:(id)arg1;
- (void)addUserInfoEntriesFromDictionary:(id)arg1;
- (void)advertiser:(id)arg1 didReceiveInputStream:(id)arg2 outputStream:(id)arg3;
- (bool)archiveURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)archiver:(id)arg1 willEncodeObject:(id)arg2;
- (void)becomeCurrent;
- (id)cachedEncodedUserInfo;
- (id)callWillSaveDelegateIfDirtyAndPackageUpData:(bool)arg1 clearDirty:(bool)arg2;
- (bool)canCreateStreams;
- (id)contentAttributeSet;
- (id)contentAttributes;
- (id)contentIdentifier;
- (id)contentType;
- (id)contentUserAction;
- (id)copyWithNewUUID:(bool)arg1;
- (bool)createUserActivityDataWithSaving:(bool)arg1 options:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)createUserActivityStringsWithSaving:(bool)arg1 options:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)createsNewUUIDIfSaved;
- (void)dealloc;
- (id)debugDescription;
- (id)decodeUserInfo:(id)arg1;
- (id)decodeUserInfoError;
- (id)delegate;
- (id)description;
- (id)determineMatchingApplicationBundleIdentfierWithOptions:(id)arg1;
- (void)didReceiveInputStream:(id)arg1 outputStream:(id)arg2;
- (void)didSynchronizeUserActivity;
- (bool)dirty;
- (id)dirtyPayloadIdentifiers;
- (void)displayInDtrace;
- (id)dynamicIdentifier;
- (id)encodeUserInfo:(id)arg1;
- (bool)encodeUserInfo:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)encodeUserInfo:(id)arg1 error:(id*)arg2;
- (bool)encodedContainsUnsynchronizedCloudDocument;
- (bool)encodedFileProviderURL;
- (id)expirationDate;
- (bool)forceImmediateSendToServer;
- (bool)forwardToCoreSpotlightIndexer;
- (void)getContinuationStreamsWithCompletionHandler:(id /* block */)arg1;
- (unsigned long long)hash;
- (void)indexActivity:(double)arg1 forceIndexing:(bool)arg2;
- (id)init;
- (id)initDynamicActivityWithTypeIdentifier:(id)arg1 dynamicIdentifier:(id)arg2 suggestedActionType:(unsigned long long)arg3 options:(id)arg4;
- (id)initWithManager:(id)arg1 userActivityInfo:(id)arg2;
- (id)initWithTypeIdentifier:(id)arg1;
- (id)initWithTypeIdentifier:(id)arg1 dynamicIdentifier:(id)arg2 options:(id)arg3;
- (id)initWithTypeIdentifier:(id)arg1 options:(id)arg2;
- (id)initWithTypeIdentifier:(id)arg1 suggestedActionType:(unsigned long long)arg2 options:(id)arg3;
- (id)initWithUserActivityData:(id)arg1 options:(id)arg2;
- (id)initWithUserActivityStrings:(id)arg1 optionalString:(id)arg2 tertiaryData:(id)arg3 options:(id)arg4;
- (void)invalidate;
- (bool)isEligibleForHandoff;
- (bool)isEligibleForPublicIndexing;
- (bool)isEligibleForReminders;
- (bool)isEligibleForSearch;
- (bool)isEqual:(id)arg1;
- (bool)isInvalidated;
- (bool)isPayloadDirty:(id)arg1;
- (id)keywords;
- (id)keywords;
- (id)manager;
- (bool)needsSave;
- (id)objectForIdentifier:(id)arg1;
- (id)options;
- (id)originalUniqueIdentifier;
- (unsigned long long)os_state_handler;
- (id)parentUserActivity;
- (id)payloadDataCache;
- (id)payloadForIdentifier:(id)arg1;
- (id)payloadIdentifiers;
- (id)payloadObjects;
- (id /* block */)payloadUpdateBlockForIdentifier:(id)arg1;
- (id)payloadUpdateBlocks;
- (void)pinUserActivityWithCompletionHandler:(id /* block */)arg1;
- (void)prepareUserActivityForLaunchingWithOptions:(id)arg1 completionHandler:(id /* block */)arg2;
- (long long)priority;
- (id)referrerURL;
- (void)removeContentAttribute:(id)arg1;
- (id)requiredUserInfoKeys;
- (id)requiredUserInfoKeys;
- (void)resignCurrent;
- (void)scheduleSendUserActivityInfoToLSUserActivityd;
- (void)sendToCoreSpotlightIndexer;
- (bool)sendToServerPending;
- (void)sendUserActivityInfoToLSUserActivityd:(bool)arg1 onAsyncQueue:(bool)arg2;
- (void)setCachedEncodedUserInfo:(id)arg1;
- (void)setCanCreateStreams:(bool)arg1;
- (void)setContentAttributeSet:(id)arg1;
- (void)setContentAttributes:(id)arg1;
- (void)setContentIdentifier:(id)arg1;
- (void)setContentType:(id)arg1;
- (void)setContentUserAction:(id)arg1;
- (void)setCreatesNewUUIDIfSaved:(bool)arg1;
- (void)setDecodeUserInfoError:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDirty:(bool)arg1;
- (void)setDirty:(bool)arg1 identifier:(id)arg2;
- (void)setDirtyPayloadIdentifiers:(id)arg1;
- (void)setDynamicIdentifier:(id)arg1;
- (void)setEligibleForHandoff:(bool)arg1;
- (void)setEligibleForPublicIndexing:(bool)arg1;
- (void)setEligibleForReminders:(bool)arg1;
- (void)setEligibleForSearch:(bool)arg1;
- (void)setEncodedContainsUnsynchronizedCloudDocument:(bool)arg1;
- (void)setEncodedFileProviderURL:(bool)arg1;
- (void)setExpirationDate:(id)arg1;
- (void)setForceImmediateSendToServer:(bool)arg1;
- (void)setKeywords:(id)arg1;
- (void)setKeywords:(id)arg1;
- (void)setNeedsSave:(bool)arg1;
- (void)setOptions:(id)arg1;
- (void)setParentUserActivity:(id)arg1;
- (void)setPayload:(id)arg1 object:(id)arg2 identifier:(id)arg3;
- (void)setPayload:(id)arg1 object:(id)arg2 identifier:(id)arg3 dirty:(bool)arg4;
- (void)setPayloadDataCache:(id)arg1;
- (void)setPayloadIdentifier:(id)arg1 object:(id)arg2 withBlock:(id /* block */)arg3;
- (void)setPayloadObjects:(id)arg1;
- (void)setPayloadUpdateBlocks:(id)arg1;
- (void)setReferrerURL:(id)arg1;
- (void)setRequiredUserInfoKeys:(id)arg1;
- (void)setRequiredUserInfoKeys:(id)arg1;
- (void)setSendToServerPending:(bool)arg1;
- (void)setStreamsData:(id)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setSupportsContinuationStreams:(bool)arg1;
- (void)setTeamIdentifier:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTypeIdentifier:(id)arg1;
- (void)setUserInfo:(id)arg1;
- (void)setUserInfoContainsFileURLs:(bool)arg1;
- (void)setWebpageURL:(id)arg1;
- (id)stateString;
- (id)streamsData;
- (id)subtitle;
- (unsigned long long)suggestedActionType;
- (bool)supportsContinuationStreams;
- (id)teamID;
- (id)teamIdentifier;
- (void)tellDaemonAboutNewLSUserActivity;
- (id)title;
- (id)typeIdentifier;
- (id)unarchiveURL:(id)arg1 error:(id*)arg2;
- (id)unarchiver:(id)arg1 didDecodeObject:(id)arg2;
- (id)uniqueIdentifier;
- (void)updateForwardToCoreSpotlightIndexer:(BOOL)arg1;
- (id)userActivityInfoForSelf;
- (id)userActivityInfoForSelfWithPayload:(bool)arg1;
- (id)userInfo;
- (bool)userInfoContainsFileURLs;
- (id)webpageURL;
- (id)willCallSaveSerializationQueue;
- (id)willCallSaveSerializationQueue;
- (void)willSynchronizeUserActivityWithHandler:(id /* block */)arg1;

@end
