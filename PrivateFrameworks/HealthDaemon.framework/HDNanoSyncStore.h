/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
 */

@interface HDNanoSyncStore : NSObject <HDSyncStore, NRDevicePropertyObserver> {
    bool  _active;
    <HDNanoSyncStoreDelegate> * _delegate;
    NSMutableDictionary * _expectedSequenceNumbers;
    IDSDevice * _identityServicesDevice;
    NSMutableArray * _incomingSyncObserverTimers;
    bool  _invalidated;
    NSDate * _lastCompleteIncomingSyncDate;
    NSError * _lastCompleteIncomingSyncError;
    NSDate * _lastIncompleteIncomingSyncDate;
    NSUUID * _lastIncompleteIncomingSyncUUID;
    bool  _master;
    NRDevice * _nanoRegistryDevice;
    bool  _needsSyncOnUnlock;
    NSArray * _orderedSyncEntities;
    HDNanoPairingEntity * _pairingEntity;
    NSMutableDictionary * _pendingRequestContexts;
    HDProfile * _profile;
    int  _protocolVersion;
    NSString * _remoteProductType;
    NSString * _remoteSystemBuildVersion;
    HDNanoSyncRestoreSession * _restoreSession;
    long long  _restoreState;
}

@property (getter=isActive, readonly) bool active;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <HDNanoSyncStoreDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) IDSDevice *device;
@property (readonly, copy) NSString *deviceName;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSUUID *healthUUID;
@property (nonatomic, retain) IDSDevice *identityServicesDevice;
@property (getter=isInvalidated, readonly) bool invalidated;
@property (readonly) NSDate *lastInactiveDate;
@property (getter=isMaster, readonly) bool master;
@property (nonatomic, retain) NRDevice *nanoRegistryDevice;
@property (readonly) NSUUID *nanoRegistryUUID;
@property (nonatomic) bool needsSyncOnUnlock;
@property (nonatomic, retain) NSUUID *persistentUUID;
@property (nonatomic) HDProfile *profile;
@property (readonly) int protocolVersion;
@property (readonly, copy) NSString *remoteProductType;
@property (readonly, copy) NSString *remoteSystemBuildVersion;
@property (getter=isRestoreComplete, nonatomic, readonly) bool restoreComplete;
@property (nonatomic, readonly) HDNanoSyncRestoreSession *restoreSession;
@property (nonatomic, readonly) long long restoreState;
@property (readonly, copy) NSString *sourceBundleIdentifier;
@property (readonly) Class superclass;

+ (id)_allOrderedNanoSyncEntities;
+ (id)_observedDeviceProperties;
+ (id)nanoSyncStoreWithProfile:(id)arg1 device:(id)arg2 delegate:(id)arg3;
+ (id)orderedSyncEntitiesForProtocolVersion:(int)arg1 companion:(bool)arg2;

- (void).cxx_destruct;
- (id)_initWithIdentityServicesDevice:(id)arg1 nanoRegistryDevice:(id)arg2 pairingEntity:(id)arg3 protocolVersion:(int)arg4 delegate:(id)arg5 profile:(id)arg6;
- (void)_notifyIncomingSyncObservers;
- (bool)_savePairingEntity;
- (void)_setRestoreState:(long long)arg1;
- (void)addIncomingSyncObserverWithTimeout:(double)arg1 timeoutHandler:(id /* block */)arg2 completion:(id /* block */)arg3;
- (void)addPendingRequestContext:(id)arg1 forUUID:(id)arg2;
- (id)beginRestoreSessionWithUUID:(id)arg1 timeout:(double)arg2 timeoutHandler:(id /* block */)arg3;
- (bool)canRecieveSyncObjectsForEntityClass:(Class)arg1;
- (void)configureOutgoingResponse:(id)arg1;
- (id)createRequestWithMessageID:(unsigned short)arg1;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (id)device;
- (void)device:(id)arg1 propertyDidChange:(id)arg2 fromValue:(id)arg3;
- (id)deviceInfo;
- (id)deviceName;
- (id)diagnosticDescription;
- (void)didReceiveRequestWithChangeSet:(id)arg1;
- (bool)enforceSyncEntityOrdering;
- (long long)expectedSequenceNumberForSyncEntityClass:(Class)arg1;
- (void)finishRestoreSessionWithError:(id)arg1;
- (id)healthUUID;
- (id)identityServicesDevice;
- (void)invalidate;
- (bool)isActive;
- (bool)isInvalidated;
- (bool)isMaster;
- (bool)isRestoreComplete;
- (id)lastInactiveDate;
- (id)nanoRegistryDevice;
- (id)nanoRegistryUUID;
- (bool)needsSyncOnUnlock;
- (id)orderedSyncEntities;
- (id)pendingRequestContextForUUID:(id)arg1;
- (id)persistentUUID;
- (id)profile;
- (int)protocolVersion;
- (id)remoteProductType;
- (id)remoteSystemBuildVersion;
- (void)removeExpiredIncomingSyncObservers;
- (void)removePendingRequestContextForUUID:(id)arg1;
- (id)restoreSession;
- (long long)restoreState;
- (void)setDelegate:(id)arg1;
- (void)setExpectedSequenceNumber:(long long)arg1 forSyncEntityClass:(Class)arg2;
- (void)setHealthUUID:(id)arg1;
- (void)setIdentityServicesDevice:(id)arg1;
- (void)setNanoRegistryDevice:(id)arg1;
- (void)setNeedsSyncOnUnlock:(bool)arg1;
- (void)setPersistentUUID:(id)arg1;
- (void)setProfile:(id)arg1;
- (bool)shouldContinueAfterAnchorValidationError:(id)arg1;
- (bool)shouldEnforceSequenceOrdering;
- (id)sourceBundleIdentifier;
- (bool)supportsSpeculativeChangesForSyncEntityClass:(Class)arg1;
- (id)syncEntityDependenciesForSyncEntity:(Class)arg1;
- (long long)syncEpoch;
- (long long)syncProvenance;
- (id)syncStoreDefaultSourceBundleIdentifier;
- (id)syncStoreIdentifier;
- (id)syncStoreTypeIdentifier;
- (bool)validatePairingUUIDsWithIncomingMessage:(id)arg1;
- (bool)validateVersionWithIncomingMessage:(id)arg1;

@end
