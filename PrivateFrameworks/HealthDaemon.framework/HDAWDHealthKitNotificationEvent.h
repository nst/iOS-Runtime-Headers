/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
 */

@interface HDAWDHealthKitNotificationEvent : PBCodable <NSCopying> {
    HDAWDHealthKitAchievement * _achievement;
    HDAWDHealthKitActivityCache * _activityCache;
    int  _alertType;
    HDAWDHealthKitConcurrentCalendarItem * _calendarItem;
    bool  _dndEnabled;
    long long  _endDate;
    HDAWDHealthKitExperimentalCondition * _experimentalCondition;
    bool  _failedPosting;
    struct { 
        unsigned int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _goalTypes;
    struct { 
        unsigned int endDate : 1; 
        unsigned int startDate : 1; 
        unsigned int timestamp : 1; 
        unsigned int alertType : 1; 
        unsigned int testAction : 1; 
        unsigned int dndEnabled : 1; 
        unsigned int failedPosting : 1; 
    }  _has;
    HDAWDHealthKitNotificationResponseFlags * _responseFlags;
    long long  _startDate;
    int  _testAction;
    unsigned long long  _timestamp;
    NSMutableArray * _views;
    HDAWDHealthKitWeeklySummaryDetail * _weeklySummaryDetail;
}

@property (nonatomic, retain) HDAWDHealthKitAchievement *achievement;
@property (nonatomic, retain) HDAWDHealthKitActivityCache *activityCache;
@property (nonatomic) int alertType;
@property (nonatomic, retain) HDAWDHealthKitConcurrentCalendarItem *calendarItem;
@property (nonatomic) bool dndEnabled;
@property (nonatomic) long long endDate;
@property (nonatomic, retain) HDAWDHealthKitExperimentalCondition *experimentalCondition;
@property (nonatomic) bool failedPosting;
@property (nonatomic, readonly) unsigned int*goalTypes;
@property (nonatomic, readonly) unsigned long long goalTypesCount;
@property (nonatomic, readonly) bool hasAchievement;
@property (nonatomic, readonly) bool hasActivityCache;
@property (nonatomic) bool hasAlertType;
@property (nonatomic, readonly) bool hasCalendarItem;
@property (nonatomic) bool hasDndEnabled;
@property (nonatomic) bool hasEndDate;
@property (nonatomic, readonly) bool hasExperimentalCondition;
@property (nonatomic) bool hasFailedPosting;
@property (nonatomic, readonly) bool hasResponseFlags;
@property (nonatomic) bool hasStartDate;
@property (nonatomic) bool hasTestAction;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic, readonly) bool hasWeeklySummaryDetail;
@property (nonatomic, retain) HDAWDHealthKitNotificationResponseFlags *responseFlags;
@property (nonatomic) long long startDate;
@property (nonatomic) int testAction;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic, retain) NSMutableArray *views;
@property (nonatomic, retain) HDAWDHealthKitWeeklySummaryDetail *weeklySummaryDetail;

+ (Class)viewsType;

- (void).cxx_destruct;
- (int)StringAsAlertType:(id)arg1;
- (int)StringAsTestAction:(id)arg1;
- (id)achievement;
- (id)activityCache;
- (void)addGoalTypes:(unsigned int)arg1;
- (void)addViews:(id)arg1;
- (int)alertType;
- (id)alertTypeAsString:(int)arg1;
- (id)calendarItem;
- (void)clearGoalTypes;
- (void)clearViews;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)dndEnabled;
- (long long)endDate;
- (id)experimentalCondition;
- (bool)failedPosting;
- (unsigned int*)goalTypes;
- (unsigned int)goalTypesAtIndex:(unsigned long long)arg1;
- (unsigned long long)goalTypesCount;
- (bool)hasAchievement;
- (bool)hasActivityCache;
- (bool)hasAlertType;
- (bool)hasCalendarItem;
- (bool)hasDndEnabled;
- (bool)hasEndDate;
- (bool)hasExperimentalCondition;
- (bool)hasFailedPosting;
- (bool)hasResponseFlags;
- (bool)hasStartDate;
- (bool)hasTestAction;
- (bool)hasTimestamp;
- (bool)hasWeeklySummaryDetail;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (id)responseFlags;
- (void)setAchievement:(id)arg1;
- (void)setActivityCache:(id)arg1;
- (void)setAlertType:(int)arg1;
- (void)setCalendarItem:(id)arg1;
- (void)setDndEnabled:(bool)arg1;
- (void)setEndDate:(long long)arg1;
- (void)setExperimentalCondition:(id)arg1;
- (void)setFailedPosting:(bool)arg1;
- (void)setGoalTypes:(unsigned int*)arg1 count:(unsigned long long)arg2;
- (void)setHasAlertType:(bool)arg1;
- (void)setHasDndEnabled:(bool)arg1;
- (void)setHasEndDate:(bool)arg1;
- (void)setHasFailedPosting:(bool)arg1;
- (void)setHasStartDate:(bool)arg1;
- (void)setHasTestAction:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setResponseFlags:(id)arg1;
- (void)setStartDate:(long long)arg1;
- (void)setTestAction:(int)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setViews:(id)arg1;
- (void)setWeeklySummaryDetail:(id)arg1;
- (long long)startDate;
- (int)testAction;
- (id)testActionAsString:(int)arg1;
- (unsigned long long)timestamp;
- (id)views;
- (id)viewsAtIndex:(unsigned long long)arg1;
- (unsigned long long)viewsCount;
- (id)weeklySummaryDetail;
- (void)writeTo:(id)arg1;

@end
