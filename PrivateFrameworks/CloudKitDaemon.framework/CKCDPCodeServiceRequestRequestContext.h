/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

@interface CKCDPCodeServiceRequestRequestContext : PBCodable <NSCopying> {
    NSString * _applicationBundleId;
    NSString * _clientInfo;
    NSString * _containerName;
    int  _databaseEnvironment;
    int  _databasePartition;
    int  _databaseType;
    NSString * _deviceId;
    unsigned long long  _dsid;
    struct { 
        unsigned int dsid : 1; 
        unsigned int databaseEnvironment : 1; 
        unsigned int databasePartition : 1; 
        unsigned int databaseType : 1; 
    }  _has;
    NSString * _userAgent;
    NSString * _userId;
}

@property (nonatomic, retain) NSString *applicationBundleId;
@property (nonatomic, retain) NSString *clientInfo;
@property (nonatomic, retain) NSString *containerName;
@property (nonatomic) int databaseEnvironment;
@property (nonatomic) int databasePartition;
@property (nonatomic) int databaseType;
@property (nonatomic, retain) NSString *deviceId;
@property (nonatomic) unsigned long long dsid;
@property (nonatomic, readonly) bool hasApplicationBundleId;
@property (nonatomic, readonly) bool hasClientInfo;
@property (nonatomic, readonly) bool hasContainerName;
@property (nonatomic) bool hasDatabaseEnvironment;
@property (nonatomic) bool hasDatabasePartition;
@property (nonatomic) bool hasDatabaseType;
@property (nonatomic, readonly) bool hasDeviceId;
@property (nonatomic) bool hasDsid;
@property (nonatomic, readonly) bool hasUserAgent;
@property (nonatomic, readonly) bool hasUserId;
@property (nonatomic, retain) NSString *userAgent;
@property (nonatomic, retain) NSString *userId;

- (void).cxx_destruct;
- (int)StringAsDatabaseEnvironment:(id)arg1;
- (int)StringAsDatabaseType:(id)arg1;
- (id)applicationBundleId;
- (id)clientInfo;
- (id)containerName;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (int)databaseEnvironment;
- (id)databaseEnvironmentAsString:(int)arg1;
- (int)databasePartition;
- (int)databaseType;
- (id)databaseTypeAsString:(int)arg1;
- (id)description;
- (id)deviceId;
- (id)dictionaryRepresentation;
- (unsigned long long)dsid;
- (bool)hasApplicationBundleId;
- (bool)hasClientInfo;
- (bool)hasContainerName;
- (bool)hasDatabaseEnvironment;
- (bool)hasDatabasePartition;
- (bool)hasDatabaseType;
- (bool)hasDeviceId;
- (bool)hasDsid;
- (bool)hasUserAgent;
- (bool)hasUserId;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)setApplicationBundleId:(id)arg1;
- (void)setClientInfo:(id)arg1;
- (void)setContainerName:(id)arg1;
- (void)setDatabaseEnvironment:(int)arg1;
- (void)setDatabasePartition:(int)arg1;
- (void)setDatabaseType:(int)arg1;
- (void)setDeviceId:(id)arg1;
- (void)setDsid:(unsigned long long)arg1;
- (void)setHasDatabaseEnvironment:(bool)arg1;
- (void)setHasDatabasePartition:(bool)arg1;
- (void)setHasDatabaseType:(bool)arg1;
- (void)setHasDsid:(bool)arg1;
- (void)setUserAgent:(id)arg1;
- (void)setUserId:(id)arg1;
- (id)userAgent;
- (id)userId;
- (void)writeTo:(id)arg1;

@end
