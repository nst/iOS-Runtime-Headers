/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TouchML.framework/TouchML
 */

@interface TMLAttributedString_Attributes : NSObject <NSCopying, TMLRuntimeObject> {
    NSMutableDictionary * _attributes;
    bool  _created;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _range;
}

@property (nonatomic, retain) NSString *accessibilitySpeechIPANotation;
@property (nonatomic, retain) NSString *accessibilitySpeechLanguage;
@property (nonatomic, retain) NSNumber *accessibilitySpeechPitch;
@property (nonatomic) bool accessibilitySpeechPunctuation;
@property (nonatomic, retain) NSNumber *accessibilitySpeechQueueAnnouncement;
@property (nonatomic, retain) NSNumber *accessibilityTextHeadingLevel;
@property (nonatomic, retain) NSTextAttachment *attachment;
@property (nonatomic, copy) NSDictionary *attributes;
@property (nonatomic, retain) UIColor *backgroundColor;
@property (nonatomic) double baselineOffset;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) double expansion;
@property (nonatomic, retain) UIFont *font;
@property (nonatomic, retain) UIColor *foregroundColor;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSNumber *kern;
@property (nonatomic) long long ligature;
@property (nonatomic, retain) id link;
@property (nonatomic) double obliqueness;
@property (nonatomic, retain) NSParagraphStyle *paragraphStyle;
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } range;
@property (nonatomic, retain) NSShadow *shadow;
@property (nonatomic) long long strikethroughStyle;
@property (nonatomic, retain) UIColor *strokeColor;
@property (nonatomic) double strokeWidth;
@property (readonly) Class superclass;
@property (nonatomic) long long superscript;
@property (nonatomic, retain) NSString *textEffect;
@property (nonatomic, retain) UIColor *underlineColor;
@property (nonatomic) long long underlineStyle;
@property (nonatomic) long long verticalGlyphForm;

- (void).cxx_destruct;
- (id)accessibilitySpeechIPANotation;
- (id)accessibilitySpeechLanguage;
- (id)accessibilitySpeechPitch;
- (bool)accessibilitySpeechPunctuation;
- (id)accessibilitySpeechQueueAnnouncement;
- (id)accessibilityTextHeadingLevel;
- (id)attachment;
- (id)attributes;
- (id)backgroundColor;
- (double)baselineOffset;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (double)expansion;
- (id)font;
- (id)foregroundColor;
- (id)init;
- (id)initWithDictionary:(id)arg1;
- (id)kern;
- (long long)ligature;
- (id)link;
- (double)obliqueness;
- (id)paragraphStyle;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })range;
- (void)setAXAttribute:(id)arg1 value:(id)arg2;
- (void)setAccessibilitySpeechIPANotation:(id)arg1;
- (void)setAccessibilitySpeechLanguage:(id)arg1;
- (void)setAccessibilitySpeechPitch:(id)arg1;
- (void)setAccessibilitySpeechPunctuation:(bool)arg1;
- (void)setAccessibilitySpeechQueueAnnouncement:(id)arg1;
- (void)setAccessibilityTextHeadingLevel:(id)arg1;
- (void)setAttachment:(id)arg1;
- (void)setAttribute:(id)arg1 value:(id)arg2;
- (void)setAttributes:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setBaselineOffset:(double)arg1;
- (void)setExpansion:(double)arg1;
- (void)setFont:(id)arg1;
- (void)setForegroundColor:(id)arg1;
- (void)setKern:(id)arg1;
- (void)setLigature:(long long)arg1;
- (void)setLink:(id)arg1;
- (void)setObliqueness:(double)arg1;
- (void)setParagraphStyle:(id)arg1;
- (void)setRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setShadow:(id)arg1;
- (void)setStrikethroughStyle:(long long)arg1;
- (void)setStrokeColor:(id)arg1;
- (void)setStrokeWidth:(double)arg1;
- (void)setSuperscript:(long long)arg1;
- (void)setTextEffect:(id)arg1;
- (void)setUnderlineColor:(id)arg1;
- (void)setUnderlineStyle:(long long)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setVerticalGlyphForm:(long long)arg1;
- (id)shadow;
- (long long)strikethroughStyle;
- (id)strokeColor;
- (double)strokeWidth;
- (long long)superscript;
- (id)textEffect;
- (void)tmlObjectCompleted;
- (id)underlineColor;
- (long long)underlineStyle;
- (id)valueForUndefinedKey:(id)arg1;
- (long long)verticalGlyphForm;

@end
