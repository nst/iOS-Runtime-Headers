/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore
 */

@interface NUGLContext : NSObject {
    NSMapTable * _bindings;
    struct Context { int (**x1)(); int x2; int x3; id x4; } * _gl;
    NUGLObjectPool * _privateObjectPool;
    NUGLObjectPool * _sharedObjectPool;
    NSMutableDictionary * _state;
    NUGLPipeline * _textureDrawingPipeline;
    NSThread * _thread;
    NUGLVertexArray * _unitQuad;
}

@property (nonatomic, readonly) EAGLContext *EAGLContext;
@property (nonatomic, readonly) NSArray *extensions;
@property (nonatomic, readonly) NUGLObjectPool *privateObjectPool;
@property (nonatomic, readonly) NSString *rendererString;
@property (nonatomic, readonly) NUGLObjectPool *sharedObjectPool;
@property (nonatomic, readonly) NSString *vendorString;
@property (nonatomic, readonly) NSString *versionString;
@property (nonatomic) long long virtualScreen;

+ (unsigned int)_textureType:(id)arg1;
+ (id)addLineNumbersToLines:(id)arg1;
+ (void)deleteBuffer:(id)arg1;
+ (void)deleteFramebuffer:(id)arg1;
+ (void)deletePipeline:(id)arg1;
+ (void)deleteProgram:(id)arg1;
+ (void)deleteRenderbuffer:(id)arg1;
+ (void)deleteShader:(id)arg1;
+ (void)deleteTexture:(id)arg1;
+ (void)deleteVertexArray:(id)arg1;
+ (id)enumString:(unsigned int)arg1;
+ (id)errorString:(unsigned int)arg1;
+ (void)execute:(id /* block */)arg1;
+ (void)executeOnDevice:(id)arg1 block:(id /* block */)arg2;
+ (id)sharedContext;
+ (id)sourceWithLineNumbersFromSourceArray:(id)arg1;
+ (void)splitSource:(id)arg1 intoLines:(id)arg2;

- (void).cxx_destruct;
- (id)EAGLContext;
- (unsigned int)_activeTextureUnit;
- (void)_bindObject:(id)arg1 target:(unsigned int)arg2;
- (unsigned int)_bindingForObject:(id)arg1;
- (id)_currentObjectForState:(unsigned int)arg1;
- (void)_deleteBuffer:(unsigned int)arg1;
- (void)_deleteFramebuffer:(unsigned int)arg1;
- (void)_deletePipeline:(unsigned int)arg1;
- (void)_deleteProgram:(unsigned int)arg1;
- (void)_deleteRenderbuffer:(unsigned int)arg1;
- (void)_deleteShader:(unsigned int)arg1;
- (void)_deleteTexture:(unsigned int)arg1;
- (void)_deleteVertexArray:(unsigned int)arg1;
- (unsigned int)_generateBuffer:(id)arg1;
- (unsigned int)_generateFramebuffer:(id)arg1;
- (unsigned int)_generatePipeline:(id)arg1;
- (unsigned int)_generateProgram:(id)arg1;
- (unsigned int)_generateRenderbuffer:(id)arg1;
- (unsigned int)_generateShader:(unsigned int)arg1 pool:(id)arg2;
- (unsigned int)_generateTexture:(id)arg1 ofType:(unsigned int)arg2;
- (unsigned int)_generateVertexArray:(id)arg1;
- (int)_internalTextureFormatForPixelFormat:(id)arg1;
- (int)_internalTextureFormatForPixelFormat:(id)arg1 format:(unsigned int*)arg2 type:(unsigned int*)arg3;
- (int)_pixelAlignmentFromBuffer:(id)arg1;
- (id)_pixelFormatForInternalFormat:(unsigned int)arg1;
- (int)_pixelRowLengthFromBuffer:(id)arg1 alignment:(int)arg2;
- (id)_popObject:(id)arg1 forState:(unsigned int)arg2;
- (void)_purgeObjectPool:(id)arg1;
- (void)_purgeObjectsOfType:(unsigned int)arg1 fromPool:(id)arg2 withBlock:(id /* block */)arg3;
- (id)_pushObject:(id)arg1 forState:(unsigned int)arg2;
- (unsigned int)_renderbufferFormatForPixelFormat:(id)arg1;
- (void)_setActiveTextureUnit:(unsigned int)arg1;
- (id)_unbindObject:(id)arg1 target:(unsigned int)arg2;
- (void)addProgram:(id)arg1 toPipeline:(id)arg2;
- (void)allocateBufferStorage:(id)arg1;
- (void)attachRenderbuffer:(id)arg1 toFramebuffer:(id)arg2 attachment:(unsigned int)arg3;
- (void)attachTexture:(id)arg1 toFramebuffer:(id)arg2 attachment:(unsigned int)arg3;
- (void)bindBuffer:(id)arg1;
- (void)bindFramebuffer:(id)arg1;
- (void)bindPipeline:(id)arg1;
- (void)bindRenderbuffer:(id)arg1;
- (void)bindSampler:(id)arg1 atIndex:(unsigned int)arg2;
- (void)bindTexture:(id)arg1;
- (void)bindTexture:(id)arg1 atIndex:(unsigned int)arg2;
- (void)bindVertexArray:(id)arg1;
- (bool)checkFramebufferComplete:(id)arg1;
- (void)clearWithRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;
- (bool)compileShader:(id)arg1 error:(out id*)arg2;
- (void)copyRect:(struct { struct { long long x_1_1_1; long long x_1_1_2; } x1; struct { long long x_2_1_1; long long x_2_1_2; } x2; })arg1 intoBuffer:(id)arg2 atPoint:(struct { long long x1; long long x2; })arg3;
- (void)copyRect:(struct { struct { long long x_1_1_1; long long x_1_1_2; } x1; struct { long long x_2_1_1; long long x_2_1_2; } x2; })arg1 intoTexture:(id)arg2 atPoint:(struct { long long x1; long long x2; })arg3;
- (void)dealloc;
- (id)description;
- (void)detachRenderbuffer:(id)arg1 fromFramebuffer:(id)arg2 attachment:(unsigned int)arg3;
- (void)detachTexture:(id)arg1 fromFramebuffer:(id)arg2 attachment:(unsigned int)arg3;
- (void)disableVertexArrayAtIndex:(unsigned long long)arg1;
- (void)drawTexture:(id)arg1 fromRect:(struct { struct { long long x_1_1_1; long long x_1_1_2; } x1; struct { long long x_2_1_1; long long x_2_1_2; } x2; })arg2 toRect:(struct { struct { long long x_1_1_1; long long x_1_1_2; } x1; struct { long long x_2_1_1; long long x_2_1_2; } x2; })arg3;
- (void)drawTexture:(id)arg1 inRect:(struct { struct { long long x_1_1_1; long long x_1_1_2; } x1; struct { long long x_2_1_1; long long x_2_1_2; } x2; })arg2 atPoint:(struct { long long x1; long long x2; })arg3;
- (void)drawVertexArray:(unsigned int)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)enableVertexArrayAtIndex:(unsigned long long)arg1;
- (void)execute:(id /* block */)arg1;
- (id)extensions;
- (void)generateBuffer:(id)arg1;
- (void)generateFramebuffer:(id)arg1;
- (void)generatePipeline:(id)arg1;
- (void)generateProgram:(id)arg1;
- (void)generateRenderbuffer:(id)arg1;
- (void)generateShader:(id)arg1;
- (void)generateTexture:(id)arg1;
- (void)generateVertexArray:(id)arg1;
- (id)getProgramAttributes:(id)arg1;
- (id)getProgramUniforms:(id)arg1;
- (id)init;
- (id)initWithContext:(id)arg1;
- (bool)isCurrent;
- (bool)linkProgram:(id)arg1 error:(out id*)arg2;
- (void*)mapBuffer:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 options:(unsigned int)arg3;
- (void)presentRenderbuffer;
- (id)privateObjectPool;
- (void)purgeObjectPool:(id)arg1;
- (void)removeProgram:(id)arg1 fromPipeline:(id)arg2;
- (id)renderbufferStorageFormat;
- (struct { long long x1; long long x2; })renderbufferStorageSize;
- (id)rendererString;
- (void)setProgramUniform:(id)arg1 location:(int)arg2 value:(id)arg3;
- (void)setProgramUniform:(id)arg1 name:(id)arg2 value:(id)arg3;
- (void)setRenderbufferStorageFromDrawable:(id)arg1;
- (void)setRenderbufferStorageSize:(struct { long long x1; long long x2; })arg1 format:(id)arg2;
- (void)setTextureStorageFromIOSurface:(id)arg1;
- (void)setTextureStorageSize:(struct { long long x1; long long x2; })arg1 format:(id)arg2;
- (void)setVertexArrayAttribute:(id)arg1 atIndex:(unsigned long long)arg2 offset:(int)arg3 stride:(int)arg4;
- (void)setViewport:(struct { struct { long long x_1_1_1; long long x_1_1_2; } x1; struct { long long x_2_1_1; long long x_2_1_2; } x2; })arg1;
- (void)setVirtualScreen:(long long)arg1;
- (id)sharedObjectPool;
- (id)simpleQuadVertexArray;
- (id)simpleTextureDrawingPipeline;
- (void)unbindBuffer:(id)arg1;
- (void)unbindFramebuffer:(id)arg1;
- (void)unbindPipeline:(id)arg1;
- (void)unbindRenderbuffer:(id)arg1;
- (void)unbindSampler:(id)arg1 atIndex:(unsigned int)arg2;
- (void)unbindTexture:(id)arg1;
- (void)unbindTexture:(id)arg1 atIndex:(unsigned int)arg2;
- (void)unbindVertexArray:(id)arg1;
- (void)unmapBuffer:(id)arg1;
- (void)updateTexture:(id)arg1 inRect:(struct { struct { long long x_1_1_1; long long x_1_1_2; } x1; struct { long long x_2_1_1; long long x_2_1_2; } x2; })arg2 fromBuffer:(id)arg3 atPoint:(struct { long long x1; long long x2; })arg4;
- (bool)validatePipeline:(id)arg1 error:(out id*)arg2;
- (id)vendorString;
- (id)versionString;
- (long long)virtualScreen;

@end
