/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PairedUnlock.framework/PairedUnlock
 */

@interface PUConnection : NSObject <PUUnlockClient> {
    NSXPCConnection * _connection;
    NSObject<OS_dispatch_queue> * _connectionQueue;
    <PUConnectionDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    id  _getRemoteDevicePasscodeStateHandler;
    id  _remoteDeviceRemoveLockoutHandler;
}

@property (readonly, copy) NSString *debugDescription;
@property <PUConnectionDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) id getRemoteDevicePasscodeStateHandler;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) id remoteDeviceRemoveLockoutHandler;
@property (readonly) Class superclass;

+ (void)syncPasscodeState;

- (void).cxx_destruct;
- (id)connection;
- (void)dealloc;
- (id)delegate;
- (id)delegateIfRespondsToSelector:(SEL)arg1;
- (void)didDisableOnlyRemoteUnlock:(bool)arg1 error:(id)arg2;
- (void)didEnableOnlyRemoteUnlock:(bool)arg1 error:(id)arg2;
- (void)didGetRemoteDeviceHasPasscode:(bool)arg1 isLocked:(bool)arg2 isUnlockOnly:(bool)arg3 error:(id)arg4;
- (void)didPairForUnlock:(bool)arg1 error:(id)arg2;
- (void)didUnpairForUnlock:(bool)arg1 error:(id)arg2;
- (void)disableOnlyRemoteUnlock;
- (void)enableOnlyRemoteUnlockWithPasscode:(id)arg1;
- (id)getRemoteDevicePasscodeStateHandler;
- (void)getRemoteDeviceState:(id)arg1;
- (id)init;
- (id)initWithDelegate:(id)arg1;
- (void)pairForUnlockWithPasscode:(id)arg1;
- (const char *)queueNameWithSuffix:(id)arg1;
- (void)remoteDeviceDidCompletePasscodeAction:(bool)arg1 error:(id)arg2;
- (void)remoteDeviceDidRemoveLockout:(bool)arg1 error:(id)arg2;
- (void)remoteDeviceDidUnlock;
- (id)remoteDeviceRemoveLockoutHandler;
- (void)requestRemoteDevicePasscodeAction:(long long)arg1 type:(long long)arg2;
- (void)requestRemoteDeviceRemoveLockout:(id)arg1;
- (void)requestRemoteDeviceUnlockNotification;
- (void)setConnection:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setGetRemoteDevicePasscodeStateHandler:(id)arg1;
- (void)setRemoteDeviceRemoveLockoutHandler:(id)arg1;
- (void)unpairForUnlock;

@end
