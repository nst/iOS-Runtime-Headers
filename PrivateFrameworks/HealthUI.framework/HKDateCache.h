/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HealthUI.framework/HealthUI
 */

@interface HKDateCache : NSObject {
    NSCalendar * _calendar;
    NSDate * _endOfDayMidnight;
    NSDate * _endOfDayNoon;
    NSDate * _endOfMonthMidnight;
    NSDate * _endOfMonthNoon;
    NSDate * _endOfWeekMidnight;
    NSDate * _endOfWeekNoon;
    NSDate * _endOfYear;
    NSDate * _endOfYearNoon;
    NSHashTable * _observers;
    NSDate * _oneMinuteBeforeEndOfDayMidnight;
    NSDate * _startOfDayMidnight;
    NSDate * _startOfDayNoon;
    NSDate * _startOfMonthMidnight;
    NSDate * _startOfMonthNoon;
    NSDate * _startOfWeekMidnight;
    NSDate * _startOfWeekNoon;
    NSDate * _startOfYear;
    NSDate * _startOfYearNoon;
    NSSet * _weekendDays;
}

@property (nonatomic, readonly) NSCalendar *calendar;
@property (nonatomic, readonly) NSDate *endOfDayMidnight;
@property (nonatomic, readonly) NSDate *endOfDayNoon;
@property (nonatomic, readonly) NSDate *endOfMonthMidnight;
@property (nonatomic, readonly) NSDate *endOfMonthNoon;
@property (nonatomic, readonly) NSDate *endOfWeekMidnight;
@property (nonatomic, readonly) NSDate *endOfWeekNoon;
@property (nonatomic, readonly) NSDate *endOfYearMidnight;
@property (nonatomic, readonly) NSDate *endOfYearNoon;
@property (nonatomic, readonly) NSDate *oneMinuteBeforeEndOfDayMidnight;
@property (nonatomic, readonly) NSDate *startOfDayMidnight;
@property (nonatomic, readonly) NSDate *startOfDayNoon;
@property (nonatomic, readonly) NSDate *startOfMonthMidnight;
@property (nonatomic, readonly) NSDate *startOfMonthNoon;
@property (nonatomic, readonly) NSDate *startOfWeekMidnight;
@property (nonatomic, readonly) NSDate *startOfWeekNoon;
@property (nonatomic, readonly) NSDate *startOfYearMidnight;
@property (nonatomic, readonly) NSDate *startOfYearNoon;

- (void).cxx_destruct;
- (void)_flushCacheAndNotifyObservers:(id)arg1;
- (void)_notifyObserversDidUpdateOnNotification:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)calendar;
- (void)dealloc;
- (id)endOfDay:(bool)arg1;
- (id)endOfDayMidnight;
- (id)endOfDayNoon;
- (id)endOfMonth:(bool)arg1;
- (id)endOfMonthMidnight;
- (id)endOfMonthNoon;
- (id)endOfWeek:(bool)arg1;
- (id)endOfWeekMidnight;
- (id)endOfWeekNoon;
- (id)endOfYear:(bool)arg1;
- (id)endOfYearMidnight;
- (id)endOfYearNoon;
- (void)flushCache;
- (id)init;
- (id)initWithCalendar:(id)arg1;
- (bool)isDateInToday:(id)arg1;
- (bool)isDayOfWeekNumberOnWeekend:(id)arg1;
- (id)oneMinuteBeforeEndOfDayMidnight;
- (void)removeObserver:(id)arg1;
- (id)startOfDay:(bool)arg1;
- (id)startOfDayMidnight;
- (id)startOfDayNoon;
- (id)startOfMonth:(bool)arg1;
- (id)startOfMonthMidnight;
- (id)startOfMonthNoon;
- (id)startOfWeek:(bool)arg1;
- (id)startOfWeekMidnight;
- (id)startOfWeekNoon;
- (id)startOfYear:(bool)arg1;
- (id)startOfYearMidnight;
- (id)startOfYearNoon;
- (id)weekendDays;

@end
