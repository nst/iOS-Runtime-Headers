/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraEffectsKit.framework/CameraEffectsKit
 */

@interface CFXFilterEffectPickerView : CFXEffectPickerView {
    unsigned long long  _cachedEffectCount;
    JTCollectionView * _collectionView;
    JTCollectionViewFlowLayout * _collectionViewLayout;
    UILabel * _compactSelectedTitleView;
    UIView * _compactSelectionView;
    UIView * _contentView;
    bool  _displayExpandedLayout;
    NSIndexPath * _lastScrollIndexPath;
    struct CGSize { 
        double width; 
        double height; 
    }  _lastViewSize;
    struct CGPoint { 
        double x; 
        double y; 
    }  _previousScrollOffset;
    UISelectionFeedbackGenerator * _selectionFeedbackGenerator;
    <CFXFilterEffectPickerViewDataSource> * dataSource;
    <CFXFilterEffectPickerViewDelegate> * delegate;
}

@property (nonatomic) unsigned long long cachedEffectCount;
@property (nonatomic) JTCollectionView *collectionView;
@property (nonatomic, retain) JTCollectionViewFlowLayout *collectionViewLayout;
@property (nonatomic, retain) UILabel *compactSelectedTitleView;
@property (nonatomic, retain) UIView *compactSelectionView;
@property (nonatomic) UIView *contentView;
@property (nonatomic) <CFXFilterEffectPickerViewDataSource> *dataSource;
@property (nonatomic) <CFXFilterEffectPickerViewDelegate> *delegate;
@property (getter=isDisplayingExpandedLayout, nonatomic) bool displayExpandedLayout;
@property (nonatomic, retain) NSIndexPath *lastScrollIndexPath;
@property (nonatomic) struct CGSize { double x1; double x2; } lastViewSize;
@property (nonatomic) struct CGPoint { double x1; double x2; } previousScrollOffset;
@property (nonatomic, retain) UISelectionFeedbackGenerator *selectionFeedbackGenerator;

- (void).cxx_destruct;
- (void)CFX_selectInitialItem;
- (void)CFX_selectItemAtCellIndex:(unsigned long long)arg1 animated:(bool)arg2;
- (void)CFX_updateTitleForCenterItemAtIndex:(long long)arg1;
- (void)buildCompactSelectionViews;
- (unsigned long long)cachedEffectCount;
- (id)collectionView;
- (id)collectionViewLayout;
- (id)compactSelectedTitleView;
- (id)compactSelectionView;
- (void)configureCell:(id)arg1;
- (void)configureCollectionViewLayout;
- (id)contentView;
- (id)dataSource;
- (id)delegate;
- (void)didScrollCollectionView;
- (void)didSelectItemAtCellIndex:(unsigned long long)arg1;
- (id)effectPickerCellNibName;
- (id)effectPickerCellReuseIdentifier;
- (id)effectPickerNibName;
- (id)indexPathForCenterOfCollectionView;
- (bool)isDisplayingCompactLayout;
- (bool)isDisplayingExpandedLayout;
- (id)lastScrollIndexPath;
- (struct CGSize { double x1; double x2; })lastViewSize;
- (id)layoutAttributesForNearestItemToCenterWithOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)layoutSubviews;
- (void)orientationDidChange;
- (struct CGPoint { double x1; double x2; })previousScrollOffset;
- (void)reloadData;
- (void)removeCompactSelectionViews;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3;
- (void)selectCenterItem;
- (void)selectEffectWithIdentifier:(id)arg1;
- (unsigned long long)selectedIndex;
- (id)selectionFeedbackGenerator;
- (void)setCachedEffectCount:(unsigned long long)arg1;
- (void)setCollectionView:(id)arg1;
- (void)setCollectionViewLayout:(id)arg1;
- (void)setCompactSelectedTitleView:(id)arg1;
- (void)setCompactSelectionView:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisplayExpandedLayout:(bool)arg1;
- (void)setLastScrollIndexPath:(id)arg1;
- (void)setLastViewSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPreviousScrollOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setSelectionFeedbackGenerator:(id)arg1;
- (void)subviewsDidLoad;
- (void)updatePreviewEffectsWhenReloadComplete;

@end
