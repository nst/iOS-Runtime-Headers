/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ActivityAchievements.framework/ActivityAchievements
 */

@interface ACHMonthlyChallengeTemplateSource : NSObject <ACHTemplateSource> {
    NSCalendar * _currentCalendar;
    NSCalendar * _currentCalendarOverride;
    NSDate * _currentDate;
    NSDate * _currentDateOverride;
    ACHMonthlyChallengeDataSource * _dataSource;
    bool  _isAppleWatch;
    ACHSyncingMonthlyChallengeTemplateCache * _templateCache;
    ACHMonthlyChallengeTemplateDataProvider * _templateDataProvider;
}

@property (nonatomic, retain) NSCalendar *currentCalendar;
@property (nonatomic, retain) NSDate *currentDate;
@property (nonatomic, retain) ACHMonthlyChallengeDataSource *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) NSObject<ACHTemplateSourceDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSString *identifier;
@property (nonatomic) bool isAppleWatch;
@property (nonatomic, readonly) long long runCadence;
@property (readonly) Class superclass;
@property (nonatomic, retain) ACHSyncingMonthlyChallengeTemplateCache *templateCache;
@property (nonatomic, retain) ACHMonthlyChallengeTemplateDataProvider *templateDataProvider;

- (void).cxx_destruct;
- (id)_availableMonthlyChallengeTypes;
- (id)_createMonthlyChallengeTemplateWithType:(unsigned long long)arg1 dateCompoonentInterval:(id)arg2 goalValue:(double)arg3;
- (id)_dateComponentIntervalForCurrentMonth;
- (id)_dateComponentIntervalForLastMonth;
- (id)_dateComponentIntervalForTwoMonthsAgo;
- (unsigned long long)_getRandomMonthlyChallengeType;
- (double)_goalValueForCurrentMonthForType:(unsigned long long)arg1;
- (bool)_isInFirstWeekOfCurrentMonth:(id)arg1;
- (id)_maximumValueForMonthlyChallengeType:(unsigned long long)arg1;
- (id)_modelsDirectoryBasePathForTemplate:(id)arg1;
- (id)_monthStringFromTemplateName:(id)arg1;
- (id)_monthlyAchievementsAssetsDirectoryBasePath;
- (unsigned long long)_numberOfDaysInMonthForDate:(id)arg1;
- (double)_roundedGoalValue:(double)arg1 monthlyChallengeType:(unsigned long long)arg2;
- (double)_targetGoalValueForCurrentMonthForType:(unsigned long long)arg1;
- (id)currentCalendar;
- (id)currentDate;
- (id)customPlaceholderValuesForTemplate:(id)arg1;
- (id)dataSource;
- (id)identifier;
- (id)initWithDataSource:(id)arg1 dataProvider:(id)arg2 templateCache:(id)arg3;
- (bool)isAppleWatch;
- (bool)isGoalValueForMonthlyChallengeTypeValid:(unsigned long long)arg1;
- (bool)isMonthlyChallengeOfTypeAvailable:(unsigned long long)arg1;
- (id)localizationBundleURLForTemplate:(id)arg1;
- (id)propertyListBundleURLForTemplate:(id)arg1;
- (id)resourceBundleURLForTemplate:(id)arg1;
- (long long)runCadence;
- (void)setCurrentCalendar:(id)arg1;
- (void)setCurrentCalendarOverride:(id)arg1;
- (void)setCurrentDate:(id)arg1;
- (void)setCurrentDateOverride:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setIsAppleWatch:(bool)arg1;
- (void)setTemplateCache:(id)arg1;
- (void)setTemplateDataProvider:(id)arg1;
- (bool)sourceShouldRunForDate:(id)arg1;
- (id)stickerBundleURLForTemplate:(id)arg1;
- (bool)subObjectsHaveDatabaseAssertions;
- (id)templateCache;
- (id)templateDataProvider;
- (void)templatesForDate:(id)arg1 completion:(id /* block */)arg2;
- (void)templatesForDate:(id)arg1 databaseContext:(id)arg2 completion:(id /* block */)arg3;

@end
