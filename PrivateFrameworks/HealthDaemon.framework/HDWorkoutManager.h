/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
 */

@interface HDWorkoutManager : NSObject <HDActiveWorkoutServerDelegate, HDDatabaseProtectedDataObserver, HDDiagnosticObject, HDForegroundClientProcessObserver, HDHealthDaemonReadyObserver, HDWorkoutEventCollectorDelegate> {
    NSMutableDictionary * _activeWorkoutServers;
    HDAlertSuppressor * _alertSuppressor;
    HDWatchAppStateMonitor * _appStateMonitor;
    CSLSSession * _carouselSession;
    CMWorkoutManager * _cmWorkoutManager;
    _HDWorkoutData * _currentHeartRateRecoveryWorkout;
    NSMutableSet * _currentObservedTypes;
    _HDWorkoutData * _currentWorkout;
    HDSessionAssertion * _currentWorkoutAssertion;
    bool  _enableDNDDuringWorkout;
    NSMutableSet * _eventCollectors;
    void * _heartRateRecoveryPowerAssertion;
    NSObject<OS_dispatch_source> * _heartRateRecoveryTimer;
    bool  _isFirstLaunchAndNotYetSmoothed;
    bool  _isInHeartRateRecovery;
    CLLocationManager * _locationManager;
    HDWorkoutLocationSmoother * _locationSmoother;
    bool  _needToCheckForLocationSeriesOnUnlock;
    _HDWorkoutData * _nextWorkout;
    NSHashTable * _observerTable;
    HDPowerSavingModeManager * _powerSavingModeManager;
    HDProfile * _profile;
    NSObject<OS_dispatch_queue> * _queue;
    BBQuietModeOverrideAssertion * _quietModeOverrideAssertion;
    NSMutableSet * _startedEventCollectors;
    bool  _stopEventAfterPause;
    bool  _waitingForStopEvent;
}

@property (nonatomic, retain) CSLSSession *carouselSession;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool enableDNDDuringWorkout;
@property (nonatomic, readonly) bool hasAnyActiveConnectedGymWorkouts;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isInHeartRateRecovery;
@property (nonatomic, retain) HDWorkoutLocationSmoother *locationSmoother;
@property (nonatomic, readonly) HDProfile *profile;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) BBQuietModeOverrideAssertion *quietModeOverrideAssertion;
@property (readonly) Class superclass;

+ (id)_distanceTypeForActivityType:(unsigned long long)arg1 isIndoor:(bool)arg2;
+ (id)observedTypesForActivityType:(unsigned long long)arg1 isIndoor:(bool)arg2 connectedToFitnessMachine:(bool)arg3;

- (void).cxx_destruct;
- (void)_associationsSyncedForWorkout:(id)arg1;
- (id)_coreMotionWorkoutManager;
- (void)_loadWorkoutDNDDefault;
- (id)_mainQueue_locationManager;
- (void)_observeDNDWorkoutDefault;
- (bool)_pluginHasBackgroundRunMode:(id)arg1 errorOut:(id*)arg2;
- (void)_postWorkoutUpdatedNotification;
- (void)_queue_activeWorkoutServerDidDeactivate:(id)arg1;
- (void)_queue_beginHeartRateRecovery;
- (unsigned long long)_queue_currentWorkoutActivityType;
- (long long)_queue_currentWorkoutLocationType;
- (void)_queue_didUpdateCurrentWorkoutSession;
- (void)_queue_disableViewOnWakeForWorkout:(id)arg1;
- (void)_queue_enableViewOnWakeForWorkout:(id)arg1;
- (void)_queue_endCarouselSession;
- (void)_queue_endHeartRateRecovery;
- (id)_queue_eventCollectors;
- (void)_queue_immediateUpdateWithCompletion:(id /* block */)arg1;
- (bool)_queue_isPowerSavingEnabledForCurrentActivity;
- (id)_queue_locationSmoother;
- (void)_queue_logWorkoutStateToPowerLog;
- (void)_queue_pauseCurrentSession;
- (void)_queue_releaseQuietModeAssertion;
- (void)_queue_resetActivityTypeForWorkoutSession:(id)arg1;
- (void)_queue_resumeCurrentSession;
- (void)_queue_sessionEnded;
- (void)_queue_setActivityType:(unsigned long long)arg1 forSessionUUID:(id)arg2 isIndoor:(bool)arg3;
- (void)_queue_setActivityTypeForWorkoutSession:(id)arg1;
- (void)_queue_setBackgroundExecutionForWorkoutType:(long long)arg1 event:(id)arg2;
- (void)_queue_setCurrentSessionState:(long long)arg1;
- (void)_queue_smoothAllUnsmoothedLocationSeries;
- (void)_queue_startBackgroundExecutionForWorkout:(id)arg1;
- (void)_queue_startCarouselSessionForBundleID:(id)arg1;
- (void)_queue_startDataAndEventCollection;
- (void)_queue_startDataCollectionForTypes:(id)arg1;
- (void)_queue_startWatchAppWithWorkoutConfiguration:(id)arg1 client:(id)arg2 completion:(id /* block */)arg3;
- (void)_queue_startWorkout:(id)arg1;
- (void)_queue_stopBackgroundExecution;
- (void)_queue_stopCurrentSessionWaitingForStopEvent:(bool)arg1;
- (void)_queue_stopDataAndEventCollection;
- (void)_queue_stopDataCollectionForTypes:(id)arg1;
- (void)_queue_takeQuietModeAssertion;
- (void)_queue_updateFakingDataInSimulator;
- (void)_receivedStartWorkoutAppRequest:(id)arg1 completion:(id /* block */)arg2;
- (void)_sendStartWorkoutAppResponse:(id /* block */)arg1 error:(id)arg2;
- (void)_setupLocationObserversIfNeeded;
- (bool)_shouldWaitForCMStopEventForActivity:(unsigned long long)arg1;
- (void)_startWatchAppWithWorkoutConfiguration:(id)arg1 client:(id)arg2 completion:(id /* block */)arg3;
- (void)_unobserveDNDWorkoutDefault;
- (id)_workoutSessionNotCurrentError:(id)arg1;
- (void)addWorkoutEventObserver:(id)arg1;
- (id)carouselSession;
- (void)clientInvalidated:(id)arg1;
- (void)createActiveWorkoutServerWithConfiguration:(id)arg1 clientProxy:(id)arg2 server:(id)arg3 completion:(id /* block */)arg4;
- (unsigned long long)currentWorkoutActivityType;
- (id)currentWorkoutClient;
- (long long)currentWorkoutLocationType;
- (void)daemonReady:(id)arg1;
- (void)database:(id)arg1 protectedDataDidBecomeAvailable:(bool)arg2;
- (void)dealloc;
- (id)diagnosticDescription;
- (bool)enableDNDDuringWorkout;
- (void)endHeartRateRecovery;
- (void)foregroundClientProcessesDidChange:(id)arg1;
- (void)generatePauseOrResumeRequestWithCompletion:(id /* block */)arg1;
- (void)getCurrentWorkoutSnapshotWithCompletion:(id /* block */)arg1;
- (void)getFirstPartyWorkoutSnapshotWithCompletion:(id /* block */)arg1;
- (bool)hasActiveWorkoutServerForClient:(id)arg1;
- (bool)hasAnyActiveConnectedGymWorkouts;
- (bool)hasAnyActiveWorkouts;
- (void)hk_fakeLapEventWithDate:(id)arg1 strokeStyle:(long long)arg2;
- (void)hk_fakeStopEventWithDate:(id)arg1;
- (id)initWithProfile:(id)arg1;
- (bool)isInHeartRateRecovery;
- (bool)isPowerSavingEnabledForCurrentActivity;
- (id)locationSmoother;
- (void)pauseActiveWorkoutsWithCompletion:(id /* block */)arg1;
- (void)pauseCurrentWorkoutWithCompletion:(id /* block */)arg1;
- (void)pauseWorkoutSessionWithUUID:(id)arg1 completion:(id /* block */)arg2;
- (bool)pluginHasBackgroundRunMode:(id)arg1 errorOut:(id*)arg2;
- (id)profile;
- (id)queue;
- (id)quietModeOverrideAssertion;
- (void)receiveMetrics:(id)arg1;
- (void)receivedStartWorkoutAppRequest:(id)arg1 completion:(id /* block */)arg2;
- (void)receivedWorkoutEvent:(id)arg1;
- (void)removeWorkoutEventObserver:(id)arg1;
- (void)resumeCurrentWorkoutWithCompletion:(id /* block */)arg1;
- (void)resumeWorkoutSessionWithUUID:(id)arg1 completion:(id /* block */)arg2;
- (void)setCarouselSession:(id)arg1;
- (void)setEnableDNDDuringWorkout:(bool)arg1;
- (void)setLocationSmoother:(id)arg1;
- (void)setQuietModeOverrideAssertion:(id)arg1;
- (void)startWatchAppWithWorkoutConfiguration:(id)arg1 client:(id)arg2 completion:(id /* block */)arg3;
- (void)startWorkoutSession:(id)arg1 client:(id)arg2 server:(id)arg3 isFirstParty:(bool)arg4 completion:(id /* block */)arg5;
- (void)stopWorkoutSessionWithUUID:(id)arg1 completion:(id /* block */)arg2;
- (void)unitTest_smoothRoute:(id)arg1 completion:(id /* block */)arg2;
- (void)workoutServerDidDeactivate:(id)arg1;

@end
