/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HDRProcessing.framework/HDRProcessing
 */

@interface HDRProcessorMetal : NSObject {
    struct __CVPixelBufferPool { } * _420vPool;
    unsigned long long  _bitDepth;
    unsigned long long  _colourPrimaries;
    <MTLCommandQueue> * _commandQueue;
    NSObject<OS_dispatch_queue> * _completionQueue;
    DolbyVisionComposer * _composer;
    struct { 
        unsigned int width; 
        unsigned int height; 
        unsigned int usage; 
        unsigned int targetNits; 
        unsigned int outputPixelFormat; 
        struct __CFString {} *targetColorPrimaries; 
        unsigned int outputMetaDataFormat; 
    }  _configurationParameters;
    float  _defaultAmbientLightValue;
    float  _defaultEDRFactorValue;
    float  _defaultMaxEDRValue;
    <MTLDevice> * _device;
    unsigned long long  _displayDiagonalSize;
    unsigned int  _displayType;
    DolbyVisionDisplayManagement * _dm;
    struct { 
        struct { 
            unsigned int BL_bit_depth_minus8; 
            unsigned int EL_bit_depth_minus8; 
            unsigned int vdr_bit_depth; 
            unsigned int EL_chroma_format_idc; 
            unsigned int BL_chroma_format_idc; 
            unsigned int mapping_chroma_format_idc; 
            unsigned int num_x_partitions; 
            unsigned int num_y_partitions; 
            unsigned int overlapped_prediction_method; 
            unsigned int el_spatial_resampling_filter_flag; 
            unsigned int coefficient_data_type; 
            unsigned int coefficient_log2_denom; 
            unsigned int num_pivots[3]; 
            unsigned int pivot_value[3][18]; 
            unsigned int mapping_idc[1][1][3][9]; 
            unsigned int poly_order[1][1][3][9]; 
            unsigned int linear_interp_flag[1][1][3][9]; 
            unsigned int pred_linear_interp_value_int[1][1][3][9]; 
            unsigned int pred_linear_interp_value[1][1][3][9]; 
            int poly_coef_int[1][1][3][9][3]; 
            unsigned int poly_coef[1][1][3][9][3]; 
            long long fp_poly_coef[1][1][3][9][6]; 
            float fp_poly_coef_float[1][1][3][9][6]; 
            unsigned int mmr_order[1][1][3][9]; 
            int mmr_constant_int[1][1][3][9]; 
            unsigned int mmr_constant[1][1][3][9]; 
            int mmr_coef_int[1][1][3][9][4][7]; 
            unsigned int mmr_coef[1][1][3][9][4][7]; 
            long long fp_mmr_coef[1][1][3][9][4][7]; 
            float fp_mmr_coef_float[1][1][3][9][4][7]; 
            int pow_coef_int[1][1][3][9][6]; 
            unsigned int pow_coef[1][1][3][9][6]; 
            unsigned int disable_residual_flag; 
            unsigned int nlq_method_idc; 
            unsigned int nlq_num_pivots; 
            unsigned int nlq_pivot_value[9]; 
            unsigned int nlq_offset[1][1][9][3]; 
            unsigned int vdr_in_max_int[1][1][9][3]; 
            unsigned int vdr_in_max[1][1][9][3]; 
            long long fp_vdr_in_max[1][1][9][3]; 
            unsigned int linear_deadzone_slope_int[1][1][9][3]; 
            unsigned int linear_deadzone_slope[1][1][9][3]; 
            long long linear_dz_slope[1][1][9][3]; 
            unsigned int linear_deadzone_threshold_int[1][1][9][3]; 
            unsigned int linear_deadzone_threshold[1][1][9][3]; 
            long long linear_dz_th[1][1][9][3]; 
            unsigned int mu_law_levels[1][1][9][3]; 
            unsigned int mu_law_mu[1][1][9][3]; 
            unsigned int pred_LUT_value_int[1][1][3][16384]; 
            unsigned int pred_LUT_value[1][1][3][16384]; 
            unsigned int el_frame_crop_bottom_offset; 
        } composerData; 
        struct { 
            unsigned int vdr_dm_metadata_present_flag; 
            unsigned int affected_dm_metadata_id; 
            unsigned int current_dm_metadata_id; 
            unsigned int scene_refresh_flag; 
            int YCCtoRGB_coef[9]; 
            unsigned int YCCtoRGB_offset[3]; 
            int RGBtoLMS_coef[9]; 
            unsigned int signal_eotf; 
            unsigned int signal_eotf_param0; 
            unsigned int signal_eotf_param1; 
            unsigned int signal_eotf_param2; 
            unsigned int signal_bit_depth; 
            unsigned int signal_color_space; 
            unsigned int signal_chroma_format; 
            unsigned int signal_full_range_flag; 
            unsigned int source_min_PQ; 
            unsigned int source_max_PQ; 
            unsigned int source_diagonal; 
            unsigned int num_ext_blocks; 
            unsigned int level1; 
            unsigned int min_PQ; 
            unsigned int max_PQ; 
            unsigned int avg_PQ; 
            unsigned int level2; 
            unsigned int target_max_PQ; 
            unsigned int trim_slope; 
            unsigned int trim_offset; 
            unsigned int trim_power; 
            unsigned int trim_chroma_weight; 
            unsigned int trim_saturation_gain; 
            int ms_weight; 
            unsigned int level4; 
            unsigned int anchor_PQ; 
            unsigned int anchor_power; 
            unsigned int level5; 
            unsigned int active_area_left_offset; 
            unsigned int active_area_right_offset; 
            unsigned int active_area_top_offset; 
            unsigned int active_area_bottom_offset; 
            unsigned int level6; 
            unsigned int max_display_mastering_luminance; 
            unsigned int min_display_mastering_luminance; 
            unsigned int max_content_light_level; 
            unsigned int max_frame_average_light_level; 
        } dmData; 
        struct ToneCurve_Control { 
            double targetMaxLinear; 
            float maxEDRValue; 
            float EDRFactor; 
            float AmbientLight; 
            struct __CFString {} *targetColorPrimaries; 
            unsigned int outputPixelFormat; 
            float forwardDM_tMaxPq; 
            float forwardDM_tMinPq; 
            float mid; 
            float crush; 
            float clip; 
        } tcControl; 
        struct { 
            unsigned int hdrContent; 
            unsigned int bitDepth; 
            unsigned int displayType; 
            unsigned int displayDiagonalSize; 
            unsigned int maxDisplayBrightnessNits; 
            float minDisplayBrightnessNits; 
            unsigned int videoFullRangeFlag; 
            unsigned int colourPrimaries; 
            unsigned int transferFunction; 
            float YCCtoRGB_coef[9]; 
            float RGBtoLMS_coef[9]; 
            unsigned int maxMasteringNits; 
            float minMasteringNits; 
        } hdrControl; 
        struct { 
            struct { 
                unsigned short display_primaries_xg; 
                unsigned short display_primaries_yg; 
                unsigned short display_primaries_xb; 
                unsigned short display_primaries_yb; 
                unsigned short display_primaries_xr; 
                unsigned short display_primaries_yr; 
                unsigned short white_point_x; 
                unsigned short white_point_y; 
                unsigned int max_display_mastering_luminance; 
                unsigned int min_display_mastering_luminance; 
            } sei; 
            struct { 
                unsigned short max_content_light_level; 
                unsigned short max_frame_average_light_level; 
            } ll; 
        } infoFrameData; 
    }  _edrMetaData;
    unsigned int  _hdrMode;
    unsigned long long  _matrixCoeffs;
    unsigned long long  _maxDisplayBrightnessNits;
    unsigned long long  _maxMasteringNits;
    float  _minDisplayBrightnessNits;
    float  _minMasteringNits;
    unsigned long long  _numberOfProcessedFrames;
    unsigned long long  _numberOfRequestedFrames;
    unsigned long long  _numberOfScheduledFrames;
    struct EDRMetaData_RBSP { unsigned long long x1; int x2; unsigned int x3; unsigned int x4; char *x5; char *x6; char *x7; unsigned char x8; unsigned char x9; unsigned int x10; int x11; unsigned long long x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; unsigned int x24; unsigned int x25; unsigned int x26; unsigned int x27; unsigned int x28; unsigned int x29; unsigned int x30; unsigned int x31; unsigned int x32; unsigned int x33; unsigned int x34; unsigned int x35; unsigned int x36; unsigned int x37; unsigned int x38; unsigned int x39; unsigned int x40; unsigned int x41; unsigned int x42; unsigned int x43; unsigned int x44; unsigned int x45; unsigned int x46; unsigned int x47; unsigned int x48[3]; unsigned int x49[3]; unsigned int x50; unsigned int x51; unsigned int x52; unsigned int x53; unsigned int x54; unsigned int x55; unsigned int x56[3]; unsigned int x57[3][9]; unsigned int x58[3][18]; } * _parser;
    SpatialResampler * _resampler;
    NSObject<OS_dispatch_queue> * _scheduleQueue;
    NSObject<OS_dispatch_semaphore> * _scheduleSemaphone;
    struct __CFString { } * _targetColorPrimaries;
    double  _targetNits;
    unsigned long long  _transferFunction;
    unsigned long long  _videoFullRangeFlag;
    struct __CVPixelBufferPool { } * _x420Pool;
}

@property float defaultAmbientLightValue;
@property float defaultEDRFactorValue;
@property float defaultMaxEDRValue;
@property struct __CFString { }*targetColorPrimaries;
@property double targetNits;

- (void).cxx_destruct;
- (bool)allocateResources;
- (void)checkIOSurface:(struct __IOSurface { }*)arg1 forInfoFrame:(struct { struct { unsigned short x_1_1_1; unsigned short x_1_1_2; unsigned short x_1_1_3; unsigned short x_1_1_4; unsigned short x_1_1_5; unsigned short x_1_1_6; unsigned short x_1_1_7; unsigned short x_1_1_8; unsigned int x_1_1_9; unsigned int x_1_1_10; } x1; struct { unsigned short x_2_1_1; unsigned short x_2_1_2; } x2; }*)arg2 withRPUData:(bool)arg3;
- (void)dealloc;
- (float)defaultAmbientLightValue;
- (float)defaultEDRFactorValue;
- (float)defaultMaxEDRValue;
- (long long)encodeToCommandBuffer:(id)arg1 inputSurfaceLayer0:(struct __IOSurface { }*)arg2 inputSurfacelayer1:(struct __IOSurface { }*)arg3 outputSurface:(struct __IOSurface { }*)arg4 metadata:(id)arg5;
- (void)extractCAMetaData:(id)arg1 withRPU:(bool)arg2;
- (void)extractFrameMetadata:(struct __CFDictionary { }*)arg1 intoTCControl:(struct ToneCurve_Control { double x1; float x2; float x3; float x4; struct __CFString {} *x5; unsigned int x6; float x7; float x8; float x9; float x10; float x11; }*)arg2;
- (void)extractHEVCHDRParameterFromInputIOSurface:(struct __IOSurface { }*)arg1 forInfoFrame:(struct { struct { unsigned short x_1_1_1; unsigned short x_1_1_2; unsigned short x_1_1_3; unsigned short x_1_1_4; unsigned short x_1_1_5; unsigned short x_1_1_6; unsigned short x_1_1_7; unsigned short x_1_1_8; unsigned int x_1_1_9; unsigned int x_1_1_10; } x1; struct { unsigned short x_2_1_1; unsigned short x_2_1_2; } x2; }*)arg2;
- (id)initWithConfigurationParameters:(struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; struct __CFString {} *x6; unsigned int x7; }*)arg1;
- (id)initWithDevice:(id)arg1 config:(const struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; struct __CFString {} *x6; unsigned int x7; }*)arg2;
- (void)processFrameInternalWithLayer0:(struct __IOSurface { }*)arg1 layer1:(struct __IOSurface { }*)arg2 outout:(struct __IOSurface { }*)arg3 metadata:(id)arg4 commandbuffer:(id)arg5;
- (long long)processFrameWithLayer0:(struct __CVBuffer { }*)arg1 layer1:(struct __CVBuffer { }*)arg2 output:(struct __CVBuffer { }*)arg3 metadata:(id)arg4 commandbuffer:(id)arg5 callback:(id /* block */)arg6;
- (long long)processPixelsWithLayer0:(struct __IOSurface { }*)arg1 layer1:(struct __IOSurface { }*)arg2 output:(struct __IOSurface { }*)arg3 metaData:(struct { struct { unsigned int x_1_1_1; unsigned int x_1_1_2; unsigned int x_1_1_3; unsigned int x_1_1_4; unsigned int x_1_1_5; unsigned int x_1_1_6; unsigned int x_1_1_7; unsigned int x_1_1_8; unsigned int x_1_1_9; unsigned int x_1_1_10; unsigned int x_1_1_11; unsigned int x_1_1_12; unsigned int x_1_1_13[3]; unsigned int x_1_1_14[3][18]; unsigned int x_1_1_15[1][1][3][9]; unsigned int x_1_1_16[1][1][3][9]; unsigned int x_1_1_17[1][1][3][9]; unsigned int x_1_1_18[1][1][3][9]; unsigned int x_1_1_19[1][1][3][9]; int x_1_1_20[1][1][3][9][3]; unsigned int x_1_1_21[1][1][3][9][3]; long long x_1_1_22[1][1][3][9][6]; float x_1_1_23[1][1][3][9][6]; unsigned int x_1_1_24[1][1][3][9]; int x_1_1_25[1][1][3][9]; unsigned int x_1_1_26[1][1][3][9]; int x_1_1_27[1][1][3][9][4][7]; unsigned int x_1_1_28[1][1][3][9][4][7]; long long x_1_1_29[1][1][3][9][4][7]; float x_1_1_30[1][1][3][9][4][7]; int x_1_1_31[1][1][3][9][6]; unsigned int x_1_1_32[1][1][3][9][6]; unsigned int x_1_1_33; unsigned int x_1_1_34; unsigned int x_1_1_35; unsigned int x_1_1_36[9]; } x1; }*)arg4 tcControl:(struct ToneCurve_Control { double x1; float x2; float x3; float x4; struct __CFString {} *x5; unsigned int x6; float x7; float x8; float x9; float x10; float x11; }*)arg5 hdrControl:(struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; float x6; unsigned int x7; unsigned int x8; unsigned int x9; float x10[9]; float x11[9]; unsigned int x12; float x13; }*)arg6 hdr10InfoFrame:(struct { struct { unsigned short x_1_1_1; unsigned short x_1_1_2; unsigned short x_1_1_3; unsigned short x_1_1_4; unsigned short x_1_1_5; unsigned short x_1_1_6; unsigned short x_1_1_7; unsigned short x_1_1_8; unsigned int x_1_1_9; unsigned int x_1_1_10; } x1; struct { unsigned short x_2_1_1; unsigned short x_2_1_2; } x2; }*)arg7 commandbuffer:(id)arg8;
- (void)releaseResources;
- (unsigned int)selectHDRUsage;
- (void)setCSCMatrixInHDRControl:(struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; float x6; unsigned int x7; unsigned int x8; unsigned int x9; float x10[9]; float x11[9]; unsigned int x12; float x13; }*)arg1 forIndex:(unsigned int)arg2;
- (void)setDefaultAmbientLightValue:(float)arg1;
- (void)setDefaultEDRFactorValue:(float)arg1;
- (void)setDefaultMaxEDRValue:(float)arg1;
- (void)setHDRControl:(struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; float x6; unsigned int x7; unsigned int x8; unsigned int x9; float x10[9]; float x11[9]; unsigned int x12; float x13; }*)arg1 withRUP:(bool)arg2;
- (void)setTargetColorPrimaries:(struct __CFString { }*)arg1;
- (void)setTargetNits:(double)arg1;
- (struct __CFString { }*)targetColorPrimaries;
- (double)targetNits;

@end
