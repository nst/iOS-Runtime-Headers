/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSWPTOCLayout : TSWPShapeLayout {
    TSWPTOCLayoutHint * _hint;
    unsigned long long  _initialCharIndex;
    struct CGSize { 
        double width; 
        double height; 
    }  _maxSize;
    unsigned long long  _storageChangeCount;
    bool  _textIsVertical;
}

@property (nonatomic, readonly) TSWPTOCLayoutHint *hint;
@property (nonatomic, readonly) unsigned long long initialCharIndex;
@property (getter=isLastLayoutInTOC, nonatomic, readonly) bool lastLayoutInTOC;
@property (nonatomic) struct CGSize { double x1; double x2; } maxSize;

- (void).cxx_destruct;
- (struct CGSize { double x1; double x2; })adjustedInsetsForTarget:(id)arg1;
- (bool)alwaysStartsNewTarget;
- (unsigned long long)autosizeFlagsForTextLayout:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })autosizedFrameForTextLayout:(id)arg1 textSize:(struct CGSize { double x1; double x2; })arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundsForStandardKnobs;
- (unsigned long long)columnCount;
- (id)commandToClampModelToLayoutSize;
- (id)computeLayoutGeometry;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (id)hint;
- (id)initWithInfo:(id)arg1;
- (id)initWithInfo:(id)arg1 initialCharIndex:(unsigned long long)arg2 textIsVertical:(bool)arg3 maxSize:(struct CGSize { double x1; double x2; })arg4;
- (unsigned long long)initialCharIndex;
- (void)invalidateForAutosizingTextLayout:(id)arg1;
- (bool)isDraggable;
- (bool)isLastLayoutInTOC;
- (id)layoutMargins;
- (double)maxAutoGrowBlockHeightForTextLayout:(id)arg1;
- (struct CGSize { double x1; double x2; })maxSize;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })nonAutosizedFrameForTextLayout:(id)arg1;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 target:(id)arg3 outWidth:(double*)arg4 outGap:(double*)arg5;
- (Class)repClassForTextLayout:(id)arg1;
- (void)setMaxSize:(struct CGSize { double x1; double x2; })arg1;
- (bool)shrinkTextToFit;
- (bool)textLayoutShouldLayoutVertically:(id)arg1;
- (bool)textLayoutShouldWrapAroundExternalDrawables:(id)arg1;
- (void)transferLayoutGeometryToInfo:(id)arg1 withAdditionalTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg2 assertIfInDocument:(bool)arg3;
- (int)verticalAlignmentForTextLayout:(id)arg1;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;

@end
