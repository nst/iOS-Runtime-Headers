/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/BiometricKitUI.framework/BiometricKitUI
 */

@interface BKUIPearlPositioningGuideView : UIView {
    id /* block */  _animationCompletion;
    long long  _animationCurve;
    double  _animationDuration;
    NSDate * _animationStart;
    double  _cornerRadius;
    CADisplayLink * _displayLink;
    double  _edgeDistance;
    double  _lastAnimationTickProgres;
    double  _lineAlpha;
    double  _lineWidth;
    struct CGPoint { 
        double x; 
        double y; 
    }  _portalCenter;
    double  _postCornerLength;
    double  _ringRadius;
    CAShapeLayer * _roundedRectMaskLayer;
    double  _startCornerRadius;
    double  _startEdgeDistance;
    double  _startLineAlpha;
    double  _startLineWidth;
    bool  _startMaskFromCenter;
    struct CGPoint { 
        double x; 
        double y; 
    }  _startPortalCenter;
    double  _startPostCornerLength;
    double  _targetCornerRadius;
    double  _targetEdgeDistance;
    double  _targetLineAlpha;
    double  _targetLineWidth;
    struct CGPoint { 
        double x; 
        double y; 
    }  _targetPortalCenter;
    double  _targetPostCornerLength;
}

@property (nonatomic, copy) id /* block */ animationCompletion;
@property (nonatomic) long long animationCurve;
@property (nonatomic) double animationDuration;
@property (nonatomic, retain) NSDate *animationStart;
@property (nonatomic) double cornerRadius;
@property (nonatomic) double edgeDistance;
@property (nonatomic) double lineAlpha;
@property (nonatomic) double lineWidth;
@property (nonatomic, readonly) double maximumMaskLayerDistanceFromCenter;
@property (nonatomic, readonly) double minimumMaskLayerDistanceFromCenter;
@property (nonatomic) struct CGPoint { double x1; double x2; } portalCenter;
@property (nonatomic) double postCornerLength;
@property (nonatomic) double ringRadius;
@property (nonatomic) CAShapeLayer *roundedRectMaskLayer;

- (void).cxx_destruct;
- (void)_displayTick;
- (id)_roundedRectMaskForMaskDistance:(double)arg1 portalCenter:(struct CGPoint { double x1; double x2; })arg2 cornerRadius:(double)arg3;
- (void)_startAnimationWithDuration:(double)arg1 completion:(id /* block */)arg2;
- (void)_startDisplay;
- (void)_stopDisplay;
- (double)_updatedFloatWithTarget:(double)arg1 current:(double)arg2 start:(double)arg3 progress:(double)arg4;
- (void)animateToBreatheOutValuesOverDuration:(double)arg1 completion:(id /* block */)arg2;
- (void)animateToFinishedValuesOverDuration:(double)arg1 center:(struct CGPoint { double x1; double x2; })arg2 completion:(id /* block */)arg3;
- (void)animateToOpenValuesOverDuration:(double)arg1 curve:(long long)arg2 completion:(id /* block */)arg3;
- (void)animateToPopOutValuesOverDuration:(double)arg1 completion:(id /* block */)arg2;
- (id /* block */)animationCompletion;
- (long long)animationCurve;
- (double)animationDuration;
- (id)animationStart;
- (void)breathe;
- (double)cornerRadius;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)edgeDistance;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)lineAlpha;
- (double)lineWidth;
- (double)maximumMaskLayerDistanceFromCenter;
- (double)minimumMaskLayerDistanceFromCenter;
- (struct CGPoint { double x1; double x2; })portalCenter;
- (double)postCornerLength;
- (void)prepareMaskLayerForReducedMotionOpenTransition;
- (void)prepareMaskLayerForStartToOpenTransition;
- (void)resetValuesToStart;
- (double)ringRadius;
- (id)roundedRectMaskLayer;
- (void)setAnimationCompletion:(id /* block */)arg1;
- (void)setAnimationCurve:(long long)arg1;
- (void)setAnimationDuration:(double)arg1;
- (void)setAnimationStart:(id)arg1;
- (void)setCornerRadius:(double)arg1;
- (void)setEdgeDistance:(double)arg1;
- (void)setHidden:(bool)arg1;
- (void)setLineAlpha:(double)arg1;
- (void)setLineWidth:(double)arg1;
- (void)setPortalCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPostCornerLength:(double)arg1;
- (void)setRingRadius:(double)arg1;
- (void)setRoundedRectMaskLayer:(id)arg1;
- (bool)useRegularPadLayout;

@end
