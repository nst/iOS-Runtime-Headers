/* Generated by RuntimeBrowser.
 */

@protocol TSWPTextSource <NSObject>

@required

- (bool)adjustRangesByDelta:(long long)arg1 startingAt:(unsigned long long)arg2;
- (TSWPAttachment *)attachmentAtCharIndex:(unsigned long long)arg1;
- (TSWPAttachment *)attachmentOrFootnoteAtCharIndex:(unsigned long long)arg1;
- (void)attributesAtCharIndex:(void *)arg1 attributesOfInterest:(void *)arg2 attributesTable:(void *)arg3 effectiveRange:(void *)arg4; // needs 4 arg types, found 3: unsigned long long, bool, /* Warning: unhandled array encoding: '[19@]32^{_NSRange=QQ}40' */ id
- (unsigned long long)changeCount;
- (unsigned long long)charIndexMappedFromStorage:(unsigned long long)arg1;
- (unsigned long long)charIndexMappedToStorage:(unsigned long long)arg1;
- (unsigned long long)charIndexRemappedFromStorage:(unsigned long long)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })charRangeMappedFromStorage:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })charRangeMappedToStorage:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })charRangeRemappedFromStorage:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (TSWPCharacterStyle *)characterStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (TSWPFootnoteReferenceAttachment *)footnoteReferenceAtCharIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short*)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (bool)hasColumnBreakAtCharIndex:(unsigned long long)arg1;
- (bool)hasColumnStyleForParagraphBreakAtCharIndex:(unsigned long long)arg1;
- (long long)hyphenationLocationBeforeIndex:(long long)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 locale:(struct __CFLocale { }*)arg3 hyphenChar:(unsigned int*)arg4;
- (bool)isWritingDirectionRightToLeftForParagraphAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (id)objectAtLocationPriorToMappedCharIndex:(unsigned long long)arg1 forAttributeKind:(int)arg2 effectiveRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg3;
- (TSWPParagraphStyle *)paragraphStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (TSWPSmartField *)smartFieldAtCharIndex:(unsigned long long)arg1 attributeKind:(int)arg2 effectiveRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg3;
- (NSArray *)smartFieldsWithAttributeKind:(int)arg1 intersectingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (unsigned long long)storageLength;
- (NSString *)string;
- (void)updateStorageChangeCount;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })wordAtCharIndex:(unsigned long long)arg1 includePreviousWord:(bool)arg2;

@optional

- (void)enumerateSmartFieldsWithAttributeKind:(void *)arg1 inRange:(void *)arg2 usingBlock:(void *)arg3; // needs 3 arg types, found 19: int, struct _NSRange { unsigned long long x1; unsigned long long x2; }, id, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id, id, void*, inout unsigned short, void*, void*, in void*, void*, void*, unsigned long long, unsigned long long, void*, bool*, void*
- (void)enumerateWithAttributeKind:(void *)arg1 inRange:(void *)arg2 usingBlock:(void *)arg3; // needs 3 arg types, found 19: int, struct _NSRange { unsigned long long x1; unsigned long long x2; }, id, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id, id, void*, inout unsigned short, void*, void*, in void*, void*, void*, unsigned long long, unsigned long long, void*, bool*, void*
- (bool)hasSmartFieldsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (NSString *)substringWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;

@end
