/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
 */

@interface SSAccountStore : NSObject {
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    SSKeyValueStore * _keyValueStore;
    NSObject<OS_dispatch_queue> * _notificationQueue;
    NSMutableArray * _notifyTokens;
}

@property (readonly, copy) NSArray *accounts;
@property (readonly) SSAccount *activeAccount;
@property (readonly) SSAccount *activeLockerAccount;
@property (getter=isAuthenticationActive, readonly) bool authenticationActive;
@property (getter=isExpired, readonly) bool expired;

+ (id)defaultStore;
+ (id)existingDefaultStore;
+ (bool)isExpired;
+ (bool)isExpiredForTokenType:(long long)arg1;
+ (void)resetExpiration;
+ (void)resetExpirationForTokenType:(long long)arg1;
+ (void)setDefaultStore:(id)arg1;
+ (double)tokenExpirationInterval;

- (id)_accountsFromDaemon;
- (void)_dispatchAsync:(id)arg1;
- (void)_dispatchSync:(id)arg1;
- (id)_keyValueStore;
- (void)_postAccountStoreChangeNotification;
- (id)accountWithUniqueIdentifier:(id)arg1;
- (id)accountWithUniqueIdentifier:(id)arg1 reloadIfNecessary:(bool)arg2;
- (id)accountWithUniqueIdentifier:(id)arg1 scope:(long long)arg2;
- (id)accounts;
- (id)activeAccount;
- (id)activeLockerAccount;
- (id)addAccount:(id)arg1;
- (void)dealloc;
- (void)getDefaultAccountNameUsingBlock:(id)arg1;
- (id)init;
- (bool)isAuthenticationActive;
- (bool)isExpired;
- (bool)isExpiredForTokenType:(long long)arg1;
- (void)reloadAccounts;
- (void)resetExpiration;
- (void)resetExpirationForTokenType:(long long)arg1;
- (void)setAccountCredits:(id)arg1 forAccountWithUniqueIdentifier:(id)arg2;
- (id)setActiveAccount:(id)arg1;
- (id)setActiveLockerAccount:(id)arg1;
- (void)setDefaultAccountName:(id)arg1 completionBlock:(id)arg2;
- (void)signOutAccount:(id)arg1;
- (void)signOutAllAccounts;
- (void)signOutAllAccountsWithCompletionBlock:(id)arg1;

@end
