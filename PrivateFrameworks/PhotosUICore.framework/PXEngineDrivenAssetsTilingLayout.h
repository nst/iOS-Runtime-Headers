/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore
 */

@interface PXEngineDrivenAssetsTilingLayout : PXAssetsTilingLayout {
    long long  _contentMode;
    <PXEngineDrivenAssetsTilingLayoutDelegate> * _delegate;
    struct { 
        bool respondsToEngineDrivenLayoutReferenceSizeDidChange; 
        bool respondsToEngineDrivenLayoutAspectRatioForItemAtIndexPath; 
        bool respondsToEngineDrivenLayoutZPositionForItemAtIndexPath; 
        bool respondsToEngineDrivenLayoutContentsRectForItemAtIndexPathForAspectRatio; 
        bool respondsToEngineDrivenLayoutPlayButtonSizeForItemAtIndexPathForAspectRatio; 
    }  _delegateFlags;
    PXLayoutSnapshot * _layoutSnapshot;
    struct { }  _needsUpdateFlags;
}

@property (nonatomic) long long contentMode;
@property (nonatomic) <PXEngineDrivenAssetsTilingLayoutDelegate> *delegate;
@property (nonatomic, retain) PXLayoutSnapshot *layoutSnapshot;

- (void).cxx_destruct;
- (double)_aspectRatioForItemAtIndexPath:(struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })arg1;
- (void)_commonInit;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_contentsRectForItemAtIndexPath:(struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })arg1 forAspectRatio:(double)arg2;
- (bool)_needsUpdate;
- (void)_updateIfNeeded;
- (double)_zPositionForItemAtIndexPath:(struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })arg1;
- (void)adjustGeometry:(struct PXTileGeometry { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; struct CGAffineTransform { double x_4_1_1; double x_4_1_2; double x_4_1_3; double x_4_1_4; double x_4_1_5; double x_4_1_6; } x4; double x5; double x6; bool x7; struct CGSize { double x_8_1_1; double x_8_1_2; } x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; void *x10; }*)arg1 forContentTileWithIndexPath:(struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentBounds;
- (long long)contentMode;
- (id)dataSource;
- (id)delegate;
- (void)enumerateTilesInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withOptions:(id)arg2 usingBlock:(id /* block */)arg3;
- (bool)getGeometry:(struct PXTileGeometry { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; struct CGAffineTransform { double x_4_1_1; double x_4_1_2; double x_4_1_3; double x_4_1_4; double x_4_1_5; double x_4_1_6; } x4; double x5; double x6; bool x7; struct CGSize { double x_8_1_1; double x_8_1_2; } x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; void *x10; }*)arg1 group:(unsigned long long*)arg2 userData:(id*)arg3 forTileWithIdentifier:(struct PXTileIdentifier { unsigned long long x1; unsigned long long x2[10]; })arg4;
- (id)initWithDataSource:(id)arg1;
- (id)initWithLayoutEngineSnapshot:(id)arg1;
- (id)layoutSnapshot;
- (struct CGSize { double x1; double x2; })playButtonSizeForItemAtIndexPath:(struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })arg1 contentTileSize:(struct CGSize { double x1; double x2; })arg2;
- (void)setContentMode:(long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setLayoutSnapshot:(id)arg1;
- (void)setReferenceSize:(struct CGSize { double x1; double x2; })arg1;

@end
