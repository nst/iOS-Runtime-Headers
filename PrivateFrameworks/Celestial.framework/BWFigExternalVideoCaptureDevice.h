/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

@interface BWFigExternalVideoCaptureDevice : BWFigVideoCaptureDevice <FigCaptureExternalEAControlPipeDelegate> {
    long long  _activeFormatIndex;
    NSObject<OS_dispatch_queue> * _bufferServicingQueue;
    NSNumber * _cameraID;
    unsigned int  _connectionID;
    FigCaptureExternalEAControlPipe * _controlPipe;
    unsigned char  _controlPipeMode;
    NSMutableDictionary * _currentExposureModes;
    NSMutableDictionary * _currentFocusModes;
    EAAccessory * _eaAccessory;
    id  _eaSession;
    struct _IAPCameraCapabilities { unsigned char x1[4]; unsigned char x2[3]; } * _iapOverEACapabilities;
    struct _IAPCameraProperties { unsigned short x1; unsigned short x2; unsigned char x3; struct _IAPCameraAreaOfInterest { unsigned int x_4_1_1; unsigned int x_4_1_2; unsigned int x_4_1_3; unsigned int x_4_1_4; } x4; unsigned char x5; struct _IAPCameraAreaOfInterest { unsigned int x_6_1_1; unsigned int x_6_1_2; unsigned int x_6_1_3; unsigned int x_6_1_4; } x6; unsigned int x7; unsigned int x8; } * _iapOverEAProperties;
    NSObject<OS_dispatch_queue> * _notificationQueue;
    NSMutableDictionary * _observedProperties;
    NSObject<OS_dispatch_queue> * _propQueue;
    struct _IAPCameraProperties { unsigned short x1; unsigned short x2; unsigned char x3; struct _IAPCameraAreaOfInterest { unsigned int x_4_1_1; unsigned int x_4_1_2; unsigned int x_4_1_3; unsigned int x_4_1_4; } x4; unsigned char x5; struct _IAPCameraAreaOfInterest { unsigned int x_6_1_1; unsigned int x_6_1_2; unsigned int x_6_1_3; unsigned int x_6_1_4; } x6; unsigned int x7; unsigned int x8; } * _properties;
    bool  _stillImageCaptureEnabled;
    id /* block */  _stillImageClientCallback;
    NSArray * _stillImageFormats;
    NSObject<OS_dispatch_queue> * _stillImageServicingQueue;
    bool  _streaming;
    id /* block */  _streamingClientCallback;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (void)initialize;
+ (void)unregisterCallbacksForClient:(int)arg1;

- (float)ISO;
- (int)_attachMetadataFlatDictionaryToSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)_cameraInfoUpdated:(id)arg1;
- (void)_constructJPEGAndSendToHandler:(id)arg1;
- (void)_constructJPEGForStillImageAndSendToHandler:(id)arg1;
- (void)_parseCameraInformation:(struct _IAPPacket { unsigned char x1; unsigned short x2; unsigned short x3; unsigned short x4; void *x5; }*)arg1;
- (void)_postNotificationWithPayload:(id)arg1 notificationPayload:(id)arg2;
- (void)_sendCameraProperties:(id)arg1;
- (void)_sendCameraProperty:(id)arg1 _value:(id)arg2;
- (void)_sendCaptureStillImage;
- (void)_sendIAPOverEAWithMessage:(unsigned short)arg1;
- (void)_sendStartCameraInfo;
- (void)_sendStartLivePreview;
- (void)_sendStopCameraInfo;
- (void)_sendStopLivePreview;
- (void)_updateCameraCapabililtiesAndNotify:(id)arg1;
- (void)_updateCameraPropertiesAndNotify:(id)arg1;
- (int)_updateExposureRectIfNeededForZoomFactor:(float)arg1;
- (long long)activeFormatIndex;
- (id)activePortTypes;
- (int)autoImageControlMode;
- (id)bufferServicingQueue;
- (id)cameraInfoByPortTypeForSBPs;
- (id)cameraTuningParametersDictionary;
- (int)captureStillImageNowWithSettings:(id)arg1;
- (struct OpaqueCMClock { }*)clock;
- (void)dealloc;
- (struct { float x1; float x2; float x3; })deviceWhiteBalanceGains;
- (void)disposeFigCaptureDevice;
- (void)drainNotifications;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })exposureDuration;
- (float)exposureTargetBias;
- (float)exposureTargetOffset;
- (struct { float x1; float x2; float x3; })grayWorldDeviceWhiteBalanceGains;
- (void)handleIncomingIAPOverEAPacket:(struct _IAPPacket { unsigned char x1; unsigned short x2; unsigned short x3; unsigned short x4; void *x5; }*)arg1;
- (void)handleIncomingVideoBufferPacket:(id)arg1 msgID:(unsigned short)arg2;
- (id)initWithAttributes:(id)arg1 synchronizedStreamsAttributes:(id)arg2 forPID:(int)arg3 clientIDOut:(int*)arg4 errOut:(int*)arg5 deviceAvailabilityChangedHandler:(id /* block */)arg6;
- (bool)isPropertyObserved:(id)arg1;
- (float)lensPosition;
- (float)maximumFrameRate;
- (float)minimumFrameRate;
- (id)moduleInfoByPortType;
- (bool)providesPreBracketedEV0;
- (void)rampToVideoZoomFactor:(float)arg1 withRampType:(int)arg2 rate:(float)arg3 duration:(double)arg4 commandID:(int)arg5;
- (void)registerForAEMatrixMetadata;
- (bool)registerStillImageBufferHandler:(id /* block */)arg1 error:(id*)arg2;
- (int)resolveStillImageCaptureTypeFromStatistics:(struct { double x1; float x2; float x3; double x4; float x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned char x10; unsigned char x11; unsigned int x12; int x13; int x14; int x15; unsigned int x16; float x17; unsigned char x18; double x19; int x20; int x21; int x22; float x23; float x24; int x25; int x26; unsigned char x27; int x28; int x29; float x30; float x31; int x32; int x33; int x34; int x35; long long x36; }*)arg1 flashMode:(int)arg2 hdrMode:(int)arg3 sisMode:(int)arg4 depthDataDeliveryEnabled:(bool)arg5 bravoDualPhotoDeliveryEnabled:(bool)arg6 burstQualityCaptureEnabled:(bool)arg7 clientBracketMode:(int)arg8 forSceneMonitoring:(bool)arg9 captureFlags:(unsigned long long*)arg10;
- (id)sensorIDDictionaryByPortType;
- (void)setActiveFormatIndex:(long long)arg1;
- (bool)setAutoFlashEnabled:(bool)arg1 error:(id*)arg2;
- (int)setAutoImageControlMode:(int)arg1;
- (int)setAutomaticallyAdjustsImageControlMode:(bool)arg1;
- (int)setAutomaticallyAdjustsTorch:(bool)arg1;
- (int)setExposureModeAutoWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (int)setExposureModeCustomWithExposureDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 minFrameRate:(double)arg2 maxFrameRate:(double)arg3 ISO:(float)arg4 requestID:(int)arg5;
- (int)setExposureModeLocked;
- (int)setExposureTargetBias:(float)arg1 requestID:(int)arg2;
- (void)setFaceDetectionConfiguration:(id)arg1;
- (int)setFaceDetectionDrivenImageProcessingMode:(int)arg1;
- (int)setFocusModeAutoWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 continuous:(bool)arg2 smooth:(bool)arg3 rangeRestrictionNear:(float)arg4 rangeRestrictionFar:(float)arg5;
- (int)setFocusModeManualWithLensPosition:(float)arg1 requestID:(int)arg2;
- (bool)setHDRSceneDetectionEnabled:(bool)arg1 error:(id*)arg2;
- (void)setISPZoomFactor:(float)arg1;
- (int)setImageControlMode:(int)arg1;
- (int)setLowLightBoostAutomaticallyEnabled:(bool)arg1 supportedForFormat:(bool)arg2;
- (void)setMaxTorchLevel:(float)arg1;
- (void)setMaximumFrameRate:(float)arg1;
- (void)setMinimumFrameRate:(float)arg1;
- (void)setOverscanPercentage:(struct CGSize { double x1; double x2; })arg1;
- (void)setProperty:(id)arg1 isObserved:(bool)arg2;
- (int)setProvidesStortorgetMetadata:(bool)arg1;
- (void)setStillImageCaptureEnabled:(bool)arg1;
- (void)setStillImageStabilizationAutomaticallyEnabled:(bool)arg1;
- (int)setSubjectAreaChangeMonitoringEnabled:(bool)arg1;
- (int)setTorchLevel:(float)arg1;
- (int)setWhiteBalanceModeAuto;
- (int)setWhiteBalanceModeLockedWithGains:(struct { float x1; float x2; float x3; })arg1 requestID:(int)arg2;
- (void)setZoomFactor:(float)arg1;
- (void)startCameraInfo;
- (bool)startStreamingToSampleBufferHandler:(id /* block */)arg1 error:(id*)arg2;
- (void)startupFaceDetectionIfNeeded;
- (bool)stillImageCaptureEnabled;
- (id)stillImageCaptureSettingsWithID:(long long)arg1 captureType:(int)arg2 deliverProcessedImage:(bool)arg3 deliverOriginalImage:(bool)arg4 deliverSushiRaw:(bool)arg5 deliverBravoDualPhoto:(bool)arg6 includePreBracketedEV0ForProcessing:(bool)arg7 clientBracketSettings:(id)arg8 captureFlags:(unsigned long long)arg9 userInitiatedRequestPTS:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg10;
- (void)stopCameraInfo;
- (bool)stopStreamingToSampleBufferHandler:(id /* block */)arg1 error:(id*)arg2;
- (void)streamsReady;
- (id)supportedFormats;
- (void)unregisterForAEMatrixMetadata;
- (bool)unregisterStillImageBufferHandler:(id /* block */)arg1 error:(id*)arg2;
- (id)zoomCommandHandler;
- (void)zoomCommandHandler:(id)arg1 didApplyZoomFactor:(float)arg2 rampComplete:(bool)arg3 rampCommandID:(int)arg4;
- (float)zoomFactor;

@end
