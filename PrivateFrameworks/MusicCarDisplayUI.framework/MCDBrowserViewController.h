/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MusicCarDisplayUI.framework/MusicCarDisplayUI
 */

@interface MCDBrowserViewController : UINavigationController <UITabBarControllerDelegate> {
    AVExternalDevice * _externalDevice;
    long long  _fuseSubscriber;
    UITabBarController * _hostTabBarController;
    bool  _libraryHasSongs;
    UIButton * _nowPlayingButton;
    MPAVController * _player;
    MCDRadioViewController * _radioViewController;
    RadioRecentStationsController * _recentStationsController;
    <MCDCarDisplayServiceProvider> * _serviceProvider;
    UITabBarController * _tabBarController;
    NSArray * _tabIdentifiers;
    bool  _viewHasAppeared;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) UITabBarController *hostTabBarController;
@property (nonatomic, retain) MPAVController *player;
@property (nonatomic) RadioRecentStationsController *recentStationsController;
@property (nonatomic) <MCDCarDisplayServiceProvider> *serviceProvider;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)MCD_popNowPlayingViewControllerAnimated:(bool)arg1;
- (void)MCD_pushNowPlayingViewControllerAnimated:(bool)arg1;
- (void)_accountsDidChangeNotification:(id)arg1;
- (id)_createViewControllerForIdentifier:(id)arg1;
- (bool)_isNowPlayingAvailable;
- (void)_itemChanged:(id)arg1;
- (void)_limitedUIChanged:(id)arg1;
- (bool)_limitedUIEnabled;
- (void)_mediaLibraryDidChange:(id)arg1;
- (void)_nowPlayingButtonTouchUpInside:(id)arg1;
- (void)_nowPlayingDidChangeNotification:(id)arg1;
- (void)_reloadHostTabs;
- (void)_removeDetailViews;
- (void)_tabBarDidChangeViewControllers:(id)arg1;
- (void)_updateNowPlayingVisibility;
- (void)dealloc;
- (id)hostTabBarController;
- (id)initWithHostTabBarController:(id)arg1;
- (id)nowPlayingButton;
- (id)player;
- (void)pushNowPlaying:(bool)arg1;
- (id)recentStationsController;
- (void)refreshNavigationPath;
- (void)reloadTabsAndForceReload:(bool)arg1;
- (id)serviceProvider;
- (void)setHostTabBarController:(id)arg1;
- (void)setPlayer:(id)arg1;
- (void)setRecentStationsController:(id)arg1;
- (void)setServiceProvider:(id)arg1;
- (void)tabBarController:(id)arg1 didSelectViewController:(id)arg2;
- (void)viewDidAppear:(bool)arg1;

@end
