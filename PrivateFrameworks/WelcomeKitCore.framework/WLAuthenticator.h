/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WelcomeKitCore.framework/WelcomeKitCore
 */

@interface WLAuthenticator : WLSocketHandler <WLDeviceAuthenticatorProtocol> {
    WLDeviceAuthentication * _auth;
    NSData * _certBSignatureData;
    WLAuthenticationCredentials * _credentials;
    <WLDeviceAuthenticationDelegate> * _delegate;
    WLSourceDevice * _device;
    NSData * _ecKeyAData;
    NSData * _ecKeyBData;
    struct _CCECCryptor { } * _ecPrivateKeyA;
    struct _CCECCryptor { } * _ecPrivateKeyB;
    struct _CCECCryptor { } * _ecPublicKeyA;
    struct _CCECCryptor { } * _ecPublicKeyB;
    NSData * _localCertPEMData;
    NSMutableData * _pendingBlobData;
    unsigned long long  _pendingBlobDataSize;
    NSObject<OS_dispatch_source> * _readSource;
    NSData * _rnAData;
    NSData * _rnBData;
    int  _sockfd;
    NSData * _sourceCommitmentData;
    unsigned long long  _state;
    NSObject<OS_dispatch_queue> * _writeQueue;
}

@property (nonatomic, readonly) <WLDeviceAuthenticationDelegate> *delegate;
@property (nonatomic, readonly) WLSourceDevice *device;

+ (id)generateAuthenticationCredentialsContainingSelfSignedCertificate;

- (void).cxx_destruct;
- (id)_authenticateCommandData;
- (void)_authenticationDidSucceed;
- (id)_commandStringWithData:(id)arg1;
- (unsigned long long)_curveDERLength;
- (unsigned long long)_ecPublicKeyEncodedDERLength;
- (char *)_fieldIntegerBytes;
- (unsigned long long)_fieldTypeDERLength;
- (char *)_fieldTypeOID;
- (void)_generateAndSendPublicKey;
- (bool)_handleCertificateSignatureWithData:(id)arg1;
- (bool)_handleCertificateWithData:(id)arg1;
- (void)_handleCommitmentValueOKWithData:(id)arg1;
- (bool)_handleCommitmentValueWithData:(id)arg1;
- (bool)_handlePublicKeyWithData:(id)arg1;
- (bool)_handleRandomNumberWithData:(id)arg1;
- (void)_handleVerificationValueOKWithData:(id)arg1;
- (char *)_keyACoefficientBytes;
- (char *)_keyBCoefficientBytes;
- (char *)_keyBasePointBytes;
- (char *)_keyCofactorBytes;
- (char *)_keyOrderBytes;
- (char *)_keySeedBytes;
- (char *)_keyTypeOID;
- (char *)_keyVersionBytes;
- (void)_observeDataReadEvent;
- (id)_okResponseData;
- (unsigned long long)_paramsDERLength;
- (unsigned long long)_publicKeyDERLength;
- (bool)_shouldForceAuthenticationError;
- (void)cancelAuthenticationWithReply:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (id)device;
- (id)encodeECPublicKeyData:(id)arg1;
- (void)handleDataReadEventWithSocket:(int)arg1;
- (void)handleReceivedData:(id)arg1;
- (id)initWithSourceDevice:(id)arg1 delegate:(id)arg2;
- (void)invalidateWithError:(id)arg1;
- (id)parseDataAsBlob:(id)arg1;
- (void)parsePublicKeyDER:(id)arg1 completion:(id)arg2;
- (void)resume;
- (void)sendData:(id)arg1 completion:(id)arg2;
- (void)sendDataAsBlob:(id)arg1 completion:(id)arg2;

@end
