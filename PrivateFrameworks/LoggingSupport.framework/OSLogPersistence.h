/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/LoggingSupport.framework/LoggingSupport
 */

@interface OSLogPersistence : NSObject {
    unsigned long long  _batchSize;
    NSString * _currentFile;
    unsigned long long  _decodeFailures;
    <OSLogPersistenceDelegate> * _delegate;
    NSDate * _endDate;
    struct event_indices_tq { struct oslog_persistence_index {} *x1; struct oslog_persistence_index {} **x2; } * _event_indices;
    struct oslog_persistence_file_tq { struct oslog_persistence_file {} *x1; struct oslog_persistence_file {} **x2; } * _files;
    NSURL * _logArchive;
    NSURL * _logFile;
    unsigned long long  _logMessageCount;
    unsigned long long  _messagesFiltered;
    unsigned long long  _options;
    struct rb_tree { void *x1[8]; } * _oversize_rbt;
    NSCompoundPredicate * _predicate;
    NSObject<OS_dispatch_queue> * _queue;
    NSString * _sourcePath;
    NSDate * _sparseDataStart;
    NSDate * _startDate;
    bool  _verbose;
}

@property unsigned long long batchSize;
@property (readonly, copy) NSString *currentFile;
@property (readonly) unsigned long long decodeFailures;
@property <OSLogPersistenceDelegate> *delegate;
@property (readonly, copy) NSDate *endDate;
@property (nonatomic, copy) NSURL *logArchive;
@property (nonatomic, copy) NSURL *logFile;
@property (readonly) unsigned long long logMessageCount;
@property (readonly) unsigned long long messagesFiltered;
@property unsigned long long options;
@property (copy) NSCompoundPredicate *predicate;
@property (readonly, copy) NSDate *sparseDataStart;
@property (readonly, copy) NSDate *startDate;
@property bool verbose;

+ (id)logPersistenceAtPath:(id)arg1;

- (void).cxx_destruct;
- (void)_enumerateFromStartDate:(id)arg1 toEndDate:(id)arg2 withBlock:(id)arg3;
- (void)_reportError:(int)arg1 format:(id)arg2;
- (void)addChunk:(struct oslog_persistence_chunk { union { struct { struct { struct oslog_persistence_chunk {} *x_1_3_1; struct oslog_persistence_chunk {} **x_1_3_2; } x_1_2_1; struct tracev3_chunk_s {} *x_1_2_2; struct tracev3_chunk_s {} *x_1_2_3; } x_1_1_1; struct oslog_firehose_chunk { struct { struct oslog_persistence_chunk {} *x_1_3_1; struct oslog_persistence_chunk {} **x_1_3_2; } x_2_2_1; struct tracev3_chunk_s {} *x_2_2_2; struct tracev3_chunk_s {} *x_2_2_3; struct tracev3_buffer_uuidinfo_s {} *x_2_2_4; struct tracev3_buffer_subsystem_s {} **x_2_2_5; struct atm_catalog_s {} *x_2_2_6; struct firehose_buffer_chunk_s {} *x_2_2_7; unsigned short x_2_2_8; unsigned short x_2_2_9; unsigned short x_2_2_10; unsigned short x_2_2_11; } x_1_1_2; struct oslog_compressed_chunk { struct { struct oslog_persistence_chunk {} *x_1_3_1; struct oslog_persistence_chunk {} **x_1_3_2; } x_3_2_1; struct tracev3_chunk_s {} *x_3_2_2; struct tracev3_chunk_s {} *x_3_2_3; struct oslog_persistence_chunk_tq { struct oslog_persistence_chunk {} *x_4_3_1; struct oslog_persistence_chunk {} **x_4_3_2; } x_3_2_4; struct atm_catalog_s {} *x_3_2_5; unsigned short x_3_2_6; char *x_3_2_7; unsigned long long x_3_2_8; } x_1_1_3; } x1; }*)arg1 toHeader:(struct oslog_persistence_header { struct { struct oslog_persistence_header {} *x_1_1_1; struct oslog_persistence_header {} **x_1_1_2; } x1; struct oslog_persistence_chunk_tq { struct oslog_persistence_chunk {} *x_2_1_1; struct oslog_persistence_chunk {} **x_2_1_2; } x2; struct tracev3_chunk_s {} *x3; struct oslog_persistence_index {} *x4; }*)arg2;
- (void)addOversizeChunk:(struct oslog_persistence_chunk { union { struct { struct { struct oslog_persistence_chunk {} *x_1_3_1; struct oslog_persistence_chunk {} **x_1_3_2; } x_1_2_1; struct tracev3_chunk_s {} *x_1_2_2; struct tracev3_chunk_s {} *x_1_2_3; } x_1_1_1; struct oslog_firehose_chunk { struct { struct oslog_persistence_chunk {} *x_1_3_1; struct oslog_persistence_chunk {} **x_1_3_2; } x_2_2_1; struct tracev3_chunk_s {} *x_2_2_2; struct tracev3_chunk_s {} *x_2_2_3; struct tracev3_buffer_uuidinfo_s {} *x_2_2_4; struct tracev3_buffer_subsystem_s {} **x_2_2_5; struct atm_catalog_s {} *x_2_2_6; struct firehose_buffer_chunk_s {} *x_2_2_7; unsigned short x_2_2_8; unsigned short x_2_2_9; unsigned short x_2_2_10; unsigned short x_2_2_11; } x_1_1_2; struct oslog_compressed_chunk { struct { struct oslog_persistence_chunk {} *x_1_3_1; struct oslog_persistence_chunk {} **x_1_3_2; } x_3_2_1; struct tracev3_chunk_s {} *x_3_2_2; struct tracev3_chunk_s {} *x_3_2_3; struct oslog_persistence_chunk_tq { struct oslog_persistence_chunk {} *x_4_3_1; struct oslog_persistence_chunk {} **x_4_3_2; } x_3_2_4; struct atm_catalog_s {} *x_3_2_5; unsigned short x_3_2_6; char *x_3_2_7; unsigned long long x_3_2_8; } x_1_1_3; } x1; }*)arg1;
- (void)allocateEventListForHeader:(struct oslog_persistence_header { struct { struct oslog_persistence_header {} *x_1_1_1; struct oslog_persistence_header {} **x_1_1_2; } x1; struct oslog_persistence_chunk_tq { struct oslog_persistence_chunk {} *x_2_1_1; struct oslog_persistence_chunk {} **x_2_1_2; } x2; struct tracev3_chunk_s {} *x3; struct oslog_persistence_index {} *x4; }*)arg1;
- (bool)allowSensitive;
- (unsigned long long)batchSize;
- (void)buildIndexFromTimeInterval:(double)arg1 toTimeInterval:(double)arg2;
- (void)clearOversizeRBT;
- (void)closeFiles;
- (struct oslog_persistence_chunk { union { struct { struct { struct oslog_persistence_chunk {} *x_1_3_1; struct oslog_persistence_chunk {} **x_1_3_2; } x_1_2_1; struct tracev3_chunk_s {} *x_1_2_2; struct tracev3_chunk_s {} *x_1_2_3; } x_1_1_1; struct oslog_firehose_chunk { struct { struct oslog_persistence_chunk {} *x_1_3_1; struct oslog_persistence_chunk {} **x_1_3_2; } x_2_2_1; struct tracev3_chunk_s {} *x_2_2_2; struct tracev3_chunk_s {} *x_2_2_3; struct tracev3_buffer_uuidinfo_s {} *x_2_2_4; struct tracev3_buffer_subsystem_s {} **x_2_2_5; struct atm_catalog_s {} *x_2_2_6; struct firehose_buffer_chunk_s {} *x_2_2_7; unsigned short x_2_2_8; unsigned short x_2_2_9; unsigned short x_2_2_10; unsigned short x_2_2_11; } x_1_1_2; struct oslog_compressed_chunk { struct { struct oslog_persistence_chunk {} *x_1_3_1; struct oslog_persistence_chunk {} **x_1_3_2; } x_3_2_1; struct tracev3_chunk_s {} *x_3_2_2; struct tracev3_chunk_s {} *x_3_2_3; struct oslog_persistence_chunk_tq { struct oslog_persistence_chunk {} *x_4_3_1; struct oslog_persistence_chunk {} **x_4_3_2; } x_3_2_4; struct atm_catalog_s {} *x_3_2_5; unsigned short x_3_2_6; char *x_3_2_7; unsigned long long x_3_2_8; } x_1_1_3; } x1; }*)createChunk:(struct tracev3_chunk_s { struct tracev3_chunk_preamble_s { unsigned int x_1_1_1; unsigned int x_1_1_2; unsigned long long x_1_1_3; } x1; union { struct tracev3_chunk_header_s { struct mach_timebase_info { unsigned int x_1_3_1; unsigned int x_1_3_2; } x_1_2_1; unsigned long long x_1_2_2; long long x_1_2_3; int x_1_2_4; int x_1_2_5; int x_1_2_6; unsigned int x_1_2_7; struct tracev3_subchunk_preamble_s { unsigned int x_8_3_1; unsigned int x_8_3_2; } x_1_2_8; struct tracev3_subchunk_continuous_s { unsigned long long x_9_3_1; } x_1_2_9; struct tracev3_subchunk_preamble_s { unsigned int x_10_3_1; unsigned int x_10_3_2; } x_1_2_10; struct tracev3_subchunk_systeminfo_s { int x_11_3_1; int x_11_3_2; BOOL x_11_3_3[16]; BOOL x_11_3_4[32]; } x_1_2_11; struct tracev3_subchunk_preamble_s { unsigned int x_12_3_1; unsigned int x_12_3_2; } x_1_2_12; struct tracev3_subchunk_generation_s { unsigned char x_13_3_1[16]; int x_13_3_2; int x_13_3_3; } x_1_2_13; struct tracev3_subchunk_preamble_s { unsigned int x_14_3_1; unsigned int x_14_3_2; } x_1_2_14; struct tracev3_subchunk_timezone_s { BOOL x_15_3_1[48]; } x_1_2_15; } x_2_1_1; struct tracev3_chunk_atm_s { unsigned char x_2_2_1[16]; unsigned char x_2_2_2[16]; unsigned long long x_2_2_3; int x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9[0]; } x_2_1_2; } x2; }*)arg1 header:(struct tracev3_chunk_s { struct tracev3_chunk_preamble_s { unsigned int x_1_1_1; unsigned int x_1_1_2; unsigned long long x_1_1_3; } x1; union { struct tracev3_chunk_header_s { struct mach_timebase_info { unsigned int x_1_3_1; unsigned int x_1_3_2; } x_1_2_1; unsigned long long x_1_2_2; long long x_1_2_3; int x_1_2_4; int x_1_2_5; int x_1_2_6; unsigned int x_1_2_7; struct tracev3_subchunk_preamble_s { unsigned int x_8_3_1; unsigned int x_8_3_2; } x_1_2_8; struct tracev3_subchunk_continuous_s { unsigned long long x_9_3_1; } x_1_2_9; struct tracev3_subchunk_preamble_s { unsigned int x_10_3_1; unsigned int x_10_3_2; } x_1_2_10; struct tracev3_subchunk_systeminfo_s { int x_11_3_1; int x_11_3_2; BOOL x_11_3_3[16]; BOOL x_11_3_4[32]; } x_1_2_11; struct tracev3_subchunk_preamble_s { unsigned int x_12_3_1; unsigned int x_12_3_2; } x_1_2_12; struct tracev3_subchunk_generation_s { unsigned char x_13_3_1[16]; int x_13_3_2; int x_13_3_3; } x_1_2_13; struct tracev3_subchunk_preamble_s { unsigned int x_14_3_1; unsigned int x_14_3_2; } x_1_2_14; struct tracev3_subchunk_timezone_s { BOOL x_15_3_1[48]; } x_1_2_15; } x_2_1_1; struct tracev3_chunk_atm_s { unsigned char x_2_2_1[16]; unsigned char x_2_2_2[16]; unsigned long long x_2_2_3; int x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9[0]; } x_2_1_2; } x2; }*)arg2;
- (struct oslog_persistence_file { struct { struct oslog_persistence_file {} *x_1_1_1; struct oslog_persistence_file {} **x_1_1_2; } x1; struct oslog_persistence_header_tq { struct oslog_persistence_header {} *x_2_1_1; struct oslog_persistence_header {} **x_2_1_2; } x2; struct tracev3_chunk_s {} *x3; char *x4; void *x5; unsigned long long x6; struct oslog_persistence_index {} *x7; }*)createFileFromDescriptor:(int)arg1;
- (struct oslog_persistence_file { struct { struct oslog_persistence_file {} *x_1_1_1; struct oslog_persistence_file {} **x_1_1_2; } x1; struct oslog_persistence_header_tq { struct oslog_persistence_header {} *x_2_1_1; struct oslog_persistence_header {} **x_2_1_2; } x2; struct tracev3_chunk_s {} *x3; char *x4; void *x5; unsigned long long x6; struct oslog_persistence_index {} *x7; }*)createFileFromRegion:(void*)arg1 size:(unsigned long long)arg2 liveData:(bool)arg3 path:(char *)arg4;
- (struct oslog_persistence_header { struct { struct oslog_persistence_header {} *x_1_1_1; struct oslog_persistence_header {} **x_1_1_2; } x1; struct oslog_persistence_chunk_tq { struct oslog_persistence_chunk {} *x_2_1_1; struct oslog_persistence_chunk {} **x_2_1_2; } x2; struct tracev3_chunk_s {} *x3; struct oslog_persistence_index {} *x4; }*)createHeaderForChunk:(struct tracev3_chunk_s { struct tracev3_chunk_preamble_s { unsigned int x_1_1_1; unsigned int x_1_1_2; unsigned long long x_1_1_3; } x1; union { struct tracev3_chunk_header_s { struct mach_timebase_info { unsigned int x_1_3_1; unsigned int x_1_3_2; } x_1_2_1; unsigned long long x_1_2_2; long long x_1_2_3; int x_1_2_4; int x_1_2_5; int x_1_2_6; unsigned int x_1_2_7; struct tracev3_subchunk_preamble_s { unsigned int x_8_3_1; unsigned int x_8_3_2; } x_1_2_8; struct tracev3_subchunk_continuous_s { unsigned long long x_9_3_1; } x_1_2_9; struct tracev3_subchunk_preamble_s { unsigned int x_10_3_1; unsigned int x_10_3_2; } x_1_2_10; struct tracev3_subchunk_systeminfo_s { int x_11_3_1; int x_11_3_2; BOOL x_11_3_3[16]; BOOL x_11_3_4[32]; } x_1_2_11; struct tracev3_subchunk_preamble_s { unsigned int x_12_3_1; unsigned int x_12_3_2; } x_1_2_12; struct tracev3_subchunk_generation_s { unsigned char x_13_3_1[16]; int x_13_3_2; int x_13_3_3; } x_1_2_13; struct tracev3_subchunk_preamble_s { unsigned int x_14_3_1; unsigned int x_14_3_2; } x_1_2_14; struct tracev3_subchunk_timezone_s { BOOL x_15_3_1[48]; } x_1_2_15; } x_2_1_1; struct tracev3_chunk_atm_s { unsigned char x_2_2_1[16]; unsigned char x_2_2_2[16]; unsigned long long x_2_2_3; int x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9[0]; } x_2_1_2; } x2; }*)arg1 andFile:(struct oslog_persistence_file { struct { struct oslog_persistence_file {} *x_1_1_1; struct oslog_persistence_file {} **x_1_1_2; } x1; struct oslog_persistence_header_tq { struct oslog_persistence_header {} *x_2_1_1; struct oslog_persistence_header {} **x_2_1_2; } x2; struct tracev3_chunk_s {} *x3; char *x4; void *x5; unsigned long long x6; struct oslog_persistence_index {} *x7; }*)arg2;
- (id)currentFile;
- (void)dealloc;
- (unsigned long long)decodeFailures;
- (id)delegate;
- (id)endDate;
- (void)enumerateFromLastBootWithBlock:(id)arg1;
- (void)enumerateFromStartDate:(id)arg1 toEndDate:(id)arg2 withBlock:(id)arg3;
- (void)enumerateWithIndex:(struct oslog_persistence_index { struct { struct oslog_persistence_index {} *x_1_1_1; struct oslog_persistence_index {} **x_1_1_2; } x1; struct oslog_persistence_event {} *x2; unsigned long long x3; unsigned long long x4; unsigned char x5[16]; unsigned long long x6; long long x7; unsigned long long x8; unsigned int x9; }*)arg1 start:(double)arg2 end:(double)arg3 withBlock:(id)arg4;
- (void)fetchFromStartDate:(id)arg1 toEndDate:(id)arg2;
- (void)growEventListForHeader:(struct oslog_persistence_header { struct { struct oslog_persistence_header {} *x_1_1_1; struct oslog_persistence_header {} **x_1_1_2; } x1; struct oslog_persistence_chunk_tq { struct oslog_persistence_chunk {} *x_2_1_1; struct oslog_persistence_chunk {} **x_2_1_2; } x2; struct tracev3_chunk_s {} *x3; struct oslog_persistence_index {} *x4; }*)arg1;
- (id)init;
- (id)logArchive;
- (id)logFile;
- (unsigned long long)logMessageCount;
- (unsigned long long)messagesFiltered;
- (void)openFiles;
- (void)openLogArchive;
- (void)openPath:(id)arg1;
- (unsigned long long)options;
- (void)parseFileMetadata:(struct oslog_persistence_file { struct { struct oslog_persistence_file {} *x_1_1_1; struct oslog_persistence_file {} **x_1_1_2; } x1; struct oslog_persistence_header_tq { struct oslog_persistence_header {} *x_2_1_1; struct oslog_persistence_header {} **x_2_1_2; } x2; struct tracev3_chunk_s {} *x3; char *x4; void *x5; unsigned long long x6; struct oslog_persistence_index {} *x7; }*)arg1;
- (id)predicate;
- (void)resetWorkingState;
- (void)setBatchSize:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setLogArchive:(id)arg1;
- (void)setLogFile:(id)arg1;
- (void)setOptions:(unsigned long long)arg1;
- (void)setPredicate:(id)arg1;
- (void)setVerbose:(bool)arg1;
- (id)sparseDataStart;
- (id)startDate;
- (id)statistics;
- (bool)verbose;

@end
