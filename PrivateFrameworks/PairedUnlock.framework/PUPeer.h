/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PairedUnlock.framework/PairedUnlock
 */

@interface PUPeer : NSObject <IDSServiceDelegate> {
    <PUPeerDelegate> * _delegate;
    NSMutableDictionary * _errorHandlers;
    NSObject<OS_dispatch_queue> * _handlerManagementQueue;
    NSObject<OS_dispatch_queue> * _idsQueue;
    PUKeyStore * _keyStore;
    NSMutableDictionary * _responseHandlers;
    IDSService * _service;
    bool  _unlockEnabled;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PUPeerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSMutableDictionary *errorHandlers;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *handlerManagementQueue;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) PUKeyStore *keyStore;
@property (nonatomic, retain) NSMutableDictionary *responseHandlers;
@property (readonly) Class superclass;
@property (getter=isUnlockEnabled, nonatomic) bool unlockEnabled;

- (void).cxx_destruct;
- (id)_createAndStoreNewPasscodeWithCurrentPasscode:(id)arg1;
- (void)_notifyPairResult:(bool)arg1 error:(id)arg2 handler:(id)arg3;
- (void)_notifyStateHasPasscode:(bool)arg1 isLocked:(bool)arg2 isOnlyRemoteUnlock:(bool)arg3 reliably:(bool)arg4 completionHandler:(id)arg5;
- (id)_retrieveUnlockOnlyPasscode;
- (id)_sendProtobuf:(id)arg1 reliably:(bool)arg2 expectsResponse:(bool)arg3 responseIdentifier:(id)arg4 error:(id*)arg5;
- (id)_sendRequest:(unsigned short)arg1 data:(id)arg2 reliably:(bool)arg3 expectResponse:(bool)arg4 handler:(id)arg5 error:(id*)arg6;
- (void)_sendResponse:(unsigned short)arg1 toRequestID:(id)arg2 data:(id)arg3 error:(id*)arg4;
- (void)_sendResultOfMessage:(unsigned short)arg1 requestID:(id)arg2 success:(bool)arg3 error:(id)arg4;
- (id)delegate;
- (void)didCompleteRequest:(id)arg1;
- (void)didGetPasscodeState:(id)arg1;
- (void)didUnlock:(id)arg1;
- (void)disableOnlyRemoteUnlock:(id)arg1;
- (void)disableOnlyRemoteUnlockWithCompletionHandler:(id)arg1;
- (void)enableOnlyRemoteUnlockWithPasscode:(id)arg1 completionHandler:(id)arg2;
- (id)errorHandlerForRequest:(id)arg1;
- (id)errorHandlers;
- (void)getPasscodeState:(id)arg1;
- (void)getRemoteDeviceState:(id)arg1;
- (id)handlerManagementQueue;
- (id)init;
- (bool)isUnlockEnabled;
- (id)keyStore;
- (void)notifyCurrentState;
- (void)notifyThisDeviceDidUnlock;
- (void)pairForUnlockWithPasscode:(id)arg1 completionHandler:(id)arg2;
- (void)removeErrorHandlerForRequest:(id)arg1;
- (void)removeLockout:(id)arg1;
- (void)removeResponseHandlerForRequestMessageID:(id)arg1;
- (void)requestRemoteDeviceDisableOnlyRemoteUnlock;
- (void)requestRemoteDevicePasscodeAction:(long long)arg1 type:(long long)arg2 completionHandler:(id)arg3;
- (void)requestRemoteDeviceRemoveLockout:(id)arg1;
- (void)requestRemoteDeviceUnlockNotification;
- (id)responseHandlerForRequestMessageID:(id)arg1;
- (id)responseHandlers;
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(bool)arg4 error:(id)arg5;
- (void)service:(id)arg1 account:(id)arg2 incomingUnhandledProtobuf:(id)arg3 fromID:(id)arg4 context:(id)arg5;
- (void)service:(id)arg1 connectedDevicesChanged:(id)arg2;
- (void)setDelegate:(id)arg1;
- (void)setErrorHandler:(id)arg1 forRequest:(id)arg2;
- (void)setErrorHandlers:(id)arg1;
- (void)setHandlerManagementQueue:(id)arg1;
- (void)setKeyStore:(id)arg1;
- (void)setResponseHandler:(id)arg1 forRequestMessageID:(id)arg2;
- (void)setResponseHandlers:(id)arg1;
- (void)setShouldNotifyNextUnlock:(id)arg1;
- (void)setUnlockEnabled:(bool)arg1;
- (void)startPasscodeAction:(id)arg1;
- (void)unpairForUnlockWithCompletionHandler:(id)arg1;

@end
