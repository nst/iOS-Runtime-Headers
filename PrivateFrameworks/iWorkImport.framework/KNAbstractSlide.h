/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface KNAbstractSlide : TSPObject <TSDCompatibilityAwareMediaContainer, TSDDrawableContainerInfo, TSDMutableContainerInfo, TSDReducibleImageContainer, TSDReplaceableMediaContainer, TSKDocumentObject, TSKTransformableObject, TSSPropertySource, TSSStyleClient> {
    KNSlideBackgroundInfo * _background;
    KNBodyPlaceholderInfo * _bodyPlaceholder;
    NSArray * _buildChunks;
    NSSet * _builds;
    NSOrderedSet * _childInfos;
    TSUPointerKeyDictionary * _drawableToGhostInfosMap;
    TSUMutablePointerSet * _drawablesWithInvalidatedGhosts;
    bool  _inDocument;
    bool  _needsSlideNodeEventCountUpdate;
    KNObjectPlaceholderInfo * _objectPlaceholder;
    struct NSDictionary { Class x1; } * _placeholdersForTags;
    bool  _shouldConsiderAllChunksActive;
    KNSlideNode * _slideNode;
    KNSlideNumberPlaceholderInfo * _slideNumberPlaceholder;
    KNSlideStyle * _style;
    KNTitlePlaceholderInfo * _titlePlaceholder;
    KNTransition * _transition;
}

@property (nonatomic, readonly) NSArray *activeBuildChunks;
@property (getter=isAnchoredToText, nonatomic, readonly) bool anchoredToText;
@property (getter=isAttachedToBodyText, nonatomic, readonly) bool attachedToBodyText;
@property (nonatomic, readonly) KNSlideBackgroundInfo *background;
@property (nonatomic, readonly) TSDFill *backgroundFill;
@property (nonatomic, retain) KNBodyPlaceholderInfo *bodyPlaceholder;
@property (getter=isBodyVisible, nonatomic, readonly) bool bodyVisible;
@property (nonatomic, readonly) unsigned long long buildChunkCount;
@property (nonatomic, readonly) NSArray *buildChunks;
@property (nonatomic, readonly) unsigned long long buildCount;
@property (nonatomic, copy) NSSet *builds;
@property (nonatomic, readonly) NSArray *buildsGroupedByDeliveryGroup;
@property (nonatomic, readonly) NSArray *childInfos;
@property (nonatomic, readonly) NSArray *containedModels;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) unsigned long long deliveryGroupCount;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) TSUPointerKeyDictionary *drawableToGhostInfosMap;
@property (nonatomic, readonly) TSUMutablePointerSet *drawablesWithInvalidatedGhosts;
@property (getter=isFloatingAboveText, nonatomic, readonly) bool floatingAboveText;
@property (nonatomic, copy) TSDInfoGeometry *geometry;
@property (nonatomic, readonly) bool hasFreeformTextPlaceholders;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool inDocument;
@property (nonatomic, readonly) NSArray *infosToDisplay;
@property (getter=isInlineWithText, nonatomic, readonly) bool inlineWithText;
@property (nonatomic, readonly) bool isMasterSlide;
@property (nonatomic) bool matchesObjectPlaceholderGeometry;
@property (nonatomic, retain) KNObjectPlaceholderInfo *objectPlaceholder;
@property (getter=isObjectVisible, nonatomic, readonly) bool objectVisible;
@property (nonatomic, readonly) NSArray *ownedChildInfos;
@property (nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
@property (nonatomic, readonly) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property (nonatomic) NSObject<TSDContainerInfo> *parentInfo;
@property (nonatomic, copy) NSDictionary *placeholdersForTags;
@property (nonatomic, readonly) KNSlideNode *slideNode;
@property (nonatomic, retain) KNSlideNumberPlaceholderInfo *slideNumberPlaceholder;
@property (getter=isSlideNumberVisible, nonatomic, readonly) bool slideNumberVisible;
@property (nonatomic, retain) KNSlideStyle *style;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsBuilds;
@property (nonatomic, readonly) bool supportsCollaborativeEditing;
@property (nonatomic, retain) KNTitlePlaceholderInfo *titlePlaceholder;
@property (getter=isTitleVisible, nonatomic, readonly) bool titleVisible;
@property (nonatomic, retain) KNTransition *transition;

+ (id)buildChunksInDeliveryGroupAtIndex:(unsigned long long)arg1 inBuildChunks:(id)arg2;
+ (bool)chunk:(id)arg1 isFirstInDeliveryGroupForChunks:(id)arg2;
+ (Class)classForUnarchiver:(id)arg1;
+ (unsigned long long)deliveryGroupCountForBuildChunks:(id)arg1;
+ (unsigned long long)deliveryGroupIndexForBuildChunk:(id)arg1 inBuildChunks:(id)arg2;
+ (bool)needsObjectUUID;
+ (id)p_firstActiveChunkInChunks:(id)arg1;
+ (id)parentSlideForInfo:(id)arg1;

- (void).cxx_destruct;
- (double)CGFloatValueForProperty:(int)arg1;
- (id)activeBuildChunks;
- (id)activeChunksForDrawable:(id)arg1;
- (id)activeChunksForDrawable:(id)arg1 animationType:(long long)arg2;
- (void)addBuild:(id)arg1;
- (void)addChildInfo:(id)arg1;
- (void)addDrawable:(id)arg1 dolcContext:(id)arg2;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (bool)areBuildChunksInValidOrderIgnoringInactiveChunks:(id)arg1;
- (id)availableEventTriggersForBuildChunks:(id)arg1;
- (id)background;
- (id)backgroundFill;
- (id)bodyPlaceholder;
- (id)boxedObjectForProperty:(int)arg1;
- (unsigned long long)buildChunkCount;
- (id)buildChunks;
- (id)buildChunksForActiveBuildChunkIndexes:(id)arg1;
- (id)buildChunksInDeliveryGroupAtIndex:(unsigned long long)arg1;
- (unsigned long long)buildCount;
- (id)builds;
- (id)buildsForDrawable:(id)arg1;
- (id)buildsForDrawable:(id)arg1 type:(long long)arg2;
- (id)buildsForDrawables:(id)arg1;
- (id)buildsGroupedByDeliveryGroup;
- (long long)canMoveBuildChunk:(id)arg1 toIndex:(unsigned long long)arg2;
- (bool)canMoveDeliveryGroupFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (bool)canMoveDrawables:(id)arg1 toIndexes:(id)arg2;
- (bool)canSetChunksToAutomaticWith:(id)arg1;
- (id)childEnumerator;
- (id)childInfos;
- (id)chunksForDrawable:(id)arg1 animationType:(long long)arg2;
- (id)chunksWhichPlayWithChunk:(id)arg1;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
- (id)containedModels;
- (bool)containsProperty:(int)arg1;
- (id)contentBuildForDrawable:(id)arg1;
- (id)copyWithContext:(id)arg1;
- (id)defaultBodyPlaceholder;
- (id)defaultBodyPlaceholderWithContext:(id)arg1;
- (id)defaultSlideNumberPlaceholder;
- (id)defaultSlideNumberPlaceholderWithContext:(id)arg1;
- (id)defaultTitlePlaceholder;
- (id)defaultTitlePlaceholderWithContext:(id)arg1;
- (unsigned long long)deliveryGroupCount;
- (unsigned long long)deliveryGroupIndexForBuildChunk:(id)arg1;
- (id)deliveryGroupIndexesForBuilds:(id)arg1;
- (void)didInitFromSOS;
- (double)doubleValueForProperty:(int)arg1;
- (id)drawableToGhostInfosMap;
- (id)drawablesWithInvalidatedGhosts;
- (float)floatValueForProperty:(int)arg1;
- (id)geometry;
- (bool)hasComplementForBuildChunk:(id)arg1;
- (bool)hasComplementForBuildChunk:(id)arg1 inBuildChunks:(id)arg2;
- (bool)hasFreeformTextPlaceholders;
- (double)highestScaleFactorForRenderingDrawableInfo:(id)arg1;
- (void)i_invalidateActiveChunkCache;
- (void)i_primitiveAddBuild:(id)arg1;
- (void)i_primitiveInsertBuildChunk:(id)arg1 afterChunk:(id)arg2 generateIdentifier:(bool)arg3;
- (void)i_primitiveSetBuildChunks:(id)arg1;
- (void)i_primitiveSetBuilds:(id)arg1;
- (id)imageUsingDocumentRoot:(id)arg1;
- (id)inBuildForDrawable:(id)arg1;
- (bool)inDocument;
- (id)infoCorrespondingToInfo:(id)arg1;
- (bool)infoExistsForTag:(id)arg1;
- (id)infoForSelectionPath:(id)arg1;
- (id)infoForTag:(id)arg1;
- (bool)infoIsPlaceholder:(id)arg1;
- (id)infosToDisplay;
- (id)initWithSlideNode:(id)arg1 context:(id)arg2;
- (void)insertBuildChunk:(id)arg1 afterChunk:(id)arg2 generateIdentifier:(bool)arg3;
- (void)insertChildInfo:(id)arg1 above:(id)arg2;
- (void)insertChildInfo:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertChildInfo:(id)arg1 below:(id)arg2;
- (void)insertContainedModel:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertDrawable:(id)arg1 atIndex:(unsigned long long)arg2 dolcContext:(id)arg3;
- (void)insertDrawables:(id)arg1 atIndex:(unsigned long long)arg2 dolcContext:(id)arg3;
- (int)intValueForProperty:(int)arg1;
- (bool)isAnchoredToText;
- (bool)isAttachedToBodyText;
- (bool)isBodyVisible;
- (bool)isFloatingAboveText;
- (bool)isInlineWithText;
- (bool)isMasterSlide;
- (bool)isObjectVisible;
- (bool)isSelectable;
- (bool)isSlideNumberVisible;
- (bool)isThemeContent;
- (bool)isTitleVisible;
- (Class)layoutClass;
- (void)loadFromArchive:(const struct SlideArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_4_1_1; } x4; struct RepeatedPtrField<TSP::Reference> { struct Arena {} *x_5_1_1; int x_5_1_2; int x_5_1_3; struct Rep {} *x_5_1_4; } x5; struct RepeatedPtrField<KN::BuildChunkArchive> { struct Arena {} *x_6_1_1; int x_6_1_2; int x_6_1_3; struct Rep {} *x_6_1_4; } x6; struct RepeatedPtrField<TSP::Reference> { struct Arena {} *x_7_1_1; int x_7_1_2; int x_7_1_3; struct Rep {} *x_7_1_4; } x7; struct RepeatedPtrField<TSD::GuideArchive> { struct Arena {} *x_8_1_1; int x_8_1_2; int x_8_1_3; struct Rep {} *x_8_1_4; } x8; struct RepeatedPtrField<KN::SlideArchive_SageTagMapEntry> { struct Arena {} *x_9_1_1; int x_9_1_2; int x_9_1_3; struct Rep {} *x_9_1_4; } x9; struct RepeatedPtrField<TSP::Reference> { struct Arena {} *x_10_1_1; int x_10_1_2; int x_10_1_3; struct Rep {} *x_10_1_4; } x10; struct RepeatedPtrField<TSP::Reference> { struct Arena {} *x_11_1_1; int x_11_1_2; int x_11_1_3; struct Rep {} *x_11_1_4; } x11; }*)arg1 unarchiver:(id)arg2;
- (void)moveChildren:(id)arg1 toIndexes:(id)arg2;
- (void)moveModel:(id)arg1 toIndex:(unsigned long long)arg2;
- (id)objectForProperty:(int)arg1;
- (id)objectPlaceholder;
- (id)objectUUIDPath;
- (id)outBuildForDrawable:(id)arg1;
- (id)ownedChildInfos;
- (id)owningAttachment;
- (id)owningAttachmentNoRecurse;
- (id)p_ChunksForDrawable:(id)arg1 animationType:(long long)arg2 onlyActiveChunks:(bool)arg3;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })p_activeChunkRangeForBuild:(id)arg1 inActiveChunks:(id)arg2;
- (bool)p_activeChunks:(id)arg1 areInOrderForBuild:(id)arg2;
- (bool)p_activeChunks:(id)arg1 interleaveChunksForComplementOfBuild:(id)arg2;
- (bool)p_areActiveBuildChunksInValidOrder:(id)arg1;
- (void)p_assertChunksInSequenceForBuild:(id)arg1;
- (id)p_calculateActiveBuildChunks;
- (bool)p_canMoveDeliveryGroupBuildChunks:(id)arg1 toIndex:(unsigned long long)arg2;
- (bool)p_canMoveDeliveryGroupBuildChunksFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)p_checkChildInfosForDuplicates:(id)arg1;
- (id)p_chunksWhichWillPlayWithChunksToSetToWith:(id)arg1;
- (id)p_complementForBuild:(id)arg1;
- (id)p_firstActiveChunkInChunksForBuild:(id)arg1;
- (void)p_insertChildInfos:(id)arg1 atIndex:(unsigned long long)arg2 dolcContext:(id)arg3;
- (id)p_invalidBuildsOnDrawable:(id)arg1;
- (void)p_invalidateAllChunkAndBuildCaches;
- (void)p_invalidateCachesForBuildUpdate:(id)arg1 isForRemoval:(bool)arg2;
- (void)p_invalidateCachesForChunkUpdate:(id)arg1 isForRemoval:(bool)arg2;
- (void)p_invalidateSlideNodeBuildEventCountCaches;
- (bool)p_isChildPlaceholderInfo:(id)arg1;
- (bool)p_isValidToMoveChunk:(id)arg1 toIndex:(unsigned long long)arg2;
- (unsigned long long)p_keynoteVersionFromUnarchiver:(id)arg1;
- (id)p_lastActiveChunkInChunksForBuild:(id)arg1;
- (void)p_setChildInfosAsOrderedSet:(id)arg1 usingDOLC:(bool)arg2 dolcContext:(id)arg3;
- (void)p_updateBuildEffects:(bool)arg1 version:(unsigned long long)arg2;
- (void)p_updateBuildsReplacingPlaceholder:(id)arg1 withPlaceholder:(id)arg2;
- (void)p_updateChartBuildChunksImmediatelyWithoutUndoHistory;
- (void)p_updateChunkCount;
- (void)p_updateOverlappingBuildEventTriggers;
- (void)p_updateStartAndEndOffsetsIfNecessaryForFileVersion:(unsigned long long)arg1;
- (id)parentInfo;
- (id)pdfDataUsingDocumentRoot:(id)arg1;
- (void)performBlockOnInfos:(id /* block */)arg1;
- (id)placeholderOfClass:(Class)arg1 withGeometry:(id)arg2 stylesheet:(id)arg3 shapePresetIndex:(long long)arg4 textPresetIndex:(long long)arg5 layoutPropertyMap:(id)arg6 paragraphPropertyMap:(id)arg7 listPropertyMap:(id)arg8 context:(id)arg9;
- (id)placeholderOfClass:(Class)arg1 withGeometry:(id)arg2 stylesheet:(id)arg3 shapePresetIndex:(long long)arg4 textPresetStyle:(id)arg5 layoutPropertyMap:(id)arg6 paragraphPropertyMap:(id)arg7 listPropertyMap:(id)arg8 context:(id)arg9;
- (id)placeholderOfClass:(Class)arg1 withGeometry:(id)arg2 stylesheet:(id)arg3 shapePresetIndex:(long long)arg4 textPresetStyle:(id)arg5 listStyle:(id)arg6 layoutPropertyMap:(id)arg7 paragraphPropertyMap:(id)arg8 listPropertyMap:(id)arg9 context:(id)arg10;
- (id)placeholderWithPlaceholder:(id)arg1 context:(id)arg2;
- (id)placeholderWithPlaceholder:(id)arg1 context:(id)arg2 placeholderClass:(Class)arg3;
- (struct NSDictionary { Class x1; }*)placeholdersForTags;
- (id)referencedStyles;
- (void)removeBuild:(id)arg1;
- (void)removeBuildChunk:(id)arg1 rollbackGeneratedIdentifier:(bool)arg2;
- (void)removeChildInfo:(id)arg1;
- (void)removeContainedModel:(id)arg1;
- (void)removeDrawable:(id)arg1;
- (void)removeInvalidBuildsOnDrawable:(id)arg1 usingParentCommand:(id)arg2;
- (void)removeTagForDrawable:(id)arg1;
- (Class)repClass;
- (void)replaceChildInfo:(id)arg1 with:(id)arg2;
- (void)replaceReferencedStylesUsingBlock:(id /* block */)arg1;
- (void)saveToArchive:(struct SlideArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_4_1_1; } x4; struct RepeatedPtrField<TSP::Reference> { struct Arena {} *x_5_1_1; int x_5_1_2; int x_5_1_3; struct Rep {} *x_5_1_4; } x5; struct RepeatedPtrField<KN::BuildChunkArchive> { struct Arena {} *x_6_1_1; int x_6_1_2; int x_6_1_3; struct Rep {} *x_6_1_4; } x6; struct RepeatedPtrField<TSP::Reference> { struct Arena {} *x_7_1_1; int x_7_1_2; int x_7_1_3; struct Rep {} *x_7_1_4; } x7; struct RepeatedPtrField<TSD::GuideArchive> { struct Arena {} *x_8_1_1; int x_8_1_2; int x_8_1_3; struct Rep {} *x_8_1_4; } x8; struct RepeatedPtrField<KN::SlideArchive_SageTagMapEntry> { struct Arena {} *x_9_1_1; int x_9_1_2; int x_9_1_3; struct Rep {} *x_9_1_4; } x9; struct RepeatedPtrField<TSP::Reference> { struct Arena {} *x_10_1_1; int x_10_1_2; int x_10_1_3; struct Rep {} *x_10_1_4; } x10; struct RepeatedPtrField<TSP::Reference> { struct Arena {} *x_11_1_1; int x_11_1_2; int x_11_1_3; struct Rep {} *x_11_1_4; } x11; }*)arg1 archiver:(id)arg2;
- (void)setBodyPlaceholder:(id)arg1;
- (void)setBuildChunks:(id)arg1 generateIdentifiers:(bool)arg2;
- (void)setBuilds:(id)arg1;
- (void)setChildInfos:(id)arg1;
- (void)setChildInfosWithoutDOLC:(id)arg1;
- (void)setGeometry:(id)arg1;
- (void)setInDocument:(bool)arg1;
- (void)setInfo:(id)arg1 forSageTag:(id)arg2;
- (void)setObjectPlaceholder:(id)arg1;
- (void)setOwningAttachment:(id)arg1;
- (void)setParentInfo:(id)arg1;
- (void)setPlaceholdersForTags:(struct NSDictionary { Class x1; }*)arg1;
- (void)setPrimitiveGeometry:(id)arg1;
- (void)setSlideNode:(id)arg1;
- (void)setSlideNumberPlaceholder:(id)arg1;
- (void)setStyle:(id)arg1;
- (void)setTitlePlaceholder:(id)arg1;
- (void)setTransition:(id)arg1;
- (id)slideNode;
- (id)slideNumberPlaceholder;
- (id)style;
- (bool)supportsBuilds;
- (id)tagForInfo:(id)arg1;
- (struct CGSize { double x1; double x2; })targetSizeForImageData:(id)arg1 associatedHint:(id)arg2;
- (id)titlePlaceholder;
- (id)transition;
- (long long)validateMoveActiveBuildChunks:(id)arg1 toActiveIndex:(unsigned long long)arg2;
- (void)wasAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;

@end
