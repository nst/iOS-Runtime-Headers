/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
 */

@interface MPCRadioPlaybackCoordinator : NSObject <MPAVRoutingControllerDelegate> {
    RadioStation * _currentStation;
    bool  _deviceIsDocked;
    bool  _deviceIsLocked;
    bool  _didPresentNotificationForCurrentItem;
    int  _lockStateNotifyToken;
    bool  _lockStateNotifyTokenIsValid;
    void * _mediaRemoteCommandObserver;
    NSObject<OS_dispatch_source> * _pauseTimeoutTimerSource;
    MPAVRoute * _pickedRoute;
    bool  _playbackIsPaused;
    RadioStation * _playbackNotificationStation;
    NSDate * _playbackTimeoutBeginDate;
    double  _playbackTimeoutDuration;
    MPCPlaybackTimeoutInfoController * _playbackTimeoutInfoController;
    MPUserNotification * _playbackTimeoutNotification;
    bool  _playbackTimeoutNotificationDidExpire;
    NSObject<OS_dispatch_source> * _playbackTimeoutNotificationExpirationTimerSource;
    MPAVController * _player;
    NSObject<OS_dispatch_source> * _presentPlaybackTimeoutTimerSource;
    RadioRecentStationsController * _recentStationsController;
    MPCReportingPlaybackObserver * _reportingPlaybackObserver;
    MPAVRoutingController * _routingController;
    bool  _wasUsingBackgroundNetwork;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) MPAVController *player;
@property (nonatomic, retain) RadioRecentStationsController *recentStationsController;
@property (nonatomic, retain) MPCReportingPlaybackObserver *reportingPlaybackObserver;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_cancelPauseTimeoutTimer;
- (void)_cancelPlaybackTimeoutNotification;
- (void)_cancelPlaybackTimeoutNotificationExpirationTimer;
- (void)_cancelPresentPlaybackTimeoutTimer;
- (id)_currentStationFromPlayer;
- (void)_dismissExpiredPlaybackTimeoutNotificationForced:(bool)arg1;
- (void)_effectiveVolumeDidChangeNotification:(id)arg1;
- (void)_fullMuteDidChangeNotification:(id)arg1;
- (bool)_isPauseTimeoutActive;
- (bool)_isRadioRelevantItem:(id)arg1;
- (void)_itemDurationDidBecomeAvailableNotification:(id)arg1;
- (void)_itemIsInWishListDidChangeNotification:(id)arg1;
- (void)_itemLikedStateDidChangeNotification:(id)arg1;
- (void)_itemWillChangeNotification:(id)arg1;
- (void)_playbackContentsDidChangeNotification:(id)arg1;
- (void)_playbackStateDidChangeNotification:(id)arg1;
- (void)_presentPlaybackTimeoutNotificationForCurrentItemIfNeeded;
- (void)_radioModelDidChangeNotification:(id)arg1;
- (void)_receivedUserNotificationResponseForUserNotification:(struct __CFUserNotification { }*)arg1 withResponseFlags:(unsigned long long)arg2;
- (void)_resetPlaybackTimeoutInformation;
- (void)_schedulePlaybackTimeoutNotificationExpirationTimerIfNeeded;
- (void)_setCurrentStation:(id)arg1;
- (void)_updateCurrentStationFromPlayer;
- (void)_updatePlaybackTimerForDeviceStateChange;
- (void)dealloc;
- (id)init;
- (id)initWithPlayer:(id)arg1;
- (id)player;
- (id)recentStationsController;
- (id)reportingPlaybackObserver;
- (void)routingControllerAvailableRoutesDidChange:(id)arg1;
- (void)setRecentStationsController:(id)arg1;
- (void)setReportingPlaybackObserver:(id)arg1;
- (void)setupPlaybackQueueWithPlaybackContext:(id)arg1 completionHandler:(id)arg2;

@end
