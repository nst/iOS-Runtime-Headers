/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSTGroupingColumnList : TSKSosBase <NSCopying> {
    NSArray * _groupingColumns;
}

@property (nonatomic, readonly) NSArray *groupingColumns;

- (void).cxx_destruct;
- (void)addRule:(id)arg1 atGroupLevel:(unsigned char)arg2;
- (void)addRule:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)changeGroupingTypeForGroupLevel:(unsigned char)arg1 toType:(int)arg2;
- (void)changeGroupingTypeForRuleIndex:(unsigned long long)arg1 toType:(int)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)count;
- (void)encodeToArchive:(struct GroupColumnListArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_4_1_1; } x4; struct RepeatedPtrField<TST::GroupColumnArchive> { struct Arena {} *x_5_1_1; int x_5_1_2; int x_5_1_3; struct Rep {} *x_5_1_4; } x5; }*)arg1 archiver:(id)arg2;
- (id)groupingColumns;
- (unsigned long long)hash;
- (id)init;
- (id)initWithArchive:(const struct GroupColumnListArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_4_1_1; } x4; struct RepeatedPtrField<TST::GroupColumnArchive> { struct Arena {} *x_5_1_1; int x_5_1_2; int x_5_1_3; struct Rep {} *x_5_1_4; } x5; }*)arg1;
- (id)initWithGroupingColumns:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isGroupingColumnUidsEqual:(id)arg1;
- (void)moveRuleFromGroupLevel:(unsigned char)arg1 toLevel:(unsigned char)arg2;
- (void)moveRuleFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (bool)p_isEqual:(id)arg1;
- (void)removeRuleAtGroupLevel:(unsigned char)arg1;
- (void)removeRuleAtIndex:(unsigned long long)arg1;
- (void)replaceRuleAtGroupLevel:(unsigned char)arg1 withRule:(id)arg2;
- (void)replaceRuleAtIndex:(unsigned long long)arg1 withRule:(id)arg2;
- (id)ruleAtGroupLevel:(unsigned char)arg1;
- (id)ruleAtIndex:(unsigned long long)arg1;

@end
