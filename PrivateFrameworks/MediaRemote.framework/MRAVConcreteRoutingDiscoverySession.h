/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
 */

@interface MRAVConcreteRoutingDiscoverySession : MRAVRoutingDiscoverySession <MRExternalDeviceControllerDelegate> {
    AVOutputDeviceDiscoverySession * _avDiscoverySession;
    NSArray * _availableEndpoints;
    struct NSMutableDictionary { Class x1; } * _availableGenericExternalDevices;
    NSArray * _availableOutputDevices;
    NSObject<OS_dispatch_queue> * _calloutQueue;
    bool  _createEndpointsOnlyIfGenericEquivalentAvailable;
    struct NSMapTable { Class x1; } * _deviceIDsToWeakOutputDevicesTable;
    unsigned int  _discoveryMode;
    unsigned int  _endpointFeatures;
    MRExternalDeviceController * _genericExternalDeviceController;
    struct NSMapTable { Class x1; } * _groupIDsToWeakEndpointsTable;
    NSString * _routingContextUID;
    bool  _scheduledAvailableEndpointsAndOutputDevicesReload;
    NSObject<OS_dispatch_queue> * _serialQueue;
    unsigned int  _targetAudioSessionID;
}

@property (nonatomic, readonly) NSArray *availableEndpoints;
@property (nonatomic, readonly) NSArray *availableOutputDevices;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void)_availableOutputDevicesDidChangeNotification:(id)arg1;
- (void)_onQueue_reloadAvailableEndpointsAndOutputDevices;
- (void)_registerNotifications;
- (void)_scheduleAvailableEndpointsAndOutputDevicesReload;
- (void)_unregisterNotifications;
- (id)availableEndpoints;
- (id)availableOutputDevices;
- (void)dealloc;
- (unsigned int)discoveryMode;
- (unsigned int)endpointFeatures;
- (void)externalDeviceController:(id)arg1 didDiscoverDevice:(id)arg2;
- (void)externalDeviceController:(id)arg1 didRemoveDevice:(id)arg2;
- (bool)hasAvailableEndpoints;
- (id)initWithEndpointFeatures:(unsigned int)arg1;
- (id)routingContextUID;
- (void)setDiscoveryMode:(unsigned int)arg1;
- (void)setRoutingContextUID:(id)arg1;
- (void)setTargetAudioSessionID:(unsigned int)arg1;
- (unsigned int)targetAudioSessionID;

@end
