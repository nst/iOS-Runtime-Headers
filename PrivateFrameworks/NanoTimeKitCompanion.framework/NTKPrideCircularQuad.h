/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion
 */

@interface NTKPrideCircularQuad : NTKPrideSplinesQuad {
    id /* block */  _complicationAlphaCallback;
    float  _complicationFade;
    float  _currentFade;
    unsigned long long  _currentStyle;
    float  _displayMode;
    bool  _fading;
    bool  _forceRenderOnce;
    float  _globalTouchTime;
    bool  _paused;
    struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[32]; void*x2[32]; } * _perSplineData;
    int  _previouslySelectedColor;
    float  _velocity;
}

@property (nonatomic, copy) id /* block */ complicationAlphaCallback;

- (void).cxx_destruct;
- (void)_generateControlPointDampingCoefficients;
- (float)ampltiudeForControlPoint:(int)arg1 ofSpline:(int)arg2;
- (void)applyToForegroundZoomFraction:(double)arg1 faceScale:(double)arg2;
- (void)applyTransitionFromDialToFullScreenWithFraction:(double)arg1;
- (void)cleanupAfterAZoom;
- (void)clearWaves;
- (id /* block */)complicationAlphaCallback;
- (float)computeAmplitudeForControlPoint:(int)arg1 inSpline:(int)arg2 atTime:(double)arg3;
- (float)currentSplineWidth;
- (void)dealloc;
- (void)generateControlPointsForSpline:(int)arg1;
- (id)generateVignetteTextureData;
- (id /* block */)getNTKPrideSplineDefinitionFiller;
- (float)globalAmplitudeForTime:(double)arg1;
- (void)handleOrdinaryScreenWake;
- (void)handleScreenOff;
- (id)initWithDevice:(id)arg1;
- (void)initializePerSplineData;
- (float)interpolationStepSizeForSpline:(int)arg1;
- (struct { }*)noiseConfiguration;
- (void)noiseSamplePositionForControlPoint:(int)arg1 inSpline:(int)arg2;
- (int)numControlPointsPerSpline;
- (int)numSplines;
- (int)numVertsForSpline:(int)arg1;
- (void)performWristRaiseAnimation;
- (bool)postSemaphoreComputeForTime:(double)arg1;
- (bool)preSemaphoreComputeForTime:(double)arg1;
- (void)prepareForZoom;
- (void)prepareWristRaiseAnimation;
- (void)processSpline:(int)arg1;
- (void)randomizeSplineColors;
- (void)setAmplitude:(float)arg1 forControlPoint:(int)arg2 ofSpline:(int)arg3;
- (void)setComplicationAlphaCallback:(id /* block */)arg1;
- (void)setDefaultSplineColors;
- (void)setDialMode;
- (void)setFullscreenMode;
- (void)setNoise:(void *)arg1 forControlPoint:(void *)arg2 inSpline:(void *)arg3; // needs 3 arg types, found 2: int, int
- (void)setSplineColor:(int)arg1 reverseDirection:(bool)arg2;
- (bool)shouldForceRender;
- (id)splineColorAtIndex:(int)arg1;
- (void)startWavesAtTime:(double)arg1;
- (id)vertexShaderFromLibrary:(id)arg1;
- (bool)willConsumeTouch:(id)arg1;

@end
