/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore
 */

@interface PLMonotonicTimer : NSObject {
    id  _block;
    NSMutableSet * _canceledFireDates;
    double  _interval;
    NSDate * _monotonicFireDate;
    NSObject<OS_dispatch_queue> * _queue;
    PLEntryNotificationOperatorComposition * _wakeEntryNotification;
}

@property (copy) id block;
@property (retain) NSMutableSet *canceledFireDates;
@property double interval;
@property (nonatomic, retain) NSDate *monotonicFireDate;
@property (retain) NSObject<OS_dispatch_queue> *queue;
@property (retain) PLEntryNotificationOperatorComposition *wakeEntryNotification;

+ (bool)debugInstance;
+ (id)debugScheduledTimerWithMonotonicFireDate:(id)arg1 withInterval:(double)arg2 withQueue:(id)arg3 withBlock:(id)arg4;
+ (id)scheduledTimerWithMonotonicFireDate:(id)arg1 withInterval:(double)arg2 withQueue:(id)arg3 withBlock:(id)arg4;

- (void).cxx_destruct;
- (void)_cancel;
- (void)_setMonotonicFireDate:(id)arg1;
- (id)block;
- (void)cancel;
- (id)canceledFireDates;
- (void)dealloc;
- (id)description;
- (void)fire;
- (id)initWithMonotonicFireDate:(id)arg1 withInterval:(double)arg2 withQueue:(id)arg3 withBlock:(id)arg4;
- (double)interval;
- (id)monotonicFireDate;
- (id)queue;
- (void)reschedule;
- (void)schedule;
- (void)setBlock:(id)arg1;
- (void)setCanceledFireDates:(id)arg1;
- (void)setInterval:(double)arg1;
- (void)setMonotonicFireDate:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setWakeEntryNotification:(id)arg1;
- (void)timerFiredForMonotonicFireDate:(id)arg1;
- (id)wakeEntryNotification;

@end
