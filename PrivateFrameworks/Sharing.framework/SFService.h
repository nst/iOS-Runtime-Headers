/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Sharing.framework/Sharing
 */

@interface SFService : NSObject <NSSecureCoding, SFXPCInterface> {
    bool  _activateCalled;
    long long  _advertiseRate;
    bool  _autoUnlockEnabled;
    bool  _autoUnlockWatch;
    unsigned char  _deviceActionType;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    id  _errorHandler;
    id  _eventMessageHandler;
    bool  _hasProblem;
    NSString * _identifier;
    id  _interruptionHandler;
    bool  _invalidateCalled;
    bool  _invalidateDone;
    id  _invalidationHandler;
    bool  _needsKeyboard;
    bool  _needsSetup;
    id  _requestMessageHandler;
    struct NSMutableDictionary { Class x1; } * _requestQueue;
    id  _responseMessageInternalHandler;
    NSUUID * _serviceUUID;
    bool  _supportsAirPlayReceiver;
    bool  _wakeDevice;
    bool  _watchLocked;
    NSXPCConnection * _xpcCnx;
}

@property (nonatomic) long long advertiseRate;
@property (nonatomic) bool autoUnlockEnabled;
@property (nonatomic) bool autoUnlockWatch;
@property (nonatomic) unsigned char deviceActionType;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic, copy) id errorHandler;
@property (nonatomic, copy) id eventMessageHandler;
@property (nonatomic) bool hasProblem;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic, copy) id interruptionHandler;
@property (nonatomic, copy) id invalidationHandler;
@property (nonatomic) bool needsKeyboard;
@property (nonatomic) bool needsSetup;
@property (nonatomic, copy) id requestMessageHandler;
@property (nonatomic, copy) id responseMessageInternalHandler;
@property (nonatomic, copy) NSUUID *serviceUUID;
@property (nonatomic) bool supportsAirPlayReceiver;
@property (nonatomic) bool wakeDevice;
@property (nonatomic) bool watchLocked;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_activateWithCompletion:(id)arg1;
- (void)_ensureXPCStarted;
- (void)_interrupted;
- (void)_invalidate;
- (void)_invalidated;
- (void)_performActivateSafeChange:(id)arg1;
- (void)activateWithCompletion:(id)arg1;
- (long long)advertiseRate;
- (bool)autoUnlockEnabled;
- (bool)autoUnlockWatch;
- (void)dealloc;
- (id)description;
- (unsigned char)deviceActionType;
- (id)dispatchQueue;
- (void)encodeWithCoder:(id)arg1;
- (id)errorHandler;
- (id)eventMessageHandler;
- (bool)hasProblem;
- (id)identifier;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)interruptionHandler;
- (void)invalidate;
- (id)invalidationHandler;
- (bool)needsKeyboard;
- (bool)needsSetup;
- (id)requestMessageHandler;
- (id)responseMessageInternalHandler;
- (void)sendEvent:(id)arg1;
- (void)sendRequest:(id)arg1;
- (void)sendResponse:(id)arg1;
- (void)serviceError:(id)arg1;
- (void)serviceReceivedEvent:(id)arg1;
- (void)serviceReceivedRequest:(id)arg1;
- (void)serviceReceivedResponse:(id)arg1;
- (id)serviceUUID;
- (void)setAdvertiseRate:(long long)arg1;
- (void)setAutoUnlockEnabled:(bool)arg1;
- (void)setAutoUnlockWatch:(bool)arg1;
- (void)setDeviceActionType:(unsigned char)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setErrorHandler:(id)arg1;
- (void)setEventMessageHandler:(id)arg1;
- (void)setHasProblem:(bool)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setInterruptionHandler:(id)arg1;
- (void)setInvalidationHandler:(id)arg1;
- (void)setNeedsKeyboard:(bool)arg1;
- (void)setNeedsSetup:(bool)arg1;
- (void)setRequestMessageHandler:(id)arg1;
- (void)setResponseMessageInternalHandler:(id)arg1;
- (void)setServiceUUID:(id)arg1;
- (void)setSupportsAirPlayReceiver:(bool)arg1;
- (void)setWakeDevice:(bool)arg1;
- (void)setWatchLocked:(bool)arg1;
- (bool)supportsAirPlayReceiver;
- (void)updateWithService:(id)arg1;
- (bool)wakeDevice;
- (bool)watchLocked;

@end
