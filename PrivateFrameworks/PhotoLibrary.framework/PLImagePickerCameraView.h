/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
 */

@interface PLImagePickerCameraView : CMKCameraView <PLVideoViewDelegate> {
    PLCropOverlay * __cropOverlay;
    bool  __manipulatingCrop;
    CMKStillImageCaptureResponse * __mostRecentCaptureResponse;
    bool  __retakingPhoto;
    bool  __shouldSkipPostcaptureReview;
    PLVideoView * __videoView;
    int  __windowEdgeClip;
    bool  _allowsEditing;
    bool  _cropOverlayUsesTelephonyUI;
    bool  _displayedInPopover;
    NSDictionary * _imagePickerOptions;
    int  _photoSavingOptions;
    bool  _showsCropRegion;
    PLPhotoTileViewController * _tileViewController;
    bool  _wantsImageData;
}

@property (nonatomic, readonly) PLCropOverlay *_cropOverlay;
@property (getter=_isManipulatingCrop, setter=_setManipulatingCrop:, nonatomic) bool _manipulatingCrop;
@property (nonatomic, readonly) CMKStillImageCaptureResponse *_mostRecentCaptureResponse;
@property (getter=_isRetakingPhoto, setter=_setRetakingPhoto:, nonatomic) bool _retakingPhoto;
@property (nonatomic, readonly) bool _shouldSkipPostcaptureReview;
@property (nonatomic, readonly) PLVideoView *_videoView;
@property (setter=_setWindowEdgeClip:, nonatomic) int _windowEdgeClip;
@property (nonatomic) bool allowsEditing;
@property (nonatomic) bool controlsAreVisible;
@property (nonatomic) bool cropOverlayUsesTelephonyUI;
@property (nonatomic, retain) UIView *customOverlayView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isDisplayedInPopover, nonatomic) bool displayedInPopover;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSDictionary *imagePickerOptions;
@property (nonatomic) int photoSavingOptions;
@property (nonatomic) bool showsCropRegion;
@property (readonly) Class superclass;
@property (nonatomic, readonly) PLPhotoTileViewController *tileViewController;
@property (nonatomic) bool wantsImageData;

- (bool)_allowsVideoEditing;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_bottomBarFrame;
- (void)_createCropOverlayIfNecessary;
- (id)_cropOverlay;
- (struct CGSize { double x1; double x2; })_displaySizeForPreviewForCameraMode:(long long)arg1;
- (bool)_isLockedToPortraitOrientation;
- (bool)_isManipulatingCrop;
- (bool)_isRetakingPhoto;
- (id)_mostRecentCaptureResponse;
- (void)_previewVideoAtPath:(id)arg1;
- (void)_resetImageTile;
- (void)_setManipulatingCrop:(bool)arg1;
- (void)_setRetakingPhoto:(bool)arg1;
- (void)_setWindowEdgeClip:(int)arg1;
- (bool)_shouldBlurWhenSessionStops;
- (bool)_shouldHideCancelButton;
- (bool)_shouldPausePreviewDuringCapture;
- (bool)_shouldSkipPostcaptureReview;
- (bool)_shouldStartPreviewWhenApplicationBecomesActive;
- (bool)_supportsPreviewingAfterCapture;
- (void)_updateImageEditability;
- (id)_videoView;
- (bool)_wantsCaptureAnimations;
- (bool)_wantsForcedPreviewAspectRatio;
- (bool)_wantsFullScreenPreview;
- (bool)_wantsOrientationAnimations;
- (bool)_wantsPreviewSizeAdjustmentForBars;
- (bool)_wantsSuspensionBlurs;
- (int)_windowEdgeClip;
- (bool)allowsEditing;
- (void)cameraControllerPreviewDidStart:(id)arg1;
- (void)captureController:(id)arg1 didCompleteResponse:(id)arg2 forStillImageRequest:(id)arg3 error:(id)arg4;
- (void)captureController:(id)arg1 didStopRecordingForVideoRequest:(id)arg2;
- (void)cropOverlay:(id)arg1 didFinishSaving:(id)arg2;
- (void)cropOverlayPause:(id)arg1;
- (void)cropOverlayPlay:(id)arg1;
- (bool)cropOverlayUsesTelephonyUI;
- (void)cropOverlayWasCancelled:(id)arg1;
- (void)cropOverlayWasOKed:(id)arg1;
- (void)cropOverlayWasToggled:(id)arg1;
- (id)customOverlayView;
- (void)dealloc;
- (void)didMoveToWindow;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)imagePickerOptions;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 spec:(id)arg2;
- (bool)isDisplayedInPopover;
- (void)performPostcapturePreviewForVideoAtPath:(id)arg1;
- (int)photoSavingOptions;
- (bool)photoTileViewControllerIsDisplayingLandscape:(id)arg1;
- (void)setAllowsEditing:(bool)arg1;
- (void)setAllowsImageEditing:(bool)arg1;
- (void)setAllowsMultipleModes:(bool)arg1;
- (void)setControlsAreVisible:(bool)arg1;
- (void)setCropOverlayUsesTelephonyUI:(bool)arg1;
- (void)setCustomOverlayView:(id)arg1;
- (void)setDisplayedInPopover:(bool)arg1;
- (void)setImagePickerOptions:(id)arg1;
- (void)setPhotoSavingOptions:(int)arg1;
- (void)setShowsCropRegion:(bool)arg1;
- (void)setWantsImageData:(bool)arg1;
- (bool)showsCropRegion;
- (id)tileViewController;
- (void)verifyViewOrdering;
- (bool)videoViewCanBeginPlayback:(id)arg1;
- (void)videoViewDidBeginPlayback:(id)arg1;
- (void)videoViewDidEndPlayback:(id)arg1 didFinish:(bool)arg2;
- (void)videoViewDidPausePlayback:(id)arg1;
- (void)videoViewIsReadyToBeginPlayback:(id)arg1;
- (double)videoViewScrubberYOrigin:(id)arg1 forOrientation:(long long)arg2;
- (void)viewWillBeDisplayed;
- (bool)wantsImageData;

@end
