/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
 */

@interface CHTextLineStrokeGroup : CHStrokeGroup {
    struct CGVector { 
        double dx; 
        double dy; 
    }  _averageStrokeDeviation;
    struct CGVector { 
        double dx; 
        double dy; 
    }  _averageWritingOrientation;
    struct vector<CGVector, std::__1::allocator<CGVector> > { 
        struct CGVector {} *__begin_; 
        struct CGVector {} *__end_; 
        struct __compressed_pair<CGVector *, std::__1::allocator<CGVector> > { 
            struct CGVector {} *__first_; 
        } __end_cap_; 
    }  _localStrokeWritingOrientations;
    NSArray * _writingDirectionSortedStrokeIdentifiers;
    NSArray * _writingDirectionSortedSubstrokes;
}

@property (nonatomic, readonly) struct CGVector { double x1; double x2; } averageStrokeDeviation;
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{vector<CGVector' */ struct  localStrokeWritingOrientations; /* unknown property attribute:  std::__1::allocator<CGVector> >=^{CGVector}}} */
@property (nonatomic, readonly, retain) NSArray *writingDirectionSortedStrokeIdentifiers;
@property (nonatomic, readonly, retain) NSArray *writingDirectionSortedSubstrokes;

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct CGVector { double x1; double x2; })averageStrokeDeviation;
- (struct CGVector { double x1; double x2; })averageWritingOrientation;
- (void)dealloc;
- (id)groupByAddingStrokeIdentifiers:(id)arg1 removingStrokeIdentifiers:(id)arg2 firstStrokeIdentifier:(id)arg3 lastStrokeIdentifier:(id)arg4 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5 writingDirectionSortedSubstrokes:(id)arg6 averageWritingOrientation:(struct CGVector { double x1; double x2; })arg7 averageStrokeDeviation:(struct CGVector { double x1; double x2; })arg8 writingDirectionSortedStrokeIdentifiers:(id)arg9 localStrokeWritingOrientations:(struct vector<CGVector, std::__1::allocator<CGVector> > { struct CGVector {} *x1; struct CGVector {} *x2; struct __compressed_pair<CGVector *, std::__1::allocator<CGVector> > { struct CGVector {} *x_3_1_1; } x3; }*)arg10;
- (id)initWithStrokeIdentifiers:(id)arg1 firstStrokeIdentifier:(id)arg2 lastStrokeIdentifier:(id)arg3 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4 writingDirectionSortedSubstrokes:(id)arg5 averageWritingOrientation:(struct CGVector { double x1; double x2; })arg6 averageStrokeDeviation:(struct CGVector { double x1; double x2; })arg7 writingDirectionSortedStrokeIdentifiers:(id)arg8 localStrokeWritingOrientations:(struct vector<CGVector, std::__1::allocator<CGVector> > { struct CGVector {} *x1; struct CGVector {} *x2; struct __compressed_pair<CGVector *, std::__1::allocator<CGVector> > { struct CGVector {} *x_3_1_1; } x3; }*)arg9;
- (struct vector<CGVector, std::__1::allocator<CGVector> > { struct CGVector {} *x1; struct CGVector {} *x2; struct __compressed_pair<CGVector *, std::__1::allocator<CGVector> > { struct CGVector {} *x_3_1_1; } x3; })localStrokeWritingOrientations;
- (struct CGVector { double x1; double x2; })localWritingOrientationAtStrokeIndex:(long long)arg1;
- (id)writingDirectionSortedStrokeIdentifiers;
- (id)writingDirectionSortedSubstrokes;

@end
