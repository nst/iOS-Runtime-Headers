/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSCHStyleOwnerPath : NSObject <NSCopying> {
    NSArray * mUuids;
}

@property (nonatomic, readonly) NSArray *uuids;

+ (id)instanceWithArchive:(const struct StyleOwnerPath { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_4_1_1; } x4; struct RepeatedPtrField<TSP::UUID> { struct Arena {} *x_5_1_1; int x_5_1_2; int x_5_1_3; struct Rep {} *x_5_1_4; } x5; }*)arg1 unarchiver:(id)arg2;
+ (id)styleOwnerPathForSemanticTag:(id)arg1 ofChart:(id)arg2;
+ (id)styleOwnerPathForStyleOwner:(id)arg1;
+ (unsigned char)styleOwnerPathTypeForStyleOwner:(id)arg1;
+ (id)styleOwnerPathWithUUIDs:(id)arg1;
+ (id)verifiedUUIDs:(id)arg1;

- (void).cxx_destruct;
- (id)TSUUUIDPath;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)didInitFromSOS;
- (Class)genericPropertyMapClass;
- (unsigned long long)hash;
- (id)initWithArchive:(const struct StyleOwnerPath { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_4_1_1; } x4; struct RepeatedPtrField<TSP::UUID> { struct Arena {} *x_5_1_1; int x_5_1_2; int x_5_1_3; struct Rep {} *x_5_1_4; } x5; }*)arg1 unarchiver:(id)arg2;
- (id)initWithUUIDs:(id)arg1;
- (bool)isEqual:(id)arg1;
- (id)p_axisStyleOwnerForChart:(id)arg1;
- (id)p_createUUIDDecoder;
- (id)p_referenceLineStyleOwnerForChart:(id)arg1;
- (id)p_seriesStyleOwnerForChart:(id)arg1;
- (id)pathByPrefixingWithUUIDs:(id)arg1;
- (void)saveToArchive:(struct StyleOwnerPath { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_4_1_1; } x4; struct RepeatedPtrField<TSP::UUID> { struct Arena {} *x_5_1_1; int x_5_1_2; int x_5_1_3; struct Rep {} *x_5_1_4; } x5; }*)arg1 archiver:(id)arg2;
- (id)styleOwnerForChart:(id)arg1;
- (unsigned char)styleOwnerPathType;
- (int)styleOwnerType;
- (id)uuids;

@end
