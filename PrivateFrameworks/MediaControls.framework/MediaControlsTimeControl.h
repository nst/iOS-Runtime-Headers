/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaControls.framework/MediaControls
 */

@interface MediaControlsTimeControl : UIControl <UIGestureRecognizerDelegate> {
    double  _currentTimeInTrack;
    bool  _currentlyTracking;
    NSArray * _defaultConstraints;
    CADisplayLink * _displayLink;
    struct { 
        double snapshotTime; 
        double startTime; 
        double endTime; 
        double duration; 
        double elapsedDuration; 
        float rate; 
        float defaultRate; 
        bool isLiveContent; 
        bool isLoading; 
    }  _durationSnapshot;
    NSString * _elapsedTime;
    AVTimeFormatter * _elapsedTimeFormatter;
    UILabel * _elapsedTimeLabel;
    UIView * _elapsedTrack;
    bool  _empty;
    NSArray * _initialConstraints;
    UIView * _knobView;
    NSLayoutConstraint * _knobViewXConstraint;
    double  _lastRecordedTime;
    UIImageView * _liveBackground;
    UILabel * _liveLabel;
    NSString * _remainingTime;
    AVTimeFormatter * _remainingTimeFormatter;
    UILabel * _remainingTimeLabel;
    UIView * _remainingTrack;
    MPCPlayerResponse * _response;
    double  _sliderValue;
    long long  _style;
    bool  _timeControlOnScreen;
    UILayoutGuide * _trackLayoutGuide;
    NSArray * _trackingConstraints;
    bool  _transitioning;
}

@property (getter=isCurrentlyTracking, nonatomic) bool currentlyTracking;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) struct { double x1; double x2; double x3; double x4; double x5; float x6; float x7; bool x8; bool x9; } durationSnapshot;
@property (nonatomic, retain) UILabel *elapsedTimeLabel;
@property (nonatomic, retain) UIView *elapsedTrack;
@property (getter=isEmpty, nonatomic) bool empty;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIView *knobView;
@property (nonatomic, retain) UIImageView *liveBackground;
@property (nonatomic, retain) UILabel *liveLabel;
@property (nonatomic, retain) UILabel *remainingTimeLabel;
@property (nonatomic, retain) UIView *remainingTrack;
@property (nonatomic, retain) MPCPlayerResponse *response;
@property (nonatomic) double sliderValue;
@property (nonatomic) long long style;
@property (readonly) Class superclass;
@property (getter=isTimeControlOnScreen, nonatomic) bool timeControlOnScreen;
@property (nonatomic, retain) UILayoutGuide *trackLayoutGuide;
@property (getter=isTransitioning, nonatomic) bool transitioning;

- (void).cxx_destruct;
- (void)_displayLinkTick:(id)arg1;
- (void)_updateDisplayLinkPause;
- (void)_updateLabels:(double)arg1 withRemainingDuration:(double)arg2;
- (void)_updateLabels:(struct { double x1; double x2; double x3; double x4; double x5; float x6; float x7; bool x8; bool x9; })arg1 withTargetTimestamp:(double)arg2;
- (void)_updateSliderPosition;
- (void)_updateStyle;
- (void)_updateTimeControl;
- (bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)cancelTrackingWithEvent:(id)arg1;
- (bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)createDisplayLinkIfNeeded;
- (void)didMoveToWindow;
- (struct { double x1; double x2; double x3; double x4; double x5; float x6; float x7; bool x8; bool x9; })durationSnapshot;
- (id)elapsedTimeLabel;
- (id)elapsedTrack;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)invalidateDisplayLinkIfNeeded;
- (bool)isCurrentlyTracking;
- (bool)isEmpty;
- (bool)isTimeControlOnScreen;
- (bool)isTransitioning;
- (id)knobView;
- (void)layoutSubviews;
- (id)liveBackground;
- (id)liveLabel;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)remainingTimeLabel;
- (id)remainingTrack;
- (id)response;
- (void)setCurrentlyTracking:(bool)arg1;
- (void)setDurationSnapshot:(struct { double x1; double x2; double x3; double x4; double x5; float x6; float x7; bool x8; bool x9; })arg1;
- (void)setElapsedTimeLabel:(id)arg1;
- (void)setElapsedTrack:(id)arg1;
- (void)setEmpty:(bool)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setKnobView:(id)arg1;
- (void)setLiveBackground:(id)arg1;
- (void)setLiveLabel:(id)arg1;
- (void)setRemainingTimeLabel:(id)arg1;
- (void)setRemainingTrack:(id)arg1;
- (void)setResponse:(id)arg1;
- (void)setSliderValue:(double)arg1;
- (void)setStyle:(long long)arg1;
- (void)setTimeControlOnScreen:(bool)arg1;
- (void)setTrackLayoutGuide:(id)arg1;
- (void)setTransitioning:(bool)arg1;
- (double)sliderValue;
- (long long)style;
- (id)trackLayoutGuide;
- (void)updateLabelAvoidance;
- (void)viewDidMoveToSuperview;

@end
