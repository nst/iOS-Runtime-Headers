/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreSpeech.framework/CoreSpeech
 */

@interface CSVoiceTriggerFirstPassJarvis : NSObject <CSActivationEventNotifierDelegate, CSKeywordAnalyzerNDEAPIScoreDelegate, CSSPGEndpointAnalyzerDelegate, CSSpeechManagerDelegate> {
    unsigned long long  _activeChannel;
    CSPlainAudioFileWriter * _audioFileWriter;
    CSAsset * _currentAsset;
    <CSVoiceTriggerFirstPassJarvisDelegate> * _delegate;
    NSString * _deviceId;
    unsigned long long  _earlyDetectFiredMachTime;
    CSSPGEndpointAnalyzer * _endpointAnalyzer;
    bool  _hasReceivedNDEAPIResult;
    bool  _hasTriggerCandidate;
    NSDictionary * _jarvisTriggerResult;
    unsigned long long  _jarvisVoiceTriggerTimeout;
    CSKeywordAnalyzerNDEAPI * _keywordAnalyzerNDEAPI;
    unsigned long long  _numProcessedSamples;
    NSObject<OS_dispatch_queue> * _queue;
    CSVoiceTriggerRTModel * _rtModel;
    CSSpeechManager * _speechManager;
}

@property (nonatomic) unsigned long long activeChannel;
@property (nonatomic, retain) CSPlainAudioFileWriter *audioFileWriter;
@property (nonatomic, retain) CSAsset *currentAsset;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CSVoiceTriggerFirstPassJarvisDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSString *deviceId;
@property (nonatomic) unsigned long long earlyDetectFiredMachTime;
@property (nonatomic, retain) CSSPGEndpointAnalyzer *endpointAnalyzer;
@property (nonatomic) bool hasReceivedNDEAPIResult;
@property (nonatomic) bool hasTriggerCandidate;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSDictionary *jarvisTriggerResult;
@property (nonatomic) unsigned long long jarvisVoiceTriggerTimeout;
@property (nonatomic, retain) CSKeywordAnalyzerNDEAPI *keywordAnalyzerNDEAPI;
@property (nonatomic) unsigned long long numProcessedSamples;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) CSVoiceTriggerRTModel *rtModel;
@property (nonatomic) CSSpeechManager *speechManager;
@property (readonly) Class superclass;

+ (id)jarvisAudioLogDirectory;
+ (id)jarvisAudioLoggingFilePath;
+ (id)timeStampString;

- (void).cxx_destruct;
- (void)_clearTriggerCandidate;
- (void)_didDetectKeywordFromDeviceId:(id)arg1 activationInfo:(id)arg2 completion:(id /* block */)arg3;
- (bool)_handleJarvisVoiceTriggerFromDeviceId:(id)arg1 activationInfo:(id)arg2 error:(id*)arg3;
- (void)_notifyJarvisVoiceTriggerReject;
- (void)_reportJarvisVoiceTriggerFire;
- (void)_reset;
- (void)_setAsset:(id)arg1;
- (void)activationEventNotifier:(id)arg1 event:(id)arg2 completion:(id /* block */)arg3;
- (unsigned long long)activeChannel;
- (id)audioFileWriter;
- (id)currentAsset;
- (id)delegate;
- (id)deviceId;
- (unsigned long long)earlyDetectFiredMachTime;
- (id)endpointAnalyzer;
- (bool)hasReceivedNDEAPIResult;
- (bool)hasTriggerCandidate;
- (id)initWithManager:(id)arg1 asset:(id)arg2;
- (id)jarvisTriggerResult;
- (unsigned long long)jarvisVoiceTriggerTimeout;
- (id)keywordAnalyzerNDEAPI;
- (void)keywordAnalyzerNDEAPI:(id)arg1 hasResultAvailable:(id)arg2 forChannel:(unsigned long long)arg3;
- (unsigned long long)numProcessedSamples;
- (id)queue;
- (void)reset;
- (id)rtModel;
- (void)setActiveChannel:(unsigned long long)arg1;
- (void)setAsset:(id)arg1;
- (void)setAudioFileWriter:(id)arg1;
- (void)setCurrentAsset:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeviceId:(id)arg1;
- (void)setEarlyDetectFiredMachTime:(unsigned long long)arg1;
- (void)setEndpointAnalyzer:(id)arg1;
- (void)setHasReceivedNDEAPIResult:(bool)arg1;
- (void)setHasTriggerCandidate:(bool)arg1;
- (void)setJarvisTriggerResult:(id)arg1;
- (void)setJarvisVoiceTriggerTimeout:(unsigned long long)arg1;
- (void)setKeywordAnalyzerNDEAPI:(id)arg1;
- (void)setNumProcessedSamples:(unsigned long long)arg1;
- (void)setQueue:(id)arg1;
- (void)setRtModel:(id)arg1;
- (void)setSpeechManager:(id)arg1;
- (id)speechManager;
- (void)speechManagerDidStartForwarding:(id)arg1 successfully:(bool)arg2 error:(id)arg3;
- (void)speechManagerDidStopForwarding:(id)arg1 forReason:(long long)arg2;
- (void)speechManagerLPCMRecordBufferAvailable:(id)arg1 chunk:(id)arg2;
- (void)speechManagerRecordBufferAvailable:(id)arg1 buffer:(id)arg2;
- (void)spgEndpointAnalyzerDidDetectEndpoint:(id)arg1;

@end
