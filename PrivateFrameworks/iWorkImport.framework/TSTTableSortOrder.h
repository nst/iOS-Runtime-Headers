/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSTTableSortOrder : NSObject <NSCopying> {
    NSIndexSet * _cachedIndexes;
    NSArray * _rules;
    int  _type;
}

@property (nonatomic, readonly) NSIndexSet *baseColumnIndices;
@property (nonatomic, retain) NSIndexSet *cachedIndexes;
@property (nonatomic, readonly) bool empty;
@property (nonatomic, readonly) unsigned long long ruleCount;
@property (nonatomic, readonly) NSArray *rules;
@property (nonatomic, readonly) int type;

+ (id)sortOrderWithBaseColumn:(struct TSUModelColumnIndex { unsigned short x1; })arg1 direction:(int)arg2 type:(int)arg3;
+ (id)sortOrderWithRules:(id)arg1 type:(int)arg2;

- (void).cxx_destruct;
- (id)baseColumnIndices;
- (id)cachedIndexes;
- (bool)containsAnyRulesInBaseColumns:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)empty;
- (void)encodeToArchive:(struct TableSortOrderArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_4_1_1; } x4; struct RepeatedPtrField<TST::TableSortOrderArchive_SortRuleArchive> { struct Arena {} *x_5_1_1; int x_5_1_2; int x_5_1_3; struct Rep {} *x_5_1_4; } x5; int x6; }*)arg1;
- (unsigned long long)hash;
- (id)initFromArchive:(const struct TableSortOrderArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_4_1_1; } x4; struct RepeatedPtrField<TST::TableSortOrderArchive_SortRuleArchive> { struct Arena {} *x_5_1_1; int x_5_1_2; int x_5_1_3; struct Rep {} *x_5_1_4; } x5; int x6; }*)arg1;
- (id)initWithRules:(id)arg1 type:(int)arg2;
- (bool)isEqual:(id)arg1;
- (unsigned long long)ruleCount;
- (id)rules;
- (void)setCachedIndexes:(id)arg1;
- (id)sortOrderByAddingRule:(id)arg1;
- (id)sortOrderByChangingTypeTo:(int)arg1;
- (id)sortOrderByRemovingBaseColumnIndices:(id)arg1;
- (id)sortOrderByRemovingRuleAtIndex:(unsigned long long)arg1;
- (id)sortOrderByReplacingRuleAtIndex:(unsigned long long)arg1 withRule:(id)arg2;
- (id)sortOrderByReplacingRulesWithRules:(id)arg1;
- (int)type;

@end
