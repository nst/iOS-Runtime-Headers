/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI
 */

@interface PUUserTransformView : UIView <UIScrollViewDelegate> {
    struct CGPoint { 
        double x; 
        double y; 
    }  __contentCenter;
    double  __contentZoomScale;
    double  __desiredZoomScale;
    CADisplayLink * __displayLink;
    double  __doubleTapZoomScale;
    bool  __isAnimatingZoomEnd;
    bool  __isContentAnimating;
    bool  __isUpdatingState;
    bool  __isUserDeceleratingPan;
    bool  __isUserEndingZoom;
    bool  __isUserPanning;
    bool  __isUserPanningOrDecelerating;
    bool  __isUserZooming;
    bool  __isUserZoomingOrBouncing;
    bool  __needsUpdateAnimatingZoomEnd;
    bool  __needsUpdateContentState;
    bool  __needsUpdateScrollView;
    bool  __needsUpdateShouldTrackContentAnimation;
    bool  __needsUpdateUserAffineTransform;
    bool  __needsUpdateUserInteracting;
    bool  __needsUpdateUserPanningOrDecelerating;
    bool  __needsUpdateUserZoomingOrBouncing;
    bool  __needsUpdateZoomAndScroll;
    long long  __numberOfNestedStateChanges;
    long long  __numberOfNestedZoomAndScrollChanges;
    double  __preferredMaximumZoomScale;
    double  __preferredMinimumZoomScale;
    UIView * __scrollContentView;
    UIScrollView * __scrollView;
    bool  __shouldTrackContentAnimation;
    bool  __updatingScrollView;
    bool  __wasUserInteractingBeforeStateUpdate;
    struct CGSize { 
        double width; 
        double height; 
    }  _contentPixelSize;
    UIImage * _debugScrollViewContentImage;
    <PUUserTransformViewDelegate> * _delegate;
    struct { 
        bool respondsToShouldReceiveTouchAtPoint; 
        bool respondsToDidChangeIsUserInteracting; 
    }  _delegateFlags;
    unsigned long long  _enabledInteractions;
    bool  _isUserInteracting;
    struct CGSize { 
        double width; 
        double height; 
    }  _scrollPadding;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _untransformedContentFrame;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _userAffineTransform;
}

@property (setter=_setContentCenter:, nonatomic) struct CGPoint { double x1; double x2; } _contentCenter;
@property (setter=_setContentZoomScale:, nonatomic) double _contentZoomScale;
@property (setter=_setDesiredZoomScale:, nonatomic) double _desiredZoomScale;
@property (setter=_setDisplayLink:, nonatomic, retain) CADisplayLink *_displayLink;
@property (setter=_setDoubleTapZoomScale:, nonatomic) double _doubleTapZoomScale;
@property (setter=_setAnimatingZoomEnd:, nonatomic) bool _isAnimatingZoomEnd;
@property (setter=_setContentAnimating:, nonatomic) bool _isContentAnimating;
@property (setter=_setUpdatingState:, nonatomic) bool _isUpdatingState;
@property (setter=_setUserDeceleratingPan:, nonatomic) bool _isUserDeceleratingPan;
@property (setter=_setUserEndingZoom:, nonatomic) bool _isUserEndingZoom;
@property (setter=_setUserPanning:, nonatomic) bool _isUserPanning;
@property (setter=_setUserPanningOrDecelerating:, nonatomic) bool _isUserPanningOrDecelerating;
@property (setter=_setUserZooming:, nonatomic) bool _isUserZooming;
@property (setter=_setUserZoomingOrBouncing:, nonatomic) bool _isUserZoomingOrBouncing;
@property (setter=_setNeedsUpdateAnimatingZoomEnd:, nonatomic) bool _needsUpdateAnimatingZoomEnd;
@property (setter=_setNeedsUpdateContentState:, nonatomic) bool _needsUpdateContentState;
@property (setter=_setNeedsUpdateScrollView:, nonatomic) bool _needsUpdateScrollView;
@property (setter=_setNeedsUpdateShouldTrackContentAnimation:, nonatomic) bool _needsUpdateShouldTrackContentAnimation;
@property (setter=_setNeedsUpdateUserAffineTransform:, nonatomic) bool _needsUpdateUserAffineTransform;
@property (setter=_setNeedsUpdateUserInteracting:, nonatomic) bool _needsUpdateUserInteracting;
@property (setter=_setNeedsUpdateUserPanningOrDecelerating:, nonatomic) bool _needsUpdateUserPanningOrDecelerating;
@property (setter=_setNeedsUpdateUserZoomingOrBouncing:, nonatomic) bool _needsUpdateUserZoomingOrBouncing;
@property (setter=_setNeedsUpdateZoomAndScroll:, nonatomic) bool _needsUpdateZoomAndScroll;
@property (setter=_setNumberOfNestedStateChanges:, nonatomic) long long _numberOfNestedStateChanges;
@property (setter=_setNumberOfNestedZoomAndScrollChanges:, nonatomic) long long _numberOfNestedZoomAndScrollChanges;
@property (setter=_setPreferredMaximumZoomScale:, nonatomic) double _preferredMaximumZoomScale;
@property (setter=_setPreferredMinimumZoomScale:, nonatomic) double _preferredMinimumZoomScale;
@property (nonatomic, readonly) UIView *_scrollContentView;
@property (nonatomic, readonly) UIScrollView *_scrollView;
@property (setter=_setShouldTrackContentAnimation:, nonatomic) bool _shouldTrackContentAnimation;
@property (getter=_isUpdatingScrollView, setter=_setUpdatingScrollView:, nonatomic) bool _updatingScrollView;
@property (setter=_setWasUserInteractingBeforeStateUpdate:, nonatomic) bool _wasUserInteractingBeforeStateUpdate;
@property (nonatomic) struct CGSize { double x1; double x2; } contentPixelSize;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) UIImage *debugScrollViewContentImage;
@property (nonatomic) <PUUserTransformViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) unsigned long long enabledInteractions;
@property (readonly) unsigned long long hash;
@property (setter=_setUserInteracting:, nonatomic) bool isUserInteracting;
@property (nonatomic) struct CGSize { double x1; double x2; } scrollPadding;
@property (readonly) Class superclass;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } untransformedContentFrame;
@property (nonatomic) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } userAffineTransform;

- (void).cxx_destruct;
- (void)_assertInsideStateChangeBlock;
- (void)_assertInsideStateUpdate;
- (void)_assertInsideZoomAndScrollChangeBlock;
- (struct CGPoint { double x1; double x2; })_contentCenter;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_contentInsetsForContentScale:(double)arg1;
- (struct CGPoint { double x1; double x2; })_contentOffsetAdjustmentForContentInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (double)_contentZoomScale;
- (double)_desiredZoomScale;
- (void)_didChangeState;
- (id)_displayLink;
- (double)_doubleTapZoomScale;
- (void)_handleDisplayLink:(id)arg1;
- (void)_invalidateAnimatingZoomEnd;
- (void)_invalidateContentState;
- (void)_invalidateScrollView;
- (void)_invalidateShouldTrackContentAnimation;
- (void)_invalidateUserAffineTransform;
- (void)_invalidateUserInteracting;
- (void)_invalidateUserPanningOrDecelerating;
- (void)_invalidateUserZoomingOrBouncing;
- (void)_invalidateZoomAndScroll;
- (bool)_isAnimatingZoomEnd;
- (bool)_isContentAnimating;
- (bool)_isUpdatingScrollView;
- (bool)_isUpdatingState;
- (bool)_isUserDeceleratingPan;
- (bool)_isUserEndingZoom;
- (bool)_isUserPanning;
- (bool)_isUserPanningOrDecelerating;
- (bool)_isUserZooming;
- (bool)_isUserZoomingOrBouncing;
- (bool)_needsStateUpdate;
- (bool)_needsUpdateAnimatingZoomEnd;
- (bool)_needsUpdateContentState;
- (bool)_needsUpdateScrollView;
- (bool)_needsUpdateShouldTrackContentAnimation;
- (bool)_needsUpdateUserAffineTransform;
- (bool)_needsUpdateUserInteracting;
- (bool)_needsUpdateUserPanningOrDecelerating;
- (bool)_needsUpdateUserZoomingOrBouncing;
- (bool)_needsUpdateZoomAndScroll;
- (long long)_numberOfNestedStateChanges;
- (long long)_numberOfNestedZoomAndScrollChanges;
- (void)_performStateChanges:(id /* block */)arg1;
- (void)_performZoomAndScrollChanges:(id /* block */)arg1;
- (double)_preferredMaximumZoomScale;
- (double)_preferredMinimumZoomScale;
- (id)_scrollContentView;
- (id)_scrollView;
- (void)_setAnimatingZoomEnd:(bool)arg1;
- (void)_setContentAnimating:(bool)arg1;
- (void)_setContentCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)_setContentZoomScale:(double)arg1;
- (void)_setDesiredZoomScale:(double)arg1;
- (void)_setDisplayLink:(id)arg1;
- (void)_setDoubleTapZoomScale:(double)arg1;
- (void)_setEnabledInteractions:(unsigned long long)arg1;
- (void)_setNeedsStateUpdate;
- (void)_setNeedsUpdateAnimatingZoomEnd:(bool)arg1;
- (void)_setNeedsUpdateContentState:(bool)arg1;
- (void)_setNeedsUpdateScrollView:(bool)arg1;
- (void)_setNeedsUpdateShouldTrackContentAnimation:(bool)arg1;
- (void)_setNeedsUpdateUserAffineTransform:(bool)arg1;
- (void)_setNeedsUpdateUserInteracting:(bool)arg1;
- (void)_setNeedsUpdateUserPanningOrDecelerating:(bool)arg1;
- (void)_setNeedsUpdateUserZoomingOrBouncing:(bool)arg1;
- (void)_setNeedsUpdateZoomAndScroll:(bool)arg1;
- (void)_setNumberOfNestedStateChanges:(long long)arg1;
- (void)_setNumberOfNestedZoomAndScrollChanges:(long long)arg1;
- (void)_setPreferredMaximumZoomScale:(double)arg1;
- (void)_setPreferredMinimumZoomScale:(double)arg1;
- (void)_setShouldTrackContentAnimation:(bool)arg1;
- (void)_setUpdatingScrollView:(bool)arg1;
- (void)_setUpdatingState:(bool)arg1;
- (void)_setUserAffineTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)_setUserDeceleratingPan:(bool)arg1;
- (void)_setUserEndingZoom:(bool)arg1;
- (void)_setUserInteracting:(bool)arg1;
- (void)_setUserPanning:(bool)arg1;
- (void)_setUserPanningOrDecelerating:(bool)arg1;
- (void)_setUserZooming:(bool)arg1;
- (void)_setUserZoomingOrBouncing:(bool)arg1;
- (void)_setWasUserInteractingBeforeStateUpdate:(bool)arg1;
- (bool)_shouldTrackContentAnimation;
- (void)_updateAnimatingZoomEndIfNeeded;
- (void)_updateContentStateIfNeeded;
- (void)_updateDisplayLink;
- (void)_updateScrollViewIfNeeded;
- (void)_updateShouldTrackContentAnimationIfNeeded;
- (void)_updateStateIfNeeded;
- (void)_updateUserAffineTransformIfNeeded;
- (void)_updateUserInteractingIfNeeded;
- (void)_updateUserPanningOrDeceleratingIfNeeded;
- (void)_updateUserZoomingOrBouncingIfNeeded;
- (void)_updateZoomAndScrollIfNeeded;
- (bool)_wasUserInteractingBeforeStateUpdate;
- (void)_willChangeState;
- (bool)contentContainsLocationFromProvider:(id)arg1;
- (struct CGSize { double x1; double x2; })contentPixelSize;
- (id)debugScrollViewContentImage;
- (id)delegate;
- (unsigned long long)enabledInteractions;
- (void)handleDoubleTapWithLocationProvider:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isUserInteracting;
- (void)layoutSubviews;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (struct CGSize { double x1; double x2; })scrollPadding;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidZoom:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (void)setContentPixelSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setDebugScrollViewContentImage:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEnabledInteractions:(unsigned long long)arg1;
- (void)setScrollPadding:(struct CGSize { double x1; double x2; })arg1;
- (void)setUntransformedContentFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setUserAffineTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })untransformedContentFrame;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })userAffineTransform;
- (id)viewForZoomingInScrollView:(id)arg1;

@end
