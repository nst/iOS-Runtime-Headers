/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Accessibility.framework/Frameworks/AXHearingSupport.framework/AXHearingSupport
 */

@interface AXHearingSlaveController : AXIDCSlaveController <AXHARemoteControllerProtocol, AXHARemoteUpdateProtocol, NSNetServiceDelegate> {
    AXDispatchTimer * _communicationTimer;
    AXRemoteHearingAidDevice * _localDevice;
    bool  didValidateHIID;
}

@property (nonatomic, retain) AXDispatchTimer *communicationTimer;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didValidateHIID;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) AXRemoteHearingAidDevice *localDevice;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)communicationTimer;
- (void)dealloc;
- (id)device;
- (void)didCommunicate;
- (bool)didValidateHIID;
- (id)init;
- (id)localDevice;
- (void)netService:(id)arg1 didNotPublish:(id)arg2;
- (void)netServiceDidPublish:(id)arg1;
- (void)netServiceDidStop:(id)arg1;
- (void)netServiceWillPublish:(id)arg1;
- (void)openConnectionIfNecessary;
- (void)receivedData:(id)arg1;
- (void)resetConnection;
- (double)searchTimeout;
- (bool)sendObject:(id)arg1 withSendCompletion:(id /* block */)arg2;
- (void)setCommunicationTimer:(id)arg1;
- (void)setDidValidateHIID:(bool)arg1;
- (void)setLocalDevice:(id)arg1;
- (bool)shouldAcceptConnection;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)updateProperty:(unsigned long long)arg1 forDeviceID:(id)arg2;
- (void)validatePairedAid;
- (void)writeValue:(id)arg1 forProperty:(unsigned long long)arg2 forDeviceID:(id)arg3;

@end
