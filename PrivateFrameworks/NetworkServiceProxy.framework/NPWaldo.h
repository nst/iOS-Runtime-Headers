/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy
 */

@interface NPWaldo : NSObject <NSCopying, NSSecureCoding> {
    NSNumber * _TFOLeeway;
    NSPNetworkAgent * _agent;
    NWNetworkAgentRegistration * _agentRegistration;
    NSArray * _allOnRamps;
    NPLocation * _cachedLocation;
    NSUUID * _configurationIdentifier;
    NSNumber * _connectionIdleTimeoutMaximum;
    long long  _currentEdgeIndex;
    NSArray * _currentEdges;
    NSDictionary * _currentNetworkCharacteristics;
    NSNumber * _dayPassEnableSessionTicket;
    NSNumber * _dayPassExtendedValidation;
    NSString * _dayPassHostname;
    NSNumber * _dayPassHostnamePrependLabel;
    NSString * _dayPassLeafOID;
    NSNumber * _dayPassPort;
    NSNumber * _dayPassRequestTimeout;
    NSNumber * _dayPassRevocationFailClosed;
    NSArray * _dayPassSoftExpiry;
    bool  _daypassRefreshInProgress;
    NPWaldo * _defaults;
    <NPWaldoDelegate> * _delegate;
    NSNumber * _edgeFairnessFactor;
    NSNumber * _edgeSelectionAlpha;
    NSNumber * _edgeSelectionEnabled;
    NSNumber * _edgeSelectionWindowSize;
    NSArray * _edges;
    NSNumber * _edgesGeneration;
    NSNumber * _enableIPv6;
    NSNumber * _enableLatencyDerivation;
    unsigned int  _generation;
    NSString * _hostname;
    NSString * _identifier;
    NSNumber * _latencyFactorA;
    NSNumber * _latencyFactorB;
    NSNumber * _latencyFactorX;
    NSNumber * _locationCheckInterval;
    NSDate * _locationCheckTimestamp;
    NSDate * _locationExpiration;
    NPWaldoLocationManager * _locationManager;
    NSNumber * _locationTTL;
    NSNumber * _locationToleranceDistance;
    NSMutableDictionary * _networkInformation;
    NPTuscanyEdge * _nextEdge;
    NSNumber * _observedRTTSampleSize;
    NSNumber * _probeNoTFOCookie;
    NSNumber * _probePause;
    NSNumber * _probeTFO;
    NSNumber * _probeTimeout;
    NSNumber * _probeUseTFOHeuristics;
    bool  _reprocessCancelled;
    bool  _reprocessPending;
    NSObject<OS_dispatch_queue> * _reprocessQueue;
    NSNumber * _reprocessSampleSize;
    NSNumber * _reprocessSamplingInterval;
    NSObject<OS_dispatch_source> * _reprocessSamplingTimer;
    NSNumber * _requireTFO;
    NSNumber * _retryPause;
    bool  _shouldSave;
    NSNumber * _signatureLimit;
    long long  _source;
    NSString * _tag;
    NSString * _telemetryService;
    NSURL * _telemetryURL;
    NSNumber * _timestamp;
    NSNumber * _useGeohashFromServer;
    NSNumber * _usedEdgesGeneration;
    NSNumber * _version;
    NSNumber * _viewSize;
}

@property (copy) NSNumber *TFOLeeway;
@property (retain) NSPNetworkAgent *agent;
@property (retain) NWNetworkAgentRegistration *agentRegistration;
@property (retain) NSArray *allOnRamps;
@property (retain) NPLocation *cachedLocation;
@property (retain) NSUUID *configurationIdentifier;
@property (copy) NSNumber *connectionIdleTimeoutMaximum;
@property (readonly) NPTuscanyEdge *currentEdge;
@property long long currentEdgeIndex;
@property (readonly) NSArray *currentEdgeList;
@property (readonly) NSArray *currentEdges;
@property (readonly) NSDate *currentNetworkLastUsed;
@property (copy) NSNumber *dayPassEnableSessionTicket;
@property (copy) NSNumber *dayPassExtendedValidation;
@property (readonly) long long dayPassFetchCount;
@property (copy) NSString *dayPassHostname;
@property (copy) NSNumber *dayPassHostnamePrependLabel;
@property (copy) NSString *dayPassLeafOID;
@property (copy) NSNumber *dayPassPort;
@property (copy) NSNumber *dayPassRequestTimeout;
@property (copy) NSNumber *dayPassRevocationFailClosed;
@property (copy) NSArray *dayPassSoftExpiry;
@property bool daypassRefreshInProgress;
@property (retain) NPWaldo *defaults;
@property <NPWaldoDelegate> *delegate;
@property (readonly) unsigned long long edgeCount;
@property (copy) NSNumber *edgeFairnessFactor;
@property (copy) NSNumber *edgeSelectionAlpha;
@property (copy) NSNumber *edgeSelectionEnabled;
@property (copy) NSNumber *edgeSelectionWindowSize;
@property (copy) NSArray *edges;
@property (copy) NSNumber *edgesGeneration;
@property (copy) NSNumber *enableIPv6;
@property (copy) NSNumber *enableLatencyDerivation;
@property (readonly) NSDate *expirationDate;
@property unsigned int generation;
@property (readonly) bool hasEdges;
@property (retain) NSString *hostname;
@property (readonly) NSString *identifier;
@property (readonly) bool isIPv6Enabled;
@property (readonly) id /* block */ latencyComparator;
@property (copy) NSNumber *latencyFactorA;
@property (copy) NSNumber *latencyFactorB;
@property (copy) NSNumber *latencyFactorX;
@property (copy) NSNumber *locationCheckInterval;
@property (retain) NSDate *locationCheckTimestamp;
@property (retain) NSDate *locationExpiration;
@property (retain) NPWaldoLocationManager *locationManager;
@property (copy) NSNumber *locationTTL;
@property (copy) NSNumber *locationToleranceDistance;
@property (retain) NSMutableDictionary *networkInformation;
@property (readonly) NPTuscanyEdge *nextEdge;
@property (copy) NSNumber *observedRTTSampleSize;
@property (copy) NSNumber *probeNoTFOCookie;
@property (copy) NSNumber *probePause;
@property (readonly) unsigned long long probeSize;
@property (copy) NSNumber *probeTFO;
@property (copy) NSNumber *probeTimeout;
@property (copy) NSNumber *probeUseTFOHeuristics;
@property bool reprocessCancelled;
@property bool reprocessPending;
@property (readonly) NSObject<OS_dispatch_queue> *reprocessQueue;
@property (copy) NSNumber *reprocessSampleSize;
@property (copy) NSNumber *reprocessSamplingInterval;
@property (retain) NSObject<OS_dispatch_source> *reprocessSamplingTimer;
@property (copy) NSNumber *requireTFO;
@property (copy) NSNumber *retryPause;
@property bool shouldSave;
@property (copy) NSNumber *signatureLimit;
@property (readonly) long long source;
@property (copy) NSString *tag;
@property (copy) NSString *telemetryService;
@property (copy) NSURL *telemetryURL;
@property (copy) NSNumber *timestamp;
@property (copy) NSNumber *useGeohashFromServer;
@property (copy) NSNumber *usedEdgesGeneration;
@property (copy) NSNumber *version;
@property (copy) NSNumber *viewSize;

+ (id)createEndpointFromHostList:(id)arg1 defaultPortString:(id)arg2 allowIPv6:(bool)arg3;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)TFOLeeway;
- (void)ageOutLatencyMap;
- (id)agent;
- (id)agentRegistration;
- (id)allOnRamps;
- (id)cachedLocation;
- (void)cancelProbes;
- (void)cleanupStaleKeys;
- (id)configurationIdentifier;
- (id)connectionIdleTimeoutMaximum;
- (id)copyEdgeList:(id)arg1;
- (id)copyEdgeListRTTAverage:(id)arg1 observed:(bool)arg2 shortDescription:(bool)arg3;
- (id)copyEdgeSelectionTelemetry;
- (id)copyLatencyInfoDictionary:(bool)arg1 copyAll:(bool)arg2;
- (id)copyStateIncludeDistance:(bool)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)createEdgeLatenciesToProbeWithEdgeIndex:(unsigned long long)arg1 startSampleCount:(unsigned long long*)arg2;
- (id)currentEdge;
- (long long)currentEdgeIndex;
- (id)currentEdgeList;
- (id)currentEdges;
- (id)currentNetworkInfo;
- (id)currentNetworkLastUsed;
- (id)dayPassEnableSessionTicket;
- (id)dayPassExtendedValidation;
- (long long)dayPassFetchCount;
- (id)dayPassHostname;
- (id)dayPassHostnamePrependLabel;
- (id)dayPassLeafOID;
- (id)dayPassPort;
- (id)dayPassRequestTimeout;
- (id)dayPassRevocationFailClosed;
- (id)dayPassSoftExpiry;
- (bool)daypassRefreshInProgress;
- (id)defaults;
- (id)delegate;
- (id)description;
- (id)edgeAtIndex:(long long)arg1;
- (id)edgeContainingOnRamp:(id)arg1;
- (unsigned long long)edgeCount;
- (id)edgeFairnessFactor;
- (id)edgeSelectionAlpha;
- (id)edgeSelectionEnabled;
- (id)edgeSelectionWindowSize;
- (id)edges;
- (id)edgesGeneration;
- (id)enableIPv6;
- (id)enableLatencyDerivation;
- (void)encodeWithCoder:(id)arg1;
- (void)establishTrustWithCompletionHandler:(id /* block */)arg1;
- (id)expirationDate;
- (unsigned int)generation;
- (long long)getCurrentNetworkInterfaceType;
- (void)getDayPassRTT;
- (unsigned int)getFailureReasonForLatencies:(id)arg1;
- (void)handleKeyUsageUpdate:(id)arg1 appData:(id)arg2;
- (bool)hasEdges;
- (id)hostname;
- (id)identifier;
- (long long)indexOfBestEdge;
- (id)init;
- (id)initFromKeychainWithIdentifier:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 timestamp:(id)arg2 fromDictionary:(id)arg3 source:(long long)arg4;
- (void)initializeEdgeSelection;
- (bool)isEndpointProbed:(id)arg1 parameters:(struct networkParameters { bool x1; bool x2; bool x3; }*)arg2 latencies:(id)arg3 checkSampleSize:(bool)arg4 incompleteLatency:(id*)arg5;
- (bool)isIPv6Enabled;
- (bool)isLatenciesCompleteForNetwork:(id)arg1;
- (id /* block */)latencyComparator;
- (id)latencyFactorA;
- (id)latencyFactorB;
- (id)latencyFactorX;
- (void)link;
- (void)linkLatencies;
- (void)loadObservedRTTSamples:(id)arg1;
- (id)locationCheckInterval;
- (id)locationCheckTimestamp;
- (id)locationExpiration;
- (id)locationManager;
- (id)locationTTL;
- (id)locationToleranceDistance;
- (void)logEdgeList:(id)arg1 debug:(bool)arg2 toStdout:(bool)arg3;
- (void)logLatencyInfoToStdout:(bool)arg1 logAll:(bool)arg2 logEdgeSelection:(bool)arg3;
- (void)merge:(id)arg1 missingSettingsOnly:(bool)arg2;
- (void)mergeEdgeList:(id)arg1 forNetworkSignature:(id)arg2;
- (id)networkInformation;
- (id)nextEdge;
- (id)observedRTTSampleSize;
- (id)onRampForIndex:(id)arg1;
- (id)probeNoTFOCookie;
- (id)probePause;
- (unsigned long long)probeSize;
- (id)probeTFO;
- (id)probeTimeout;
- (id)probeUseTFOHeuristics;
- (bool)pushCurrentDayPassesToKernelUpdateGeneration:(bool)arg1;
- (void)rebuildLatencyMapAllSignatures:(bool)arg1;
- (void)refreshDayPassesWithCompletionHandler:(id /* block */)arg1;
- (void)removeDayPassesFromKernel;
- (void)removeFromKeychain;
- (void)reprocessAdHocWithEdgeIndex:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (bool)reprocessCancelled;
- (void)reprocessEdgeAtIndex:(unsigned long long)arg1 networkSignature:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)reprocessLatencies:(id)arg1 sampleCount:(unsigned long long)arg2 completionHandler:(id /* block */)arg3;
- (bool)reprocessPending;
- (id)reprocessQueue;
- (id)reprocessSampleSize;
- (id)reprocessSamplingInterval;
- (id)reprocessSamplingTimer;
- (void)reprocessWithCompletionHandler:(id /* block */)arg1;
- (bool)reprocessWithNewRTT:(unsigned long long)arg1 reProbe:(bool*)arg2;
- (id)requireTFO;
- (void)resolveWithCompletionHandler:(id /* block */)arg1;
- (void)resortEdgeListForCurrentNetworkSignature;
- (id)retryPause;
- (void)saveToKeychain;
- (void)setAgent:(id)arg1;
- (void)setAgentRegistration:(id)arg1;
- (void)setAllOnRamps:(id)arg1;
- (void)setCachedLocation:(id)arg1;
- (void)setConfigurationIdentifier:(id)arg1;
- (void)setConnectionIdleTimeoutMaximum:(id)arg1;
- (void)setCurrentEdgeIndex:(long long)arg1;
- (void)setCurrentNetworkCharacteristics:(id)arg1;
- (void)setDayPassEnableSessionTicket:(id)arg1;
- (void)setDayPassExtendedValidation:(id)arg1;
- (void)setDayPassHostname:(id)arg1;
- (void)setDayPassHostnamePrependLabel:(id)arg1;
- (void)setDayPassLeafOID:(id)arg1;
- (void)setDayPassPort:(id)arg1;
- (void)setDayPassRequestTimeout:(id)arg1;
- (void)setDayPassRevocationFailClosed:(id)arg1;
- (void)setDayPassSoftExpiry:(id)arg1;
- (void)setDaypassRefreshInProgress:(bool)arg1;
- (void)setDefaults:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEdgeFairnessFactor:(id)arg1;
- (void)setEdgeSelectionAlpha:(id)arg1;
- (void)setEdgeSelectionEnabled:(id)arg1;
- (void)setEdgeSelectionWindowSize:(id)arg1;
- (void)setEdges:(id)arg1;
- (void)setEdgesGeneration:(id)arg1;
- (void)setEnableIPv6:(id)arg1;
- (void)setEnableLatencyDerivation:(id)arg1;
- (void)setGeneration:(unsigned int)arg1;
- (void)setHostname:(id)arg1;
- (void)setLatencyFactorA:(id)arg1;
- (void)setLatencyFactorB:(id)arg1;
- (void)setLatencyFactorX:(id)arg1;
- (void)setLocationCheckInterval:(id)arg1;
- (void)setLocationCheckTimestamp:(id)arg1;
- (void)setLocationExpiration:(id)arg1;
- (void)setLocationManager:(id)arg1;
- (void)setLocationTTL:(id)arg1;
- (void)setLocationToleranceDistance:(id)arg1;
- (void)setNetworkInformation:(id)arg1;
- (void)setObservedRTTSampleSize:(id)arg1;
- (void)setProbeNoTFOCookie:(id)arg1;
- (void)setProbePause:(id)arg1;
- (void)setProbeTFO:(id)arg1;
- (void)setProbeTimeout:(id)arg1;
- (void)setProbeUseTFOHeuristics:(id)arg1;
- (void)setReprocessCancelled:(bool)arg1;
- (void)setReprocessPending:(bool)arg1;
- (void)setReprocessSampleSize:(id)arg1;
- (void)setReprocessSamplingInterval:(id)arg1;
- (void)setReprocessSamplingTimer:(id)arg1;
- (void)setRequireTFO:(id)arg1;
- (void)setRetryPause:(id)arg1;
- (void)setShouldSave:(bool)arg1;
- (void)setSignatureLimit:(id)arg1;
- (void)setTFOLeeway:(id)arg1;
- (void)setTag:(id)arg1;
- (void)setTelemetryService:(id)arg1;
- (void)setTelemetryURL:(id)arg1;
- (void)setTimestamp:(id)arg1;
- (void)setUseGeohashFromServer:(id)arg1;
- (void)setUsedEdgesGeneration:(id)arg1;
- (void)setVersion:(id)arg1;
- (void)setViewSize:(id)arg1;
- (bool)shouldFetchWaldo;
- (bool)shouldPerformDayPassRefresh;
- (bool)shouldSave;
- (id)signatureLimit;
- (long long)source;
- (void)startProbingEdges:(id)arg1 atIndex:(unsigned long long)arg2 doneCount:(unsigned long long)arg3 sampleCount:(unsigned long long)arg4 completionHandler:(id /* block */)arg5;
- (id)tag;
- (void)teardownNetworkAgent;
- (id)telemetryService;
- (id)telemetryURL;
- (id)timestamp;
- (void)timestampNetworkSignature:(id)arg1;
- (void)unresolve;
- (void)updateEdgeSelection:(unsigned long long)arg1;
- (void)updateMetaDataNeedProbe:(bool)arg1 refresh:(bool)arg2 push:(bool)arg3 minRTT:(unsigned long long)arg4;
- (bool)updateNetworkAgentWithKeybagData:(id)arg1;
- (void)updateWithAppData:(id)arg1;
- (id)useGeohashFromServer;
- (id)usedEdgesGeneration;
- (bool)validateEdgeList:(id)arg1;
- (id)version;
- (id)viewSize;

@end
