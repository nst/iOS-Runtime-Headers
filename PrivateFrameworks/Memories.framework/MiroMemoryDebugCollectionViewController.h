/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories
 */

@interface MiroMemoryDebugCollectionViewController : UICollectionViewController <MiroMemoryDebugCollectionViewControllerProtocol, UIAlertViewDelegate> {
    UIAlertView * _alertView;
    MiroAutoEditController * _autoEditController;
    bool  _cancelled;
    PHFetchResult * _curatedAssets;
    unsigned long long  _currentSortType;
    <MiroMemoryDebugCollectionViewControllerDelegate> * _delegate;
    bool  _hackReuseCell;
    bool  _isSaveMode;
    MiroMemory * _memory;
    MiroMovie * _miroMovie;
    UIProgressView * _progressView;
    Project * _project;
    NSMutableDictionary * _projectMoodNamedTransitions;
    UIBarButtonItem * _sortBarButton;
    NSArray * _sortTitles;
    bool  _syncPreview;
    UIView * _textContainerView;
    bool  _textOnly;
}

@property (nonatomic, retain) UIAlertView *alertView;
@property (nonatomic, retain) MiroAutoEditController *autoEditController;
@property bool cancelled;
@property (nonatomic, retain) PHFetchResult *curatedAssets;
@property (nonatomic) unsigned long long currentSortType;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MiroMemoryDebugCollectionViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool hackReuseCell;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isSaveMode;
@property (retain) MiroMemory *memory;
@property (retain) MiroMovie *miroMovie;
@property (nonatomic, retain) UIProgressView *progressView;
@property (retain) Project *project;
@property (nonatomic, retain) NSMutableDictionary *projectMoodNamedTransitions;
@property (nonatomic) UIBarButtonItem *sortBarButton;
@property (nonatomic, retain) NSArray *sortTitles;
@property (readonly) Class superclass;
@property bool syncPreview;
@property (nonatomic, retain) UIView *textContainerView;
@property (nonatomic) bool textOnly;

- (void).cxx_destruct;
- (unsigned long long)_getCurrentCountOfItems;
- (id)alertView;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (id)autoEditController;
- (void)bringUpActions:(id)arg1;
- (void)bringUpSortOptions:(id)arg1;
- (bool)cancelled;
- (void)closeMemoryTransition:(id)arg1;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)createDebugGraphics;
- (id)createDebugPageWithInfoWithStartingIndex:(unsigned long long)arg1 andEndingIndex:(unsigned long long)arg2;
- (id)curatedAssets;
- (unsigned long long)currentSortType;
- (id)delegate;
- (void)didReceiveMemoryWarning;
- (void)done:(id)arg1;
- (void)drawImageInContext:(id)arg1 andFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)drawSeperatingBorderInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withColor:(id)arg2;
- (bool)hackReuseCell;
- (void)image:(id)arg1 didFinishSavingWithError:(id)arg2 contextInfo:(void*)arg3;
- (bool)isSaveMode;
- (id)logFeaturedPeopleInMemory;
- (id)makeEnhancedStringFromPlainOne:(id)arg1;
- (id)memory;
- (id)miroMovie;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (unsigned long long)numberRowsWithCurrentCount;
- (void)pickInfoAndAsset:(id*)arg1 asset:(id*)arg2 fromIndexPath:(id*)arg3;
- (void)presentAirDropControllerWithDebugString:(id)arg1;
- (void)presentAirdropControllerWithDebugImage:(id)arg1;
- (void)presentAirdropControllerWithDebugImageArray:(id)arg1;
- (void)presentModelImageViewWithImage:(id)arg1;
- (id)prettyTransitionNameFromID:(id)arg1 fromBlueprint:(id)arg2;
- (id)progressView;
- (id)project;
- (id)projectMoodNamedTransitions;
- (id)replaceEmojiWithPrintName:(id)arg1;
- (id)requestedSongString;
- (void)resetMemoryToCleanState:(id)arg1;
- (void)saveDebugPanelForMemory:(id)arg1;
- (void)setAlertView:(id)arg1;
- (void)setAutoEditController:(id)arg1;
- (void)setCancelled:(bool)arg1;
- (void)setCuratedAssets:(id)arg1;
- (void)setCurrentSortType:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHackReuseCell:(bool)arg1;
- (void)setIsSaveMode:(bool)arg1;
- (void)setMemory:(id)arg1;
- (void)setMiroMovie:(id)arg1;
- (void)setProgressView:(id)arg1;
- (void)setProject:(id)arg1;
- (void)setProjectMoodNamedTransitions:(id)arg1;
- (void)setSortBarButton:(id)arg1;
- (void)setSortTitles:(id)arg1;
- (void)setSyncPreview:(bool)arg1;
- (void)setTextContainerView:(id)arg1;
- (void)setTextOnly:(bool)arg1;
- (void)showMemoryTransitions;
- (void)showScoreLog;
- (void)showTextVersion;
- (void)showTextViewWith:(id)arg1;
- (id)sortBarButton;
- (id)sortTitles;
- (bool)syncPreview;
- (id)textContainerView;
- (bool)textOnly;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (void)writeTextToImageContextWithSize:(struct CGSize { double x1; double x2; })arg1;
- (void)writeTextToImageContextWithSize:(struct CGSize { double x1; double x2; })arg1 andCell:(id)arg2 andLocation:(struct CGPoint { double x1; double x2; })arg3;

@end
