/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraEffectsKit.framework/CameraEffectsKit
 */

@interface JTOverlayEffect : JTTextEffect {
    NSString * _accessibilityOverlayEffectLabel;
    JTTrackedEffectProperties * _trackingProps;
}

@property (nonatomic, copy) NSString *accessibilityOverlayEffectLabel;
@property (getter=isTailFlipped, nonatomic) bool flipTail;
@property (getter=isTextFlipped, nonatomic) bool flipText;
@property float opacity;
@property (nonatomic, retain) JTTrackedEffectProperties *trackingProps;

+ (id)effectIDToImageSequenceIDMap;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })JT_convertBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 relativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 basisOrigin:(int)arg3;
- (id)JT_convertTransform:(id)arg1 relativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 basisOrigin:(int)arg3;
- (id)accessibilityName;
- (id)accessibilityOverlayEffectLabel;
- (void)applyInverseOfTransformAnimation:(id)arg1 withComponentTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 relativeRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (void)applyScaleToFitFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withComponentTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 relativeRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (id)clipTransformAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 relativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 basisOrigin:(int)arg3;
- (struct CGPoint { double x1; double x2; })closeButtonInset;
- (id)copyOfOverlayWithFrameAt:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withClip:(id)arg2 relativeToRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 currentPlaybackTime:(int)arg4;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (double)customPickerRotation;
- (id)customPrimaryFillColor;
- (bool)enablePresentationState:(bool)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (struct CGPoint { double x1; double x2; })hitAreaScale;
- (bool)hitTest:(struct CGPoint { double x1; double x2; })arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 relativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 basisOrigin:(int)arg4;
- (bool)hitTestAtPosterFrameTime:(struct CGPoint { double x1; double x2; })arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 relativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 basisOrigin:(int)arg4;
- (bool)hitTestAtPosterFrameTime:(struct CGPoint { double x1; double x2; })arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 relativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 basisOrigin:(int)arg4 withMinimumOverlaySize:(struct CGSize { double x1; double x2; })arg5;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageFrame:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 atPosterFrameTimeRelativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 basisOrigin:(int)arg3 includeDropShadow:(bool)arg4;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageFrame:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 relativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 basisOrigin:(int)arg3 includeDropShadow:(bool)arg4;
- (void)imagePoints:(struct CGPoint { double x1; double x2; }*)arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 relativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 basisOrigin:(int)arg4 includeDropShadow:(bool)arg5;
- (void)imagePointsAtPosterFrameTime:(struct CGPoint { double x1; double x2; }*)arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 relativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 basisOrigin:(int)arg4 includeDropShadow:(bool)arg5;
- (bool)includeDropShadowWhenPositioningCloseButton;
- (id)initWithCoder:(id)arg1;
- (id)initWithEffectID:(id)arg1;
- (bool)isAppearanceEqual:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isTailFlipped;
- (bool)isTextFlipped;
- (unsigned long long)maxCharacters;
- (bool)objectBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 relativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 basisOrigin:(int)arg4 includeDropShadow:(bool)arg5 includeMasks:(bool)arg6;
- (bool)objectBoundsAtPosterFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 relativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 basisOrigin:(int)arg3 includeDropShadow:(bool)arg4 includeMasks:(bool)arg5;
- (id)objectTransformRelativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 basisOrigin:(int)arg2;
- (float)opacity;
- (double)pickerScale;
- (id)serializableEffectParameters;
- (void)setAccessibilityOverlayEffectLabel:(id)arg1;
- (void)setFlipTail:(bool)arg1;
- (void)setFlipText:(bool)arg1;
- (void)setForceRenderAtPosterFrame:(bool)arg1;
- (bool)setImageSequencePathToDownloadedAssets;
- (void)setOpacity:(float)arg1;
- (void)setRenderStartOffset:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setSingleLineScaleThreshold:(double)arg1;
- (void)setTrackingProps:(id)arg1;
- (void)setTransformAnimation:(id)arg1;
- (bool)supportsFlippingTail;
- (bool)supportsFlippingText;
- (id)trackingProps;
- (id)transformAtPosterFrame:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 relativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 basisOrigin:(int)arg3;
- (id)transformAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 relativeTo:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 basisOrigin:(int)arg3;
- (id)viewInfoForViewBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 includeDropShadow:(bool)arg3;
- (id)viewInfoForViewBoundsAtPosterFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 includeDropShadow:(bool)arg3;

@end
