/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVKit.framework/AVKit
 */

@interface AVTransportControlsView : AVView <AVPlaybackControlsViewItemAvailabilityObserver, AVScrubberDelegate> {
    AVBackdropView * _backdropView;
    bool  _backdropViewNeedsLayout;
    bool  _collapsed;
    <AVTransportControlsViewDelegate> * _delegate;
    NSArray * _doubleRowLayoutConstraints;
    bool  _doubleRowLayoutEnabled;
    AVLabel * _elapsedTimeLabel;
    struct CGSize { 
        double width; 
        double height; 
    }  _extrinsicContentSize;
    bool  _hasAlternateAppearance;
    bool  _hasFullScreenAppearance;
    bool  _included;
    AVLabel * _liveBroadcastLabel;
    AVLabel * _liveBroadcastScrubberLabel;
    bool  _liveStreamingControlsIncludeScrubber;
    AVButton * _mediaSelectionButton;
    double  _minimumRequiredWidth;
    AVPlaybackControlsRoutePickerView * _routePickerView;
    AVBackdropView * _scrubInstructionsBackdrop;
    UILabel * _scrubInstructionsBackdropLabel;
    UIView * _scrubInstructionsContainer;
    UILabel * _scrubInstructionsLabel;
    NSTimer * _scrubInstructionsTimer;
    AVScrubber * _scrubber;
    NSLayoutConstraint * _scrubberInstructionsDoubleRowActiveConstraint;
    float  _scrubberValueWhenScrubInstructionsTimerBegan;
    bool  _showsLiveStreamingControls;
    bool  _showsLoadingIndicator;
    NSArray * _singleRowViews;
    AVButton * _skipBackButton;
    AVButton * _skipForwardButton;
    AVButton * _standardPlayPauseButton;
    AVLabel * _timeRemainingLabel;
}

@property (nonatomic, readonly) AVBackdropView *backdropView;
@property (nonatomic) bool backdropViewNeedsLayout;
@property (getter=isCollapsed, nonatomic) bool collapsed;
@property (getter=isCollapsedOrExcluded, nonatomic, readonly) bool collapsedOrExcluded;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <AVTransportControlsViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSArray *doubleRowLayoutConstraints;
@property (getter=isDoubleRowLayoutEnabled, nonatomic) bool doubleRowLayoutEnabled;
@property (nonatomic, readonly) AVLabel *elapsedTimeLabel;
@property (nonatomic) struct CGSize { double x1; double x2; } extrinsicContentSize;
@property (nonatomic) bool hasAlternateAppearance;
@property (nonatomic) bool hasFullScreenAppearance;
@property (readonly) unsigned long long hash;
@property (getter=isIncluded, nonatomic) bool included;
@property (nonatomic, readonly) AVLabel *liveBroadcastLabel;
@property (nonatomic, readonly) AVLabel *liveBroadcastScrubberLabel;
@property (nonatomic) bool liveStreamingControlsIncludeScrubber;
@property (nonatomic, readonly) AVButton *mediaSelectionButton;
@property (nonatomic, readonly) double minimumRequiredWidth;
@property (nonatomic, readonly) AVPlaybackControlsRoutePickerView *routePickerView;
@property (nonatomic, retain) AVBackdropView *scrubInstructionsBackdrop;
@property (nonatomic, readonly) UILabel *scrubInstructionsBackdropLabel;
@property (nonatomic, readonly) UIView *scrubInstructionsContainer;
@property (nonatomic, readonly) UILabel *scrubInstructionsLabel;
@property (nonatomic) NSTimer *scrubInstructionsTimer;
@property (nonatomic, readonly) AVScrubber *scrubber;
@property (nonatomic, readonly) NSLayoutConstraint *scrubberInstructionsDoubleRowActiveConstraint;
@property (nonatomic) float scrubberValueWhenScrubInstructionsTimerBegan;
@property (nonatomic) bool showsLiveStreamingControls;
@property (nonatomic) bool showsLoadingIndicator;
@property (nonatomic, readonly) NSArray *singleRowViews;
@property (nonatomic, readonly) AVButton *skipBackButton;
@property (nonatomic, readonly) AVButton *skipForwardButton;
@property (nonatomic, readonly) AVButton *standardPlayPauseButton;
@property (readonly) Class superclass;
@property (nonatomic, readonly) AVLabel *timeRemainingLabel;

- (void).cxx_destruct;
- (void)_ensureLayoutConstraints;
- (id)_scrubInstructionsAttributedText;
- (void)_showScrubInstructions;
- (void)_updateFontSizes;
- (void)_updateScrubInstructionsLabelsText;
- (id)backdropView;
- (bool)backdropViewNeedsLayout;
- (void)beginScrubbing:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (id)doubleRowLayoutConstraints;
- (id)elapsedTimeLabel;
- (void)endScrubbing:(id)arg1;
- (struct CGSize { double x1; double x2; })extrinsicContentSize;
- (bool)hasAlternateAppearance;
- (bool)hasFullScreenAppearance;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (bool)isCollapsed;
- (bool)isCollapsedOrExcluded;
- (bool)isDoubleRowLayoutEnabled;
- (bool)isIncluded;
- (void)layoutSubviews;
- (id)liveBroadcastLabel;
- (id)liveBroadcastScrubberLabel;
- (bool)liveStreamingControlsIncludeScrubber;
- (id)mediaSelectionButton;
- (double)minimumRequiredWidth;
- (void)playbackControlsViewItemChangedAvailability:(id)arg1;
- (id)routePickerView;
- (id)scrubInstructionsBackdrop;
- (id)scrubInstructionsBackdropLabel;
- (id)scrubInstructionsContainer;
- (id)scrubInstructionsLabel;
- (id)scrubInstructionsTimer;
- (id)scrubber;
- (id)scrubberInstructionsDoubleRowActiveConstraint;
- (void)scrubberSlowKnobMovementDetected:(id)arg1;
- (void)scrubberValueChanged:(id)arg1;
- (float)scrubberValueWhenScrubInstructionsTimerBegan;
- (void)setBackdropViewNeedsLayout:(bool)arg1;
- (void)setCollapsed:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDoubleRowLayoutEnabled:(bool)arg1;
- (void)setExtrinsicContentSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setHasAlternateAppearance:(bool)arg1;
- (void)setHasFullScreenAppearance:(bool)arg1;
- (void)setIncluded:(bool)arg1;
- (void)setLiveStreamingControlsIncludeScrubber:(bool)arg1;
- (void)setScrubInstructionsBackdrop:(id)arg1;
- (void)setScrubInstructionsTimer:(id)arg1;
- (void)setScrubberValueWhenScrubInstructionsTimerBegan:(float)arg1;
- (void)setShowsLiveStreamingControls:(bool)arg1;
- (void)setShowsLoadingIndicator:(bool)arg1;
- (bool)showsLiveStreamingControls;
- (bool)showsLoadingIndicator;
- (id)singleRowViews;
- (id)skipBackButton;
- (id)skipForwardButton;
- (id)standardPlayPauseButton;
- (id)timeRemainingLabel;
- (void)traitCollectionDidChange:(id)arg1;

@end
