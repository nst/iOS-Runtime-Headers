/* Generated by RuntimeBrowser
   Image: /System/Library/TextInput/libTextInputCore.dylib
 */

@interface TIKeyboardInputManager : TIKeyboardInputManagerBase {
    id  _candidateGenerationCompletionHandler;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _candidateRange;
    TIKeyboardInputManagerState * _currentState;
    TIKeyboardLayout * _keyLayout;
    TIKeyboardFeatureSpecialization * _keyboardFeatureSpecialization;
    TIKeyboardState * _keyboardState;
    TIKeyboardLayoutState * _layoutState;
    unsigned long long  _maxCandidateCount;
}

@property (nonatomic, copy) id candidateGenerationCompletionHandler;
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } candidateRange;
@property (nonatomic, readonly) TIKeyboardInputManagerState *currentState;
@property (nonatomic, retain) TIKeyboardLayout *keyLayout;
@property (nonatomic, readonly) TIKeyboardFeatureSpecialization *keyboardFeatureSpecialization;
@property (nonatomic, retain) TIKeyboardState *keyboardState;
@property (nonatomic) unsigned long long maxCandidateCount;

+ (void)clearRecentsFileForIdentifier:(id)arg1;
+ (id)dynamicDictionaryFilePathForInputMode:(id)arg1;
+ (id)keyboardUserDirectory;
+ (id)recentsFilePathForIdentifier:(id)arg1;
+ (void)removeAllDynamicDictionaries;
+ (void)removeDynamicDictionaryForInputMode:(id)arg1;
+ (void)resetResponseKit;
+ (id)userDictionaryWordKeyPairsFilePath;

- (void)acceptCurrentCandidateIfSelectedWithContext:(id)arg1;
- (void)acceptCurrentCandidateWithContext:(id)arg1;
- (void)acceptInput;
- (bool)acceptInputString:(id)arg1;
- (bool)acceptsCharacter:(unsigned int)arg1;
- (id)addInput:(id)arg1 flags:(unsigned int)arg2 point:(struct CGPoint { double x1; double x2; })arg3 firstDelete:(unsigned long long*)arg4 fromVariantKey:(bool)arg5;
- (void)addInput:(id)arg1 withContext:(id)arg2;
- (void)addSynthesizedTouchToInput:(id)arg1;
- (void)adjustPhraseBoundaryInForwardDirection:(bool)arg1;
- (void)adjustPhraseBoundaryInForwardDirection:(bool)arg1 granularity:(int)arg2;
- (bool)alwaysShowExtensionCandidatesForSortingMethod:(id)arg1;
- (void)appendToInputContext:(id)arg1;
- (id)autocorrection;
- (id)autocorrectionList;
- (bool)canHandleKeyHitTest;
- (id)candidateGenerationCompletionHandler;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })candidateRange;
- (void)candidateRejected:(id)arg1;
- (id)candidateResultSet;
- (id)candidateResultSetFromCandidates:(id)arg1;
- (id)candidateResultSetFromCandidates:(id)arg1 proactiveTriggers:(id)arg2;
- (id)candidates;
- (id)candidatesForString:(id)arg1;
- (void)clearDynamicDictionary;
- (void)clearInput;
- (void)clearInputContext;
- (void)clearKeyAreas;
- (void)closeCandidateGenerationContextWithResults:(id)arg1;
- (bool)commitsAcceptedCandidate;
- (id)contextBeforeWithDesiredLength:(unsigned long long)arg1;
- (id)currentInputModeIdentifier;
- (id)currentState;
- (void)dealloc;
- (id)defaultCandidate;
- (id)deleteFromInput:(unsigned long long*)arg1;
- (void)deleteFromInputWithContext:(id)arg1;
- (id)deletedSuffixOfInputContext:(id)arg1 whenDeletingFromInputString:(id)arg2 withInputIndex:(unsigned long long)arg3 deletionCount:(unsigned long long)arg4;
- (id)didAcceptCandidate:(id)arg1;
- (void)displayedCandidateRejected;
- (void)dropInput;
- (void)dynamicDictionariesRemoved:(id)arg1;
- (id)emojiReplacementCandidates:(id)arg1;
- (bool)enablesProactiveQuickType;
- (id)externalStringToInternal:(id)arg1;
- (id)generateAndRenderProactiveSuggestionsWithTriggers:(id)arg1 withInput:(id)arg2;
- (id)generateAutocorrectionsWithKeyboardState:(id)arg1;
- (void)generateCandidatesWithKeyboardState:(id)arg1 candidateRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 completionHandler:(id)arg3;
- (id)generateProactiveAutocompletionsWithDocumentState:(id)arg1;
- (id)generateReplacementsForString:(id)arg1 keyLayout:(id)arg2;
- (id)groupedCandidatesFromCandidates:(id)arg1 usingSortingMethod:(id)arg2;
- (void)groupedCandidatesFromCandidates:(id)arg1 usingSortingMethod:(id)arg2 completion:(id)arg3;
- (id)handleAcceptedCandidate:(id)arg1 keyboardState:(id)arg2;
- (id)handleKeyboardInput:(id)arg1;
- (bool)hasLegacyInputStem;
- (bool)hasLegacyInputString;
- (bool)ignoresDeadKeys;
- (void)incrementUsageTrackingKeyForAutocorrectionStatistic:(id)arg1 autocorrectionTypes:(unsigned int)arg2;
- (void)incrementUsageTrackingKeysForDeleteFromInput;
- (id)indexTitlesForGroupTitles:(id)arg1 sortingMethod:(id)arg2;
- (id)initWithInputMode:(id)arg1;
- (unsigned long long)initialCandidateBatchCount;
- (unsigned long long)initialSelectedIndex;
- (id)inputContext;
- (unsigned int)inputCount;
- (unsigned int)inputIndex;
- (void)inputLocationChanged;
- (id)inputString;
- (id)inputStringFromDocumentState:(id)arg1;
- (id)inputsToReject;
- (id)internalInputContext;
- (id)internalStringToExternal:(id)arg1;
- (bool)isHardwareKeyboardAutocorrectionEnabled;
- (id)keyEventMap;
- (long long)keyHitTest:(id)arg1;
- (id)keyLayout;
- (id)keyboardBehaviors;
- (id)keyboardConfiguration;
- (id)keyboardConfigurationAccentKeyString;
- (bool)keyboardConfigurationAssertDefaultKeyPlane;
- (id)keyboardConfigurationLayoutTag;
- (id)keyboardFeatureSpecialization;
- (id)keyboardState;
- (void)lastAcceptedCandidateCorrected;
- (void)logEmojiUsageFromCandidateBar:(id)arg1;
- (id)markedText;
- (unsigned long long)maxCandidateCount;
- (unsigned long long)maximumShortcutLengthAllowed;
- (id)newInputManagerState;
- (bool)nextInputWouldStartSentence;
- (void)openCandidateGenerationContextWithCompletionHandler:(id)arg1;
- (long long)performHitTestForTouchEvent:(id)arg1 keyboardState:(id)arg2;
- (unsigned long long)phraseBoundary;
- (id)rawInputString;
- (void)refreshInputManagerState;
- (void)registerKeyArea:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 keyCode:(short)arg2 keyString:(const char *)arg3;
- (void)releaseDynamicLanguageModel;
- (id)remainingInput;
- (bool)removeSuffixOfInputContext:(id)arg1;
- (id)replacementForDoubleSpace;
- (void)resume;
- (id)revisionHistory;
- (id)searchStringForMarkedText;
- (void)setAutoCorrects:(bool)arg1;
- (void)setAutocapitalizationEnabled:(bool)arg1;
- (void)setAutocapitalizationType:(unsigned long long)arg1;
- (void)setCandidateGenerationCompletionHandler:(id)arg1;
- (void)setCandidateRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setInHardwareKeyboardMode:(bool)arg1;
- (void)setInSplitKeyboardMode:(bool)arg1;
- (void)setInputStringFromDocumentState:(id)arg1;
- (void)setKeyLayout:(id)arg1;
- (void)setKeyboardEventsLagging:(bool)arg1;
- (void)setKeyboardState:(id)arg1;
- (void)setLayoutUsesTwoHands:(bool)arg1;
- (void)setLearnsCorrection:(bool)arg1;
- (void)setMarkedText;
- (void)setMaxCandidateCount:(unsigned long long)arg1;
- (void)setOriginalInput:(id)arg1;
- (void)setPhraseBoundary:(unsigned long long)arg1;
- (void)setPhraseBoundaryIfNecessary;
- (id)shadowTyping;
- (id)shortcutCompletionsForDocumentState:(id)arg1;
- (id)shortcutConversionForDocumentState:(id)arg1;
- (bool)shouldAddModifierSymbolsToWordCharacters;
- (bool)shouldCommitInputString;
- (bool)shouldExtendPriorWord;
- (bool)shouldSkipCandidateSelection;
- (void)skipHitTestForTouchEvent:(id)arg1 keyboardState:(id)arg2;
- (id)sortMethodIndexes;
- (id)sortMethodTitles;
- (id)sortMethodsGroupsForCandidates:(id)arg1;
- (id)sortMethodsShowExtensionCandidates;
- (id)sortingMethods;
- (bool)stringEndsWord:(id)arg1;
- (id)suffixOfDesiredString:(id)arg1 toAppendToInputString:(id)arg2 withInputIndex:(unsigned long long)arg3 afterDeletionCount:(unsigned long long*)arg4;
- (bool)suppliesCompletions;
- (bool)supportsLearning;
- (bool)supportsNumberKeySelection;
- (bool)supportsSetPhraseBoundary;
- (bool)suppressCompletionsForFieldEditor;
- (bool)suppressPlaceholderCandidate;
- (void)suspend;
- (void)syncInputStringToKeyboardState:(id)arg1 afterContextChange:(bool)arg2;
- (void)syncMarkedTextForKeyboardState:(id)arg1 afterContextChange:(bool)arg2;
- (void)syncToKeyboardState:(id)arg1;
- (void)syncToKeyboardState:(id)arg1 from:(id)arg2 afterContextChange:(bool)arg3;
- (void)syncToLayoutState:(id)arg1;
- (id)terminatorsDeletingAutospace;
- (id)terminatorsPrecedingAutospace;
- (id)terminatorsPreventingAutocorrection;
- (void)textAccepted:(id)arg1 fromPredictiveInputBar:(bool)arg2;
- (id)titleForSortingMethod:(id)arg1;
- (void)trackProactiveMetrics:(id)arg1 keyboardState:(id)arg2;
- (void)trimInput;
- (id)usageTrackingKeyForStatistic:(id)arg1;
- (bool)usesAutoDeleteWord;
- (bool)usesCandidateSelection;
- (void)willChangeToKeyboardState:(id)arg1 afterContextChange:(bool)arg2;
- (id)wordCharacters;
- (id)wordSeparator;

@end
