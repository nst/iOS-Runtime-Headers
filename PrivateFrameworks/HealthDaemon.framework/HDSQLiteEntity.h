/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
 */

@interface HDSQLiteEntity : NSObject <HDSQLiteEntity> {
    long long  _persistentID;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) long long persistentID;
@property (readonly) Class superclass;

+ (id)_copyDeleteSQLWithTableName:(id)arg1 columnName:(id)arg2;
+ (id)_generateDisambiguatedDatabaseTableName;
+ (id)additionalPredicateForEnumeration;
+ (id)aggregateSingleValueForProperty:(id)arg1 function:(id)arg2 predicate:(id)arg3 database:(id)arg4 error:(id*)arg5;
+ (id)aggregateSingleValueForProperty:(id)arg1 function:(id)arg2 queryDescriptor:(id)arg3 database:(id)arg4 error:(id*)arg5;
+ (id)aggregateValuesForProperty:(id)arg1 functions:(id)arg2 predicate:(id)arg3 groupBy:(id)arg4 database:(id)arg5 error:(id*)arg6;
+ (id)aggregateValuesForProperty:(id)arg1 functions:(id)arg2 queryDescriptor:(id)arg3 database:(id)arg4 error:(id*)arg5;
+ (id)allDatabaseColumnNames;
+ (id)anyInDatabase:(id)arg1 predicate:(id)arg2 error:(id*)arg3;
+ (id)associationPropertyForEntityClass:(Class)arg1;
+ (id)columnsDefinition;
+ (id)countDistinctForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 error:(id*)arg4;
+ (id)countValueForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 error:(id*)arg4;
+ (id)databaseName;
+ (id)databaseTable;
+ (bool)deleteEntitiesInDatabase:(id)arg1 predicate:(id)arg2;
+ (id)deleteStatementWithProperty:(id)arg1 database:(id)arg2;
+ (id)disambiguatedDatabaseTable;
+ (id)disambiguatedSQLForProperty:(id)arg1;
+ (id)distinctProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 error:(id*)arg4;
+ (Class)entityForProperty:(id)arg1;
+ (id)entityWithPersistentID:(id)arg1;
+ (bool)enumerateEntitiesInDatabase:(id)arg1 predicate:(id)arg2 error:(id*)arg3 enumerationHandler:(id)arg4;
+ (bool)enumerateQueryResultsFromColumns:(id)arg1 properties:(id)arg2 predicate:(id)arg3 groupBy:(id)arg4 orderingProperties:(id)arg5 limit:(long long)arg6 database:(id)arg7 error:(id*)arg8 enumerationHandler:(id)arg9;
+ (id)indices;
+ (id)insertOrReplaceEntity:(bool)arg1 database:(id)arg2 properties:(id)arg3 error:(id*)arg4 bindingHandler:(id)arg5;
+ (id)insertSQLForProperties:(id)arg1 shouldReplace:(bool)arg2;
+ (id)joinClausesForProperty:(id)arg1;
+ (id)maxPersistentIDWithPredicate:(id)arg1 database:(id)arg2 error:(id*)arg3;
+ (id)maxValueForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 error:(id*)arg4;
+ (id)privateSubEntities;
+ (id)propertyValueForAnyInDatabase:(id)arg1 property:(id)arg2 predicate:(id)arg3 error:(id*)arg4;
+ (id)queryStatementWithPredicate:(id)arg1 properties:(id)arg2 database:(id)arg3;
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2;
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2 limit:(unsigned long long)arg3 orderingProperties:(id)arg4 orderingDirections:(id)arg5 groupBy:(id)arg6;
+ (id)tableAliases;
+ (bool)updateProperties:(id)arg1 predicate:(id)arg2 database:(id)arg3 error:(id*)arg4 bindingHandler:(id)arg5;
+ (id)updateSQLForProperties:(id)arg1 predicate:(id)arg2;
+ (id)updateSQLForPropertiesOnEntity:(id)arg1;

- (id)UUIDForProperty:(id)arg1 database:(id)arg2;
- (bool)_deleteRowFromTable:(id)arg1 usingColumn:(id)arg2 database:(id)arg3;
- (bool)booleanForProperty:(id)arg1 database:(id)arg2;
- (id)dateForProperty:(id)arg1 database:(id)arg2;
- (bool)deleteFromDatabase:(id)arg1 error:(id*)arg2;
- (id)description;
- (bool)existsInDatabase:(id)arg1;
- (bool)getValuesForProperties:(id)arg1 database:(id)arg2 handler:(id)arg3;
- (bool)getValuesForProperties:(id)arg1 withDatabase:(id)arg2 applier:(id)arg3;
- (id)initWithPersistentID:(long long)arg1;
- (long long)persistentID;
- (bool)updateProperties:(id)arg1 database:(id)arg2 error:(id*)arg3 bindingHandler:(id)arg4;
- (id)valueForProperty:(id)arg1 database:(id)arg2;

@end
