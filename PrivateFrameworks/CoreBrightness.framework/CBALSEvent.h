/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreBrightness.framework/CoreBrightness
 */

@interface CBALSEvent : CBHIDEvent {
    struct { 
        float XYZ[3]; 
        struct { 
            float x; 
            float y; 
        } xy; 
        float CCT1; 
        struct { 
            int orientation; 
            float rawChannels[6]; 
            int nChannels; 
            float brightness; 
        } extra; 
    }  _colorSample;
    struct __IOHIDEvent { } * _event;
    bool  _firstALSSample;
    double  _illuminance;
    float  _integrationTime;
    NSObject<OS_os_log> * _logHandle;
    bool  _obstructed;
    int  _orientation;
    bool  _supportColor;
    struct { 
        unsigned int status; 
        unsigned char nChannels; 
        unsigned char orientation; 
        unsigned short reserved; 
        unsigned int integrationTime; 
        unsigned int reportInterval; 
        int gain; 
        float lux; 
        float channelData[6]; 
        float CCT; 
        short AZOffsets[6]; 
    }  _vendorData;
}

@property struct { float x1[3]; struct { float x_2_1_1; float x_2_1_2; } x2; float x3; struct { int x_4_1_1; float x_4_1_2[6]; int x_4_1_3; float x_4_1_4; } x4; } colorSample;
@property bool firstALSSample;
@property double illuminance;
@property float integrationTime;
@property bool obstructed;
@property int orientation;
@property bool supportColor;
@property struct { unsigned int x1; unsigned char x2; unsigned char x3; unsigned short x4; unsigned int x5; unsigned int x6; int x7; float x8; float x9[6]; float x10; short x11[6]; } vendorData;

- (struct { float x1[3]; struct { float x_2_1_1; float x_2_1_2; } x2; float x3; struct { int x_4_1_1; float x_4_1_2[6]; int x_4_1_3; float x_4_1_4; } x4; })colorSample;
- (long long)compare:(id)arg1;
- (struct { unsigned int x1; unsigned char x2; unsigned char x3; unsigned short x4; unsigned int x5; unsigned int x6; int x7; float x8; float x9[6]; float x10; short x11[6]; })copyVendorDataFromEvent:(struct __IOHIDEvent { }*)arg1;
- (void)dealloc;
- (id)description;
- (bool)firstALSSample;
- (int)getServiceOrientation:(struct __IOHIDServiceClient { }*)arg1;
- (double)illuminance;
- (id)initWithHIDEvent:(struct __IOHIDEvent { }*)arg1 andService:(struct __IOHIDServiceClient { }*)arg2;
- (float)integrationTime;
- (bool)obstructed;
- (int)orientation;
- (void)setColorSample:(struct { float x1[3]; struct { float x_2_1_1; float x_2_1_2; } x2; float x3; struct { int x_4_1_1; float x_4_1_2[6]; int x_4_1_3; float x_4_1_4; } x4; })arg1;
- (void)setFirstALSSample:(bool)arg1;
- (void)setIlluminance:(double)arg1;
- (void)setIntegrationTime:(float)arg1;
- (void)setObstructed:(bool)arg1;
- (void)setOrientation:(int)arg1;
- (void)setSupportColor:(bool)arg1;
- (void)setVendorData:(struct { unsigned int x1; unsigned char x2; unsigned char x3; unsigned short x4; unsigned int x5; unsigned int x6; int x7; float x8; float x9[6]; float x10; short x11[6]; })arg1;
- (bool)supportColor;
- (struct { unsigned int x1; unsigned char x2; unsigned char x3; unsigned short x4; unsigned int x5; unsigned int x6; int x7; float x8; float x9[6]; float x10; short x11[6]; })vendorData;

@end
