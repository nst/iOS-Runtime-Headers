/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MusicCarDisplayUI.framework/MusicCarDisplayUI
 */

@interface MCDPlayableContentPlaybackManager : NSObject <MCDNowPlayingViewControllerDataSource, MCDNowPlayingViewControllerDelegate, MPRequestResponseControllerDelegate, UITableViewDataSource, UITableViewDelegate> {
    UIImage * _albumArtwork;
    UIAlertController * _alertController;
    MPArtworkCatalog * _artworkCatalog;
    <MCDPlayableContentQueueManagerDelegate> * _delegate;
    AVExternalDevice * _externalDevice;
    bool  _limitedUI;
    MCDPCModel * _model;
    long long  _playingItemIndex;
    MPRequestResponseController * _requestController;
    bool  _seeking;
    UITableView * _tableView;
    long long  _totalItemCount;
}

@property (nonatomic, retain) UIImage *albumArtwork;
@property (nonatomic, retain) UIAlertController *alertController;
@property (nonatomic, retain) MPArtworkCatalog *artworkCatalog;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MCDPlayableContentQueueManagerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) AVExternalDevice *externalDevice;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool limitedUI;
@property (nonatomic, retain) MCDPCModel *model;
@property (nonatomic) long long playingItemIndex;
@property (nonatomic, retain) MPRequestResponseController *requestController;
@property (getter=isSeeking, nonatomic) bool seeking;
@property (readonly) Class superclass;
@property (nonatomic) UITableView *tableView;
@property (nonatomic) long long totalItemCount;

- (void).cxx_destruct;
- (id)_adjustedIndexPathForPlaybackQueue:(id)arg1;
- (id)_alertActionForFeedbackCommand:(id)arg1 fallbackTitle:(id)arg2;
- (id)_currentlyPlayingItem;
- (id)_currentlyPlayingSong;
- (void)_handleHamburgerActionSheet;
- (id)_itemAtIndexPath:(id)arg1;
- (double)_jumpBackwardInterval;
- (double)_jumpForwardInterval;
- (void)_limitedUIChanged:(id)arg1;
- (long long)_numberOfItemsInPlaybackQueue;
- (void)_performChangeRequest:(id)arg1;
- (void)_performRequest;
- (void)_processArtwork;
- (id)_setupRequest;
- (id)_skipIntervalButtonImageForInterval:(double)arg1;
- (id)_songForIndexPath:(id)arg1;
- (void)_updateTrackQueueIndex;
- (id)albumArtwork;
- (id)albumTextForNowPlayingController:(id)arg1;
- (id)alertController;
- (id)artistTextForNowPlayingController:(id)arg1;
- (id)artworkCatalog;
- (id)backgroundArtForNowPlayingController:(id)arg1;
- (void)beginRequestObservation;
- (void)controller:(id)arg1 defersResponseReplacement:(id /* block */)arg2;
- (id)delegate;
- (struct { double x1; double x2; double x3; double x4; double x5; float x6; float x7; bool x8; bool x9; })durationSnapshotForNowPlayingViewController:(id)arg1;
- (void)endRequestObservation;
- (id)externalDevice;
- (id)initWithDelegate:(id)arg1 model:(id)arg2;
- (bool)isSeeking;
- (bool)limitedUI;
- (id)model;
- (void)modelResponseDidInvalidate:(id)arg1;
- (bool)nowPlayingViewController:(id)arg1 buttonShouldBeActive:(long long)arg2;
- (void)nowPlayingViewController:(id)arg1 didSendAction:(long long)arg2 state:(long long)arg3;
- (bool)nowPlayingViewController:(id)arg1 shouldDisplayButton:(long long)arg2 withImage:(out id*)arg3 existingIdentifier:(id)arg4 tinted:(out bool*)arg5;
- (void)nowPlayingViewControllerAddToLibrary:(id)arg1;
- (bool)nowPlayingViewControllerCanRepeat:(id)arg1;
- (bool)nowPlayingViewControllerCanShowAddToLibrary:(id)arg1;
- (bool)nowPlayingViewControllerCanShowChangePlaybackRate:(id)arg1;
- (bool)nowPlayingViewControllerCanShowMore:(id)arg1;
- (bool)nowPlayingViewControllerCanShuffle:(id)arg1;
- (void)nowPlayingViewControllerChangePlaybackRate:(id)arg1;
- (id)nowPlayingViewControllerGetPlaybackRate:(id)arg1;
- (bool)nowPlayingViewControllerIsPlaying:(id)arg1;
- (bool)nowPlayingViewControllerIsShowingExplicitTrack:(id)arg1;
- (void)nowPlayingViewControllerMore:(id)arg1;
- (void)nowPlayingViewControllerToggleRepeat:(id)arg1;
- (void)nowPlayingViewControllerToggleShuffle:(id)arg1;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)playingItemIndex;
- (long long)repeatTypeForNowPlayingViewController:(id)arg1;
- (id)requestController;
- (void)setAlbumArtwork:(id)arg1;
- (void)setAlertController:(id)arg1;
- (void)setArtworkCatalog:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setExternalDevice:(id)arg1;
- (void)setLimitedUI:(bool)arg1;
- (void)setModel:(id)arg1;
- (void)setPlayingItemIndex:(long long)arg1;
- (void)setRequestController:(id)arg1;
- (void)setSeeking:(bool)arg1;
- (void)setTableView:(id)arg1;
- (void)setTotalItemCount:(long long)arg1;
- (long long)shuffleTypeForNowPlayingViewController:(id)arg1;
- (id)tableView;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)titleForNowPlayingController:(id)arg1;
- (long long)totalItemCount;
- (void)viewWillDisappear;

@end
