/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface UIKeyboardCandidateBar : UIView <UICollectionViewDataSource, UIKeyboardCandidateBarLayoutDelegate, UIKeyboardCandidateList, UIKeyboardCandidateListDelegate> {
    bool  _canExtend;
    <UIKeyboardCandidateListDelegate> * _candidateListDelegate;
    UIImageView * _candidateMaskView;
    TIKeyboardCandidateResultSet * _candidateResultSet;
    NSArray * _candidateViews;
    unsigned long long  _currentCandidateViewIndex;
    <UIKeyboardCandidateBarDelegate> * _delegate;
    NSIndexPath * _dragStartNextPageIndexPath;
    struct CGPoint { 
        double x; 
        double y; 
    }  _dragStartOffset;
    NSIndexPath * _dragStartPreviousPageIndexPath;
    NSArray * _filteredCandidates;
    bool  _forceReloadInitiallyHiddenCandidates;
    NSString * _inlineText;
    struct CGSize { 
        double width; 
        double height; 
    }  _lastLayoutSize;
    UIKeyboardCandidatePocketShadow * _leftBorder;
    NSDictionary * _opacities;
    UIKeyboardCandidatePocketShadow * _rightBorder;
    UIKBThemedView * _secondaryCandidatesViewEdgeGradient;
    double  _upArrowWidth;
    long long  m_handBias;
}

@property (nonatomic) bool canExtend;
@property (nonatomic) <UIKeyboardCandidateListDelegate> *candidateListDelegate;
@property (nonatomic, retain) UIImageView *candidateMaskView;
@property (nonatomic, retain) TIKeyboardCandidateResultSet *candidateResultSet;
@property (nonatomic, retain) NSArray *candidateViews;
@property (nonatomic, readonly) TIKeyboardCandidateResultSet *candidates;
@property (nonatomic, readonly) UIKBCandidateCollectionView *currentCandidateView;
@property (nonatomic) unsigned long long currentCandidateViewIndex;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <UIKeyboardCandidateBarDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSIndexPath *dragStartNextPageIndexPath;
@property (nonatomic) struct CGPoint { double x1; double x2; } dragStartOffset;
@property (nonatomic, copy) NSIndexPath *dragStartPreviousPageIndexPath;
@property (nonatomic, retain) NSArray *filteredCandidates;
@property (nonatomic) bool forceReloadInitiallyHiddenCandidates;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSString *inlineText;
@property (nonatomic) struct CGSize { double x1; double x2; } lastLayoutSize;
@property (nonatomic, retain) UIKeyboardCandidatePocketShadow *leftBorder;
@property (nonatomic, retain) NSDictionary *opacities;
@property (nonatomic, retain) UIKeyboardCandidatePocketShadow *rightBorder;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } scrollInsets;
@property (nonatomic, retain) UIKBThemedView *secondaryCandidatesViewEdgeGradient;
@property (readonly) Class superclass;
@property (nonatomic) double upArrowWidth;

// Image: /System/Library/Frameworks/UIKit.framework/UIKit

+ (double)defaultCandidateWidth;
+ (double)defaultPagingDistanceThreshold;
+ (double)defaultPagingVelocityThreshold;
+ (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })edgeInsetsForInterfaceOrientation:(long long)arg1;
+ (double)height;
+ (double)heightForInterfaceOrientation:(long long)arg1;
+ (double)heightForLastRow;
+ (double)heightForRowAtIndex:(unsigned long long)arg1;
+ (double)heightForRowAtIndex:(unsigned long long)arg1 interfaceOrientation:(long long)arg2;
+ (double)interRowOverlap;
+ (unsigned long long)numberOfRows;
+ (unsigned long long)numberOfRowsForInterfaceOrientation:(long long)arg1;
+ (void)setScreenTraits:(id)arg1;
+ (double)widthForCurrentScreenTraits;

- (void).cxx_destruct;
- (Class)_barCellClassForSection:(long long)arg1;
- (id)_candidateViewForSection:(long long)arg1;
- (void)_clearData;
- (unsigned long long)_countOfItemsInSection:(long long)arg1;
- (double)_emptySpaceForItemsToIndex:(unsigned long long)arg1 inSection:(long long)arg2;
- (id)_indexPathForCandidateFromIndexPath:(id)arg1 inCandidateView:(id)arg2;
- (id)_indexPathForCurrentCandidateViewFromIndexPath:(id)arg1;
- (id)_indexPathForFirstVisibleItem;
- (id)_indexPathForLastVisibleItem;
- (id)_itemAtIndex:(unsigned long long)arg1 inSection:(long long)arg2;
- (id)_nextPageIndexPath;
- (id)_previousPageIndexPath;
- (void)_reloadData;
- (void)_reloadDataByAppendingAtEnd:(bool)arg1 initiallyHiddenCandidatesChanged:(bool)arg2;
- (void)_scrollToFirstCandidateInSection:(long long)arg1 withAnimation:(bool)arg2;
- (long long)_sectionForSectionIndex:(unsigned long long)arg1 candidateView:(id)arg2;
- (unsigned long long)_sectionIndexForSection:(long long)arg1;
- (bool)_shouldShowBorders;
- (void)_showCandidateAtIndex:(unsigned long long)arg1 inSection:(long long)arg2 scrollCellToVisible:(bool)arg3 animated:(bool)arg4;
- (void)_showPageAtIndexPath:(id)arg1;
- (void)_stepSelectedCandidateInDirection:(bool)arg1;
- (void)_stepSelectedCandidateInDirection:(bool)arg1 candidateView:(id)arg2 section:(long long)arg3;
- (void)_updateBorders;
- (void)_updateCanExtendState;
- (void)_updateCandidateViews;
- (void)_updateCorners;
- (double)_widthOfItemAtIndex:(unsigned long long)arg1 inSection:(long long)arg2;
- (void)dealloc;

// Image: /Developer/usr/lib/libMainThreadChecker.dylib

- (void)adjustSelectionToNearestVisibleCandidate;
- (bool)canExtend;
- (void)candidateAcceptedAtIndex:(unsigned long long)arg1;
- (void)candidateBarLayoutDidFinishPreparingLayout;
- (void)candidateListAcceptCandidate:(id)arg1;
- (id)candidateListDelegate;
- (void)candidateListSelectionDidChange:(id)arg1;
- (void)candidateListShouldBeDismissed:(id)arg1;
- (id)candidateMaskView;
- (id)candidateResultSet;
- (id)candidateViews;
- (id)candidates;
- (void)candidatesDidChange;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (unsigned long long)count;
- (id)currentCandidate;
- (id)currentCandidateView;
- (unsigned long long)currentCandidateViewIndex;
- (unsigned long long)currentIndex;
- (id)delegate;
- (void)dimKeys:(id)arg1;
- (id)dragStartNextPageIndexPath;
- (struct CGPoint { double x1; double x2; })dragStartOffset;
- (id)dragStartPreviousPageIndexPath;
- (id)filteredCandidates;
- (bool)forceReloadInitiallyHiddenCandidates;
- (bool)hasCandidateInForwardDirection:(bool)arg1 granularity:(int)arg2;
- (bool)hasCandidates;
- (bool)hasNextPage;
- (bool)hasPreviousPage;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)inlineText;
- (bool)isExtendedList;
- (bool)isFloatingList;
- (id)keyboardBehaviors;
- (struct CGSize { double x1; double x2; })lastLayoutSize;
- (id)leftBorder;
- (double)leftMarginForCollectionView:(id)arg1 layout:(id)arg2;
- (unsigned long long)maxNumberOfProactiveCells;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (id)opacities;
- (void)revealHiddenCandidates;
- (id)rightBorder;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })scrollInsets;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3;
- (id)secondaryCandidatesViewEdgeGradient;
- (id)secureCandidateRenderTraits;
- (unsigned long long)selectedSortIndex;
- (void)setCanExtend:(bool)arg1;
- (void)setCandidateListDelegate:(id)arg1;
- (void)setCandidateMaskView:(id)arg1;
- (void)setCandidateResultSet:(id)arg1;
- (void)setCandidateViews:(id)arg1;
- (void)setCandidates:(id)arg1 inlineText:(id)arg2 inlineRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 maxX:(double)arg4 layout:(bool)arg5;
- (void)setCurrentCandidateViewIndex:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDragStartNextPageIndexPath:(id)arg1;
- (void)setDragStartOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setDragStartPreviousPageIndexPath:(id)arg1;
- (void)setFilteredCandidates:(id)arg1;
- (void)setForceReloadInitiallyHiddenCandidates:(bool)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setInlineText:(id)arg1;
- (void)setLastLayoutSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setLeftBorder:(id)arg1;
- (void)setOpacities:(id)arg1;
- (void)setRightBorder:(id)arg1;
- (void)setScrollInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setSecondaryCandidatesViewEdgeGradient:(id)arg1;
- (void)setUIKeyboardCandidateListDelegate:(id)arg1;
- (void)setUpArrowWidth:(double)arg1;
- (bool)showCandidate:(id)arg1;
- (void)showCandidateAtIndex:(unsigned long long)arg1;
- (void)showCandidateInForwardDirection:(bool)arg1 granularity:(int)arg2;
- (double)singleCellWidthForProactiveCellCount:(unsigned long long)arg1;
- (struct CGSize { double x1; double x2; })sizeOfDummyItemForCollectionView:(id)arg1 layout:(id)arg2;
- (id)statisticsIdentifier;
- (double)upArrowWidth;
- (void)updateScrollInsets;
- (unsigned long long)viewOffsetForCandidateAtIndex:(unsigned long long)arg1;
- (id)visibleCandidates;

@end
