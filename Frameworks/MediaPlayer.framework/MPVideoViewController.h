/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@interface MPVideoViewController : MPViewController <MPSwipableViewDelegate, MPVideoControllerProtocol> {
    UIAlertController * _alertController;
    unsigned int  _allowsDetailScrubbing;
    unsigned int  _allowsTVOutInBackground;
    unsigned int  _allowsWirelessPlayback;
    unsigned int  _alwaysAllowHidingControlsOverlay;
    int  _artworkImageStyle;
    unsigned int  _attemptAutoPlayWhenControlsHidden;
    unsigned long long  _backgroundTaskId;
    MPVideoBackgroundView * _backgroundView;
    UIColor * _backstopColor;
    MPSwipableView * _backstopView;
    bool  _batteryMonitoringWasEnabled;
    unsigned int  _canAnimateControlsOverlay;
    unsigned int  _canShowControlsOverlay;
    unsigned long long  _desiredParts;
    unsigned int  _disableAutoRotation;
    unsigned int  _disableControlsAutohide;
    unsigned long long  _disabledParts;
    unsigned int  _displayPlaybackErrorAlerts;
    unsigned int  _hasShownFirstVideoFrame;
    unsigned int  _inlinePlaybackUsesTVOut;
    long long  _itemTypeOverride;
    UIActivityIndicatorView * _loadingIndicator;
    unsigned int  _playAfterPop;
    UIImage * _posterImage;
    long long  _scaleMode;
    long long  _scaleModeOverride;
    unsigned int  _scheduledLoadingIndicator;
    unsigned int  _tvOutEnabled;
    MPTVOutWindow * _tvOutWindow;
    unsigned long long  _visibleParts;
}

@property (nonatomic) bool TVOutEnabled;
@property (nonatomic) bool allowsDetailScrubbing;
@property (nonatomic) bool allowsTVOutInBackground;
@property (nonatomic) bool allowsWirelessPlayback;
@property (nonatomic) bool alwaysAllowHidingControlsOverlay;
@property (nonatomic) int artworkImageStyle;
@property (nonatomic, readonly) UIView *artworkImageView;
@property (nonatomic) bool attemptAutoPlayWhenControlsHidden;
@property (nonatomic) bool autoPlayWhenLikelyToKeepUp;
@property (nonatomic, readonly) UIView *backgroundView;
@property (nonatomic, retain) UIColor *backstopColor;
@property (nonatomic) bool canAnimateControlsOverlay;
@property (nonatomic, readonly) bool canChangeScaleMode;
@property (nonatomic) bool canShowControlsOverlay;
@property (nonatomic, readonly) bool canShowQTAudioOnlyUI;
@property (nonatomic) bool controlsOverlayVisible;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) id delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) unsigned long long desiredParts;
@property (nonatomic) bool disableAutoRotation;
@property (nonatomic) bool disableControlsAutohide;
@property (nonatomic) unsigned long long disabledParts;
@property (nonatomic) bool displayPlaybackErrorAlerts;
@property (getter=isFullscreen, nonatomic) bool fullscreen;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) _UIHostedWindow *hostedWindow;
@property (nonatomic, readonly) unsigned int hostedWindowContextID;
@property (nonatomic) bool inlinePlaybackUsesTVOut;
@property (nonatomic, retain) MPAVItem *item;
@property (nonatomic) long long itemTypeOverride;
@property (nonatomic) long long orientation;
@property (nonatomic, retain) MPAVController *player;
@property (nonatomic, retain) UIImage *posterImage;
@property (nonatomic) long long scaleMode;
@property (nonatomic, readonly) bool showArtworkForTVOut;
@property (nonatomic, readonly) bool showArtworkInImageView;
@property (readonly) Class superclass;
@property (getter=isTransitioningFromFullscreen, nonatomic, readonly) bool transitioningFromFullscreen;
@property (getter=isTransitioningToFullscreen, nonatomic, readonly) bool transitioningToFullscreen;
@property (nonatomic, readonly, retain) UIView<MPVideoOverlay> *videoOverlayView;
@property (nonatomic, readonly) UIView<MPVideoOverlay> *videoOverlayViewIfLoaded;
@property (nonatomic, readonly, retain) MPVideoView *videoView;
@property (nonatomic, readonly, retain) UIView *view;
@property (nonatomic, readonly) bool viewControllerWillRequestExit;
@property (nonatomic) unsigned long long visibleParts;

+ (long long)_activityIndicatorViewStyle;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })calculateArtworkImageViewFrameInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
+ (bool)supportsFullscreenDisplay;

- (void).cxx_destruct;
- (bool)TVOutEnabled;
- (bool)_canEnableAirPlayVideoRoutes;
- (void)_delayedPopForTimeJump;
- (void)_delayedShowLoading;
- (void)_delayedUpdateBackgroundView;
- (void)_endBackgroundTask;
- (void)_exitPlayerForPlaybackError;
- (void)_hideLoadingIndicator;
- (void)_itemDurationDidChange:(id)arg1;
- (long long)_itemTypeWithActualTypePreference;
- (void)_popForTimeJump:(id)arg1;
- (void)_scheduleLoadingIndicatorIfNeeded;
- (void)_screenDidConnect:(id)arg1;
- (void)_screenDidDisconnect:(id)arg1;
- (bool)_showDestinationPlaceholder;
- (void)_showStillFrameIfNotAlreadyPlaying;
- (void)_updateAlwaysPlayWheneverPossible;
- (void)_updateBackgroundView:(bool)arg1;
- (void)_updateIdleTimerDisabledFromPlaybackState:(long long)arg1;
- (void)_updateProgressControlForItem:(id)arg1;
- (void)_videoView_applicationSuspendedNotification:(id)arg1;
- (void)_videoView_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_videoView_availableRoutesDidChangeNotification:(id)arg1;
- (void)_videoView_batteryStateDidChangeNotification:(id)arg1;
- (void)_videoView_effectiveScaleModeChangedNotification:(id)arg1;
- (void)_videoView_isExternalPlaybackActiveDidChangeNotification:(id)arg1;
- (void)_videoView_playbackErrorNotification:(id)arg1;
- (void)_videoView_resumeEventsOnlyNotification:(id)arg1;
- (void)_videoView_scaleModeChangedNotification:(id)arg1;
- (void)_videoView_sizeChangedNotification:(id)arg1;
- (void)_videoView_timedImageMetadataAvailableNotification:(id)arg1;
- (void)_videoView_validityChangedNotification:(id)arg1;
- (bool)allowsDetailScrubbing;
- (bool)allowsTVOutInBackground;
- (bool)allowsWirelessPlayback;
- (bool)alwaysAllowHidingControlsOverlay;
- (int)artworkImageStyle;
- (id)artworkImageView;
- (bool)attemptAutoPlayWhenControlsHidden;
- (bool)autoPlayWhenLikelyToKeepUp;
- (id)backgroundView;
- (void)backgroundViewDidUpdate;
- (id)backstopColor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })calculateArtworkImageViewFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })calculateFullScreenArtworkImageViewFrame;
- (bool)canAnimateControlsOverlay;
- (bool)canChangeScaleMode;
- (bool)canHideOverlay:(bool)arg1;
- (bool)canShowControlsOverlay;
- (bool)canShowQTAudioOnlyUI;
- (bool)controlsOverlayVisible;
- (void)crossedTimeMakerWithEvent:(id)arg1;
- (void)dealloc;
- (unsigned long long)desiredParts;
- (bool)disableAutoRotation;
- (bool)disableControlsAutohide;
- (unsigned long long)disabledParts;
- (unsigned long long)disabledPartsForProposedParts:(unsigned long long)arg1;
- (int)displayArtworkImageStyle;
- (bool)displayPlaybackErrorAlerts;
- (void)displayVideoView;
- (void)displayVideoViewOnScreen;
- (void)displayVideoViewOnTV;
- (void)enableAirPlayVideoRoutesIfNecessary;
- (void)exitFullscreen;
- (void)handleExternalPlaybackDidChange;
- (void)handleScaleModeChange;
- (id)hostedWindow;
- (unsigned int)hostedWindowContextID;
- (id)init;
- (bool)inlinePlaybackUsesTVOut;
- (bool)isFullscreen;
- (bool)isFullscreenForLayoutPurposes;
- (bool)isTransitioningFromFullscreen;
- (bool)isTransitioningToFullscreen;
- (long long)itemTypeOverride;
- (void)loadView;
- (id)newArtworkImageView;
- (void)noteIgnoredChangeTypes:(unsigned long long)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)posterImage;
- (void)prepareToDisplayVideo;
- (void)registerForPlayerNotifications;
- (void)reloadArtworkImageView;
- (void)removeChildViewController:(id)arg1;
- (long long)scaleMode;
- (void)setAllowsDetailScrubbing:(bool)arg1;
- (void)setAllowsTVOutInBackground:(bool)arg1;
- (void)setAllowsWirelessPlayback:(bool)arg1;
- (void)setAlwaysAllowHidingControlsOverlay:(bool)arg1;
- (void)setArtworkImageStyle:(int)arg1;
- (void)setAttemptAutoPlayWhenControlsHidden:(bool)arg1;
- (void)setAutoPlayWhenLikelyToKeepUp:(bool)arg1;
- (void)setBackstopColor:(id)arg1;
- (void)setCanAnimateControlsOverlay:(bool)arg1;
- (void)setCanShowControlsOverlay:(bool)arg1;
- (void)setControlsNeedLayout;
- (void)setControlsOverlayVisible:(bool)arg1;
- (void)setControlsOverlayVisible:(bool)arg1 animate:(bool)arg2;
- (void)setControlsOverlayVisible:(bool)arg1 animate:(bool)arg2 force:(bool)arg3;
- (void)setDesiredParts:(unsigned long long)arg1;
- (void)setDesiredParts:(unsigned long long)arg1 animate:(bool)arg2;
- (void)setDisableAutoRotation:(bool)arg1;
- (void)setDisableControlsAutohide:(bool)arg1;
- (void)setDisabledParts:(unsigned long long)arg1;
- (void)setDisplayPlaybackErrorAlerts:(bool)arg1;
- (void)setFullscreen:(bool)arg1;
- (void)setFullscreen:(bool)arg1 animated:(bool)arg2;
- (void)setInlinePlaybackUsesTVOut:(bool)arg1;
- (void)setItem:(id)arg1;
- (void)setItemTypeOverride:(long long)arg1;
- (void)setOrientation:(long long)arg1 animate:(bool)arg2;
- (void)setOwnsStatusBar:(bool)arg1;
- (void)setPlayer:(id)arg1;
- (void)setPosterImage:(id)arg1;
- (void)setScaleMode:(long long)arg1;
- (void)setScaleMode:(long long)arg1 animated:(bool)arg2;
- (void)setScaleModeOverride:(long long)arg1 animated:(bool)arg2;
- (void)setTVOutEnabled:(bool)arg1;
- (void)setUseHostedWindowWhenFullscreen:(bool)arg1;
- (void)setVisibleParts:(unsigned long long)arg1;
- (void)setVisibleParts:(unsigned long long)arg1 animate:(bool)arg2;
- (bool)showArtworkForTVOut;
- (bool)showArtworkInImageView;
- (void)tearDownTVOutWindow;
- (void)toggleScaleMode:(bool)arg1;
- (void)unregisterForPlayerNotifications;
- (id)videoOverlayView;
- (id)videoOverlayViewIfLoaded;
- (id)videoView;
- (void)videoView_bufferingStateChangedNotification:(id)arg1;
- (void)videoView_firstVideoFrameDisplayedNotification:(id)arg1;
- (void)videoView_itemTypeAvailableNotification:(id)arg1;
- (void)videoView_playbackStateChangedNotification:(id)arg1;
- (void)videoView_tvOutCapabilityDidChangeNotification:(id)arg1;
- (bool)viewControllerWillRequestExit;
- (void)viewDidAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (unsigned long long)visibleParts;
- (unsigned long long)visiblePartsForProposedParts:(unsigned long long)arg1;

@end
