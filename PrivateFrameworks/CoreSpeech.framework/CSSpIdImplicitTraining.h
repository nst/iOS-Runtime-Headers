/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreSpeech.framework/CoreSpeech
 */

@interface CSSpIdImplicitTraining : NSObject {
    CSBiometricMatchMonitor * _biometricMonitor;
    unsigned long long  _discardedPaylodSamples;
    unsigned long long  _extraSamplesAtBegining;
    CSGestureMonitor * _gestureMonitor;
    bool  _implicitRecordingInProgress;
    NSURL * _lastCachedUtterance;
    unsigned long long  _numSamplesAdded;
    NSObject<OS_dispatch_queue> * _queue;
    NSDictionary * _recordingContext;
    unsigned long long  _triggerEndMachTime;
    unsigned long long  _triggerStartMachTime;
    <CSAudioFileWriter> * _uttLogger;
    NSDictionary * _voiceTriggerEventInfo;
}

@property (nonatomic, retain) CSBiometricMatchMonitor *biometricMonitor;
@property (nonatomic, retain) CSGestureMonitor *gestureMonitor;
@property (nonatomic, retain) NSURL *lastCachedUtterance;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) NSDictionary *recordingContext;
@property (nonatomic, retain) <CSAudioFileWriter> *uttLogger;
@property (nonatomic, retain) NSDictionary *voiceTriggerEventInfo;

+ (id)sharedInstance;

- (void).cxx_destruct;
- (unsigned long long)_getBiometricMatchResultForTriggerTimeStamp:(unsigned long long)arg1;
- (unsigned long long)_getNumberOfWavFilesAt:(id)arg1;
- (bool)_isUtteranceHandheld;
- (id)biometricMonitor;
- (id)gestureMonitor;
- (id)init;
- (id)lastCachedUtterance;
- (void)processAudioChunk:(id)arg1;
- (void)processImplicitTrainingUtterance:(id)arg1 forVoiceProfileId:(id)arg2 withRecordDeviceInfo:(id)arg3 withRecordCtxt:(id)arg4 withVoiceTriggerCtxt:(id)arg5 withOtherCtxt:(id)arg6 withCompletion:(id /* block */)arg7;
- (void)processImplicitTrainingUtteranceWithVoiceTriggerEventInfo:(id)arg1;
- (id)queue;
- (id)recordingContext;
- (void)recordingStoppedForReason:(long long)arg1;
- (void)setBiometricMonitor:(id)arg1;
- (void)setGestureMonitor:(id)arg1;
- (void)setLastCachedUtterance:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setRecordingContext:(id)arg1;
- (void)setUttLogger:(id)arg1;
- (void)setVoiceTriggerEventInfo:(id)arg1;
- (id)uttLogger;
- (id)voiceTriggerEventInfo;

@end
