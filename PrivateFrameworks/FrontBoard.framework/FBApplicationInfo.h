/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
 */

@interface FBApplicationInfo : FBBundleInfo <BSDescriptionProviding> {
    NSString * _appIDEntitlement;
    NSSet * _backgroundModes;
    bool  _beta;
    bool  _blocked;
    NSURL * _bundleContainerURL;
    NSArray * _customMachServices;
    NSURL * _dataContainerURL;
    FBMutableApplicationDefaults * _defaults;
    NSArray * _deviceFamilies;
    NSNumber * _downloaderDSID;
    bool  _enabled;
    NSDictionary * _environmentVariables;
    NSURL * _executableURL;
    bool  _exitsOnSuspend;
    NSArray * _externalAccessoryProtocols;
    bool  _hasViewServicesEntitlement;
    bool  _initialized;
    bool  _installing;
    bool  _isManaged;
    NSNumber * _itemID;
    double  _lastModifiedDate;
    NSDictionary * _lazy_entitlements;
    NSString * _lazy_fallbackFolderName;
    NSArray * _lazy_folderNames;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    float  _minimumBrightnessLevel;
    bool  _newsstand;
    bool  _pendingUninstall;
    NSString * _preferenceDomain;
    FBProfileManager * _profileManager;
    bool  _provisioningProfileValidated;
    NSNumber * _purchaserDSID;
    long long  _ratingRank;
    NSArray * _requiredCapabilities;
    bool  _requiresPersistentWiFi;
    bool  _restricted;
    NSURL * _sandboxURL;
    NSString * _sdkVersion;
    NSString * _signerIdentity;
    unsigned long long  _supportedInterfaceOrientations;
    NSArray * _tags;
    unsigned long long  _type;
    bool  _uninstalling;
}

@property (getter=_appIDEntitlement, nonatomic, readonly, copy) NSString *appIDEntitlement;
@property (getter=isBeta, nonatomic, readonly) bool beta;
@property (getter=isBlocked, nonatomic, readonly) bool blocked;
@property (nonatomic, readonly, retain) NSURL *bundleContainerURL;
@property (nonatomic, readonly, retain) NSArray *customMachServices;
@property (nonatomic, readonly, retain) NSURL *dataContainerURL;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly, retain) FBApplicationDefaults *defaults;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, retain) NSArray *deviceFamilies;
@property (nonatomic, readonly, retain) NSNumber *downloaderDSID;
@property (getter=isEnabled, nonatomic, readonly) bool enabled;
@property (nonatomic, readonly, retain) NSDictionary *entitlements;
@property (nonatomic, readonly, retain) NSDictionary *environmentVariables;
@property (nonatomic, readonly, retain) NSURL *executableURL;
@property (getter=isExitsOnSuspend, nonatomic, readonly) bool exitsOnSuspend;
@property (nonatomic, readonly, retain) NSArray *externalAccessoryProtocols;
@property (nonatomic, readonly, retain) NSString *fallbackFolderName;
@property (nonatomic, readonly, retain) NSArray *folderNames;
@property (getter=hasFreeDeveloperProvisioningProfile, nonatomic, readonly) bool freeDeveloperProvisioningProfile;
@property (nonatomic, readonly) bool hasViewServicesEntitlement;
@property (readonly) unsigned long long hash;
@property (getter=_isInstalling, setter=_setInstalling:, nonatomic) bool installing;
@property (nonatomic, readonly, retain) NSNumber *itemID;
@property (nonatomic, readonly) double lastModifiedDate;
@property (nonatomic, readonly) float minimumBrightnessLevel;
@property (getter=isNewsstand, nonatomic, readonly) bool newsstand;
@property (getter=_isPendingUninstall, setter=_setPendingUninstall:, nonatomic) bool pendingUninstall;
@property (nonatomic, readonly, copy) NSString *preferenceDomain;
@property (getter=_profileManager, setter=_setProfileManager:, nonatomic) FBProfileManager *profileManager;
@property (getter=isProvisioningProfileValidated, nonatomic, readonly) bool provisioningProfileValidated;
@property (nonatomic, readonly, retain) NSNumber *purchaserDSID;
@property (nonatomic, readonly) long long ratingRank;
@property (nonatomic, readonly, retain) NSArray *requiredCapabilities;
@property (nonatomic, readonly) bool requiresPersistentWiFi;
@property (getter=isRestricted, nonatomic, readonly) bool restricted;
@property (nonatomic, readonly, retain) NSURL *sandboxURL;
@property (nonatomic, readonly, copy) NSString *sdkVersion;
@property (nonatomic, readonly) long long signatureState;
@property (nonatomic, readonly, copy) NSString *signerIdentity;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long supportedInterfaceOrientations;
@property (nonatomic, readonly, retain) NSArray *tags;
@property (nonatomic, readonly) unsigned long long type;
@property (getter=_isUninstalling, setter=_setUninstalling:, nonatomic) bool uninstalling;
@property (getter=hasUniversalProvisioningProfile, nonatomic, readonly) bool universalProvisioningProfile;

+ (unsigned long long)_applicationTypeForProxy:(id)arg1;
+ (void)_buildDefaults:(id)arg1 fromInfo:(id)arg2 entitlements:(id)arg3 appType:(unsigned long long)arg4 isOnOrAfterOkemo:(bool)arg5;
+ (unsigned long long)_computeSupportedInterfaceOrientationsWithInfo:(id)arg1 forDefaults:(id)arg2;
+ (id)_configureEnvironment:(id)arg1 withInfo:(id)arg2 isPreApex:(bool)arg3;
+ (id)_genreNameForID:(long long)arg1;

- (id)_appIDEntitlement;
- (id)_applicationTrustData;
- (id)_initForProfileManagerTesting;
- (id)_initWithApplicationProxy:(id)arg1;
- (id)_initWithBundleIdentifier:(id)arg1 url:(id)arg2;
- (id)_initWithBundleProxy:(id)arg1 overrideURL:(id)arg2;
- (bool)_isInstalling;
- (bool)_isPendingUninstall;
- (bool)_isUninstalling;
- (void)_loadFromProxy:(id)arg1;
- (void)_lock_loadFolderNamesIfNecessary;
- (long long)_mapSignatureStateFromTrustState:(unsigned long long)arg1;
- (void)_overrideTags:(id)arg1;
- (id)_profileManager;
- (void)_setInstalling:(bool)arg1;
- (void)_setPendingUninstall:(bool)arg1;
- (void)_setProfileManager:(id)arg1;
- (void)_setUninstalling:(bool)arg1;
- (void)_synchronize:(id /* block */)arg1;
- (void)acceptApplicationSignatureIdentity;
- (bool)builtOnOrAfterSDKVersion:(id)arg1;
- (id)bundleContainerURL;
- (id)customMachServices;
- (id)dataContainerURL;
- (void)dealloc;
- (id)defaults;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)deviceFamilies;
- (id)downloaderDSID;
- (id)entitlements;
- (id)environmentVariables;
- (id)executableURL;
- (id)externalAccessoryProtocols;
- (id)fallbackFolderName;
- (id)folderNames;
- (bool)hasFreeDeveloperProvisioningProfile;
- (bool)hasUniversalProvisioningProfile;
- (bool)hasViewServicesEntitlement;
- (id)initWithApplicationProxy:(id)arg1;
- (bool)isBeta;
- (bool)isBlocked;
- (bool)isEnabled;
- (bool)isExitsOnSuspend;
- (bool)isNewsstand;
- (bool)isProvisioningProfileValidated;
- (bool)isRestricted;
- (id)itemID;
- (double)lastModifiedDate;
- (float)minimumBrightnessLevel;
- (id)preferenceDomain;
- (id)purchaserDSID;
- (long long)ratingRank;
- (id)requiredCapabilities;
- (bool)requiresPersistentWiFi;
- (id)sandboxURL;
- (id)sdkVersion;
- (long long)signatureState;
- (id)signerIdentity;
- (bool)statusBarHiddenForInterfaceOrientation:(long long)arg1 onDisplay:(id)arg2;
- (id)succinctDescriptionBuilder;
- (unsigned long long)supportedInterfaceOrientations;
- (bool)supportsAllInterfaceOrientations;
- (bool)supportsBackgroundMode:(id)arg1;
- (bool)supportsDeviceFamily:(unsigned long long)arg1;
- (bool)supportsInterfaceOrientation:(long long)arg1;
- (id)tags;
- (unsigned long long)type;

@end
