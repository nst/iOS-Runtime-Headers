/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/KnowledgeMonitor.framework/KnowledgeMonitor
 */

@interface _DKNextAlarmForTopOffProtectionMonitor : _DKMonitor {
    MTAlarmManager * _alarmManager;
    EKEventStore * _eventStore;
    bool  _isPluggedIn;
    NSObject<OS_os_log> * _log;
    NSDate * _nextEarliestEvent;
    int  _pluggedInToken;
}

@property (nonatomic, retain) MTAlarmManager *alarmManager;
@property (nonatomic, retain) EKEventStore *eventStore;
@property (nonatomic) bool isPluggedIn;
@property (nonatomic, retain) NSObject<OS_os_log> *log;
@property (nonatomic, retain) NSDate *nextEarliestEvent;
@property (nonatomic) int pluggedInToken;

+ (id)_eventWithState:(id)arg1;
+ (id)entitlements;
+ (id)eventStream;
+ (bool)shouldMergeUnchangedEvents;

- (void).cxx_destruct;
- (id)alarmManager;
- (id)eventStore;
- (void)handleAlarmsDidChangeNotification:(id)arg1;
- (void)handleCalendarEventsChanged:(id)arg1;
- (bool)isPluggedIn;
- (id)log;
- (id)nextAlarm;
- (id)nextCalendarEvent;
- (id)nextEarliestEvent;
- (int)pluggedInToken;
- (void)recordNextEvent;
- (void)registerForChanges;
- (void)setAlarmManager:(id)arg1;
- (void)setEventStore:(id)arg1;
- (void)setIsPluggedIn:(bool)arg1;
- (void)setLog:(id)arg1;
- (void)setNextEarliestEvent:(id)arg1;
- (void)setPluggedInToken:(int)arg1;
- (void)start;
- (void)stop;
- (void)updateCurrentState;

@end
