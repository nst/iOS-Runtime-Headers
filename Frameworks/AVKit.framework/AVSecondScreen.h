/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVKit.framework/AVKit
 */

@interface AVSecondScreen : NSObject {
    bool  _TVOutScreen;
    _UICanvas * _canvas;
    CADisplay * _debugInfoDisplay;
    bool  _hasBecomeActiveAtLeastOnce;
    AVObservationController * _observationController;
    UIScreen * _screen;
    AVSecondScreenConnection * _secondScreenConnection;
    long long  _state;
    bool  _wasDiscoveredByCanvasDidConnectNotification;
    UIWindow * _window;
}

@property (getter=isTVOutScreen, nonatomic, readonly) bool TVOutScreen;
@property (nonatomic, readonly) _UICanvas *canvas;
@property (nonatomic, retain) CADisplay *debugInfoDisplay;
@property (nonatomic) bool hasBecomeActiveAtLeastOnce;
@property (nonatomic, readonly) AVObservationController *observationController;
@property (nonatomic, readonly) UIScreen *screen;
@property (nonatomic, retain) AVSecondScreenConnection *secondScreenConnection;
@property (nonatomic, readonly) long long state;
@property (nonatomic, readonly) bool wasDiscoveredByCanvasDidConnectNotification;
@property (nonatomic, retain) UIWindow *window;

- (void).cxx_destruct;
- (bool)_isScreenAvailable;
- (void)_makeWindowVisibleIfNeeded;
- (void)_updatePreferredDisplayCriteria;
- (id)canvas;
- (void)connectWithSecondScreenConnection:(id)arg1;
- (void)dealloc;
- (id)debugInfoDisplay;
- (bool)hasBecomeActiveAtLeastOnce;
- (id)initWithUICanvas:(id)arg1 wasDiscoveredByCanvasDidConnectNotification:(bool)arg2;
- (bool)isAvailable;
- (bool)isTVOutScreen;
- (id)observationController;
- (id)screen;
- (id)secondScreenConnection;
- (void)setDebugInfoDisplay:(id)arg1;
- (void)setHasBecomeActiveAtLeastOnce:(bool)arg1;
- (void)setSecondScreenConnection:(id)arg1;
- (void)setState:(long long)arg1;
- (void)setWindow:(id)arg1;
- (long long)state;
- (bool)wasDiscoveredByCanvasDidConnectNotification;
- (id)window;

@end
