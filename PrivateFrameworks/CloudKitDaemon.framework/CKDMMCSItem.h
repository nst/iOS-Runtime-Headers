/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

@interface CKDMMCSItem : NSObject {
    CKAsset * _asset;
    NSData * _assetKey;
    NSData * _authRequest;
    NSString * _authToken;
    unsigned int  _chunkCount;
    NSURL * _contentBaseURL;
    NSNumber * _deviceID;
    unsigned long long  _downloadTokenExpiration;
    NSError * _error;
    NSNumber * _fileID;
    NSURL * _fileURL;
    bool  _finished;
    NSNumber * _generationID;
    bool  _hasOffset;
    bool  _hasSize;
    bool  _inMemoryDownloadLooksOkay;
    bool  _isAlreadyRegistered;
    bool  _isReaderReadFrom;
    unsigned long long  _itemID;
    NSString * _itemTypeHint;
    NSNumber * _modTimeInSeconds;
    unsigned long long  _offset;
    NSString * _owner;
    CKPackage * _package;
    unsigned long long  _packageIndex;
    double  _progress;
    NSString * _putPackageSectionIdentifier;
    CKRecordID * _recordID;
    NSString * _recordKey;
    NSString * _recordType;
    NSData * _referenceSignature;
    NSString * _requestor;
    NSMutableArray * _sectionItems;
    bool  _shouldReadRawEncryptedData;
    NSData * _signature;
    unsigned long long  _size;
    bool  _temporary;
    NSString * _trackingUUID;
    NSString * _uploadReceipt;
    unsigned long long  _uploadTokenExpiration;
    NSData * _wrappedAssetKey;
    CKDMMCSItemCommandWriter * _writer;
}

@property (nonatomic, retain) CKAsset *asset;
@property (nonatomic, retain) NSData *assetKey;
@property (nonatomic, retain) NSData *authRequest;
@property (nonatomic, retain) NSString *authToken;
@property (nonatomic) unsigned int chunkCount;
@property (nonatomic, retain) NSURL *contentBaseURL;
@property (nonatomic, retain) NSNumber *deviceID;
@property (nonatomic) unsigned long long downloadTokenExpiration;
@property (nonatomic, retain) NSError *error;
@property (nonatomic, retain) NSNumber *fileID;
@property (nonatomic, retain) NSURL *fileURL;
@property (nonatomic) bool finished;
@property (nonatomic, retain) NSNumber *generationID;
@property (nonatomic) bool hasOffset;
@property (nonatomic) bool hasSize;
@property (nonatomic) bool inMemoryDownloadLooksOkay;
@property (nonatomic) bool isAlreadyRegistered;
@property (nonatomic) bool isReaderReadFrom;
@property (nonatomic) unsigned long long itemID;
@property (nonatomic, retain) NSString *itemTypeHint;
@property (nonatomic, retain) NSNumber *modTimeInSeconds;
@property (nonatomic) unsigned long long offset;
@property (nonatomic, retain) NSString *owner;
@property (nonatomic, retain) CKPackage *package;
@property (nonatomic) unsigned long long packageIndex;
@property (nonatomic) double progress;
@property (nonatomic, retain) NSString *putPackageSectionIdentifier;
@property (nonatomic, retain) CKRecordID *recordID;
@property (nonatomic, retain) NSString *recordKey;
@property (nonatomic, retain) NSString *recordType;
@property (nonatomic, retain) NSData *referenceSignature;
@property (nonatomic, retain) NSString *requestor;
@property (nonatomic, retain) NSMutableArray *sectionItems;
@property (nonatomic) bool shouldReadRawEncryptedData;
@property (nonatomic, retain) NSData *signature;
@property (nonatomic) unsigned long long size;
@property (getter=isTemporary, nonatomic) bool temporary;
@property (nonatomic, retain) NSString *trackingUUID;
@property (nonatomic, retain) NSString *uploadReceipt;
@property (nonatomic) unsigned long long uploadTokenExpiration;
@property (nonatomic, retain) NSData *wrappedAssetKey;
@property (nonatomic, retain) CKDMMCSItemCommandWriter *writer;

- (void).cxx_destruct;
- (id)CKPropertiesDescription;
- (id)_openInfo;
- (id)asset;
- (id)assetKey;
- (id)authRequest;
- (id)authToken;
- (unsigned int)chunkCount;
- (id)contentBaseURL;
- (id)description;
- (id)deviceID;
- (unsigned long long)downloadTokenExpiration;
- (id)error;
- (id)fileID;
- (id)fileURL;
- (bool)finished;
- (id)generationID;
- (id)getFileMetadataWithFileHandle:(id)arg1 error:(id*)arg2;
- (id)getFileSizeWithError:(id*)arg1;
- (id)getFileSizeWithProxy:(id)arg1 error:(id*)arg2;
- (bool)hasOffset;
- (bool)hasSize;
- (bool)inMemoryDownloadLooksOkay;
- (id)init;
- (id)initWithAsset:(id)arg1;
- (id)initWithPackage:(id)arg1;
- (bool)isAlreadyRegistered;
- (bool)isReaderReadFrom;
- (bool)isTemporary;
- (unsigned long long)itemID;
- (id)itemTypeHint;
- (id)modTimeInSeconds;
- (unsigned long long)offset;
- (id)openWithError:(id*)arg1;
- (id)openWithProxy:(id)arg1 error:(id*)arg2;
- (id)owner;
- (id)package;
- (unsigned long long)packageIndex;
- (double)progress;
- (id)putPackageSectionIdentifier;
- (id)recordID;
- (id)recordKey;
- (id)recordType;
- (id)referenceSignature;
- (id)requestor;
- (id)sectionItems;
- (void)setAsset:(id)arg1;
- (void)setAssetKey:(id)arg1;
- (void)setAuthRequest:(id)arg1;
- (void)setAuthToken:(id)arg1;
- (void)setChunkCount:(unsigned int)arg1;
- (void)setContentBaseURL:(id)arg1;
- (void)setDeviceID:(id)arg1;
- (void)setDownloadTokenExpiration:(unsigned long long)arg1;
- (void)setError:(id)arg1;
- (void)setFileID:(id)arg1;
- (void)setFileURL:(id)arg1;
- (void)setFinished:(bool)arg1;
- (void)setGenerationID:(id)arg1;
- (void)setHasOffset:(bool)arg1;
- (void)setHasSize:(bool)arg1;
- (void)setInMemoryDownloadLooksOkay:(bool)arg1;
- (void)setIsAlreadyRegistered:(bool)arg1;
- (void)setIsReaderReadFrom:(bool)arg1;
- (void)setItemID:(unsigned long long)arg1;
- (void)setItemTypeHint:(id)arg1;
- (void)setModTimeInSeconds:(id)arg1;
- (void)setOffset:(unsigned long long)arg1;
- (void)setOwner:(id)arg1;
- (void)setPackage:(id)arg1;
- (void)setPackageIndex:(unsigned long long)arg1;
- (void)setProgress:(double)arg1;
- (void)setPutPackageSectionIdentifier:(id)arg1;
- (void)setRecordID:(id)arg1;
- (void)setRecordKey:(id)arg1;
- (void)setRecordType:(id)arg1;
- (void)setReferenceSignature:(id)arg1;
- (void)setRequestor:(id)arg1;
- (void)setSectionItems:(id)arg1;
- (void)setShouldReadRawEncryptedData:(bool)arg1;
- (void)setSignature:(id)arg1;
- (void)setSize:(unsigned long long)arg1;
- (void)setTemporary:(bool)arg1;
- (void)setTrackingUUID:(id)arg1;
- (void)setUploadReceipt:(id)arg1;
- (void)setUploadTokenExpiration:(unsigned long long)arg1;
- (void)setWrappedAssetKey:(id)arg1;
- (void)setWriter:(id)arg1;
- (bool)shouldReadRawEncryptedData;
- (id)signature;
- (unsigned long long)size;
- (id)trackingUUID;
- (id)uploadReceipt;
- (unsigned long long)uploadTokenExpiration;
- (id)wrappedAssetKey;
- (id)writer;

@end
