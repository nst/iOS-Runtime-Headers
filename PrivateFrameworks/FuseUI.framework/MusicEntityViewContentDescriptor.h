/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI
 */

@interface MusicEntityViewContentDescriptor : NSObject <NSCopying> {
    NSSet * _allPropertiesToLoadAsynchronously;
    NSSet * _allPropertiesToPrefetchSynchronously;
    bool  _allowsDeletionWithoutEditingMode;
    MusicEntityViewContentArtworkDescriptor * _artworkDescriptor;
    long long  _artworkVerticalAlignment;
    UIColor * _backgroundColor;
    UIColor * _customSelectionTintColor;
    UIColor * _customSeparatorColor;
    UIColor * _downloadProgressButtonTintColor;
    NSString * _explicitBadgeProperty;
    bool  _hasValidAllPropertiesToLoadAsynchronously;
    bool  _leftSeparatorInsetFollowsText;
    Class  _lockupViewClass;
    double  _minimumHeight;
    float  _popularityIndicatorThreshold;
    UIColor * _popularityIndicatorTintColor;
    long long  _selectionStyle;
    bool  _shouldDisableWhenUnplayable;
    bool  _shouldDisplayProminently;
    bool  _shouldForceBottomSeparatorVisible;
    NSString * _storeDownloadIDProperty;
    NSString * _storeOffersProperty;
    long long  _textDescriptorVerticalAlignment;
    NSArray * _textDescriptors;
    NSCountedSet * _textDescriptorsBeingObserved;
    NSString * _wantsAddButtonProperty;
    NSString * _wantsBuyButtonProperty;
    NSString * _wantsDisclosureIndicatorProperty;
    bool  _wantsDownloadProgress;
    NSString * _wantsPlayButtonProperty;
    bool  _wantsPopularityIndicator;
}

@property (nonatomic, readonly) NSSet *allPropertiesToLoadAsynchronously;
@property (nonatomic, readonly) NSSet *allPropertiesToPrefetchSynchronously;
@property (nonatomic) bool allowsDeletionWithoutEditingMode;
@property (nonatomic, retain) MusicEntityViewContentArtworkDescriptor *artworkDescriptor;
@property (nonatomic) long long artworkVerticalAlignment;
@property (nonatomic, copy) UIColor *backgroundColor;
@property (nonatomic, retain) UIColor *customSelectionTintColor;
@property (nonatomic, retain) UIColor *customSeparatorColor;
@property (nonatomic, retain) UIColor *downloadProgressButtonTintColor;
@property (nonatomic, copy) NSString *explicitBadgeProperty;
@property (nonatomic) bool leftSeparatorInsetFollowsText;
@property (nonatomic, retain) Class lockupViewClass;
@property (nonatomic) double minimumHeight;
@property (nonatomic) float popularityIndicatorThreshold;
@property (nonatomic, retain) UIColor *popularityIndicatorTintColor;
@property (nonatomic) long long selectionStyle;
@property (nonatomic) bool shouldDisableWhenUnplayable;
@property (nonatomic) bool shouldDisplayProminently;
@property (nonatomic) bool shouldForceBottomSeparatorVisible;
@property (nonatomic, copy) NSString *storeDownloadIDProperty;
@property (nonatomic, copy) NSString *storeOffersProperty;
@property (nonatomic) long long textDescriptorVerticalAlignment;
@property (nonatomic, copy) NSArray *textDescriptors;
@property (nonatomic, copy) NSString *wantsAddButtonProperty;
@property (nonatomic, copy) NSString *wantsBuyButtonProperty;
@property (nonatomic, copy) NSString *wantsDisclosureIndicatorProperty;
@property (nonatomic) bool wantsDownloadProgress;
@property (nonatomic, copy) NSString *wantsPlayButtonProperty;
@property (nonatomic) bool wantsPopularityIndicator;

+ (Class)tableViewCellClass;
+ (id)tableViewCellReuseIdentifier;
+ (Class)tableViewSectionHeaderClass;
+ (id)tableViewSectionHeaderReuseIdentifier;

- (void).cxx_destruct;
- (void)_handleArtworkDescriptorDidInvalidateNotification:(id)arg1;
- (void)_handleTextDescriptorDidInvalidateNotification:(id)arg1;
- (void)_invalidateAllPropertiesToLoadAsynchronously;
- (void)_invalidateAllPropertiesToPrefetchSynchronously;
- (id)allPropertiesToLoadAsynchronously;
- (id)allPropertiesToPrefetchSynchronously;
- (bool)allowsDeletionWithoutEditingMode;
- (id)artworkDescriptor;
- (long long)artworkVerticalAlignment;
- (id)backgroundColor;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)customSelectionTintColor;
- (id)customSeparatorColor;
- (void)dealloc;
- (id)downloadProgressButtonTintColor;
- (id)explicitBadgeProperty;
- (id)init;
- (bool)leftSeparatorInsetFollowsText;
- (Class)lockupViewClass;
- (double)minimumHeight;
- (float)popularityIndicatorThreshold;
- (id)popularityIndicatorTintColor;
- (long long)selectionStyle;
- (void)setAllowsDeletionWithoutEditingMode:(bool)arg1;
- (void)setArtworkDescriptor:(id)arg1;
- (void)setArtworkVerticalAlignment:(long long)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setCustomSelectionTintColor:(id)arg1;
- (void)setCustomSeparatorColor:(id)arg1;
- (void)setDownloadProgressButtonTintColor:(id)arg1;
- (void)setExplicitBadgeProperty:(id)arg1;
- (void)setLeftSeparatorInsetFollowsText:(bool)arg1;
- (void)setLockupViewClass:(Class)arg1;
- (void)setMinimumHeight:(double)arg1;
- (void)setPopularityIndicatorThreshold:(float)arg1;
- (void)setPopularityIndicatorTintColor:(id)arg1;
- (void)setSelectionStyle:(long long)arg1;
- (void)setShouldDisableWhenUnplayable:(bool)arg1;
- (void)setShouldDisplayProminently:(bool)arg1;
- (void)setShouldForceBottomSeparatorVisible:(bool)arg1;
- (void)setStoreDownloadIDProperty:(id)arg1;
- (void)setStoreOffersProperty:(id)arg1;
- (void)setTextDescriptorVerticalAlignment:(long long)arg1;
- (void)setTextDescriptors:(id)arg1;
- (void)setWantsAddButtonProperty:(id)arg1;
- (void)setWantsBuyButtonProperty:(id)arg1;
- (void)setWantsDisclosureIndicatorProperty:(id)arg1;
- (void)setWantsDownloadProgress:(bool)arg1;
- (void)setWantsPlayButtonProperty:(id)arg1;
- (void)setWantsPopularityIndicator:(bool)arg1;
- (bool)shouldDisableWhenUnplayable;
- (bool)shouldDisplayProminently;
- (bool)shouldForceBottomSeparatorVisible;
- (id)storeDownloadIDProperty;
- (id)storeOffersProperty;
- (id)textDescriptorForTag:(long long)arg1;
- (long long)textDescriptorVerticalAlignment;
- (id)textDescriptors;
- (void)updateTextDescriptorsForPreferredContentSizeChange;
- (void)updateTextDescriptorsWithDisplayScale:(double)arg1;
- (void)updateTextDescriptorsWithTintColor:(id)arg1;
- (id)wantsAddButtonProperty;
- (id)wantsBuyButtonProperty;
- (id)wantsDisclosureIndicatorProperty;
- (bool)wantsDownloadProgress;
- (id)wantsPlayButtonProperty;
- (bool)wantsPopularityIndicator;
- (void)willAddTextDescriptor:(id)arg1;
- (void)willRemoveTextDescriptor:(id)arg1;

@end
