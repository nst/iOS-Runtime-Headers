/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SceneKit.framework/SceneKit
 */

@interface SCNNode : NSObject <NSCopying, NSSecureCoding, SCNActionable, SCNAnimatable, SCNBoundingVolume, UIFocusItem> {
    SCNOrderedDictionary * _actions;
    unsigned int  _affineUpToDate;
    SCNOrderedDictionary * _animations;
    unsigned int  _authoringEnvironmentNode;
    NSMutableDictionary * _bindings;
    unsigned int  _cameraLoaded;
    unsigned int  _castsShadow;
    unsigned long long  _categoryBitMask;
    NSMutableArray * _childNodes;
    SCNNodeComponent * _components;
    struct SCNVector3 { float x1; float x2; float x3; } * _fixedBoundingBoxExtrema;
    unsigned int  _focusBehavior;
    unsigned int  _geometryLoaded;
    unsigned int  _hasComponentBitmask;
    unsigned int  _hasPivot;
    unsigned int  _hidden;
    unsigned int  _ignoreAnimationWhenCopying_tmp;
    unsigned int  _isFocusableOrHasFocusableChild;
    unsigned int  _isJoint;
    unsigned int  _isPresentationInstance;
    unsigned int  _lightLoaded;
    unsigned int  _morpherLoaded;
    unsigned int  _movability;
    NSString * _name;
    struct __C3DNode { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; struct __C3DScene {} *x_1_1_6; long long x_1_1_7; } x1; struct __C3DNode {} *x2; struct __C3DNode {} *x3; struct __C3DNode {} *x4; int x5; struct { union C3DMatrix4x4 { float x_1_2_1[16]; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_1_2_2[4]; void*x_1_2_3; } x_6_1_1; union { } x_6_1_2; } x6; union { unsigned char x_7_1_1; void*x_7_1_2; long doublex_7_1_3; void*x_7_1_4; void*x_7_1_5; void*x_7_1_6; const int x_7_1_7; void*x_7_1_8; void*x_7_1_9; void*x_7_1_10; void*x_7_1_11; } *x7; bool x8; float x9; unsigned long long x10; int x11; unsigned int x12 : 1; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; } * _node;
    float  _opacity;
    SCNNode * _parent;
    unsigned int  _paused;
    unsigned int  _pausedByInheritance;
    void _position;
    SCNNode * _presentationInstance;
    id  _rendererDelegate;
    long long  _renderingOrder;
    union { 
        /* Warning: Unrecognized filer type: '"' using 'void*' */ void*eulerAngles; 
    }  _rotation;
    unsigned int  _rotationRepresentation;
    void _scale;
    unsigned int  _skinnerLoaded;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _transform;
    unsigned int  _transformUpToDate;
    NSMutableDictionary * _valueForKey;
}

@property (nonatomic, readonly) NSArray *actionKeys;
@property (readonly) NSArray *animationKeys;
@property (nonatomic) long long authoringCameraType;
@property (nonatomic, retain) SCNCamera *camera;
@property (nonatomic, readonly) bool canBecomeFocused;
@property (nonatomic) bool castsShadow;
@property (nonatomic) unsigned long long categoryBitMask;
@property (nonatomic, readonly) NSArray *childNodes;
@property (copy) NSArray *constraints;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) struct SCNVector3 { float x1; float x2; float x3; } eulerAngles;
@property (nonatomic, copy) NSArray *filters;
@property (nonatomic) long long focusBehavior;
@property (nonatomic, retain) SCNGeometry *geometry;
@property (nonatomic, readonly) bool hasActions;
@property (readonly) unsigned long long hash;
@property (getter=isHidden, nonatomic) bool hidden;
@property (nonatomic, retain) SCNLight *light;
@property (nonatomic, retain) SCNMorpher *morpher;
@property (nonatomic) long long movabilityHint;
@property (nonatomic, copy) NSString *name;
@property (nonatomic) double opacity;
@property (nonatomic) struct SCNVector4 { float x1; float x2; float x3; float x4; } orientation;
@property (nonatomic, readonly) SCNNode *parentNode;
@property (getter=isPaused, nonatomic) bool paused;
@property (nonatomic, retain) SCNPhysicsBody *physicsBody;
@property (nonatomic, retain) SCNPhysicsField *physicsField;
@property (nonatomic) struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; } pivot;
@property (nonatomic) struct SCNVector3 { float x1; float x2; float x3; } position;
@property (nonatomic, readonly, copy) NSArray *preferredFocusEnvironments;
@property (nonatomic, readonly) UIView *preferredFocusedView;
@property (nonatomic, readonly) SCNNode *presentationNode;
@property (nonatomic) <SCNNodeRendererDelegate> *rendererDelegate;
@property (nonatomic) long long renderingOrder;
@property (nonatomic) struct SCNVector4 { float x1; float x2; float x3; float x4; } rotation;
@property (nonatomic) struct SCNVector3 { float x1; float x2; float x3; } scale;
@property (nonatomic) void simdEulerAngles;
@property (nonatomic) struct { } simdOrientation;
@property (nonatomic) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; } simdPivot;
@property (nonatomic) void simdPosition;
@property (nonatomic) void simdRotation;
@property (nonatomic) void simdScale;
@property (nonatomic) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; } simdTransform;
@property (nonatomic, readonly) void simdWorldFront;
@property (nonatomic) struct { } simdWorldOrientation;
@property (nonatomic) void simdWorldPosition;
@property (nonatomic, readonly) void simdWorldRight;
@property (nonatomic) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; } simdWorldTransform;
@property (nonatomic, readonly) void simdWorldUp;
@property (nonatomic, retain) SCNSkinner *skinner;
@property (readonly) Class superclass;
@property (nonatomic) struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; } transform;
@property (nonatomic, readonly) struct SCNVector3 { float x1; float x2; float x3; } worldFront;
@property (nonatomic) struct SCNVector4 { float x1; float x2; float x3; float x4; } worldOrientation;
@property (nonatomic) struct SCNVector3 { float x1; float x2; float x3; } worldPosition;
@property (nonatomic, readonly) struct SCNVector3 { float x1; float x2; float x3; } worldRight;
@property (nonatomic, readonly) struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; } worldTransform;
@property (nonatomic, readonly) struct SCNVector3 { float x1; float x2; float x3; } worldUp;

+ (id)_dumpNodeTree:(id)arg1 tab:(id)arg2;
+ (id)keyPathsForValuesAffectingEulerAngles;
+ (id)keyPathsForValuesAffectingOrientation;
+ (id)keyPathsForValuesAffectingPosition;
+ (id)keyPathsForValuesAffectingRotation;
+ (id)keyPathsForValuesAffectingScale;
+ (id)keyPathsForValuesAffectingTransform;
+ (struct SCNVector3 { float x1; float x2; float x3; })localFront;
+ (struct SCNVector3 { float x1; float x2; float x3; })localRight;
+ (struct SCNVector3 { float x1; float x2; float x3; })localUp;
+ (id)node;
+ (id)nodeWithGeometry:(id)arg1;
+ (id)nodeWithMDLAsset:(id)arg1;
+ (id)nodeWithMDLObject:(id)arg1;
+ (id)nodeWithMDLObject:(id)arg1 masterObjects:(id)arg2 sceneNodes:(id)arg3 skinnedMeshes:(id)arg4 options:(id)arg5;
+ (id)nodeWithNodeRef:(struct __C3DNode { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; struct __C3DScene {} *x_1_1_6; long long x_1_1_7; } x1; struct __C3DNode {} *x2; struct __C3DNode {} *x3; struct __C3DNode {} *x4; int x5; struct { union C3DMatrix4x4 { float x_1_2_1[16]; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_1_2_2[4]; void*x_1_2_3; } x_6_1_1; union { } x_6_1_2; } x6; union { unsigned char x_7_1_1; void*x_7_1_2; long doublex_7_1_3; void*x_7_1_4; void*x_7_1_5; void*x_7_1_6; const int x_7_1_7; void*x_7_1_8; void*x_7_1_9; void*x_7_1_10; void*x_7_1_11; } *x7; bool x8; float x9; unsigned long long x10; int x11; unsigned int x12 : 1; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; }*)arg1;
+ (bool)resolveInstanceMethod:(SEL)arg1;
+ (void)simdLocalFront;
+ (void)simdLocalRight;
+ (void)simdLocalUp;
+ (bool)supportsSecureCoding;

- (const void*)__CFObject;
- (id)__camera;
- (id)__geometry;
- (void)__insertObject:(id)arg1 inChildNodesAtIndex:(unsigned long long)arg2;
- (id)__light;
- (id)__morpher;
- (bool)__removeAnimation:(id)arg1 forKey:(id)arg2;
- (void)__removeObjectFromChildNodesAtIndex:(unsigned long long)arg1;
- (id)__skinner;
- (void)_addSkinnerWithMDLMesh:(id)arg1 sceneNodes:(id)arg2;
- (void)_assignComponent:(id)arg1 toContainerWithType:(long long)arg2;
- (id)_associatedMDLObject;
- (id)_audioPlayers;
- (void)_bakeNodes:(id)arg1 folderPath:(id)arg2 inVertex:(bool)arg3 bakeAO:(bool)arg4 quality:(float)arg5 attenuation:(float)arg6 geomSetter:(id /* block */)arg7 terminateSetter:(id /* block */)arg8;
- (bool)_childNodesPassingTest:(id /* block */)arg1 recursively:(bool)arg2 output:(id)arg3;
- (void)_childNodesWithAttribute:(Class)arg1 output:(id)arg2 recursively:(bool)arg3;
- (void)_copyAnimationsFrom:(id)arg1;
- (id)_copyRecursively;
- (void)_customDecodingOfSCNNode:(id)arg1;
- (void)_customEncodingOfSCNNode:(id)arg1 usePresentationInstance:(bool)arg2;
- (void)_didDecodeSCNNode:(id)arg1;
- (void)_dump:(id)arg1;
- (id)_dumpTree;
- (void)_encodeNodePropertiesWithCoder:(id)arg1;
- (bool)_enumerateChildNodesUsingBlock:(id /* block */)arg1;
- (void)_euler;
- (void)_expandChildArrayIfNeeded;
- (id)_findComponentWithType:(long long)arg1;
- (void)_focusableCandidates:(id)arg1;
- (void)_initChildNodesArray;
- (bool)_isAReference;
- (bool)_isEffectivelyHidden;
- (bool)_isEligibleForFocus;
- (bool)_isEligibleForFocusInteraction;
- (id)_parentFocusEnvironment;
- (id)_particleSystems;
- (void)_pauseAnimation:(bool)arg1 forKey:(id)arg2 pausedByNode:(bool)arg3;
- (struct { })_quaternion;
- (void)_reSyncModelTree;
- (void)_registerAsObserver;
- (void)_removeAction:(id)arg1 forKey:(id)arg2;
- (void)_removeComponentWithType:(long long)arg1;
- (void)_removeDeadParticleSystem:(struct __C3DParticleSystem { }*)arg1;
- (id)_scnAnimationForKey:(id)arg1;
- (id)_scnBindings;
- (void)_setAttributes:(id)arg1;
- (void)_setComponent:(id)arg1 withType:(long long)arg2;
- (void)_setHasFocusableChild;
- (void)_setParent:(id)arg1;
- (void)_setPausedOrPausedByInheritance:(bool)arg1;
- (void)_setPosition;
- (void)_setQuaternion:(struct { })arg1;
- (void)_setScale;
- (id)_subdividedCopyWithSubdivisionLevel:(long long)arg1;
- (void)_syncEntityObjCModel;
- (void)_syncObjCAnimations;
- (void)_syncObjCModel;
- (void)_updateAffine;
- (void)_updateFocusableCache;
- (void)_updateTransform;
- (id)actionForKey:(id)arg1;
- (id)actionKeys;
- (id)actions;
- (void)addAnimation:(id)arg1;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;
- (void)addAnimationPlayer:(id)arg1 forKey:(id)arg2;
- (void)addAudioPlayer:(id)arg1;
- (void)addChildNode:(id)arg1;
- (void)addParticleSystem:(id)arg1;
- (id)animationForKey:(id)arg1;
- (id)animationKeys;
- (struct __C3DAnimationManager { }*)animationManager;
- (id)animationPlayerForKey:(id)arg1;
- (id)attributeForKey:(id)arg1;
- (id)audioPlayers;
- (long long)authoringCameraType;
- (id)authoringEnvironmentCompanionNode;
- (bool)authoringEnvironmentNode;
- (id)authoringEnvironmentPresentationNode;
- (void)bindAnimatablePath:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (id)camera;
- (bool)canAddChildNode:(id)arg1;
- (bool)canBecomeFocused;
- (bool)castsShadow;
- (unsigned long long)categoryBitMask;
- (id)childNodeWithName:(id)arg1;
- (id)childNodeWithName:(id)arg1 recursively:(bool)arg2;
- (id)childNodes;
- (id)childNodesPassingTest:(id /* block */)arg1;
- (id)childNodesPassingTest:(id /* block */)arg1 recursively:(bool)arg2;
- (id)childNodesWithAttribute:(Class)arg1 recursively:(bool)arg2;
- (id)clone;
- (id)constraints;
- (struct SCNVector3 { float x1; float x2; float x3; })convertPosition:(struct SCNVector3 { float x1; float x2; float x3; })arg1 fromNode:(id)arg2;
- (struct SCNVector3 { float x1; float x2; float x3; })convertPosition:(struct SCNVector3 { float x1; float x2; float x3; })arg1 toNode:(id)arg2;
- (struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })convertTransform:(struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg1 fromNode:(id)arg2;
- (struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })convertTransform:(struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg1 toNode:(id)arg2;
- (struct SCNVector3 { float x1; float x2; float x3; })convertVector:(struct SCNVector3 { float x1; float x2; float x3; })arg1 fromNode:(id)arg2;
- (struct SCNVector3 { float x1; float x2; float x3; })convertVector:(struct SCNVector3 { float x1; float x2; float x3; })arg1 toNode:(id)arg2;
- (id)copy;
- (id)copyAnimationChannelForKeyPath:(id)arg1 animation:(id)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)countOfAudioPlayers;
- (unsigned long long)countOfChildNodes;
- (unsigned long long)countOfParticleSystems;
- (void)dealloc;
- (id)debugQuickLookData;
- (id)debugQuickLookObject;
- (id)description;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)dump;
- (void)encodeWithCoder:(id)arg1;
- (id)entity;
- (void)enumerateChildNodesUsingBlock:(id /* block */)arg1;
- (void)enumerateHierarchyUsingBlock:(id /* block */)arg1;
- (void)enumerateNodesUsingBlock:(id /* block */)arg1;
- (struct SCNVector3 { float x1; float x2; float x3; })eulerAngles;
- (id)filters;
- (id)flattenedClone;
- (id)flattenedCopy;
- (long long)focusBehavior;
- (id)geometry;
- (id)getBoundingBox;
- (bool)getBoundingBoxMin:(struct SCNVector3 { float x1; float x2; float x3; }*)arg1 max:(struct SCNVector3 { float x1; float x2; float x3; }*)arg2;
- (id)getBoundingSphere;
- (bool)getBoundingSphereCenter:(struct SCNVector3 { float x1; float x2; float x3; }*)arg1 radius:(double*)arg2;
- (bool)getFrustum:(void *)arg1 withViewport:(void *)arg2; // needs 2 arg types, found 1: struct C3DPlane { union { struct { float x_1_2_1; float x_1_2_2; float x_1_2_3; float x_1_2_4; } x_1_1_1; } x1; }*
- (bool)hasActions;
- (bool)hidden;
- (id)hitTestWithSegmentFromPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg1 toPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg2 options:(id)arg3;
- (id)identifier;
- (unsigned long long)indexOfChildNode:(id)arg1;
- (id)init;
- (id)initPresentationNodeWithNodeRef:(struct __C3DNode { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; struct __C3DScene {} *x_1_1_6; long long x_1_1_7; } x1; struct __C3DNode {} *x2; struct __C3DNode {} *x3; struct __C3DNode {} *x4; int x5; struct { union C3DMatrix4x4 { float x_1_2_1[16]; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_1_2_2[4]; void*x_1_2_3; } x_6_1_1; union { } x_6_1_2; } x6; union { unsigned char x_7_1_1; void*x_7_1_2; long doublex_7_1_3; void*x_7_1_4; void*x_7_1_5; void*x_7_1_6; const int x_7_1_7; void*x_7_1_8; void*x_7_1_9; void*x_7_1_10; void*x_7_1_11; } *x7; bool x8; float x9; unsigned long long x10; int x11; unsigned int x12 : 1; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; }*)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithNodeRef:(struct __C3DNode { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; struct __C3DScene {} *x_1_1_6; long long x_1_1_7; } x1; struct __C3DNode {} *x2; struct __C3DNode {} *x3; struct __C3DNode {} *x4; int x5; struct { union C3DMatrix4x4 { float x_1_2_1[16]; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_1_2_2[4]; void*x_1_2_3; } x_6_1_1; union { } x_6_1_2; } x6; union { unsigned char x_7_1_1; void*x_7_1_2; long doublex_7_1_3; void*x_7_1_4; void*x_7_1_5; void*x_7_1_6; const int x_7_1_7; void*x_7_1_8; void*x_7_1_9; void*x_7_1_10; void*x_7_1_11; } *x7; bool x8; float x9; unsigned long long x10; int x11; unsigned int x12 : 1; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; }*)arg1;
- (void)insertChildNode:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertObject:(id)arg1 inAudioPlayersAtIndex:(unsigned long long)arg2;
- (void)insertObject:(id)arg1 inChildNodesAtIndex:(unsigned long long)arg2;
- (void)insertObject:(id)arg1 inParticleSystemsAtIndex:(unsigned long long)arg2;
- (bool)isAnimationForKeyPaused:(id)arg1;
- (bool)isFocusInteractionEnabled;
- (bool)isGizmo;
- (bool)isHidden;
- (bool)isHittable;
- (bool)isJoint;
- (bool)isPaused;
- (bool)isPausedOrPausedByInheritance;
- (bool)isPresentationInstance;
- (id)jsChildNodesWithAttribute:(id)arg1;
- (id)light;
- (void)localRotateBy:(struct SCNVector4 { float x1; float x2; float x3; float x4; })arg1;
- (void)localTranslateBy:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (void)lookAt:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (void)lookAt:(struct SCNVector3 { float x1; float x2; float x3; })arg1 up:(struct SCNVector3 { float x1; float x2; float x3; })arg2 localFront:(struct SCNVector3 { float x1; float x2; float x3; })arg3;
- (id)morpher;
- (long long)movabilityHint;
- (id)mutableChildNodes;
- (id)name;
- (struct __C3DNode { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; struct __C3DScene {} *x_1_1_6; long long x_1_1_7; } x1; struct __C3DNode {} *x2; struct __C3DNode {} *x3; struct __C3DNode {} *x4; int x5; struct { union C3DMatrix4x4 { float x_1_2_1[16]; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_1_2_2[4]; void*x_1_2_3; } x_6_1_1; union { } x_6_1_2; } x6; union { unsigned char x_7_1_1; void*x_7_1_2; long doublex_7_1_3; void*x_7_1_4; void*x_7_1_5; void*x_7_1_6; const int x_7_1_7; void*x_7_1_8; void*x_7_1_9; void*x_7_1_10; void*x_7_1_11; } *x7; bool x8; float x9; unsigned long long x10; int x11; unsigned int x12 : 1; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; }*)nodeRef;
- (id)objectInAudioPlayersAtIndex:(unsigned long long)arg1;
- (id)objectInChildNodesAtIndex:(unsigned long long)arg1;
- (id)objectInChildNodesWithAttribute:(id)arg1 firstOnly:(bool)arg2;
- (id)objectInChildNodesWithName:(id)arg1;
- (id)objectInParticleSystemsAtIndex:(unsigned long long)arg1;
- (double)opacity;
- (struct SCNVector4 { float x1; float x2; float x3; float x4; })orientation;
- (id)parentNode;
- (bool)parseSpecialKey:(id)arg1 withPath:(id)arg2 intoDestination:(id*)arg3;
- (id)particleSystems;
- (void)pauseAnimationForKey:(id)arg1;
- (id)physicsBody;
- (id)physicsField;
- (struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })pivot;
- (struct SCNVector3 { float x1; float x2; float x3; })position;
- (id)preferredFocusEnvironments;
- (id)presentationInstance;
- (id)presentationNode;
- (struct SCNVector4 { float x1; float x2; float x3; float x4; })quaternion;
- (void)removeActionForKey:(id)arg1;
- (void)removeAllActions;
- (void)removeAllAnimations;
- (void)removeAllAudioPlayers;
- (void)removeAllChilds;
- (void)removeAllParticleSystems;
- (void)removeAnimationForKey:(id)arg1;
- (void)removeAnimationForKey:(id)arg1 blendOutDuration:(double)arg2;
- (void)removeAnimationForKey:(id)arg1 fadeOutDuration:(double)arg2;
- (void)removeAudioPlayer:(id)arg1;
- (void)removeFromParentNode;
- (void)removeObjectFromAudioPlayersAtIndex:(unsigned long long)arg1;
- (void)removeObjectFromChildNodesAtIndex:(unsigned long long)arg1;
- (void)removeObjectFromParticleSystemsAtIndex:(unsigned long long)arg1;
- (void)removeParticleSystem:(id)arg1;
- (void)renderInContext:(void*)arg1;
- (id)rendererDelegate;
- (long long)renderingOrder;
- (void)replaceChildNode:(id)arg1 with:(id)arg2;
- (void)replaceObjectInAudioPlayerAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)replaceObjectInChildNodesAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)replaceObjectInParticleSystemsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)resumeAnimationForKey:(id)arg1;
- (void)rotateBy:(struct SCNVector4 { float x1; float x2; float x3; float x4; })arg1 aroundTarget:(struct SCNVector3 { float x1; float x2; float x3; })arg2;
- (struct SCNVector4 { float x1; float x2; float x3; float x4; })rotation;
- (long long)rotationRepresentation;
- (void)runAction:(id)arg1;
- (void)runAction:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)runAction:(id)arg1 forKey:(id)arg2;
- (void)runAction:(id)arg1 forKey:(id)arg2 completionHandler:(id /* block */)arg3;
- (struct SCNVector3 { float x1; float x2; float x3; })scale;
- (id)scene;
- (struct __C3DScene { }*)sceneRef;
- (void)setAttribute:(id)arg1 forKey:(id)arg2;
- (void)setAuthoringCameraType:(long long)arg1;
- (void)setAuthoringEnvironmentCompanionNode:(id)arg1;
- (void)setAuthoringEnvironmentNode:(bool)arg1;
- (void)setAuthoringEnvironmentPresentationNode:(id)arg1;
- (void)setBoundingBoxMin:(struct SCNVector3 { float x1; float x2; float x3; }*)arg1 max:(struct SCNVector3 { float x1; float x2; float x3; }*)arg2;
- (void)setCamera:(id)arg1;
- (void)setCastsShadow:(bool)arg1;
- (void)setCategoryBitMask:(unsigned long long)arg1;
- (void)setConstraints:(id)arg1;
- (void)setEntity:(id)arg1;
- (void)setEulerAngles:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (void)setFilters:(id)arg1;
- (void)setFocusBehavior:(long long)arg1;
- (void)setGeometry:(id)arg1;
- (void)setGizmo:(bool)arg1;
- (void)setHidden:(bool)arg1;
- (void)setHittable:(bool)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setIsJoint:(bool)arg1;
- (void)setLight:(id)arg1;
- (void)setMorpher:(id)arg1;
- (void)setMovabilityHint:(long long)arg1;
- (void)setName:(id)arg1;
- (void)setNeedsFocusUpdate;
- (void)setOpacity:(double)arg1;
- (void)setOrientation:(struct SCNVector4 { float x1; float x2; float x3; float x4; })arg1;
- (void)setPaused:(bool)arg1;
- (void)setPhysicsBody:(id)arg1;
- (void)setPhysicsField:(id)arg1;
- (void)setPivot:(struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg1;
- (void)setPosition:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (void)setQuaternion:(struct SCNVector4 { float x1; float x2; float x3; float x4; })arg1;
- (void)setRendererDelegate:(id)arg1;
- (void)setRenderingOrder:(long long)arg1;
- (void)setRotation:(struct SCNVector4 { float x1; float x2; float x3; float x4; })arg1;
- (void)setScale:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (void)setSimdEulerAngles;
- (void)setSimdOrientation:(struct { })arg1;
- (void)setSimdPivot:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1;
- (void)setSimdPosition;
- (void)setSimdRotation;
- (void)setSimdScale;
- (void)setSimdTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1;
- (void)setSimdWorldOrientation:(struct { })arg1;
- (void)setSimdWorldPosition;
- (void)setSimdWorldTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1;
- (void)setSkinner:(id)arg1;
- (void)setSpeed:(double)arg1 forAnimationKey:(id)arg2;
- (void)setTransform:(struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg1;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setWorldOrientation:(struct SCNVector4 { float x1; float x2; float x3; float x4; })arg1;
- (void)setWorldPosition:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (void)setWorldTransform:(struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg1;
- (bool)shouldUpdateFocusInContext:(id)arg1;
- (void)simdConvertPosition:(void *)arg1 fromNode:(void *)arg2; // needs 2 arg types, found 1: id
- (void)simdConvertPosition:(void *)arg1 toNode:(void *)arg2; // needs 2 arg types, found 1: id
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })simdConvertTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1 fromNode:(id)arg2;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })simdConvertTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1 toNode:(id)arg2;
- (void)simdConvertVector:(void *)arg1 fromNode:(void *)arg2; // needs 2 arg types, found 1: id
- (void)simdConvertVector:(void *)arg1 toNode:(void *)arg2; // needs 2 arg types, found 1: id
- (void)simdEulerAngles;
- (bool)simdGetBoundingSphereCenter:(/* Warning: Unrecognized filer type: '1' using 'void*' */ void**)arg1 radius:(float*)arg2;
- (void)simdLocalRotateBy:(struct { })arg1;
- (void)simdLocalTranslateBy;
- (void)simdLookAt;
- (void)simdLookAtuplocalFront;
- (struct { })simdOrientation;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })simdPivot;
- (void)simdPosition;
- (void)simdRotateBy:(void *)arg1 aroundTarget:(void *)arg2; // needs 2 arg types, found 1: struct { }
- (void)simdRotation;
- (void)simdScale;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })simdTransform;
- (void)simdWorldFront;
- (struct { })simdWorldOrientation;
- (void)simdWorldPosition;
- (void)simdWorldRight;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })simdWorldTransform;
- (void)simdWorldUp;
- (id)skinner;
- (struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })transform;
- (void)unbindAnimatablePath:(id)arg1;
- (void)updateFocusIfNeeded;
- (id)valueForKeyPath:(id)arg1;
- (id)valueForUndefinedKey:(id)arg1;
- (struct SCNVector3 { float x1; float x2; float x3; })worldFront;
- (struct SCNVector4 { float x1; float x2; float x3; float x4; })worldOrientation;
- (struct SCNVector3 { float x1; float x2; float x3; })worldPosition;
- (struct SCNVector3 { float x1; float x2; float x3; })worldRight;
- (struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })worldTransform;
- (struct SCNVector3 { float x1; float x2; float x3; })worldUp;

@end
