/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

@interface AVContentKeySession : NSObject {
    AVContentKeySessionInternal * _session;
}

@property (readonly) NSData *contentProtectionSessionIdentifier;
@property (readonly) <AVContentKeySessionDelegate> *delegate;
@property (readonly) NSObject<OS_dispatch_queue> *delegateQueue;
@property (getter=isInternal, nonatomic, readonly) bool internal;
@property (readonly) NSString *keySystem;
@property (readonly) NSURL *storageURL;

+ (id)_uniqueIDForCyptorUUID:(id)arg1 cryptorKeyRequestID:(unsigned long long)arg2;
+ (id)contentKeySessionWithKeySystem:(id)arg1;
+ (id)contentKeySessionWithKeySystem:(id)arg1 storageDirectoryAtURL:(id)arg2;
+ (struct OpaqueFigSecureStopManager { }*)copyDefaultSecureStopManagerForAppIdentifier:(id)arg1 storageDirectoryAtURL:(id)arg2;
+ (void)initialize;
+ (id)pendingExpiredSessionReportsWithAppIdentifier:(id)arg1 storageDirectoryAtURL:(id)arg2;
+ (void)removePendingExpiredSessionReports:(id)arg1 withAppIdentifier:(id)arg2 storageDirectoryAtURL:(id)arg3;

- (id)_contentKeyRequestForCryptorUUID:(id)arg1 cryptorKeyRequestID:(unsigned long long)arg2;
- (const struct OpaqueFigContentKeySession { }*)_figContentKeySession;
- (void)_handleKeyResponseError:(id)arg1 forCryptorUUID:(id)arg2 andCryptorKeyRequestID:(unsigned long long)arg3;
- (void)_handleKeyResponseSuccessfullyProcessedForCryptorUUID:(id)arg1 andCryptorKeyRequestID:(unsigned long long)arg2;
- (void)_handleRequest:(struct __CFDictionary { }*)arg1 withRequestID:(unsigned long long)arg2 fromHandler:(struct OpaqueFigCustomURLHandler { }*)arg3 willHandleRequest:(bool*)arg4;
- (void)_handleSecureStopDidFinalizeRecordCallback;
- (void)_handleUpdateToPersistentKey:(id)arg1 forKeyIdentifier:(id)arg2;
- (id)_internalQueue;
- (void)_invokeDelegateCallbackWithBlock:(id /* block */)arg1 synchronouslyWhenDelegateQueueIsNULL:(bool)arg2;
- (void)_removeContentKeyRequestForCryptorUUID:(id)arg1 cryptorKeyRequestID:(unsigned long long)arg2;
- (void)_sendFinishLoadingForPreloadedKeyRequest:(struct __CFDictionary { }*)arg1 withRequestID:(unsigned long long)arg2 fromHandler:(struct OpaqueFigCustomURLHandler { }*)arg3;
- (void)_setContentKeyRequest:(id)arg1 forCryptorUUID:(id)arg2 cryptorKeyRequestID:(unsigned long long)arg3;
- (id)_weakReference;
- (void)_willDeallocOrFinalize;
- (void)addContentKeyRecipient:(id)arg1;
- (bool)clientCanReceivePersistableContentKeyRequest;
- (id)contentKeyRecipients;
- (id)contentProtectionSessionIdentifier;
- (const struct OpaqueFigCPECryptor { }*)copyDecryptorForIdentifier:(id)arg1 initializationData:(id)arg2;
- (int)createAndInstallCustomURLHandlerForAsset:(id)arg1 outHandler:(struct OpaqueFigCustomURLHandler {}**)arg2;
- (id)createCryptorOptionsForIdentifier:(id)arg1 initializationData:(id)arg2 formatDescription:(struct opaqueCMFormatDescription { }*)arg3 hlsMethod:(id)arg4;
- (const struct OpaqueFigCPECryptor { }*)createDecryptorIfNecessaryForIdentifier:(id)arg1 initializationData:(id)arg2 formatDescription:(struct opaqueCMFormatDescription { }*)arg3 hlsMethod:(id)arg4 error:(id*)arg5;
- (void)createProtectorSessionIdentifierIfNecessary;
- (void)dealloc;
- (id)delegate;
- (id)delegateQueue;
- (void)expire;
- (void)finalize;
- (bool)hasProtector;
- (id)init;
- (id)initWithKeySystem:(id)arg1 storageDirectoryAtURL:(id)arg2;
- (id)initWithKeySystem:(id)arg1 storageDirectoryAtURL:(id)arg2 internal:(bool)arg3;
- (id)initWithStorageDirectoryAtURL:(id)arg1;
- (void)invalidateAllPersistableContentKeysForApp:(id)arg1 options:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)invalidatePersistableContentKey:(id)arg1 options:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)isInternal;
- (void)issueContentKeyRequest:(id)arg1 forKeyRenewal:(bool)arg2;
- (id)issueContentKeyRequestForInitializationData:(id)arg1;
- (void)issueContentKeyRequestWithCustomURLHandler:(struct OpaqueFigCustomURLHandler { }*)arg1 identifier:(id)arg2 requestInfo:(struct __CFDictionary { }*)arg3 requestID:(unsigned long long)arg4 providesPersistableKey:(bool)arg5;
- (void)issueContentKeyRequestWithCustomURLProviderContext:(id)arg1 identifier:(id)arg2 initializationData:(id)arg3 providesPersistableKey:(bool)arg4;
- (void)issueContentKeyRequestWithPreloadingRequestOptions:(id)arg1 identifier:(id)arg2 initializationData:(id)arg3 providesPersistableKey:(bool)arg4;
- (id)keySystem;
- (void)makeSecureTokenForExpirationDateOfPersistableContentKey:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)processContentKeyRequestWithIdentifier:(id)arg1 initializationData:(id)arg2 options:(id)arg3;
- (void)removeContentKeyRecipient:(id)arg1;
- (void)renewExpiringResponseDataForContentKeyRequest:(id)arg1;
- (int)setAppIdentifier:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegate:(id)arg1 queue:(id)arg2;
- (id)storageURL;

@end
