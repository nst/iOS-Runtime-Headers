/* Generated by RuntimeBrowser
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDWiFiMetricsManagerSoftError : PBCodable <NSCopying> {
    NSData * _apOUI;
    NSString * _appId;
    unsigned int  _batteryChargeLevel;
    AWDWiFiMetricsManagerBTCoexModeChange * _btCoexModeChange;
    AWDWiFiMetricsManagerBTCoexStats * _btCoexStats;
    unsigned int  _channel;
    AWDWiFiMetricsManagerChipCounters * _chipCounters;
    NSMutableArray * _chipCountersPerSlices;
    struct { 
        unsigned int sample1TimeStamp : 1; 
        unsigned int sample2TimeStamp : 1; 
        unsigned int timestamp : 1; 
        unsigned int batteryChargeLevel : 1; 
        unsigned int channel : 1; 
        unsigned int lastSoftErrorUserFeedbk : 1; 
        unsigned int motionState : 1; 
        unsigned int sample1Cca : 1; 
        unsigned int sample1Rssi : 1; 
        unsigned int sample1Snr : 1; 
        unsigned int sample2Cca : 1; 
        unsigned int sample2Rssi : 1; 
        unsigned int sample2Snr : 1; 
        unsigned int softErrorType : 1; 
        unsigned int inCar : 1; 
        unsigned int lowPowerMode : 1; 
    }  _has;
    bool  _inCar;
    unsigned int  _lastSoftErrorUserFeedbk;
    bool  _lowPowerMode;
    unsigned int  _motionState;
    int  _sample1Cca;
    int  _sample1Rssi;
    int  _sample1Snr;
    unsigned long long  _sample1TimeStamp;
    int  _sample2Cca;
    int  _sample2Rssi;
    int  _sample2Snr;
    unsigned long long  _sample2TimeStamp;
    unsigned int  _softErrorType;
    unsigned long long  _timestamp;
}

@property (nonatomic, retain) NSData *apOUI;
@property (nonatomic, retain) NSString *appId;
@property (nonatomic) unsigned int batteryChargeLevel;
@property (nonatomic, retain) AWDWiFiMetricsManagerBTCoexModeChange *btCoexModeChange;
@property (nonatomic, retain) AWDWiFiMetricsManagerBTCoexStats *btCoexStats;
@property (nonatomic) unsigned int channel;
@property (nonatomic, retain) AWDWiFiMetricsManagerChipCounters *chipCounters;
@property (nonatomic, retain) NSMutableArray *chipCountersPerSlices;
@property (nonatomic, readonly) bool hasApOUI;
@property (nonatomic, readonly) bool hasAppId;
@property (nonatomic) bool hasBatteryChargeLevel;
@property (nonatomic, readonly) bool hasBtCoexModeChange;
@property (nonatomic, readonly) bool hasBtCoexStats;
@property (nonatomic) bool hasChannel;
@property (nonatomic, readonly) bool hasChipCounters;
@property (nonatomic) bool hasInCar;
@property (nonatomic) bool hasLastSoftErrorUserFeedbk;
@property (nonatomic) bool hasLowPowerMode;
@property (nonatomic) bool hasMotionState;
@property (nonatomic) bool hasSample1Cca;
@property (nonatomic) bool hasSample1Rssi;
@property (nonatomic) bool hasSample1Snr;
@property (nonatomic) bool hasSample1TimeStamp;
@property (nonatomic) bool hasSample2Cca;
@property (nonatomic) bool hasSample2Rssi;
@property (nonatomic) bool hasSample2Snr;
@property (nonatomic) bool hasSample2TimeStamp;
@property (nonatomic) bool hasSoftErrorType;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool inCar;
@property (nonatomic) unsigned int lastSoftErrorUserFeedbk;
@property (nonatomic) bool lowPowerMode;
@property (nonatomic) unsigned int motionState;
@property (nonatomic) int sample1Cca;
@property (nonatomic) int sample1Rssi;
@property (nonatomic) int sample1Snr;
@property (nonatomic) unsigned long long sample1TimeStamp;
@property (nonatomic) int sample2Cca;
@property (nonatomic) int sample2Rssi;
@property (nonatomic) int sample2Snr;
@property (nonatomic) unsigned long long sample2TimeStamp;
@property (nonatomic) unsigned int softErrorType;
@property (nonatomic) unsigned long long timestamp;

+ (Class)chipCountersPerSliceType;

- (void)addChipCountersPerSlice:(id)arg1;
- (id)apOUI;
- (id)appId;
- (unsigned int)batteryChargeLevel;
- (id)btCoexModeChange;
- (id)btCoexStats;
- (unsigned int)channel;
- (id)chipCounters;
- (id)chipCountersPerSliceAtIndex:(unsigned long long)arg1;
- (id)chipCountersPerSlices;
- (unsigned long long)chipCountersPerSlicesCount;
- (void)clearChipCountersPerSlices;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasApOUI;
- (bool)hasAppId;
- (bool)hasBatteryChargeLevel;
- (bool)hasBtCoexModeChange;
- (bool)hasBtCoexStats;
- (bool)hasChannel;
- (bool)hasChipCounters;
- (bool)hasInCar;
- (bool)hasLastSoftErrorUserFeedbk;
- (bool)hasLowPowerMode;
- (bool)hasMotionState;
- (bool)hasSample1Cca;
- (bool)hasSample1Rssi;
- (bool)hasSample1Snr;
- (bool)hasSample1TimeStamp;
- (bool)hasSample2Cca;
- (bool)hasSample2Rssi;
- (bool)hasSample2Snr;
- (bool)hasSample2TimeStamp;
- (bool)hasSoftErrorType;
- (bool)hasTimestamp;
- (unsigned long long)hash;
- (bool)inCar;
- (bool)isEqual:(id)arg1;
- (unsigned int)lastSoftErrorUserFeedbk;
- (bool)lowPowerMode;
- (void)mergeFrom:(id)arg1;
- (unsigned int)motionState;
- (bool)readFrom:(id)arg1;
- (int)sample1Cca;
- (int)sample1Rssi;
- (int)sample1Snr;
- (unsigned long long)sample1TimeStamp;
- (int)sample2Cca;
- (int)sample2Rssi;
- (int)sample2Snr;
- (unsigned long long)sample2TimeStamp;
- (void)setApOUI:(id)arg1;
- (void)setAppId:(id)arg1;
- (void)setBatteryChargeLevel:(unsigned int)arg1;
- (void)setBtCoexModeChange:(id)arg1;
- (void)setBtCoexStats:(id)arg1;
- (void)setChannel:(unsigned int)arg1;
- (void)setChipCounters:(id)arg1;
- (void)setChipCountersPerSlices:(id)arg1;
- (void)setHasBatteryChargeLevel:(bool)arg1;
- (void)setHasChannel:(bool)arg1;
- (void)setHasInCar:(bool)arg1;
- (void)setHasLastSoftErrorUserFeedbk:(bool)arg1;
- (void)setHasLowPowerMode:(bool)arg1;
- (void)setHasMotionState:(bool)arg1;
- (void)setHasSample1Cca:(bool)arg1;
- (void)setHasSample1Rssi:(bool)arg1;
- (void)setHasSample1Snr:(bool)arg1;
- (void)setHasSample1TimeStamp:(bool)arg1;
- (void)setHasSample2Cca:(bool)arg1;
- (void)setHasSample2Rssi:(bool)arg1;
- (void)setHasSample2Snr:(bool)arg1;
- (void)setHasSample2TimeStamp:(bool)arg1;
- (void)setHasSoftErrorType:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setInCar:(bool)arg1;
- (void)setLastSoftErrorUserFeedbk:(unsigned int)arg1;
- (void)setLowPowerMode:(bool)arg1;
- (void)setMotionState:(unsigned int)arg1;
- (void)setSample1Cca:(int)arg1;
- (void)setSample1Rssi:(int)arg1;
- (void)setSample1Snr:(int)arg1;
- (void)setSample1TimeStamp:(unsigned long long)arg1;
- (void)setSample2Cca:(int)arg1;
- (void)setSample2Rssi:(int)arg1;
- (void)setSample2Snr:(int)arg1;
- (void)setSample2TimeStamp:(unsigned long long)arg1;
- (void)setSoftErrorType:(unsigned int)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (unsigned int)softErrorType;
- (unsigned long long)timestamp;
- (void)writeTo:(id)arg1;

@end
