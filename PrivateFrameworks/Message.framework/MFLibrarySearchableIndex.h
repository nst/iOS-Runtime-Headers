/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Message.framework/Message
 */

@interface MFLibrarySearchableIndex : NSObject <CSSearchableIndexDelegate, MFDiagnosticsGenerator, MFLibrarySearchableIndexVerifierDataSource> {
    NSObject<OS_os_activity> * _batchIndexingActivity;
    MFCoalescer * _budgetCoalescer;
    _MFLibrarySearchableIndexBudgetConfiguration * _budgetConfiguration;
    MFCancelationToken * _cancelationToken;
    bool  _clientStateFetched;
    bool  _coalesceTimerFired;
    NSObject<OS_dispatch_source> * _coalescingTimer;
    CSSearchableIndex * _csIndex;
    unsigned long long  _currentMaximumBatchSize;
    <MFLibrarySearchableIndexDataSource> * _dataSource;
    NSObject<OS_dispatch_queue> * _dataSourceQueue;
    NSString * _indexName;
    <MFScheduler> * _indexingBatchScheduler;
    NSObject<OS_dispatch_queue> * _indexingQueue;
    bool  _isActive;
    bool  _isForeground;
    MFWeakSet * _middleware;
    bool  _needsRefresh;
    bool  _needsVerification;
    NSMutableSet * _pendingDomainRemovals;
    _MFLibrarySearchableIndexPendingRemovals * _pendingIdentifierRemovals;
    NSMutableArray * _pendingItems;
    NSObject<OS_dispatch_queue> * _queue;
    double  _remainingIndexingBudget;
    long long  _remainingIndexingBudgetOverage;
    long long  _resumeCount;
    bool  _scheduledProcessing;
    bool  _scheduledRefresh;
    bool  _scheduledVerification;
    MFLazyCache * _searchResultsCache;
    unsigned long long  _throttledDataSourceBatchSize;
    unsigned long long  _throttledIndexingBatchSize;
    long long  _transaction;
}

@property (nonatomic, readonly) _MFLibrarySearchableIndexBudgetConfiguration *budgetConfiguration;
@property (nonatomic, retain) CSSearchableIndex *csIndex;
@property (nonatomic) <MFLibrarySearchableIndexDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=_isForeground, setter=_setForeground:, nonatomic) bool foreground;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) unsigned long long pendingIndexItemsCount;
@property (readonly) Class superclass;
@property (getter=_transaction, readonly) long long transaction;

+ (id)_localClientState;
+ (id)_localClientStateURL;
+ (void)_saveLocalClientState:(id)arg1;

- (id)_budgetPersistenceKey;
- (void)_coalescingTimerFired;
- (id)_consumeBatchOfSize:(unsigned long long)arg1;
- (void)_dataSourceAssignTransaction:(long long)arg1 forIdentifiers:(id)arg2 completion:(id /* block */)arg3;
- (void)_dataSourceAssignTransaction:(long long)arg1 updates:(id)arg2 completion:(id /* block */)arg3;
- (void)_dataSourceInvalidateItemsGreaterThanTransaction:(long long)arg1 completion:(id /* block */)arg2;
- (void)_dataSourceRequestNeededUpdatesWithCompletion:(id /* block */)arg1;
- (void)_dataSourceScheduleWork:(id /* block */)arg1;
- (void)_dataSourceVerifyRepresentativeSampleWithCompletion:(id /* block */)arg1;
- (void)_fetchLastClientState;
- (void)_getDomainRemovals:(id*)arg1 identifierRemovals:(id*)arg2;
- (void)_indexItems:(id)arg1 fromRefresh:(bool)arg2;
- (void)_invalidateCache;
- (bool)_isForeground;
- (void)_logIndexingPowerEventWithIdentifier:(id)arg1 additionalEventData:(id)arg2 usePersistentLog:(bool)arg3;
- (long long)_nextTransaction;
- (void)_noteNeedsLastClientStateFetch;
- (void)_persistRemainingIndexingBudgetValue:(id)arg1;
- (void)_powerStateChanged;
- (id)_processDomainRemovals:(id)arg1;
- (void)_processIdentifierRemovals:(id)arg1;
- (void)_processIndexingBatch:(id)arg1 clientState:(id)arg2;
- (void)_processRefreshRequestWithCompletion:(id /* block */)arg1;
- (void)_processSpotlightVerificationWithCompletion:(id /* block */)arg1;
- (void)_queueConsumeBudgetElapsedPeriod:(double)arg1;
- (void)_queueConsumeBudgetItemCount:(unsigned long long)arg1;
- (void)_queueRefresh;
- (void)_queueTransitionActive:(bool)arg1;
- (void)_registerDistantFutureSpotlightVerification;
- (void)_reindexAllSearchableItemsWithOptions:(unsigned long long)arg1 acknowledgementHandler:(id /* block */)arg2;
- (void)_resetIndexingBudgetTimer;
- (void)_scheduleDataSourceRefresh;
- (void)_scheduleProcessPendingItems;
- (void)_scheduleResetIndexingBudgetTimer;
- (void)_scheduleSpotlightVerification;
- (void)_scheduleSpotlightVerificationOnIndexingQueueWithCompletion:(id /* block */)arg1;
- (void)_setForeground:(bool)arg1;
- (void)_startCoalescingTimer;
- (void)_stopCoalescingTimer;
- (double)_throttleRequestedSize:(unsigned long long*)arg1 action:(id /* block */)arg2;
- (long long)_transaction;
- (void)_transitionWithBudgetTimeUsed:(double)arg1;
- (void)_verifySpotlightIndex;
- (void)addMiddleware:(id)arg1;
- (void)applicationWillResume;
- (void)applicationWillSuspend;
- (id)budgetConfiguration;
- (id)copyDiagnosticInformation;
- (id)csIndex;
- (id)dataSamplesForSearchableIndexVerifier:(id)arg1 searchableIndex:(id)arg2;
- (id)dataSource;
- (void)dealloc;
- (id)identifiersMatchingCriterion:(id)arg1;
- (void)indexItems:(id)arg1;
- (id)indexedEmptySubjectIdentifers;
- (id)initWithName:(id)arg1 dataSource:(id)arg2;
- (id)librarySearchableIndexForSearchableIndexVerifier:(id)arg1;
- (unsigned long long)pendingIndexItemsCount;
- (double)persistedRemainingIndexingBudget;
- (void)refresh;
- (void)reindexAllSearchableItemsWithAcknowledgementHandler:(id /* block */)arg1;
- (void)reindexSearchableItemsWithIdentifiers:(id)arg1 acknowledgementHandler:(id /* block */)arg2;
- (void)removeAllItems;
- (void)removeItemsForDomainIdentifier:(id)arg1;
- (void)removeItemsWithIdentifiers:(id)arg1;
- (void)removeItemsWithIdentifiers:(id)arg1 reasons:(id)arg2;
- (id)requestSpotlightDiagnosticsForMessageRowId:(id)arg1;
- (void)resume;
- (void)searchableIndex:(id)arg1 reindexAllSearchableItemsWithAcknowledgementHandler:(id /* block */)arg2;
- (void)searchableIndex:(id)arg1 reindexSearchableItemsWithIdentifiers:(id)arg2 acknowledgementHandler:(id /* block */)arg3;
- (void)setCsIndex:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setRemainingIndexingBudget:(double)arg1 shouldPersist:(bool)arg2;
- (void)suspend;

@end
