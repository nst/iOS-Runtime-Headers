/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SearchUI.framework/SearchUI
 */

@interface SearchUISiriPlayButtonViewController : SearchUIAccessoryViewController <MPRequestResponseControllerDelegate, NUIContainerStackViewDelegate> {
    UILabel * _captionLabel;
    struct CGSize { 
        double width; 
        double height; 
    }  _captionLabelSize;
    long long  _currentAlbumPersistentID;
    long long  _currentArtistPersistentID;
    long long  _currentSongPersistentID;
    NSString * _currentStoreIdentifier;
    struct { 
        double snapshotTime; 
        double startTime; 
        double endTime; 
        double duration; 
        double elapsedDuration; 
        float rate; 
        float defaultRate; 
        bool isLiveContent; 
        bool isLoading; 
    }  _durationSnapshot;
    MPRequestResponseController * _mediaController;
    long long  _mediaEntityType;
    long long  _persistentID;
    SearchUIButton * _playButton;
    struct CGSize { 
        double width; 
        double height; 
    }  _playButtonSize;
    SFPunchout * _punchout;
    NSString * _spotlightIdentifier;
    NSArray * _storeIdentifiers;
    NSTimer * _timer;
}

@property (nonatomic, retain) UILabel *captionLabel;
@property (nonatomic) struct CGSize { double x1; double x2; } captionLabelSize;
@property (nonatomic) long long currentAlbumPersistentID;
@property (nonatomic) long long currentArtistPersistentID;
@property (nonatomic) long long currentSongPersistentID;
@property (nonatomic, retain) NSString *currentStoreIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) struct { double x1; double x2; double x3; double x4; double x5; float x6; float x7; bool x8; bool x9; } durationSnapshot;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) MPRequestResponseController *mediaController;
@property (nonatomic) long long mediaEntityType;
@property (nonatomic) long long persistentID;
@property (nonatomic, retain) SearchUIButton *playButton;
@property (nonatomic) struct CGSize { double x1; double x2; } playButtonSize;
@property (nonatomic, retain) SFPunchout *punchout;
@property (nonatomic, retain) NSString *spotlightIdentifier;
@property (nonatomic, retain) NSArray *storeIdentifiers;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSTimer *timer;

+ (id)font;
+ (void)getPersistentID:(long long*)arg1 andEntityType:(long long*)arg2 forSpotlightIdentifier:(id)arg3;
+ (id)playerRequest;
+ (bool)supportsResult:(id)arg1;
+ (bool)verifyMediaForResult:(id)arg1;

- (void).cxx_destruct;
- (void)buttonPressed;
- (id)captionLabel;
- (struct CGSize { double x1; double x2; })captionLabelSize;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })containerView:(id)arg1 layoutFrameForArrangedSubview:(id)arg2 withProposedFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (struct CGSize { double x1; double x2; })containerView:(id)arg1 systemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg2 forArrangedSubview:(id)arg3;
- (void)containerViewDidInvalidateIntrinsicContentSize:(id)arg1;
- (void)controller:(id)arg1 defersResponseReplacement:(id /* block */)arg2;
- (void)createTimerIfNeeded;
- (long long)currentAlbumPersistentID;
- (long long)currentArtistPersistentID;
- (bool)currentPersistentIDMatchesPersistentID:(long long)arg1 forType:(long long)arg2;
- (long long)currentSongPersistentID;
- (id)currentStoreIdentifier;
- (void)dealloc;
- (id)description;
- (struct { double x1; double x2; double x3; double x4; double x5; float x6; float x7; bool x8; bool x9; })durationSnapshot;
- (id)initWithUIStyle:(unsigned long long)arg1 cell:(id)arg2;
- (void)invalidateTimerIfNeeded;
- (bool)matchesNowPlayingAudioItem;
- (id)mediaController;
- (long long)mediaEntityType;
- (long long)persistentID;
- (id)playButton;
- (struct CGSize { double x1; double x2; })playButtonSize;
- (id)punchout;
- (void)sendEngagementDidPunchout:(bool)arg1;
- (void)setCaptionLabel:(id)arg1;
- (void)setCaptionLabelSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setCurrentAlbumPersistentID:(long long)arg1;
- (void)setCurrentArtistPersistentID:(long long)arg1;
- (void)setCurrentSongPersistentID:(long long)arg1;
- (void)setCurrentStoreIdentifier:(id)arg1;
- (void)setDurationSnapshot:(struct { double x1; double x2; double x3; double x4; double x5; float x6; float x7; bool x8; bool x9; })arg1;
- (void)setMediaController:(id)arg1;
- (void)setMediaEntityType:(long long)arg1;
- (void)setPersistentID:(long long)arg1;
- (void)setPlayButton:(id)arg1;
- (void)setPlayButtonSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPunchout:(id)arg1;
- (void)setSpotlightIdentifier:(id)arg1;
- (void)setStoreIdentifiers:(id)arg1;
- (void)setTimer:(id)arg1;
- (id)setupViewWithStyle:(unsigned long long)arg1;
- (bool)shouldTopAlignForAccessibilityContentSizes;
- (id)spotlightIdentifier;
- (id)storeIdentifiers;
- (id)timer;
- (void)togglePlaybackState;
- (void)updateButtonProgressAnimated:(bool)arg1;
- (void)updatePlayState;
- (bool)updateTimerPause;
- (void)updateWithResult:(id)arg1;
- (void)willHide;

@end
