/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKTrafficIncident : NSObject <NSCopying> {
    NSString * _crossStreet;
    NSDate * _endDate;
    NSString * _info;
    bool  _isNotForDisplay;
    bool  _isOnSelectedRoute;
    NSDate * _lastUpdatedDate;
    struct { 
        double latitude; 
        double longitude; 
    }  _location;
    float  _maxZoom;
    float  _minZoom;
    struct PolylineCoordinate { 
        unsigned int index; 
        float offset; 
    }  _routeOffset;
    unsigned int  _routeOffsetInMeters;
    long long  _routeRelevance;
    long long  _significance;
    NSDate * _startDate;
    NSString * _street;
    NSString * _subtitle;
    NSString * _title;
    long long  _type;
    unsigned long long  _uniqueID;
    NSString * _uniqueString;
    struct Matrix<double, 3, 1> { 
        double _e[3]; 
    }  _worldPoint;
}

@property (nonatomic, readonly) NSString *crossStreet;
@property (nonatomic, readonly) NSDate *endDate;
@property (nonatomic, readonly) NSString *info;
@property (nonatomic, readonly) bool isNotForDisplay;
@property (nonatomic) bool isOnSelectedRoute;
@property (nonatomic, readonly) NSDate *lastUpdatedDate;
@property (nonatomic, readonly) float maxZoom;
@property (nonatomic, readonly) float minZoom;
@property (nonatomic) struct PolylineCoordinate { unsigned int x1; float x2; } routeOffset;
@property (nonatomic) unsigned int routeOffsetInMeters;
@property (nonatomic) long long routeRelevance;
@property (nonatomic, readonly) long long significance;
@property (nonatomic, readonly) NSDate *startDate;
@property (nonatomic, readonly) NSString *street;
@property (nonatomic, readonly, copy) NSString *subtitle;
@property (nonatomic, readonly, copy) NSString *title;
@property (nonatomic, readonly) long long type;
@property (nonatomic, readonly) unsigned long long uniqueID;
@property (nonatomic, readonly) NSString *uniqueString;
@property (nonatomic, readonly) struct Mercator2<double> { double x1[2]; } worldPoint;

- (id).cxx_construct;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)crossStreet;
- (void)dealloc;
- (id)endDate;
- (bool)hasSameIdentifier:(id)arg1;
- (id)info;
- (id)initWithIncidentData:(const struct Incident { struct GeoCoordinates { struct Longitude { unsigned int x_1_2_1; } x_1_1_1; struct Latitude { unsigned int x_2_2_1; } x_1_1_2; } x1; struct String { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_2_1_1; } x2; struct String { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_3_1_1; } x3; }*)arg1 worldPoint:(struct Matrix<double, 3, 1> { double x1[3]; }*)arg2;
- (id)initWithRouteIncident:(id)arg1 routeRelevance:(long long)arg2;
- (bool)isNotForDisplay;
- (bool)isOnSelectedRoute;
- (id)lastUpdatedDate;
- (float)maxZoom;
- (float)minZoom;
- (struct PolylineCoordinate { unsigned int x1; float x2; })routeOffset;
- (unsigned int)routeOffsetInMeters;
- (long long)routeRelevance;
- (void)setIsOnSelectedRoute:(bool)arg1;
- (void)setRouteOffset:(struct PolylineCoordinate { unsigned int x1; float x2; })arg1;
- (void)setRouteOffsetInMeters:(unsigned int)arg1;
- (void)setRouteRelevance:(long long)arg1;
- (long long)significance;
- (id)startDate;
- (id)street;
- (id)subtitle;
- (id)title;
- (long long)type;
- (unsigned long long)uniqueID;
- (id)uniqueString;
- (struct Mercator2<double> { double x1[2]; })worldPoint;

@end
