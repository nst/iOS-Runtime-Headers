/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CacheDelete.framework/CacheDelete
 */

@interface CacheDeleteServiceListener : CacheDeleteListener <CacheDeleteServiceProtocol, NSXPCListenerDelegate> {
    bool  _anonymous;
    id  _callback;
    id  _cancel;
    NSXPCListenerEndpoint * _endpoint;
    bool  _legacyCallbacks;
    id  _notify;
    id  _periodic;
    id  _purge;
    id  _purgeable;
    NSObject<OS_dispatch_queue> * _queue;
    CacheDeleteServiceInfo * _serviceInfo;
}

@property (readonly) bool anonymous;
@property (nonatomic, copy) id callback;
@property (nonatomic, copy) id cancel;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) NSXPCListenerEndpoint *endpoint;
@property (readonly) unsigned long long hash;
@property (readonly) bool legacyCallbacks;
@property (nonatomic, copy) id notify;
@property (nonatomic, copy) id periodic;
@property (nonatomic, copy) id purge;
@property (nonatomic, copy) id purgeable;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, readonly) CacheDeleteServiceInfo *serviceInfo;
@property (readonly) Class superclass;

+ (id)cacheDeleteServiceListener:(id)arg1 options:(id)arg2;

- (void).cxx_destruct;
- (bool)anonymous;
- (id)callback;
- (id)cancel;
- (id)endpoint;
- (id)initWithName:(id)arg1 options:(id)arg2;
- (bool)legacyCallbacks;
- (id)notify;
- (id)periodic;
- (id)purge;
- (id)purgeable;
- (id)queue;
- (void)serviceCallback:(id)arg1 replyBlock:(id)arg2;
- (void)serviceCancelPurge:(id)arg1;
- (id)serviceInfo;
- (void)serviceNotify:(id)arg1 replyBlock:(id)arg2;
- (void)servicePeriodic:(int)arg1 info:(id)arg2 replyBlock:(id)arg3;
- (void)servicePing:(id)arg1;
- (void)servicePurge:(int)arg1 info:(id)arg2 replyBlock:(id)arg3;
- (void)servicePurgeable:(int)arg1 info:(id)arg2 replyBlock:(id)arg3;
- (void)setCallback:(id)arg1;
- (void)setCancel:(id)arg1;
- (void)setNotify:(id)arg1;
- (void)setNotifyCallback:(id)arg1;
- (void)setPeriodic:(id)arg1;
- (void)setPurge:(id)arg1;
- (void)setPurgeable:(id)arg1;
- (void)setQueue:(id)arg1;

@end
