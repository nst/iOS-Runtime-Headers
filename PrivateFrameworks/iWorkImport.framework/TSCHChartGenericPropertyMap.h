/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSCHChartGenericPropertyMap : TSSPropertyMap

+ (id)imageFillProperties;
+ (id)properties;
+ (void)savePropertyMap:(id)arg1 toArchive:(struct ChartGenericPropertyMapArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<2> { unsigned int x_3_1_1[2]; } x3; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_4_1_1; } x4; struct Chart3DLightingPackageArchive {} *x5; struct Chart3DVectorArchive {} *x6; struct Chart3DVectorArchive {} *x7; struct Chart3DVectorArchive {} *x8; struct FillArchive {} *x9; struct StrokeArchive {} *x10; struct ShadowArchive {} *x11; struct StrokeArchive {} *x12; struct FillArchive {} *x13; struct Color {} *x14; int x15; float x16; float x17; float x18; bool x19; bool x20; bool x21; bool x22; int x23; float x24; int x25; int x26; float x27; float x28; float x29; float x30; int x31; float x32; float x33; bool x34; bool x35; bool x36; bool x37; bool x38; int x39; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_40_1_1; } x40; }*)arg2 archiver:(id)arg3;

- (id)initWithArchive:(const struct ChartGenericPropertyMapArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<2> { unsigned int x_3_1_1[2]; } x3; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_4_1_1; } x4; struct Chart3DLightingPackageArchive {} *x5; struct Chart3DVectorArchive {} *x6; struct Chart3DVectorArchive {} *x7; struct Chart3DVectorArchive {} *x8; struct FillArchive {} *x9; struct StrokeArchive {} *x10; struct ShadowArchive {} *x11; struct StrokeArchive {} *x12; struct FillArchive {} *x13; struct Color {} *x14; int x15; float x16; float x17; float x18; bool x19; bool x20; bool x21; bool x22; int x23; float x24; int x25; int x26; float x27; float x28; float x29; float x30; int x31; float x32; float x33; bool x34; bool x35; bool x36; bool x37; bool x38; int x39; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_40_1_1; } x40; }*)arg1 unarchiver:(id)arg2;
- (void)saveToArchive:(struct ChartGenericPropertyMapArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<2> { unsigned int x_3_1_1[2]; } x3; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_4_1_1; } x4; struct Chart3DLightingPackageArchive {} *x5; struct Chart3DVectorArchive {} *x6; struct Chart3DVectorArchive {} *x7; struct Chart3DVectorArchive {} *x8; struct FillArchive {} *x9; struct StrokeArchive {} *x10; struct ShadowArchive {} *x11; struct StrokeArchive {} *x12; struct FillArchive {} *x13; struct Color {} *x14; int x15; float x16; float x17; float x18; bool x19; bool x20; bool x21; bool x22; int x23; float x24; int x25; int x26; float x27; float x28; float x29; float x30; int x31; float x32; float x33; bool x34; bool x35; bool x36; bool x37; bool x38; int x39; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_40_1_1; } x40; }*)arg1 archiver:(id)arg2;

@end
