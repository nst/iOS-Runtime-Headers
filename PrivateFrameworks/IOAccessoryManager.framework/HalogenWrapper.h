/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/IOAccessoryManager.framework/IOAccessoryManager
 */

@interface HalogenWrapper : NSObject {
    bool  _accessoryConnectedWhileWet;
    NSCondition * _cond;
    unsigned long long  _connectedAccessoryDigitalID;
    int  _connectedAccessoryOrientation;
    NSData * _connectedAccessoryPDigitalID;
    bool  _didConfidentNotify;
    bool  _didHighConfidentNotify;
    bool  _didNotify;
    bool  _didWetDuration;
    bool  _didWetTooLong;
    unsigned long long  _dryCnt;
    unsigned long long  _dryPollingIntervalNs;
    unsigned long long  _eventBasedDigitalID;
    int  _eventBasedOrientation;
    NSData * _eventBasedPDigitalID;
    unsigned long long  _firstDryTimestamp;
    HalogenMeasurement * _halogenMeasurement;
    NSObject<OS_dispatch_queue> * _halogenMeasurementDispatchQueue;
    NSObject<OS_dispatch_queue> * _halogenTtrDispatchQueue;
    bool  _isHeadsetConnected;
    bool  _isMeasurementActive;
    bool  _isMeasurementEnabled;
    bool  _isReceptacleEmpty;
    bool  _isTapToRadarPending;
    bool  _isTimestampValid;
    bool  _isWet;
    unsigned long long  _measurementCancellationDebounceCnt;
    unsigned long long  _minDryReadings;
    int  _pinID;
    int  _portID;
    unsigned int  _service;
    NSObject<OS_dispatch_source> * _timer;
    bool  _wasTapToRadarShown;
    unsigned long long  _wetAccessoryAttachTimestamp;
    unsigned long long  _wetDryTransitionTimestamp;
    unsigned long long  _wetPollingIntervalNs;
}

@property (nonatomic) bool accessoryConnectedWhileWet;
@property (nonatomic) NSCondition *cond;
@property (nonatomic) unsigned long long connectedAccessoryDigitalID;
@property (nonatomic) int connectedAccessoryOrientation;
@property (nonatomic) NSData *connectedAccessoryPDigitalID;
@property (nonatomic) bool didConfidentNotify;
@property (nonatomic) bool didHighConfidentNotify;
@property (nonatomic) bool didNotify;
@property (nonatomic) bool didWetDuration;
@property (nonatomic) bool didWetTooLong;
@property (nonatomic) unsigned long long dryCnt;
@property (nonatomic) unsigned long long dryPollingIntervalNs;
@property (nonatomic) unsigned long long eventBasedDigitalID;
@property (nonatomic) int eventBasedOrientation;
@property (nonatomic) NSData *eventBasedPDigitalID;
@property (nonatomic) unsigned long long firstDryTimestamp;
@property (nonatomic) HalogenMeasurement *halogenMeasurement;
@property (nonatomic) NSObject<OS_dispatch_queue> *halogenMeasurementDispatchQueue;
@property (nonatomic) NSObject<OS_dispatch_queue> *halogenTtrDispatchQueue;
@property (nonatomic) bool isHeadsetConnected;
@property (nonatomic) bool isMeasurementActive;
@property (nonatomic) bool isMeasurementEnabled;
@property (nonatomic) bool isReceptacleEmpty;
@property (nonatomic) bool isTapToRadarPending;
@property (nonatomic) bool isTimestampValid;
@property (nonatomic) bool isWet;
@property (nonatomic) unsigned long long measurementCancellationDebounceCnt;
@property (nonatomic) unsigned long long minDryReadings;
@property (nonatomic) int pinID;
@property (nonatomic) int portID;
@property (nonatomic) unsigned int service;
@property (nonatomic) NSObject<OS_dispatch_source> *timer;
@property (nonatomic) bool wasTapToRadarShown;
@property (nonatomic) unsigned long long wetAccessoryAttachTimestamp;
@property (nonatomic) unsigned long long wetDryTransitionTimestamp;
@property (nonatomic) unsigned long long wetPollingIntervalNs;

- (bool)accessoryConnectedWhileWet;
- (id)cond;
- (unsigned long long)connectedAccessoryDigitalID;
- (int)connectedAccessoryOrientation;
- (id)connectedAccessoryPDigitalID;
- (void)dealloc;
- (bool)didConfidentNotify;
- (bool)didHighConfidentNotify;
- (bool)didNotify;
- (bool)didWetDuration;
- (bool)didWetTooLong;
- (unsigned long long)dryCnt;
- (unsigned long long)dryPollingIntervalNs;
- (unsigned long long)eventBasedDigitalID;
- (int)eventBasedOrientation;
- (id)eventBasedPDigitalID;
- (unsigned long long)firstDryTimestamp;
- (id)halogenMeasurement;
- (id)halogenMeasurementDispatchQueue;
- (id)halogenTtrDispatchQueue;
- (id)init;
- (bool)isHeadsetConnected;
- (bool)isMeasurementActive;
- (bool)isMeasurementEnabled;
- (bool)isReceptacleEmpty;
- (bool)isTapToRadarPending;
- (bool)isTimestampValid;
- (bool)isWet;
- (unsigned long long)measurementCancellationDebounceCnt;
- (unsigned long long)minDryReadings;
- (int)pinID;
- (int)portID;
- (unsigned int)service;
- (void)setAccessoryConnectedWhileWet:(bool)arg1;
- (void)setCond:(id)arg1;
- (void)setConnectedAccessoryDigitalID:(unsigned long long)arg1;
- (void)setConnectedAccessoryOrientation:(int)arg1;
- (void)setConnectedAccessoryPDigitalID:(id)arg1;
- (void)setDidConfidentNotify:(bool)arg1;
- (void)setDidHighConfidentNotify:(bool)arg1;
- (void)setDidNotify:(bool)arg1;
- (void)setDidWetDuration:(bool)arg1;
- (void)setDidWetTooLong:(bool)arg1;
- (void)setDryCnt:(unsigned long long)arg1;
- (void)setDryPollingIntervalNs:(unsigned long long)arg1;
- (void)setEventBasedDigitalID:(unsigned long long)arg1;
- (void)setEventBasedOrientation:(int)arg1;
- (void)setEventBasedPDigitalID:(id)arg1;
- (void)setFirstDryTimestamp:(unsigned long long)arg1;
- (void)setHalogenMeasurement:(id)arg1;
- (void)setHalogenMeasurementDispatchQueue:(id)arg1;
- (void)setHalogenTtrDispatchQueue:(id)arg1;
- (void)setIsHeadsetConnected:(bool)arg1;
- (void)setIsMeasurementActive:(bool)arg1;
- (void)setIsMeasurementEnabled:(bool)arg1;
- (void)setIsReceptacleEmpty:(bool)arg1;
- (void)setIsTapToRadarPending:(bool)arg1;
- (void)setIsTimestampValid:(bool)arg1;
- (void)setIsWet:(bool)arg1;
- (void)setMeasurementCancellationDebounceCnt:(unsigned long long)arg1;
- (void)setMinDryReadings:(unsigned long long)arg1;
- (void)setPinID:(int)arg1;
- (void)setPortID:(int)arg1;
- (void)setService:(unsigned int)arg1;
- (void)setTimer:(id)arg1;
- (void)setWasTapToRadarShown:(bool)arg1;
- (void)setWetAccessoryAttachTimestamp:(unsigned long long)arg1;
- (void)setWetDryTransitionTimestamp:(unsigned long long)arg1;
- (void)setWetPollingIntervalNs:(unsigned long long)arg1;
- (id)timer;
- (bool)wasTapToRadarShown;
- (unsigned long long)wetAccessoryAttachTimestamp;
- (unsigned long long)wetDryTransitionTimestamp;
- (unsigned long long)wetPollingIntervalNs;

@end
