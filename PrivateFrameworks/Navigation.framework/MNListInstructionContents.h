/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Navigation.framework/Navigation
 */

@interface MNListInstructionContents : NSObject <MNInstructionContents> {
    NSArray * _branchNames;
    GEOComposedWaypoint * _destination;
    NSString * _destinationName;
    double  _distance;
    <GEOServerFormattedString> * _distanceFormat;
    NSString * _exitNumber;
    <GEOServerFormattedString> * _instructionFormat;
    NSString * _intersectionName;
    int  _junctionAngle;
    int  _maneuverType;
    bool  _suppressFallback;
    bool  _suppressNames;
    bool  _toFreeway;
    NSArray * _towardNames;
    int  _transportType;
}

@property (nonatomic, retain) NSArray *branchNames;
@property (nonatomic, readonly) long long context;
@property (nonatomic, retain) GEOComposedWaypoint *destination;
@property (nonatomic, retain) NSString *destinationName;
@property (nonatomic) double distance;
@property (nonatomic, retain) <GEOServerFormattedString> *distanceFormat;
@property (nonatomic, retain) NSString *exitNumber;
@property (nonatomic, readonly) bool hasName;
@property (nonatomic, readonly) bool hasServerContent;
@property (nonatomic, retain) <GEOServerFormattedString> *instructionFormat;
@property (nonatomic, retain) NSString *intersectionName;
@property (nonatomic, readonly) bool isExitManeuver;
@property (nonatomic) int junctionAngle;
@property (nonatomic) int maneuverType;
@property (nonatomic, readonly) NSString *primaryName;
@property (nonatomic, retain) NSString *roadName;
@property (nonatomic) bool suppressFallback;
@property (nonatomic) bool suppressNames;
@property (nonatomic) bool toFreeway;
@property (nonatomic, retain) NSArray *towardNames;
@property (nonatomic) int transportType;
@property (nonatomic, readonly) bool useDestinationName;
@property (nonatomic, readonly) bool useIntersectionName;
@property (nonatomic, readonly) bool useRoadName;
@property (nonatomic, readonly) bool useTowardNames;

+ (id)contentsWithManeuverType:(int)arg1 transportType:(int)arg2;
+ (id)contentsWithStep:(id)arg1 transportType:(int)arg2;
+ (id)contentsWithSubstep:(id)arg1 transportType:(int)arg2;

- (void).cxx_destruct;
- (id)_exitNumberFromNameInfo:(id)arg1;
- (id)_instructionForArrival;
- (id)_instructionForBranch;
- (id)_instructionForChangeHighway;
- (id)_instructionForContinue;
- (id)_instructionForExit;
- (id)_instructionForFerry;
- (id)_instructionForRoundabout;
- (id)_instructionForStart;
- (id)_instructionForTurn;
- (id)_instructionForUTurn;
- (id)_instructionsForSigns;
- (void)_populateFromStep:(id)arg1;
- (void)_populateFromSubstep:(id)arg1;
- (void)_setName:(id)arg1 signposts:(id)arg2;
- (id)_stringFromNameInfo:(id)arg1;
- (id)_walkingInstructionForContinue;
- (id)_walkingInstructionForRoundabout;
- (id)_walkingInstructionForStart;
- (id)_walkingInstructionForTurn;
- (id)_walkingInstructionForUTurn;
- (id)branchNames;
- (long long)context;
- (id)description;
- (id)destination;
- (id)destinationName;
- (double)distance;
- (id)distanceFormat;
- (id)exitNumber;
- (bool)hasName;
- (bool)hasServerContent;
- (id)init;
- (id)instruction;
- (id)instructionForStage:(unsigned long long)arg1 distance:(double)arg2;
- (id)instructionFormat;
- (id)instructionWithShorterAlternatives;
- (id)instructionWithShorterAlternatives:(id*)arg1;
- (id)intersectionName;
- (bool)isExitManeuver;
- (int)junctionAngle;
- (int)maneuverType;
- (id)primaryName;
- (id)roadName;
- (void)setBranchNames:(id)arg1;
- (void)setDestination:(id)arg1;
- (void)setDestinationName:(id)arg1;
- (void)setDistance:(double)arg1;
- (void)setDistanceFormat:(id)arg1;
- (void)setExitNumber:(id)arg1;
- (void)setInstructionFormat:(id)arg1;
- (void)setIntersectionName:(id)arg1;
- (void)setJunctionAngle:(int)arg1;
- (void)setManeuverType:(int)arg1;
- (void)setRoadName:(id)arg1;
- (void)setSuppressFallback:(bool)arg1;
- (void)setSuppressNames:(bool)arg1;
- (void)setToFreeway:(bool)arg1;
- (void)setTowardNames:(id)arg1;
- (void)setTransportType:(int)arg1;
- (id)stringForDistance:(double)arg1;
- (bool)suppressFallback;
- (bool)suppressNames;
- (bool)toFreeway;
- (id)towardNames;
- (int)transportType;
- (bool)useDestinationName;
- (bool)useIntersectionName;
- (bool)useRoadName;
- (bool)useTowardNames;

@end
