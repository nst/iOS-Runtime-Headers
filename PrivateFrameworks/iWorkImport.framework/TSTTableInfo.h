/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TSReading.framework/TSReading
 */

@interface TSTTableInfo : TSDDrawableInfo <TSDContainerInfo, TSDMixing, TSKModel, TSKSearchable, TSSPresetSource, TSSStyleClient, TSSThemedObject, TSWPStorageParent> {
    struct { 
        unsigned short row; 
        unsigned char column; 
        unsigned char reserved; 
    }  mEditingCellID;
    TSTEditingState * mEditingState;
    bool  mHasReference;
    bool  mIsFormulaEditing;
    TSTMasterLayout * mMasterLayout;
    TSTTablePartitioner * mPartitioner;
    struct { 
        unsigned short row; 
        unsigned char column; 
        unsigned char reserved; 
    }  mPreviousEditingCellID;
    TSTTableModel * mTableModel;
}

@property (getter=isAnchoredToText, nonatomic, readonly) bool anchoredToText;
@property (getter=isAttachedToBodyText, nonatomic, readonly) bool attachedToBodyText;
@property (nonatomic) long long contentWritingDirection;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) TSKDocumentRoot *documentRoot;
@property (nonatomic) struct { unsigned short x1; unsigned char x2; unsigned char x3; } editingCellID;
@property (nonatomic, readonly) struct { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned short x_2_1_2; } x2; } editingCellRange;
@property (nonatomic, retain) TSTEditingState *editingState;
@property (getter=isFloatingAboveText, nonatomic, readonly) bool floatingAboveText;
@property (getter=isFormulaEditing, nonatomic) bool formulaEditing;
@property (nonatomic, copy) TSDInfoGeometry *geometry;
@property (nonatomic) bool hasReference;
@property (readonly) unsigned long long hash;
@property (getter=isInlineWithText, nonatomic, readonly) bool inlineWithText;
@property (nonatomic, readonly) TSTMasterLayout *masterLayout;
@property (nonatomic) bool matchesObjectPlaceholderGeometry;
@property (nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
@property (nonatomic, readonly) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property (nonatomic) NSObject<TSDContainerInfo> *parentInfo;
@property (nonatomic, readonly) TSTTablePartitioner *partitioner;
@property (nonatomic, readonly) struct { unsigned short x1; unsigned char x2; unsigned char x3; } previousEditingCellID;
@property (readonly) Class superclass;
@property (nonatomic, readonly) TSTTableModel *tableModel;

+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3 reservedCount:(unsigned long long)arg4;
+ (bool)canPartition;
+ (id)geometryForPrototypeIndex:(long long)arg1 withCanvasPoint:(struct CGPoint { double x1; double x2; })arg2;
+ (unsigned short)numberOfColumnsForProtoIndex:(unsigned long long)arg1;
+ (unsigned short)numberOfRowsForProtoIndex:(unsigned long long)arg1;
+ (id)presetKinds;
+ (id)tablePrototypeWithIndex:(long long)arg1 context:(id)arg2 geometry:(id)arg3 styles:(id)arg4;

- (void)acceptVisitor:(id)arg1;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)allWPStorages;
- (bool)autoListRecognition;
- (bool)autoListTermination;
- (bool)canAspectRatioLockBeChangedByUser;
- (id)childCommandForApplyThemeCommand:(id)arg1;
- (id)childCommandForReplaceAllCommand:(id)arg1;
- (id)childEnumerator;
- (id)childInfos;
- (unsigned long long)chunkCountForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2;
- (void)clearPartitioner;
- (long long)contentWritingDirection;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (void)debugDump;
- (id)descriptionForExactCopy;
- (id)descriptionForPasteboard;
- (id)descriptionForPasteboardWithSource:(id)arg1;
- (void)didCopy;
- (void)didReplaceTextsInStoragesWithPlaceHolderString;
- (id)documentRoot;
- (struct { unsigned short x1; unsigned char x2; unsigned char x3; })editingCellID;
- (struct { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned short x_2_1_2; } x2; })editingCellRange;
- (id)editingState;
- (Class)editorClass;
- (int)elementKind;
- (bool)hasReference;
- (id)initForTestingWithContext:(id)arg1 rows:(unsigned short)arg2 columns:(unsigned short)arg3;
- (id)initWithContext:(id)arg1 fromSourceInfo:(id)arg2 carrySelection:(bool)arg3;
- (id)initWithContext:(id)arg1 fromSourceInfo:(id)arg2 cellRegion:(id)arg3 carrySelection:(bool)arg4;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 rows:(unsigned short)arg3 columns:(unsigned short)arg4 styles:(id)arg5;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 styles:(id)arg3;
- (id)initWithContext:(id)arg1 otherTableInfo:(id)arg2;
- (bool)isFormulaEditing;
- (bool)isSafeToConvertToAttributedString;
- (bool)isSafeToConvertToImage;
- (bool)isSafeToConvertToText;
- (Class)layoutClass;
- (id)masterLayout;
- (double)masterLayoutEffectiveTableNameHeight;
- (id)mergedContainedStorages;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (void)p_didLoadRichTextPayloadTable:(id)arg1;
- (id)partitioner;
- (void)performBlockWithStylesheetForAddingStyles:(id /* block */)arg1;
- (struct { unsigned short x1; unsigned char x2; unsigned char x3; })previousEditingCellID;
- (id)referencedStyles;
- (Class)repClass;
- (void)replaceReferencedStylesUsingBlock:(id /* block */)arg1;
- (bool)reverseChunkingIsSupported;
- (void)scaleInfoGeometry:(struct CGSize { double x1; double x2; })arg1;
- (id)searchForAnnotationsWithHitBlock:(id /* block */)arg1;
- (id)searchForString:(id)arg1 options:(unsigned long long)arg2 onHit:(id /* block */)arg3;
- (void)setContentWritingDirection:(long long)arg1;
- (void)setEditingCellID:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg1;
- (void)setEditingState:(id)arg1;
- (void)setFormulaEditing:(bool)arg1;
- (void)setGeometry:(id)arg1;
- (void)setGeometry:(id)arg1 resizeInternal:(bool)arg2;
- (void)setGeometry:(id)arg1 resizeInternal:(bool)arg2 scaleFactor:(struct CGSize { double x1; double x2; })arg3;
- (void)setGeometry:(id)arg1 resizeInternal:(bool)arg2 scaleFactor:(struct CGSize { double x1; double x2; })arg3 shouldClearObjectPlaceholderFlag:(bool)arg4;
- (void)setHasReference:(bool)arg1;
- (void)setupTableModelForPrototypeIndex:(long long)arg1;
- (void)shiftGeometryToExcludeTableNameHeight;
- (void)shiftGeometryToIncludeTableNameHeight;
- (bool)supportsAttachedComments;
- (bool)supportsHyperlinks;
- (id)tableModel;
- (id)tabularTextRepresentation;
- (bool)textIsVertical;
- (unsigned long long)textureDeliveryStyleFromDeliveryString:(id)arg1;
- (id)textureDeliveryStylesLocalized:(bool)arg1 animationFilter:(id)arg2;
- (void)validate;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)willCopyWithOtherDrawables:(id)arg1;

@end
