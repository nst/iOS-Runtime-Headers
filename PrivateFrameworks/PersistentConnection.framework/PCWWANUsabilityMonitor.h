/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PersistentConnection.framework/PersistentConnection
 */

@interface PCWWANUsabilityMonitor : NSObject <CoreTelephonyClientDataDelegate, PCInterfaceUsabilityMonitorDelegate, PCInterfaceUsabilityMonitorProtocol> {
    CoreTelephonyClient * _ctClient;
    struct __CTServerConnection { } * _ctServerConnection;
    NSObject<OS_dispatch_queue> * _ctServerQueue;
    CTXPCServiceSubscriptionContext * _currentDataSimContext;
    int  _currentRAT;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    CUTWeakReference * _delegateReference;
    PCInterfaceUsabilityMonitor * _interfaceMonitor;
    NSString * _interfaceName;
    bool  _isInCall;
    bool  _isInHighPowerState;
    NSObject<OS_dispatch_queue> * _ivarQueue;
    NSObject<OS_dispatch_queue> * _monitorDelegateQueue;
    int  _powerlogCDRXToken;
    unsigned long long  _thresholdOffTransitionCount;
    bool  _trackUsability;
    double  _trackedTimeInterval;
    int  _wwanContextID;
}

@property (nonatomic, readonly) int currentRAT;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PCInterfaceUsabilityMonitorDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) long long interfaceIdentifier;
@property (nonatomic, readonly) bool isBadLinkQuality;
@property (nonatomic, readonly) bool isInterfaceHistoricallyUsable;
@property (nonatomic, readonly) bool isInterfaceUsable;
@property (nonatomic, readonly) bool isInternetReachable;
@property (nonatomic, readonly) bool isLTEWithCDRX;
@property (nonatomic, readonly) bool isNetworkingPowerExpensiveToUse;
@property (nonatomic, readonly) bool isPoorLinkQuality;
@property (nonatomic, readonly) bool isRadioHot;
@property (nonatomic, readonly) int linkQuality;
@property (nonatomic, readonly, retain) NSString *linkQualityString;
@property (nonatomic, readonly) NSString *networkCode;
@property (readonly) Class superclass;
@property (nonatomic, readonly) struct __CFString { }*wwanInterfaceName;

- (void).cxx_destruct;
- (void)_adjustInterfaceNameForWWANContextID:(int)arg1 interfaceName:(id)arg2 forContext:(id)arg3;
- (void)_callDelegateOnIvarQueueWithBlock:(id /* block */)arg1;
- (id)_currentDataSimContext;
- (void)_forwardConfigurationOnIvarQueue;
- (bool)_isCurrentDataSimContextOnIvarQueue:(id)arg1;
- (void)_processCallStatusChanged:(id)arg1;
- (void)_processDataConnectionStatus:(id)arg1 forContext:(id)arg2;
- (void)_processDataStatus:(id)arg1 forContext:(id)arg2;
- (void)_setupWWANMonitor;
- (void)connectionStateChanged:(id)arg1 connection:(int)arg2 dataConnectionStatusInfo:(id)arg3;
- (void)currentDataSimChanged:(id)arg1;
- (int)currentRAT;
- (void)dataStatus:(id)arg1 dataStatusInfo:(id)arg2;
- (void)dealloc;
- (id)delegate;
- (id)initWithDelegateQueue:(id)arg1;
- (long long)interfaceIdentifier;
- (void)interfaceLinkQualityChanged:(id)arg1 previousLinkQuality:(int)arg2;
- (void)interfaceReachabilityChanged:(id)arg1;
- (bool)isBadLinkQuality;
- (bool)isInterfaceHistoricallyUsable;
- (bool)isInterfaceUsable;
- (bool)isInternetReachable;
- (bool)isLTEWithCDRX;
- (bool)isNetworkingPowerExpensiveToUse;
- (bool)isPoorLinkQuality;
- (bool)isRadioHot;
- (int)linkQuality;
- (id)linkQualityString;
- (id)networkCode;
- (void)setDelegate:(id)arg1;
- (void)setThresholdOffTransitionCount:(unsigned long long)arg1;
- (void)setTrackUsability:(bool)arg1;
- (void)setTrackedTimeInterval:(double)arg1;
- (struct __CFString { }*)wwanInterfaceName;

@end
