/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TouchML.framework/TouchML
 */

@interface TMLContext : NSObject {
    JSValue * _apiObject;
    NSString * _apiObjectKey;
    bool  _beingDisposed;
    NSMutableSet * _contextObjects;
    NSArray * _currentEvaluationBindings;
    bool  _initialized;
    JSContext * _jsContext;
    NSException * _jsEvaluationException;
    TMLMetaContext * _metaContext;
    NSMutableDictionary * _objects;
    unsigned long long  _options;
    NSMutableSet * _requires;
    NSMutableArray * _signalHandlers;
    NSMutableSet * _weakObjectIdentifiers;
}

@property (nonatomic, readonly) NSDictionary *allObjects;
@property (nonatomic, readonly) NSObject *rootObject;

+ (void)addGloballyRequiredModules:(id)arg1;
+ (id)cloneContext:(id)arg1 objects:(id)arg2;
+ (Class)createClassFromPath:(id)arg1;
+ (id)currentContext;
+ (void)initialize;
+ (void)initializeJSContext:(id)arg1;
+ (bool)loadClasses:(id)arg1;
+ (bool)loadClasses:(id)arg1 path:(id)arg2;
+ (bool)loadClassesFromPath:(id)arg1;
+ (id)loadMetaContextWithSource:(id)arg1 path:(id)arg2 options:(unsigned long long)arg3;
+ (void)printStatisticsWithInterval:(double)arg1;

- (void).cxx_destruct;
- (void)addObject:(id)arg1 withIdentifier:(id)arg2;
- (void)addObjectReference:(id)arg1;
- (id)allObjects;
- (id)apiObject;
- (id)applyProperties:(id)arg1 inOrder:(id)arg2 toObject:(id)arg3;
- (void)attachToAPIObject;
- (void)callFunction:(id)arg1 arguments:(id)arg2;
- (id)callFunction:(id)arg1 arguments:(id)arg2 returnType:(unsigned long long)arg3;
- (id)createObjectFromMetaObject:(id)arg1 parent:(id)arg2;
- (void)dealloc;
- (id)didCreateObject:(id)arg1;
- (void)dispose;
- (void)disposeIfNecessary;
- (id)evaluateExpression:(id)arg1 ofType:(unsigned long long)arg2 withBindings:(id)arg3;
- (id)existingObjectWithIdentifier:(id)arg1;
- (id)init;
- (id)initWithOptions:(unsigned long long)arg1;
- (void)initializeJSContext;
- (void)initializeWithCloneContext:(id)arg1;
- (void)initizalizeContext;
- (bool)loadSource:(id)arg1;
- (bool)loadSource:(id)arg1 path:(id)arg2;
- (bool)loadSourceFromPath:(id)arg1;
- (void)makeWeakObjectWithIdentifier:(id)arg1;
- (id)metaContext;
- (id)objectWithIdentifier:(id)arg1;
- (id)objectWithIdentifier:(id)arg1 unwrapWeak:(bool)arg2;
- (id)objectWithIdentifier:(id)arg1 unwrapWeak:(bool)arg2 createIfMissing:(bool)arg3;
- (id)objectWithIdentifierNoCreate:(id)arg1;
- (id)objectsOfType:(id)arg1;
- (id)processValue:(id)arg1 ofType:(unsigned long long)arg2 selfValue:(id)arg3;
- (bool)raiseException:(id)arg1;
- (void)raiseJSException:(id)arg1;
- (void)requireModule:(id)arg1;
- (void)resetException;
- (void)resetJSException;
- (id)rootObject;
- (bool)valid;

@end
