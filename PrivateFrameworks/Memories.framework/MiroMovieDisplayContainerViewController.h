/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories
 */

@interface MiroMovieDisplayContainerViewController : UIViewController <MiroPlayerControlling, PHAirPlayControllerContentProvider, PHAirPlayControllerRouteObserver> {
    bool  _airplayActive;
    MiroAutoEditor * _autoEditor;
    AVPlayer * _avPlayer;
    UIView * _containerView;
    <MiroMovieDisplayContainerViewControllerDelegate> * _delegate;
    int  _forcedAspect;
    bool  _isRotating;
    MovieController * _movieController;
    MiroMovieView * _movieDisplayView;
    double  _orientationSwitchTime;
    MiroPosterViewController * _parentAirplayPlaceholderPosterViewController;
    bool  _playAltClips;
    id /* block */  _playerDidSwapBlock;
    NSLayoutConstraint * _posterAspectConstraint;
    UIView * _posterContainerView;
    long long  _posterMoodIndex;
    MiroPosterViewController * _posterViewController;
    bool  _preventRotation;
    id  _proVideoPeriodicCaller;
    bool  _registeredAsAirPlayProvider;
    NSString * _savedAudioCategory;
    long long  _secondaryPosterMoodIndex;
    MiroPosterViewController * _secondaryPosterViewController;
    NSNumber * _titleScale;
    UITapGestureRecognizer * _zoomDoubleTap;
    bool  _zoomedToFill;
}

@property (nonatomic) bool airplayActive;
@property (nonatomic, retain) MiroAutoEditor *autoEditor;
@property (nonatomic, retain) AVPlayer *avPlayer;
@property (nonatomic, retain) UIView *containerView;
@property (nonatomic, readonly) int currentFrameTime;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MiroMovieDisplayContainerViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) int forcedAspect;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isRotating;
@property (nonatomic, readonly) bool isZoomable;
@property (nonatomic, retain) MovieController *movieController;
@property (nonatomic, retain) MiroMovieView *movieDisplayView;
@property (nonatomic) double orientationSwitchTime;
@property (nonatomic, retain) MiroPosterViewController *parentAirplayPlaceholderPosterViewController;
@property (nonatomic) bool playAltClips;
@property (copy) id /* block */ playerDidSwapBlock;
@property (getter=isPlaying, nonatomic) bool playing;
@property (nonatomic) double posterAspect;
@property (nonatomic, retain) NSLayoutConstraint *posterAspectConstraint;
@property (nonatomic, retain) UIView *posterContainerView;
@property (nonatomic) long long posterMoodIndex;
@property (nonatomic, retain) MiroPosterViewController *posterViewController;
@property (nonatomic) bool preventRotation;
@property (nonatomic, retain) id proVideoPeriodicCaller;
@property (nonatomic) bool registeredAsAirPlayProvider;
@property (nonatomic, retain) NSString *savedAudioCategory;
@property (nonatomic) long long secondaryPosterMoodIndex;
@property (nonatomic, retain) MiroPosterViewController *secondaryPosterViewController;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSNumber *titleScale;
@property (nonatomic, retain) UITapGestureRecognizer *zoomDoubleTap;
@property (nonatomic) bool zoomedToFill;

- (void).cxx_destruct;
- (void)ImAfraidOfStuckBlur;
- (id)_addPlaceholderViewToParentView;
- (void)_makeAudioCategoryPlayback;
- (void)_notifyTitleScaleChanged;
- (void)_removePlaceholderViewFromParentView;
- (void)_restoreAudioCategory;
- (void)_saveAudioCategory;
- (id)_snapshotPlayer;
- (id)_snapshotPlayerWithAspect:(double)arg1;
- (void)addProVideoTimeObserver;
- (void)airPlayControllerRouteAvailabilityChanged:(id)arg1;
- (void)airPlayControllerScreenAvailabilityChanged:(id)arg1;
- (id)airPlayScreenController;
- (bool)airplayActive;
- (void)airplayOff;
- (void)airplayOn;
- (id)autoEditor;
- (id)avPlayer;
- (id)containerView;
- (id)contentViewControllerForAirPlayController:(id)arg1;
- (void)createAVPlayer;
- (int)currentFrameTime;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })currentPlayerTime;
- (void)dealloc;
- (id)delegate;
- (void)destroyAVPlayer;
- (void)didReceiveMemoryWarning;
- (void)effectRenderedTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (id)fontNameForMoodIndex:(long long)arg1;
- (int)forcedAspect;
- (void)gentleRebuild;
- (void)hidePosterAnimated:(bool)arg1 withCompletion:(id /* block */)arg2;
- (long long)indexForMood:(id)arg1;
- (id)initWithAutoEditor:(id)arg1;
- (bool)isPlayerAtEndOfProject;
- (bool)isPlaying;
- (bool)isRotating;
- (bool)isZoomable;
- (id)movieController;
- (id)movieDisplayView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (double)orientationSwitchTime;
- (id)parentAirplayPlaceholderPosterViewController;
- (id)parentAirplayPlaceholderView;
- (bool)playAltClips;
- (void)playFromStart;
- (id)player;
- (id /* block */)playerDidSwapBlock;
- (bool)playerItemExists;
- (float)playerRate;
- (double)posterAspect;
- (id)posterAspectConstraint;
- (id)posterContainerView;
- (id)posterImageForCurrentBlueprintFromMemory:(id)arg1 withSize:(struct CGSize { double x1; double x2; })arg2;
- (long long)posterMoodIndex;
- (id)posterViewController;
- (bool)preventRotation;
- (id)proVideoPeriodicCaller;
- (void)refreshCompositionIfNotPlaying;
- (void)registerAsAirPlayProvider;
- (void)registerWithAutoEditor:(id)arg1;
- (bool)registeredAsAirPlayProvider;
- (void)removeProVideoTimeObserver;
- (id)savedAudioCategory;
- (long long)secondaryPosterMoodIndex;
- (id)secondaryPosterViewController;
- (void)setAirplayActive:(bool)arg1;
- (void)setAutoEditor:(id)arg1;
- (void)setAvPlayer:(id)arg1;
- (void)setContainerView:(id)arg1;
- (void)setCurrentTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setCurrentTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 completionHandler:(id /* block */)arg2;
- (void)setDelegate:(id)arg1;
- (void)setForcedAspect:(int)arg1;
- (void)setIsRotating:(bool)arg1;
- (void)setMovieController:(id)arg1;
- (void)setMovieDisplayView:(id)arg1;
- (void)setOrientationSwitchTime:(double)arg1;
- (void)setParentAirplayPlaceholderPosterViewController:(id)arg1;
- (void)setPlayAltClips:(bool)arg1;
- (void)setPlayerDidSwapBlock:(id /* block */)arg1;
- (void)setPlayerRate:(float)arg1;
- (void)setPlayerToSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPlayerToSize:(struct CGSize { double x1; double x2; })arg1 setPlayAlt:(bool)arg2;
- (void)setPlaying:(bool)arg1;
- (void)setPosterAspect:(double)arg1;
- (void)setPosterAspectConstraint:(id)arg1;
- (void)setPosterContainerView:(id)arg1;
- (void)setPosterMoodIndex:(long long)arg1;
- (void)setPosterViewController:(id)arg1;
- (void)setPreventRotation:(bool)arg1;
- (void)setProVideoPeriodicCaller:(id)arg1;
- (void)setRegisteredAsAirPlayProvider:(bool)arg1;
- (void)setSavedAudioCategory:(id)arg1;
- (void)setSecondaryPosterMoodIndex:(long long)arg1;
- (void)setSecondaryPosterViewController:(id)arg1;
- (void)setTitleScale:(id)arg1;
- (void)setZoomDoubleTap:(id)arg1;
- (void)setZoomedToFill:(bool)arg1;
- (void)showPosterAnimated:(bool)arg1 withCompletion:(id /* block */)arg2;
- (void)signalCustomCompositorScheduler;
- (void)signalCustomCompositorScheduler:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 playerRate:(float)arg2;
- (void)teardownMovieController;
- (id)titleScale;
- (void)unRegisterAutoEditor;
- (void)unregisterAsAirPlayProvider;
- (void)updateContent;
- (void)updateMovieController:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)updateMovieControllerForProject:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)updatePosterImages;
- (void)updatePosterImagesForMoodPercent:(float)arg1 withMemory:(id)arg2;
- (void)updatePostersViewsWithMemory:(id)arg1;
- (void)updateTitleScaleForSize:(struct CGSize { double x1; double x2; })arg1;
- (void)viewDidLoad;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (bool)wantsContentVisibleAfterUnregisteringWithAirPlayController:(id)arg1;
- (id)zoomDoubleTap;
- (bool)zoomedToFill;

@end
