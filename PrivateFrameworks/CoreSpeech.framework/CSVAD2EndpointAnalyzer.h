/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreSpeech.framework/CoreSpeech
 */

@interface CSVAD2EndpointAnalyzer : NSObject <CSEndpointAnalyzerImpl> {
    unsigned long long  _activeChannel;
    NSObject<OS_dispatch_queue> * _apQueue;
    struct OpaqueAudioComponentInstance { } * _audioUnitEPVAD2;
    double  _automaticEndpointingSuspensionEndTime;
    double  _bypassSamples;
    bool  _communicatedEndpointDetection;
    bool  _communicatedStartPointDetection;
    double  _delay;
    <CSEndpointAnalyzerDelegate> * _delegate;
    bool  _detectedOneShotEndpoint;
    bool  _detectedOneShotStartpoint;
    bool  _detectedRecurrentEndpoint;
    bool  _detectedRecurrentStartpoint;
    double  _endWaitTime;
    long long  _endpointMode;
    long long  _endpointStyle;
    NSMutableData * _floatSampleBuffer;
    unsigned int  _frameRate;
    double  _interspeechWaitTime;
    bool  _isConfigured;
    double  _lastOneShotEndpoint;
    double  _lastOneShotStartpoint;
    double  _lastRecurrentEndpoint;
    double  _lastRecurrentStartpoint;
    double  _minimumDurationForEndpointer;
    NSString * _modelDictPath;
    double  _numSamplesProcessed;
    double  _previousSamplesSeen;
    bool  _recordingDidStop;
    double  _sampleRate;
    double  _samplesSeen;
    bool  _saveSamplesSeenInReset;
    double  _startWaitTime;
    NSDictionary * _topLevelParameterDict;
    double  _trailingSilenceDurationAtEndpoint;
    unsigned long long  _vtEndInSampleCount;
}

@property (nonatomic) unsigned long long activeChannel;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *apQueue;
@property (nonatomic) double automaticEndpointingSuspensionEndTime;
@property (nonatomic) double bypassSamples;
@property (nonatomic, readonly) bool canProcessCurrentRequest;
@property (nonatomic) bool communicatedEndpointDetection;
@property (nonatomic) bool communicatedStartPointDetection;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) double delay;
@property (nonatomic) <CSEndpointAnalyzerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool detectedOneShotEndpoint;
@property (nonatomic) bool detectedOneShotStartpoint;
@property (nonatomic) bool detectedRecurrentEndpoint;
@property (nonatomic) bool detectedRecurrentStartpoint;
@property (nonatomic, readonly) double elapsedTimeWithNoSpeech;
@property (nonatomic) double endWaitTime;
@property (nonatomic) long long endpointMode;
@property (nonatomic) long long endpointStyle;
@property (nonatomic, readonly) NSString *endpointerModelVersion;
@property (nonatomic, retain) NSMutableData *floatSampleBuffer;
@property (nonatomic) unsigned int frameRate;
@property (readonly) unsigned long long hash;
@property (nonatomic) double interspeechWaitTime;
@property (nonatomic) bool isConfigured;
@property (nonatomic, readonly) double lastEndOfVoiceActivityTime;
@property (nonatomic) double lastOneShotEndpoint;
@property (nonatomic) double lastOneShotStartpoint;
@property (nonatomic) double lastRecurrentEndpoint;
@property (nonatomic) double lastRecurrentStartpoint;
@property (nonatomic, readonly) double lastStartOfVoiceActivityTime;
@property (nonatomic) double minimumDurationForEndpointer;
@property (nonatomic, retain) NSString *modelDictPath;
@property (nonatomic) double numSamplesProcessed;
@property (nonatomic) double previousSamplesSeen;
@property (nonatomic) bool recordingDidStop;
@property (nonatomic) double sampleRate;
@property (nonatomic) double samplesSeen;
@property (nonatomic) bool saveSamplesSeenInReset;
@property (nonatomic) double startWaitTime;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSDictionary *topLevelParameterDict;
@property (nonatomic) double trailingSilenceDurationAtEndpoint;
@property (nonatomic) unsigned long long vtEndInSampleCount;

- (void).cxx_destruct;
- (bool)_configureWithASBD:(struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; }*)arg1 andFrameRate:(unsigned int)arg2;
- (void)_configureWithSampleRate:(double)arg1 andFrameRate:(unsigned int)arg2;
- (void)_detectVoiceActivityInSamples:(float*)arg1 numSamples:(unsigned int)arg2;
- (id)_getEndpointMetricsForAudioTimestamp:(double)arg1;
- (void)_processAudioSamples:(id)arg1;
- (void)_resetWithSampleRate:(unsigned long long)arg1;
- (unsigned long long)activeChannel;
- (id)apQueue;
- (double)automaticEndpointingSuspensionEndTime;
- (double)bypassSamples;
- (bool)canProcessCurrentRequest;
- (bool)communicatedEndpointDetection;
- (bool)communicatedStartPointDetection;
- (void)dealloc;
- (double)delay;
- (id)delegate;
- (bool)detectedOneShotEndpoint;
- (bool)detectedOneShotStartpoint;
- (bool)detectedRecurrentEndpoint;
- (bool)detectedRecurrentStartpoint;
- (double)endWaitTime;
- (long long)endpointMode;
- (long long)endpointStyle;
- (id)floatSampleBuffer;
- (unsigned int)frameRate;
- (void)handleVoiceTriggerWithActivationInfo:(id)arg1;
- (id)init;
- (double)interspeechWaitTime;
- (bool)isConfigured;
- (double)lastEndOfVoiceActivityTime;
- (double)lastOneShotEndpoint;
- (double)lastOneShotStartpoint;
- (double)lastRecurrentEndpoint;
- (double)lastRecurrentStartpoint;
- (double)lastStartOfVoiceActivityTime;
- (double)minimumDurationForEndpointer;
- (id)modelDictPath;
- (double)numSamplesProcessed;
- (void)preheat;
- (double)previousSamplesSeen;
- (void)processAudioSamplesAsynchronously:(id)arg1;
- (bool)recordingDidStop;
- (void)recordingStoppedForReason:(unsigned long long)arg1;
- (void)reset;
- (void)resetForNewRequestWithSampleRate:(unsigned long long)arg1 recordContext:(id)arg2;
- (double)sampleRate;
- (double)samplesSeen;
- (bool)saveSamplesSeenInReset;
- (void)setActiveChannel:(unsigned long long)arg1;
- (void)setApQueue:(id)arg1;
- (void)setAutomaticEndpointingSuspensionEndTime:(double)arg1;
- (void)setBypassSamples:(double)arg1;
- (void)setCommunicatedEndpointDetection:(bool)arg1;
- (void)setCommunicatedStartPointDetection:(bool)arg1;
- (void)setDelay:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDetectedOneShotEndpoint:(bool)arg1;
- (void)setDetectedOneShotStartpoint:(bool)arg1;
- (void)setDetectedRecurrentEndpoint:(bool)arg1;
- (void)setDetectedRecurrentStartpoint:(bool)arg1;
- (void)setEndWaitTime:(double)arg1;
- (void)setEndpointMode:(long long)arg1;
- (void)setEndpointStyle:(long long)arg1;
- (void)setFloatSampleBuffer:(id)arg1;
- (void)setFrameRate:(unsigned int)arg1;
- (void)setInterspeechWaitTime:(double)arg1;
- (void)setIsConfigured:(bool)arg1;
- (void)setLastOneShotEndpoint:(double)arg1;
- (void)setLastOneShotStartpoint:(double)arg1;
- (void)setLastRecurrentEndpoint:(double)arg1;
- (void)setLastRecurrentStartpoint:(double)arg1;
- (void)setMinimumDurationForEndpointer:(double)arg1;
- (void)setModelDictPath:(id)arg1;
- (void)setNumSamplesProcessed:(double)arg1;
- (void)setPreviousSamplesSeen:(double)arg1;
- (void)setRecordingDidStop:(bool)arg1;
- (void)setSampleRate:(double)arg1;
- (void)setSamplesSeen:(double)arg1;
- (void)setSaveSamplesSeenInReset:(bool)arg1;
- (void)setStartWaitTime:(double)arg1;
- (void)setTopLevelParameterDict:(id)arg1;
- (void)setTrailingSilenceDurationAtEndpoint:(double)arg1;
- (void)setVtEndInSampleCount:(unsigned long long)arg1;
- (double)startWaitTime;
- (id)topLevelParameterDict;
- (double)trailingSilenceDurationAtEndpoint;
- (unsigned long long)vtEndInSampleCount;

@end
