/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Preferences.framework/Preferences
 */

@interface DevicePINController : PSDetailController {
    bool  _allowOptionsButton;
    UIBarButtonItem * _cancelButton;
    UIBarButtonItem * _doneButton;
    NSString * _doneButtonTitle;
    NSString * _error1;
    NSString * _error2;
    bool  _hasBeenDismissed;
    bool  _hidesCancelButton;
    bool  _hidesNavigationButtons;
    NSString * _lastEntry;
    int  _mode;
    UIBarButtonItem * _nextButton;
    NSNumber * _numericPIN;
    NSString * _oldPassword;
    id  _pinDelegate;
    NSNumber * _pinLength;
    NSNumber * _requiresKeyboard;
    NSDictionary * _sepLockInfo;
    long long  _sepOnceToken;
    bool  _shouldDismissWhenDone;
    NSNumber * _simplePIN;
    int  _substate;
    bool  _success;
    bool  _useSEPLockInfo;
}

@property (nonatomic) bool allowOptionsButton;
@property (nonatomic, copy) NSString *doneButtonTitle;
@property (nonatomic) bool hidesCancelButton;
@property (nonatomic) bool hidesNavigationButtons;
@property (getter=isNumericPIN, nonatomic) bool numericPIN;
@property (nonatomic) <DevicePINControllerDelegate> *pinDelegate;
@property (nonatomic) int pinLength;
@property (nonatomic) bool requiresKeyboard;
@property (nonatomic) bool shouldDismissWhenDone;
@property (nonatomic) bool simplePIN;

+ (bool)settingEnabled;

- (void).cxx_destruct;
- (void)_adjustUnblockTime;
- (bool)_asyncSetPinCompatible;
- (void)_clearBlockedState;
- (id)_createAndShowAnimatedNavBarSpinner;
- (void)_dismiss;
- (int)_getScreenType;
- (void)_invalidateSEPLockInfo;
- (void)_preflightPasswordForWeakness:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)_removePinWithOldPassword:(id)arg1;
- (void)_rereadBlockedState;
- (double)_secondsToBlockForFailedAttempts:(long long)arg1;
- (id)_sepLockInfo;
- (void)_setNumberOfFailedAttempts:(long long)arg1;
- (void)_setPINPaneToSimple:(bool)arg1 simpleLength:(int)arg2 numeric:(bool)arg3 requiresKeyboard:(int)arg4;
- (void)_setUnblockTime:(double)arg1;
- (bool)_shouldCheckForWeakness;
- (bool)_shouldShowOptionsButton;
- (void)_showFailedAttempts;
- (void)_showPINConfirmationError;
- (void)_showUnacceptablePINError:(id)arg1 password:(id)arg2;
- (int)_simplePasscodeType;
- (void)_slidePasscodeFieldLeft:(bool)arg1;
- (void)_updateErrorTextAndFailureCount:(bool)arg1;
- (void)_updatePINButtons;
- (void)_updateUI;
- (bool)_useSEPLockInfo;
- (void)adjustButtonsForPasswordLength:(unsigned long long)arg1;
- (bool)allowOptionsButton;
- (bool)attemptValidationWithPIN:(id)arg1;
- (struct __CFString { }*)blockTimeIntervalKey;
- (struct __CFString { }*)blockedStateKey;
- (double)blockedTimeRemaining;
- (void)cancelButtonTapped;
- (bool)completedInputIsValid:(id)arg1;
- (void)dealloc;
- (struct __CFString { }*)defaultsID;
- (id)doneButtonTitle;
- (struct __CFString { }*)failedAttemptsKey;
- (bool)hidesCancelButton;
- (bool)hidesNavigationButtons;
- (id)init;
- (bool)isBlocked;
- (bool)isCreatingPasscode;
- (bool)isNumericPIN;
- (void)loadView;
- (int)mode;
- (long long)numberOfFailedAttempts;
- (struct CGSize { double x1; double x2; })overallContentSizeForViewInPopover;
- (id)passcodeOptionsAlertController;
- (void)performActionAfterPINEntry;
- (void)performActionAfterPINRemove;
- (void)performActionAfterPINSet;
- (id)pinDelegate;
- (void)pinEntered:(id)arg1;
- (id)pinInstructionsPrompt;
- (id)pinInstructionsPromptFont;
- (bool)pinIsAcceptable:(id)arg1 outError:(id*)arg2;
- (int)pinLength;
- (id)pinPane;
- (bool)requiresKeyboard;
- (void)setAllowOptionsButton:(bool)arg1;
- (void)setDoneButtonTitle:(id)arg1;
- (void)setHidesCancelButton:(bool)arg1;
- (void)setHidesNavigationButtons:(bool)arg1;
- (void)setLastEntry:(id)arg1;
- (void)setMode:(int)arg1;
- (void)setNumericPIN:(bool)arg1;
- (void)setOldPassword:(id)arg1;
- (void)setPIN:(id)arg1;
- (void)setPIN:(id)arg1 completion:(id /* block */)arg2;
- (void)setPane:(id)arg1;
- (void)setPinDelegate:(id)arg1;
- (void)setPinLength:(int)arg1;
- (void)setRequiresKeyboard:(bool)arg1;
- (void)setShouldDismissWhenDone:(bool)arg1;
- (void)setSimplePIN:(bool)arg1;
- (void)setSpecifier:(id)arg1;
- (void)setSuccess:(bool)arg1;
- (bool)shouldDismissWhenDone;
- (void)showPasscodeOptions:(id)arg1;
- (bool)showSimplePINCancelButtonOnLeft;
- (bool)simplePIN;
- (id)stringsBundle;
- (id)stringsTable;
- (bool)success;
- (void)suspend;
- (id)title;
- (double)unblockTime;
- (bool)useProgressiveDelays;
- (bool)validatePIN:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)willUnlock;

@end
