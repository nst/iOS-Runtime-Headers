/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEOPlaceSearchRequest : PBRequest <NSCopying> {
    GEOAdditionalEnabledMarkets * _additionalEnabledMarkets;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _additionalPlaceTypes;
    GEOAddress * _address;
    struct { 
        unsigned long long *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _businessIDs;
    GEOBusinessOptions * _businessOptions;
    int  _businessSortOrder;
    GEOClientCapabilities * _clientCapabilities;
    NSString * _deviceCountryCode;
    GEOLatLng * _deviceLocation;
    NSString * _deviceLocationCountryCode;
    NSString * _deviceTimeZone;
    bool  _excludeAddressInResults;
    NSMutableArray * _filterByBusinessCategorys;
    long long  _geoId;
    struct { 
        unsigned int sessionGUID : 1; 
        unsigned int geoId : 1; 
        unsigned int intersectingGeoId : 1; 
        unsigned int timeSinceMapEnteredForeground : 1; 
        unsigned int timeSinceMapViewportChanged : 1; 
        unsigned int timestamp : 1; 
        unsigned int businessSortOrder : 1; 
        unsigned int knownAccuracy : 1; 
        unsigned int localSearchProviderID : 1; 
        unsigned int mapMode : 1; 
        unsigned int maxBusinessReviews : 1; 
        unsigned int maxResults : 1; 
        unsigned int placeTypeLimit : 1; 
        unsigned int searchSource : 1; 
        unsigned int sequenceNumber : 1; 
        unsigned int transportTypeForTravelTimes : 1; 
        unsigned int excludeAddressInResults : 1; 
        unsigned int includeBusinessCategories : 1; 
        unsigned int includeBusinessRating : 1; 
        unsigned int includeEntryPoints : 1; 
        unsigned int includeFeatureSets : 1; 
        unsigned int includeGeoId : 1; 
        unsigned int includeMatchedToken : 1; 
        unsigned int includeNameForForwardGeocodingResults : 1; 
        unsigned int includePhonetics : 1; 
        unsigned int includeQuads : 1; 
        unsigned int includeRoadAccessPoints : 1; 
        unsigned int includeSpokenNames : 1; 
        unsigned int includeStatusCodeInfo : 1; 
        unsigned int includeSuggestionsOnly : 1; 
        unsigned int includeTravelDistance : 1; 
        unsigned int includeTravelTime : 1; 
        unsigned int includeUnmatchedStrings : 1; 
        unsigned int isCanonicalLocationSearch : 1; 
        unsigned int isFromAPI : 1; 
        unsigned int isPopularNearbyRequest : 1; 
        unsigned int isStrictGeocoding : 1; 
        unsigned int isStrictMapRegion : 1; 
        unsigned int structuredSearch : 1; 
        unsigned int suppressResultsRequiringAttribution : 1; 
    }  _has;
    bool  _includeBusinessCategories;
    bool  _includeBusinessRating;
    bool  _includeEntryPoints;
    bool  _includeFeatureSets;
    bool  _includeGeoId;
    bool  _includeMatchedToken;
    bool  _includeNameForForwardGeocodingResults;
    bool  _includePhonetics;
    bool  _includeQuads;
    bool  _includeRoadAccessPoints;
    bool  _includeSpokenNames;
    bool  _includeStatusCodeInfo;
    bool  _includeSuggestionsOnly;
    bool  _includeTravelDistance;
    bool  _includeTravelTime;
    bool  _includeUnmatchedStrings;
    GEOIndexQueryNode * _indexFilter;
    NSString * _inputLanguage;
    unsigned long long  _intersectingGeoId;
    bool  _isCanonicalLocationSearch;
    bool  _isFromAPI;
    bool  _isPopularNearbyRequest;
    bool  _isStrictGeocoding;
    bool  _isStrictMapRegion;
    int  _knownAccuracy;
    GEOLatLng * _knownLocation;
    NSMutableArray * _limitToCountryCodeIso2s;
    int  _localSearchProviderID;
    GEOLocation * _location;
    int  _mapMode;
    GEOMapRegion * _mapRegion;
    int  _maxBusinessReviews;
    int  _maxResults;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _optionalSuppressionReasons;
    NSString * _phoneticLocaleIdentifier;
    int  _placeTypeLimit;
    GEOAddress * _preserveFields;
    NSString * _search;
    NSString * _searchContext;
    GEOSearchSubstring * _searchContextSubstring;
    GEOLatLng * _searchLocation;
    int  _searchSource;
    NSMutableArray * _searchSubstrings;
    int  _sequenceNumber;
    NSMutableArray * _serviceTags;
    struct GEOSessionID { 
        unsigned long long _high; 
        unsigned long long _low; 
    }  _sessionGUID;
    bool  _structuredSearch;
    GEOSuggestionsOptions * _suggestionsOptions;
    NSString * _suggestionsPrefix;
    bool  _suppressResultsRequiringAttribution;
    double  _timeSinceMapEnteredForeground;
    double  _timeSinceMapViewportChanged;
    double  _timestamp;
    int  _transportTypeForTravelTimes;
    PBUnknownFields * _unknownFields;
    NSString * _viewportCenterCountryCode;
    NSData * _zilchPoints;
}

@property (nonatomic, retain) GEOAdditionalEnabledMarkets *additionalEnabledMarkets;
@property (nonatomic, readonly) int*additionalPlaceTypes;
@property (nonatomic, readonly) unsigned long long additionalPlaceTypesCount;
@property (nonatomic, retain) GEOAddress *address;
@property (nonatomic, readonly) unsigned long long*businessIDs;
@property (nonatomic, readonly) unsigned long long businessIDsCount;
@property (nonatomic, retain) GEOBusinessOptions *businessOptions;
@property (nonatomic) int businessSortOrder;
@property (nonatomic, retain) GEOClientCapabilities *clientCapabilities;
@property (nonatomic, retain) NSString *deviceCountryCode;
@property (nonatomic, retain) GEOLatLng *deviceLocation;
@property (nonatomic, retain) NSString *deviceLocationCountryCode;
@property (nonatomic, retain) NSString *deviceTimeZone;
@property (nonatomic) bool excludeAddressInResults;
@property (nonatomic, retain) NSMutableArray *filterByBusinessCategorys;
@property (nonatomic) long long geoId;
@property (nonatomic, readonly) bool hasAdditionalEnabledMarkets;
@property (nonatomic, readonly) bool hasAddress;
@property (nonatomic, readonly) bool hasBusinessOptions;
@property (nonatomic) bool hasBusinessSortOrder;
@property (nonatomic, readonly) bool hasClientCapabilities;
@property (nonatomic, readonly) bool hasDeviceCountryCode;
@property (nonatomic, readonly) bool hasDeviceLocation;
@property (nonatomic, readonly) bool hasDeviceLocationCountryCode;
@property (nonatomic, readonly) bool hasDeviceTimeZone;
@property (nonatomic) bool hasExcludeAddressInResults;
@property (nonatomic) bool hasGeoId;
@property (nonatomic) bool hasIncludeBusinessCategories;
@property (nonatomic) bool hasIncludeBusinessRating;
@property (nonatomic) bool hasIncludeEntryPoints;
@property (nonatomic) bool hasIncludeFeatureSets;
@property (nonatomic) bool hasIncludeGeoId;
@property (nonatomic) bool hasIncludeMatchedToken;
@property (nonatomic) bool hasIncludeNameForForwardGeocodingResults;
@property (nonatomic) bool hasIncludePhonetics;
@property (nonatomic) bool hasIncludeQuads;
@property (nonatomic) bool hasIncludeRoadAccessPoints;
@property (nonatomic) bool hasIncludeSpokenNames;
@property (nonatomic) bool hasIncludeStatusCodeInfo;
@property (nonatomic) bool hasIncludeSuggestionsOnly;
@property (nonatomic) bool hasIncludeTravelDistance;
@property (nonatomic) bool hasIncludeTravelTime;
@property (nonatomic) bool hasIncludeUnmatchedStrings;
@property (nonatomic, readonly) bool hasIndexFilter;
@property (nonatomic, readonly) bool hasInputLanguage;
@property (nonatomic) bool hasIntersectingGeoId;
@property (nonatomic) bool hasIsCanonicalLocationSearch;
@property (nonatomic) bool hasIsFromAPI;
@property (nonatomic) bool hasIsPopularNearbyRequest;
@property (nonatomic) bool hasIsStrictGeocoding;
@property (nonatomic) bool hasIsStrictMapRegion;
@property (nonatomic) bool hasKnownAccuracy;
@property (nonatomic, readonly) bool hasKnownLocation;
@property (nonatomic) bool hasLocalSearchProviderID;
@property (nonatomic, readonly) bool hasLocation;
@property (nonatomic) bool hasMapMode;
@property (nonatomic, readonly) bool hasMapRegion;
@property (nonatomic) bool hasMaxBusinessReviews;
@property (nonatomic) bool hasMaxResults;
@property (nonatomic, readonly) bool hasPhoneticLocaleIdentifier;
@property (nonatomic) bool hasPlaceTypeLimit;
@property (nonatomic, readonly) bool hasPreserveFields;
@property (nonatomic, readonly) bool hasSearch;
@property (nonatomic, readonly) bool hasSearchContext;
@property (nonatomic, readonly) bool hasSearchContextSubstring;
@property (nonatomic, readonly) bool hasSearchLocation;
@property (nonatomic) bool hasSearchSource;
@property (nonatomic) bool hasSequenceNumber;
@property (nonatomic) bool hasSessionGUID;
@property (nonatomic) bool hasStructuredSearch;
@property (nonatomic, readonly) bool hasSuggestionsOptions;
@property (nonatomic, readonly) bool hasSuggestionsPrefix;
@property (nonatomic) bool hasSuppressResultsRequiringAttribution;
@property (nonatomic) bool hasTimeSinceMapEnteredForeground;
@property (nonatomic) bool hasTimeSinceMapViewportChanged;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasTransportTypeForTravelTimes;
@property (nonatomic, readonly) bool hasViewportCenterCountryCode;
@property (nonatomic, readonly) bool hasZilchPoints;
@property (nonatomic) bool includeBusinessCategories;
@property (nonatomic) bool includeBusinessRating;
@property (nonatomic) bool includeEntryPoints;
@property (nonatomic) bool includeFeatureSets;
@property (nonatomic) bool includeGeoId;
@property (nonatomic) bool includeMatchedToken;
@property (nonatomic) bool includeNameForForwardGeocodingResults;
@property (nonatomic) bool includePhonetics;
@property (nonatomic) bool includeQuads;
@property (nonatomic) bool includeRoadAccessPoints;
@property (nonatomic) bool includeSpokenNames;
@property (nonatomic) bool includeStatusCodeInfo;
@property (nonatomic) bool includeSuggestionsOnly;
@property (nonatomic) bool includeTravelDistance;
@property (nonatomic) bool includeTravelTime;
@property (nonatomic) bool includeUnmatchedStrings;
@property (nonatomic, retain) GEOIndexQueryNode *indexFilter;
@property (nonatomic, retain) NSString *inputLanguage;
@property (nonatomic) unsigned long long intersectingGeoId;
@property (nonatomic) bool isCanonicalLocationSearch;
@property (nonatomic) bool isFromAPI;
@property (nonatomic) bool isPopularNearbyRequest;
@property (nonatomic) bool isStrictGeocoding;
@property (nonatomic) bool isStrictMapRegion;
@property (nonatomic) int knownAccuracy;
@property (nonatomic, retain) GEOLatLng *knownLocation;
@property (nonatomic, retain) NSMutableArray *limitToCountryCodeIso2s;
@property (nonatomic) int localSearchProviderID;
@property (nonatomic, retain) GEOLocation *location;
@property (nonatomic) int mapMode;
@property (nonatomic, retain) GEOMapRegion *mapRegion;
@property (nonatomic) int maxBusinessReviews;
@property (nonatomic) int maxResults;
@property (nonatomic, readonly) int*optionalSuppressionReasons;
@property (nonatomic, readonly) unsigned long long optionalSuppressionReasonsCount;
@property (nonatomic, retain) NSString *phoneticLocaleIdentifier;
@property (nonatomic) int placeTypeLimit;
@property (nonatomic, retain) GEOAddress *preserveFields;
@property (nonatomic, retain) NSString *search;
@property (nonatomic, retain) NSString *searchContext;
@property (nonatomic, retain) GEOSearchSubstring *searchContextSubstring;
@property (nonatomic, retain) GEOLatLng *searchLocation;
@property (nonatomic) int searchSource;
@property (nonatomic, retain) NSMutableArray *searchSubstrings;
@property (nonatomic) int sequenceNumber;
@property (nonatomic, retain) NSMutableArray *serviceTags;
@property (nonatomic) struct GEOSessionID { unsigned long long x1; unsigned long long x2; } sessionGUID;
@property (nonatomic) bool structuredSearch;
@property (nonatomic, retain) GEOSuggestionsOptions *suggestionsOptions;
@property (nonatomic, retain) NSString *suggestionsPrefix;
@property (nonatomic) bool suppressResultsRequiringAttribution;
@property (nonatomic) double timeSinceMapEnteredForeground;
@property (nonatomic) double timeSinceMapViewportChanged;
@property (nonatomic) double timestamp;
@property (nonatomic) int transportTypeForTravelTimes;
@property (nonatomic, readonly) PBUnknownFields *unknownFields;
@property (nonatomic, retain) NSString *viewportCenterCountryCode;
@property (nonatomic, retain) NSData *zilchPoints;

+ (Class)filterByBusinessCategoryType;
+ (Class)limitToCountryCodeIso2Type;
+ (Class)searchSubstringType;
+ (Class)serviceTagType;

- (void).cxx_destruct;
- (int)StringAsAdditionalPlaceTypes:(id)arg1;
- (int)StringAsBusinessSortOrder:(id)arg1;
- (int)StringAsKnownAccuracy:(id)arg1;
- (int)StringAsMapMode:(id)arg1;
- (int)StringAsOptionalSuppressionReasons:(id)arg1;
- (int)StringAsPlaceTypeLimit:(id)arg1;
- (int)StringAsSearchSource:(id)arg1;
- (int)StringAsTransportTypeForTravelTimes:(id)arg1;
- (void)addAdditionalPlaceType:(int)arg1;
- (void)addBusinessID:(unsigned long long)arg1;
- (void)addFilterByBusinessCategory:(id)arg1;
- (void)addLimitToCountryCodeIso2:(id)arg1;
- (void)addOptionalSuppressionReason:(int)arg1;
- (void)addSearchSubstring:(id)arg1;
- (void)addServiceTag:(id)arg1;
- (id)additionalEnabledMarkets;
- (int)additionalPlaceTypeAtIndex:(unsigned long long)arg1;
- (int*)additionalPlaceTypes;
- (id)additionalPlaceTypesAsString:(int)arg1;
- (unsigned long long)additionalPlaceTypesCount;
- (id)address;
- (unsigned long long)businessIDAtIndex:(unsigned long long)arg1;
- (unsigned long long*)businessIDs;
- (unsigned long long)businessIDsCount;
- (id)businessOptions;
- (int)businessSortOrder;
- (id)businessSortOrderAsString:(int)arg1;
- (void)clearAdditionalPlaceTypes;
- (void)clearBusinessIDs;
- (void)clearFilterByBusinessCategorys;
- (void)clearLimitToCountryCodeIso2s;
- (void)clearOptionalSuppressionReasons;
- (void)clearSearchSubstrings;
- (void)clearServiceTags;
- (id)clientCapabilities;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)deviceCountryCode;
- (id)deviceLocation;
- (id)deviceLocationCountryCode;
- (id)deviceTimeZone;
- (id)dictionaryRepresentation;
- (bool)excludeAddressInResults;
- (id)filterByBusinessCategoryAtIndex:(unsigned long long)arg1;
- (id)filterByBusinessCategorys;
- (unsigned long long)filterByBusinessCategorysCount;
- (long long)geoId;
- (bool)hasAdditionalEnabledMarkets;
- (bool)hasAddress;
- (bool)hasBusinessOptions;
- (bool)hasBusinessSortOrder;
- (bool)hasClientCapabilities;
- (bool)hasDeviceCountryCode;
- (bool)hasDeviceLocation;
- (bool)hasDeviceLocationCountryCode;
- (bool)hasDeviceTimeZone;
- (bool)hasExcludeAddressInResults;
- (bool)hasGeoId;
- (bool)hasIncludeBusinessCategories;
- (bool)hasIncludeBusinessRating;
- (bool)hasIncludeEntryPoints;
- (bool)hasIncludeFeatureSets;
- (bool)hasIncludeGeoId;
- (bool)hasIncludeMatchedToken;
- (bool)hasIncludeNameForForwardGeocodingResults;
- (bool)hasIncludePhonetics;
- (bool)hasIncludeQuads;
- (bool)hasIncludeRoadAccessPoints;
- (bool)hasIncludeSpokenNames;
- (bool)hasIncludeStatusCodeInfo;
- (bool)hasIncludeSuggestionsOnly;
- (bool)hasIncludeTravelDistance;
- (bool)hasIncludeTravelTime;
- (bool)hasIncludeUnmatchedStrings;
- (bool)hasIndexFilter;
- (bool)hasInputLanguage;
- (bool)hasIntersectingGeoId;
- (bool)hasIsCanonicalLocationSearch;
- (bool)hasIsFromAPI;
- (bool)hasIsPopularNearbyRequest;
- (bool)hasIsStrictGeocoding;
- (bool)hasIsStrictMapRegion;
- (bool)hasKnownAccuracy;
- (bool)hasKnownLocation;
- (bool)hasLocalSearchProviderID;
- (bool)hasLocation;
- (bool)hasMapMode;
- (bool)hasMapRegion;
- (bool)hasMaxBusinessReviews;
- (bool)hasMaxResults;
- (bool)hasPhoneticLocaleIdentifier;
- (bool)hasPlaceTypeLimit;
- (bool)hasPreserveFields;
- (bool)hasSearch;
- (bool)hasSearchContext;
- (bool)hasSearchContextSubstring;
- (bool)hasSearchLocation;
- (bool)hasSearchSource;
- (bool)hasSequenceNumber;
- (bool)hasSessionGUID;
- (bool)hasStructuredSearch;
- (bool)hasSuggestionsOptions;
- (bool)hasSuggestionsPrefix;
- (bool)hasSuppressResultsRequiringAttribution;
- (bool)hasTimeSinceMapEnteredForeground;
- (bool)hasTimeSinceMapViewportChanged;
- (bool)hasTimestamp;
- (bool)hasTransportTypeForTravelTimes;
- (bool)hasViewportCenterCountryCode;
- (bool)hasZilchPoints;
- (unsigned long long)hash;
- (bool)includeBusinessCategories;
- (bool)includeBusinessRating;
- (bool)includeEntryPoints;
- (bool)includeFeatureSets;
- (bool)includeGeoId;
- (bool)includeMatchedToken;
- (bool)includeNameForForwardGeocodingResults;
- (bool)includePhonetics;
- (bool)includeQuads;
- (bool)includeRoadAccessPoints;
- (bool)includeSpokenNames;
- (bool)includeStatusCodeInfo;
- (bool)includeSuggestionsOnly;
- (bool)includeTravelDistance;
- (bool)includeTravelTime;
- (bool)includeUnmatchedStrings;
- (id)indexFilter;
- (id)initWithTraits:(id)arg1;
- (id)inputLanguage;
- (unsigned long long)intersectingGeoId;
- (bool)isCanonicalLocationSearch;
- (bool)isEqual:(id)arg1;
- (bool)isFromAPI;
- (bool)isPopularNearbyRequest;
- (bool)isStrictGeocoding;
- (bool)isStrictMapRegion;
- (int)knownAccuracy;
- (id)knownAccuracyAsString:(int)arg1;
- (id)knownLocation;
- (id)limitToCountryCodeIso2AtIndex:(unsigned long long)arg1;
- (id)limitToCountryCodeIso2s;
- (unsigned long long)limitToCountryCodeIso2sCount;
- (int)localSearchProviderID;
- (id)location;
- (int)mapMode;
- (id)mapModeAsString:(int)arg1;
- (id)mapRegion;
- (int)maxBusinessReviews;
- (int)maxResults;
- (void)mergeFrom:(id)arg1;
- (int)optionalSuppressionReasonAtIndex:(unsigned long long)arg1;
- (int*)optionalSuppressionReasons;
- (id)optionalSuppressionReasonsAsString:(int)arg1;
- (unsigned long long)optionalSuppressionReasonsCount;
- (id)phoneticLocaleIdentifier;
- (int)placeTypeLimit;
- (id)placeTypeLimitAsString:(int)arg1;
- (id)preserveFields;
- (bool)readFrom:(id)arg1;
- (unsigned int)requestTypeCode;
- (Class)responseClass;
- (id)search;
- (id)searchContext;
- (id)searchContextSubstring;
- (id)searchLocation;
- (int)searchSource;
- (id)searchSourceAsString:(int)arg1;
- (id)searchSubstringAtIndex:(unsigned long long)arg1;
- (id)searchSubstrings;
- (unsigned long long)searchSubstringsCount;
- (int)sequenceNumber;
- (id)serviceTagAtIndex:(unsigned long long)arg1;
- (id)serviceTags;
- (unsigned long long)serviceTagsCount;
- (struct GEOSessionID { unsigned long long x1; unsigned long long x2; })sessionGUID;
- (void)setAdditionalEnabledMarkets:(id)arg1;
- (void)setAdditionalPlaceTypes:(int*)arg1 count:(unsigned long long)arg2;
- (void)setAddress:(id)arg1;
- (void)setBusinessIDs:(unsigned long long*)arg1 count:(unsigned long long)arg2;
- (void)setBusinessOptions:(id)arg1;
- (void)setBusinessSortOrder:(int)arg1;
- (void)setClientCapabilities:(id)arg1;
- (void)setDeviceCountryCode:(id)arg1;
- (void)setDeviceLocation:(id)arg1;
- (void)setDeviceLocationCountryCode:(id)arg1;
- (void)setDeviceTimeZone:(id)arg1;
- (void)setExcludeAddressInResults:(bool)arg1;
- (void)setFilterByBusinessCategorys:(id)arg1;
- (void)setGeoId:(long long)arg1;
- (void)setHasBusinessSortOrder:(bool)arg1;
- (void)setHasExcludeAddressInResults:(bool)arg1;
- (void)setHasGeoId:(bool)arg1;
- (void)setHasIncludeBusinessCategories:(bool)arg1;
- (void)setHasIncludeBusinessRating:(bool)arg1;
- (void)setHasIncludeEntryPoints:(bool)arg1;
- (void)setHasIncludeFeatureSets:(bool)arg1;
- (void)setHasIncludeGeoId:(bool)arg1;
- (void)setHasIncludeMatchedToken:(bool)arg1;
- (void)setHasIncludeNameForForwardGeocodingResults:(bool)arg1;
- (void)setHasIncludePhonetics:(bool)arg1;
- (void)setHasIncludeQuads:(bool)arg1;
- (void)setHasIncludeRoadAccessPoints:(bool)arg1;
- (void)setHasIncludeSpokenNames:(bool)arg1;
- (void)setHasIncludeStatusCodeInfo:(bool)arg1;
- (void)setHasIncludeSuggestionsOnly:(bool)arg1;
- (void)setHasIncludeTravelDistance:(bool)arg1;
- (void)setHasIncludeTravelTime:(bool)arg1;
- (void)setHasIncludeUnmatchedStrings:(bool)arg1;
- (void)setHasIntersectingGeoId:(bool)arg1;
- (void)setHasIsCanonicalLocationSearch:(bool)arg1;
- (void)setHasIsFromAPI:(bool)arg1;
- (void)setHasIsPopularNearbyRequest:(bool)arg1;
- (void)setHasIsStrictGeocoding:(bool)arg1;
- (void)setHasIsStrictMapRegion:(bool)arg1;
- (void)setHasKnownAccuracy:(bool)arg1;
- (void)setHasLocalSearchProviderID:(bool)arg1;
- (void)setHasMapMode:(bool)arg1;
- (void)setHasMaxBusinessReviews:(bool)arg1;
- (void)setHasMaxResults:(bool)arg1;
- (void)setHasPlaceTypeLimit:(bool)arg1;
- (void)setHasSearchSource:(bool)arg1;
- (void)setHasSequenceNumber:(bool)arg1;
- (void)setHasSessionGUID:(bool)arg1;
- (void)setHasStructuredSearch:(bool)arg1;
- (void)setHasSuppressResultsRequiringAttribution:(bool)arg1;
- (void)setHasTimeSinceMapEnteredForeground:(bool)arg1;
- (void)setHasTimeSinceMapViewportChanged:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasTransportTypeForTravelTimes:(bool)arg1;
- (void)setIncludeBusinessCategories:(bool)arg1;
- (void)setIncludeBusinessRating:(bool)arg1;
- (void)setIncludeEntryPoints:(bool)arg1;
- (void)setIncludeFeatureSets:(bool)arg1;
- (void)setIncludeGeoId:(bool)arg1;
- (void)setIncludeMatchedToken:(bool)arg1;
- (void)setIncludeNameForForwardGeocodingResults:(bool)arg1;
- (void)setIncludePhonetics:(bool)arg1;
- (void)setIncludeQuads:(bool)arg1;
- (void)setIncludeRoadAccessPoints:(bool)arg1;
- (void)setIncludeSpokenNames:(bool)arg1;
- (void)setIncludeStatusCodeInfo:(bool)arg1;
- (void)setIncludeSuggestionsOnly:(bool)arg1;
- (void)setIncludeTravelDistance:(bool)arg1;
- (void)setIncludeTravelTime:(bool)arg1;
- (void)setIncludeUnmatchedStrings:(bool)arg1;
- (void)setIndexFilter:(id)arg1;
- (void)setInputLanguage:(id)arg1;
- (void)setIntersectingGeoId:(unsigned long long)arg1;
- (void)setIsCanonicalLocationSearch:(bool)arg1;
- (void)setIsFromAPI:(bool)arg1;
- (void)setIsPopularNearbyRequest:(bool)arg1;
- (void)setIsStrictGeocoding:(bool)arg1;
- (void)setIsStrictMapRegion:(bool)arg1;
- (void)setKnownAccuracy:(int)arg1;
- (void)setKnownLocation:(id)arg1;
- (void)setLimitToCountryCodeIso2s:(id)arg1;
- (void)setLocalSearchProviderID:(int)arg1;
- (void)setLocation:(id)arg1;
- (void)setMapMode:(int)arg1;
- (void)setMapRegion:(id)arg1;
- (void)setMaxBusinessReviews:(int)arg1;
- (void)setMaxResults:(int)arg1;
- (void)setOptionalSuppressionReasons:(int*)arg1 count:(unsigned long long)arg2;
- (void)setPhoneticLocaleIdentifier:(id)arg1;
- (void)setPlaceTypeLimit:(int)arg1;
- (void)setPreserveFields:(id)arg1;
- (void)setSearch:(id)arg1;
- (void)setSearchContext:(id)arg1;
- (void)setSearchContextSubstring:(id)arg1;
- (void)setSearchLocation:(id)arg1;
- (void)setSearchSource:(int)arg1;
- (void)setSearchSubstrings:(id)arg1;
- (void)setSequenceNumber:(int)arg1;
- (void)setServiceTags:(id)arg1;
- (void)setSessionGUID:(struct GEOSessionID { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setStructuredSearch:(bool)arg1;
- (void)setSuggestionsOptions:(id)arg1;
- (void)setSuggestionsPrefix:(id)arg1;
- (void)setSuppressResultsRequiringAttribution:(bool)arg1;
- (void)setTimeSinceMapEnteredForeground:(double)arg1;
- (void)setTimeSinceMapViewportChanged:(double)arg1;
- (void)setTimestamp:(double)arg1;
- (void)setTransportTypeForTravelTimes:(int)arg1;
- (void)setViewportCenterCountryCode:(id)arg1;
- (void)setZilchPoints:(id)arg1;
- (bool)structuredSearch;
- (id)suggestionsOptions;
- (id)suggestionsPrefix;
- (bool)suppressResultsRequiringAttribution;
- (double)timeSinceMapEnteredForeground;
- (double)timeSinceMapViewportChanged;
- (double)timestamp;
- (int)transportTypeForTravelTimes;
- (id)transportTypeForTravelTimesAsString:(int)arg1;
- (id)unknownFields;
- (id)viewportCenterCountryCode;
- (void)writeTo:(id)arg1;
- (id)zilchPoints;

@end
