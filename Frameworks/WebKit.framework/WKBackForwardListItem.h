/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/WebKit
 */

@interface WKBackForwardListItem : NSObject <WKObject> {
    struct ObjectStorage<WebKit::WebBackForwardListItem> { 
        struct type { 
            unsigned char __lx[312]; 
        } data; 
    }  _item;
}

@property (readonly, copy) NSURL *URL;
@property (readonly) /* Warning: unhandled struct encoding: '{Object=^^?@}' */ struct Object { int (**x1)(); id x2; }*_apiObject;
@property (readonly) struct WebBackForwardListItem { int (**x1)(); id x2; bool x3; /* Warning: Unrecognized filer type: 'a' using 'void*' */ void*x4; BOOL x5; void*x6; void*x7; out const void*x8; void*x9; const double x10; unsigned long x11; int x12; short x13; void*x14; unsigned int x15; void*x16; void*x17; void*x18; unsigned short x19; void*x20; void*x21; void*x22; void*x23; void*x24; struct BackForwardItemIdentifier { struct ObjectIdentifier<WebCore::ProcessIdentifierType> { unsigned long long x_1_2_1; } x_25_1_1; struct ObjectIdentifier<WebCore::BackForwardItemIdentifier::ItemIdentifierType> { unsigned long long x_2_2_1; } x_25_1_2; } x25; struct x26; }*_item; /* unknown property attribute:  WTF::DumbPtrTraits<WTF::WeakReference<WebKit::SuspendedPageProxy> > >=^{WeakReference<WebKit::SuspendedPageProxy>}}}} */
@property (setter=_sf_setQuickLookDocument:, nonatomic, retain) _SFQuickLookDocument *_sf_quickLookDocument;
@property (setter=_sf_setSecurityInfo:, nonatomic, retain) _SFSecurityInfo *_sf_securityInfo;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, copy) NSURL *initialURL;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *title;

// Image: /System/Library/Frameworks/WebKit.framework/WebKit

- (id)URL;
- (/* Warning: unhandled struct encoding: '{Object=^^?@}' */ struct Object { int (**x1)(); id x2; }*)_apiObject;
- (struct CGImage { }*)_copySnapshotForTesting;
- (struct WebBackForwardListItem { int (**x1)(); id x2; bool x3; /* Warning: Unrecognized filer type: 'a' using 'void*' */ void*x4; BOOL x5; void*x6; void*x7; out const void*x8; void*x9; const double x10; unsigned long x11; int x12; short x13; void*x14; unsigned int x15; void*x16; void*x17; void*x18; unsigned short x19; void*x20; void*x21; void*x22; void*x23; void*x24; struct BackForwardItemIdentifier { struct ObjectIdentifier<WebCore::ProcessIdentifierType> { unsigned long long x_1_2_1; } x_25_1_1; struct ObjectIdentifier<WebCore::BackForwardItemIdentifier::ItemIdentifierType> { unsigned long long x_2_2_1; } x_25_1_2; } x25; struct PageState { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl {} *x_1_3_1; } x_1_2_1; } x_26_1_1; struct FrameState { struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_2_2_1; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl {} *x_1_4_1; } x_2_3_1; } x_2_2_2; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl {} *x_1_4_1; } x_3_3_1; } x_2_2_3; struct String { struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > { struct StringImpl {} *x_1_4_1; } x_4_3_1; } x_2_2_4; struct Vector<WTF::String, 0, WTF::CrashOnOverflow, 16> { struct String {} *x_5_3_1; unsigned int x_5_3_2; unsigned int x_5_3_3; } x_2_2_5; struct Optional<WTF::Vector<unsigned char, 0, WTF::CrashOnOverflow, 16> > { bool x_6_3_1; union storage_t<WTF::Vector<unsigned char, 0, WTF::CrashOnOverflow, 16> > { unsigned char x_2_4_1; struct Vector<unsigned char, 0, WTF::CrashOnOverflow, 16> { char *x_2_5_1; unsigned int x_2_5_2; unsigned int x_2_5_3; } x_2_4_2; } x_6_3_2; } x_2_2_6; } x_26_1_2; } x26; }*)_item;
- (struct CGPoint { double x1; double x2; })_scrollPosition;
- (void)dealloc;
- (id)initialURL;
- (id)title;

// Image: /System/Library/Frameworks/SafariServices.framework/SafariServices

- (id)_sf_quickLookDocument;
- (id)_sf_securityInfo;
- (void)_sf_setQuickLookDocument:(id)arg1;
- (void)_sf_setSecurityInfo:(id)arg1;

@end
