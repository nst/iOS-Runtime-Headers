/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
 */

@interface _MRAVOutputDeviceDescriptorProtobuf : PBCodable <NSCopying> {
    float  _batteryLevel;
    bool  _canAccessRemoteAssets;
    int  _deviceSubType;
    int  _deviceType;
    NSString * _groupID;
    struct { 
        unsigned int batteryLevel : 1; 
        unsigned int deviceSubType : 1; 
        unsigned int deviceType : 1; 
        unsigned int canAccessRemoteAssets : 1; 
        unsigned int isGroupLeader : 1; 
        unsigned int isGroupable : 1; 
        unsigned int isLocalDevice : 1; 
        unsigned int isRemoteControllable : 1; 
        unsigned int requiresAuthorization : 1; 
        unsigned int shouldForceRemoteControlabillity : 1; 
        unsigned int supportsExternalScreen : 1; 
    }  _has;
    bool  _isGroupLeader;
    bool  _isGroupable;
    bool  _isLocalDevice;
    bool  _isRemoteControllable;
    NSData * _macAddress;
    NSString * _modelID;
    NSData * _modelSpecificInfoData;
    NSString * _name;
    bool  _requiresAuthorization;
    bool  _shouldForceRemoteControlabillity;
    _MRAVOutputDeviceSourceInfoProtobuf * _sourceInfo;
    bool  _supportsExternalScreen;
    NSString * _uniqueIdentifier;
}

@property (nonatomic) float batteryLevel;
@property (nonatomic) bool canAccessRemoteAssets;
@property (nonatomic) int deviceSubType;
@property (nonatomic) int deviceType;
@property (nonatomic, retain) NSString *groupID;
@property (nonatomic) bool hasBatteryLevel;
@property (nonatomic) bool hasCanAccessRemoteAssets;
@property (nonatomic) bool hasDeviceSubType;
@property (nonatomic) bool hasDeviceType;
@property (nonatomic, readonly) bool hasGroupID;
@property (nonatomic) bool hasIsGroupLeader;
@property (nonatomic) bool hasIsGroupable;
@property (nonatomic) bool hasIsLocalDevice;
@property (nonatomic) bool hasIsRemoteControllable;
@property (nonatomic, readonly) bool hasMacAddress;
@property (nonatomic, readonly) bool hasModelID;
@property (nonatomic, readonly) bool hasModelSpecificInfoData;
@property (nonatomic, readonly) bool hasName;
@property (nonatomic) bool hasRequiresAuthorization;
@property (nonatomic) bool hasShouldForceRemoteControlabillity;
@property (nonatomic, readonly) bool hasSourceInfo;
@property (nonatomic) bool hasSupportsExternalScreen;
@property (nonatomic, readonly) bool hasUniqueIdentifier;
@property (nonatomic) bool isGroupLeader;
@property (nonatomic) bool isGroupable;
@property (nonatomic) bool isLocalDevice;
@property (nonatomic) bool isRemoteControllable;
@property (nonatomic, retain) NSData *macAddress;
@property (nonatomic, retain) NSString *modelID;
@property (nonatomic, retain) NSData *modelSpecificInfoData;
@property (nonatomic, retain) NSString *name;
@property (nonatomic) bool requiresAuthorization;
@property (nonatomic) bool shouldForceRemoteControlabillity;
@property (nonatomic, retain) _MRAVOutputDeviceSourceInfoProtobuf *sourceInfo;
@property (nonatomic) bool supportsExternalScreen;
@property (nonatomic, retain) NSString *uniqueIdentifier;

- (float)batteryLevel;
- (bool)canAccessRemoteAssets;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (int)deviceSubType;
- (int)deviceType;
- (id)dictionaryRepresentation;
- (id)groupID;
- (bool)hasBatteryLevel;
- (bool)hasCanAccessRemoteAssets;
- (bool)hasDeviceSubType;
- (bool)hasDeviceType;
- (bool)hasGroupID;
- (bool)hasIsGroupLeader;
- (bool)hasIsGroupable;
- (bool)hasIsLocalDevice;
- (bool)hasIsRemoteControllable;
- (bool)hasMacAddress;
- (bool)hasModelID;
- (bool)hasModelSpecificInfoData;
- (bool)hasName;
- (bool)hasRequiresAuthorization;
- (bool)hasShouldForceRemoteControlabillity;
- (bool)hasSourceInfo;
- (bool)hasSupportsExternalScreen;
- (bool)hasUniqueIdentifier;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (bool)isGroupLeader;
- (bool)isGroupable;
- (bool)isLocalDevice;
- (bool)isRemoteControllable;
- (id)macAddress;
- (void)mergeFrom:(id)arg1;
- (id)modelID;
- (id)modelSpecificInfoData;
- (id)name;
- (bool)readFrom:(id)arg1;
- (bool)requiresAuthorization;
- (void)setBatteryLevel:(float)arg1;
- (void)setCanAccessRemoteAssets:(bool)arg1;
- (void)setDeviceSubType:(int)arg1;
- (void)setDeviceType:(int)arg1;
- (void)setGroupID:(id)arg1;
- (void)setHasBatteryLevel:(bool)arg1;
- (void)setHasCanAccessRemoteAssets:(bool)arg1;
- (void)setHasDeviceSubType:(bool)arg1;
- (void)setHasDeviceType:(bool)arg1;
- (void)setHasIsGroupLeader:(bool)arg1;
- (void)setHasIsGroupable:(bool)arg1;
- (void)setHasIsLocalDevice:(bool)arg1;
- (void)setHasIsRemoteControllable:(bool)arg1;
- (void)setHasRequiresAuthorization:(bool)arg1;
- (void)setHasShouldForceRemoteControlabillity:(bool)arg1;
- (void)setHasSupportsExternalScreen:(bool)arg1;
- (void)setIsGroupLeader:(bool)arg1;
- (void)setIsGroupable:(bool)arg1;
- (void)setIsLocalDevice:(bool)arg1;
- (void)setIsRemoteControllable:(bool)arg1;
- (void)setMacAddress:(id)arg1;
- (void)setModelID:(id)arg1;
- (void)setModelSpecificInfoData:(id)arg1;
- (void)setName:(id)arg1;
- (void)setRequiresAuthorization:(bool)arg1;
- (void)setShouldForceRemoteControlabillity:(bool)arg1;
- (void)setSourceInfo:(id)arg1;
- (void)setSupportsExternalScreen:(bool)arg1;
- (void)setUniqueIdentifier:(id)arg1;
- (bool)shouldForceRemoteControlabillity;
- (id)sourceInfo;
- (bool)supportsExternalScreen;
- (id)uniqueIdentifier;
- (void)writeTo:(id)arg1;

@end
