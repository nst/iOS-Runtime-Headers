/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
 */

@interface HDMockDaemon : NSObject <HDHealthDaemon> {
    HDBackgroundTaskScheduler * _backgroundTaskScheduler;
    HDContentProtectionManager * _contentProtectionManager;
    HDHealthServiceManager * _healthServiceManager;
    HDPluginManager * _pluginManager;
    <HDSyncEngine> * _syncEngine;
    HDAchievementAssetManager * achievementAssetManager;
    HDAchievementDefinitionAlertManager * achievementDefinitionAlertManager;
    <HDNanoAlertSuppressionService> * alertSuppressionService;
    HDAuthorizationManager * authorizationManager;
    HDCurrentActivitySummaryHelper * currentActivitySummaryHelper;
    HDDataProvenanceManager * dataProvenanceManager;
    HDFitnessFriendsManager * fitnessFriendsManager;
    HDMockPrimaryProfile * mockPrimaryProfile;
    HDNanoSyncManager * nanoSyncManager;
    HDPrimaryProfile * primaryProfile;
    HDProcessStateManager * processStateManager;
    HDRoutineGateway * routineGateway;
    HDServiceConnectionManager * serviceConnectionManager;
    HDAppSubscriptionManager * subscriptionManager;
    <HDViewOnWakeService> * viewOnWakeService;
}

@property (nonatomic, retain) HDAchievementAssetManager *achievementAssetManager;
@property (nonatomic, retain) HDAchievementDefinitionAlertManager *achievementDefinitionAlertManager;
@property (nonatomic, retain) <HDNanoAlertSuppressionService> *alertSuppressionService;
@property (nonatomic, readonly) HDAuthorizationManager *authorizationManager;
@property (retain) HDBackgroundTaskScheduler *backgroundTaskScheduler;
@property (nonatomic, readonly) _HKBehavior *behavior;
@property (retain) HDContentProtectionManager *contentProtectionManager;
@property (nonatomic, retain) HDCurrentActivitySummaryHelper *currentActivitySummaryHelper;
@property (readonly) HDDataProvenanceManager *dataProvenanceManager;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) HDFitnessFriendsManager *fitnessFriendsManager;
@property (readonly) unsigned long long hash;
@property (readonly) <HDHealthDatabase> *healthDatabase;
@property (readonly) HDDeviceManager *healthDeviceManager;
@property (retain) HDHealthServiceManager *healthServiceManager;
@property (readonly) NSString *homeDirectoryPath;
@property (readonly) NSURL *homeDirectoryURL;
@property (readonly) bool isAppleWatch;
@property (readonly) NSObject<OS_dispatch_queue> *mainQueue;
@property (nonatomic, readonly) HDMockPrimaryProfile *mockPrimaryProfile;
@property (nonatomic, readonly) HDNanoSyncManager *nanoSyncManager;
@property (retain) HDPluginManager *pluginManager;
@property (nonatomic, readonly) HDPrimaryProfile *primaryProfile;
@property (readonly) HDProcessStateManager *processStateManager;
@property (nonatomic, readonly) HDRoutineGateway *routineGateway;
@property (nonatomic, readonly) HDServiceConnectionManager *serviceConnectionManager;
@property (nonatomic, readonly) HDAppSubscriptionManager *subscriptionManager;
@property (readonly) Class superclass;
@property (retain) <HDSyncEngine> *syncEngine;
@property (readonly) HDUserCharacteristicsManager *userCharacteristicsManager;
@property (nonatomic, retain) <HDViewOnWakeService> *viewOnWakeService;

- (void).cxx_destruct;
- (id)achievementAssetManager;
- (id)achievementDefinitionAlertManager;
- (id)alertSuppressionService;
- (id)authorizationManager;
- (id)backgroundTaskScheduler;
- (void)beginTransaction:(id)arg1;
- (id)behavior;
- (id)contentProtectionManager;
- (id)currentActivitySummaryHelper;
- (id)dataProvenanceManager;
- (void)didUpdateActiveWorkoutServers;
- (void)endTransaction:(id)arg1;
- (id)firstPartyWorkoutSnapshot;
- (id)fitnessFriendsManager;
- (bool)hasAnyActiveWorkouts;
- (id)healthDataCollectionManager;
- (id)healthDataManager;
- (id)healthDatabase;
- (id)healthDeviceManager;
- (id)healthServiceManager;
- (id)healthSourceManager;
- (id)homeDirectoryPath;
- (id)homeDirectoryURL;
- (id)init;
- (bool)isAppleWatch;
- (id)mainQueue;
- (id)mockPrimaryProfile;
- (id)nanoSyncManager;
- (void)pauseAllActiveWorkoutsWithCompletion:(id)arg1;
- (void)performBlockWithPowerAssertionIdentifier:(id)arg1 transactionName:(id)arg2 powerAssertionInterval:(double)arg3 block:(id)arg4;
- (bool)persistAndNotifyDataObject:(id)arg1 device:(id)arg2 error:(id*)arg3;
- (bool)persistAndNotifyDataObjects:(id)arg1 device:(id)arg2 error:(id*)arg3;
- (id)pluginManager;
- (id)primaryProfile;
- (id)processStateManager;
- (void)registerForDaemonReady:(id)arg1;
- (void)registerForLaunchNotification:(const char *)arg1;
- (id)routineGateway;
- (id)serviceConnectionManager;
- (void)setAchievementAssetManager:(id)arg1;
- (void)setAchievementDefinitionAlertManager:(id)arg1;
- (void)setAlertSuppressionService:(id)arg1;
- (void)setBackgroundTaskScheduler:(id)arg1;
- (void)setContentProtectionManager:(id)arg1;
- (void)setCurrentActivityCacheOverrideDate:(id)arg1 timeZone:(id)arg2 completion:(id)arg3;
- (void)setCurrentActivitySummaryHelper:(id)arg1;
- (void)setDataCollectionOptions:(id)arg1 forKey:(id)arg2 type:(id)arg3 clientUUID:(id)arg4;
- (void)setHealthServiceManager:(id)arg1;
- (void)setPluginManager:(id)arg1;
- (void)setSyncEngine:(id)arg1;
- (void)setViewOnWakeService:(id)arg1;
- (id)subscriptionManager;
- (id)syncEngine;
- (void)syncImmediatelyWithReason:(id)arg1;
- (id)temporaryProfile;
- (void)terminate;
- (void)unregisterForLaunchNotification:(const char *)arg1;
- (id)userCharacteristicsManager;
- (id)viewOnWakeService;

@end
