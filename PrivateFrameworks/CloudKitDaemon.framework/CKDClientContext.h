/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

@interface CKDClientContext : NSObject {
    CKDMMCS * _MMCS;
    CKDAccount * _account;
    CKAccountInfo * _accountInfoOverride;
    CKDAppContainerIntersectionMetadata * _appContainerIntersectionMetadata;
    CKDAppContainerTuple * _appContainerTuple;
    NSString * _applicationAssetDbDirectory;
    NSBundle * _applicationBundle;
    NSString * _applicationBundleID;
    NSString * _applicationCachesDirectory;
    NSString * _applicationContainerCloudKitDirectory;
    NSString * _applicationContainerPath;
    NSString * _applicationDisplayName;
    NSString * _applicationFileDownloadDirectory;
    NSString * _applicationFileStagingDirectory;
    NSURL * _applicationIcon;
    NSString * _applicationMMCSDirectory;
    CKDApplicationMetadata * _applicationMetadata;
    NSString * _applicationRecordCacheDirectory;
    NSString * _applicationVersion;
    CKDPublicIdentityLookupService * _backgroundPublicIdentityLookupService;
    CKDZoneGatekeeper * _backgroundZoneGatekeeper;
    CKDCachePurger * _cachePurger;
    long long  _cachedEnvironment;
    bool  _captureResponseHTTPHeaders;
    CKDServerConfiguration * _config;
    NSString * _containerHardwareIDHash;
    CKContainerID * _containerID;
    NSString * _containerScopedUserID;
    NSString * _contextID;
    NSDictionary * _fakeEntitlements;
    NSMutableDictionary * _fakeErrorByClassName;
    NSMutableDictionary * _fakeResponseOperationResultByClassNameByItemID;
    bool  _finishedAppProxySetup;
    CKDFlowControlManager * _flowControlManager;
    CKDPublicIdentityLookupService * _foregroundPublicIdentityLookupService;
    CKDZoneGatekeeper * _foregroundZoneGatekeeper;
    bool  _hasDataContainer;
    bool  _isForClouddInternalUse;
    CKDMescalSession * _mescalSession;
    CKDPCSCache * _pcsCache;
    CKDPCSManager * _pcsManager;
    NSHashTable * _proxies;
    NSURL * _publicCloudDBURL;
    NSURL * _publicCodeServiceURL;
    NSURL * _publicDeviceServiceURL;
    CKDKeyValueDiskCache * _publicIdentitiesDiskCache;
    NSURL * _publicShareServiceURL;
    bool  _sandboxed;
    NSObject<OS_dispatch_queue> * _setupQueue;
    NSString * _sourceApplicationBundleID;
    CKTimeLogger * _timeLogger;
    long long  _type;
}

@property (retain) CKDMMCS *MMCS;
@property (retain) CKDAccount *account;
@property (nonatomic, readonly) CKAccountInfo *accountInfoOverride;
@property (nonatomic, readonly) bool allowsCellularAccess;
@property (nonatomic) bool allowsPowerNapScheduling;
@property (nonatomic, retain) CKDAppContainerIntersectionMetadata *appContainerIntersectionMetadata;
@property (nonatomic, retain) CKDAppContainerTuple *appContainerTuple;
@property (nonatomic, retain) NSString *applicationAssetDbDirectory;
@property (nonatomic, readonly) NSBundle *applicationBundle;
@property (nonatomic, readonly) NSString *applicationBundleID;
@property (nonatomic, retain) NSString *applicationCachesDirectory;
@property (nonatomic, retain) NSString *applicationContainerCloudKitDirectory;
@property (nonatomic, retain) NSString *applicationContainerPath;
@property (nonatomic, readonly) NSString *applicationDisplayName;
@property (nonatomic, retain) NSString *applicationFileDownloadDirectory;
@property (nonatomic, retain) NSString *applicationFileStagingDirectory;
@property (nonatomic, readonly) NSURL *applicationIcon;
@property (nonatomic, retain) NSString *applicationIdentifier;
@property (nonatomic, retain) NSString *applicationMMCSDirectory;
@property (nonatomic, retain) CKDApplicationMetadata *applicationMetadata;
@property (nonatomic, retain) NSString *applicationRecordCacheDirectory;
@property (nonatomic, retain) NSString *applicationVersion;
@property (setter=setAPSEnvironmentString:, nonatomic, retain) NSString *apsEnvironmentString;
@property (nonatomic, retain) CKDPublicIdentityLookupService *backgroundPublicIdentityLookupService;
@property (nonatomic, retain) CKDZoneGatekeeper *backgroundZoneGatekeeper;
@property (nonatomic, retain) CKDCachePurger *cachePurger;
@property long long cachedEnvironment;
@property (nonatomic, readonly) bool canAccessAccount;
@property (nonatomic) bool canAccessProtectionData;
@property (nonatomic) bool canSetDeviceIdentifier;
@property (nonatomic) bool captureResponseHTTPHeaders;
@property (nonatomic, retain) NSString *clientPrefixEntitlement;
@property (nonatomic, retain) CKDServerConfiguration *config;
@property (nonatomic, readonly) NSString *containerHardwareIDHash;
@property (nonatomic, readonly) CKContainerID *containerID;
@property (nonatomic, retain) NSString *containerScopedUserID;
@property (nonatomic, readonly) NSString *contextID;
@property (nonatomic) long long darkWakeEnabled;
@property (nonatomic, retain) NSDictionary *fakeEntitlements;
@property (nonatomic, retain) NSMutableDictionary *fakeErrorByClassName;
@property (nonatomic, retain) NSMutableDictionary *fakeResponseOperationResultByClassNameByItemID;
@property (nonatomic) bool finishedAppProxySetup;
@property (nonatomic, retain) CKDFlowControlManager *flowControlManager;
@property (nonatomic, retain) CKDPublicIdentityLookupService *foregroundPublicIdentityLookupService;
@property (nonatomic, retain) CKDZoneGatekeeper *foregroundZoneGatekeeper;
@property (nonatomic) bool hasAllowAccessDuringBuddyEntitlement;
@property (nonatomic) bool hasAllowCustomAccountsEntitlement;
@property (nonatomic) bool hasAllowSetEnvironmentEntitlement;
@property (nonatomic) bool hasDataContainer;
@property (nonatomic) bool hasDisplaysSystemAcceptPromptEntitlement;
@property (nonatomic) bool hasLightweightPCSEntitlement;
@property (nonatomic) bool hasMasqueradingEntitlement;
@property (nonatomic) bool hasOutOfProcessUIEntitlement;
@property (nonatomic) bool hasParticipantPIIEntitlement;
@property (setter=setHasSystemServiceEntitlement:, nonatomic) bool hasSystemServiceEntitlement;
@property (nonatomic) bool hasTCCAuthorization;
@property (nonatomic) bool isForClouddInternalUse;
@property (nonatomic, retain) CKDMescalSession *mescalSession;
@property (nonatomic, readonly) CKDPCSCache *pcsCache;
@property (nonatomic, retain) CKDPCSManager *pcsManager;
@property (nonatomic, retain) NSHashTable *proxies;
@property (nonatomic, retain) NSURL *publicCloudDBURL;
@property (nonatomic, retain) NSURL *publicCodeServiceURL;
@property (nonatomic, retain) NSURL *publicDeviceServiceURL;
@property (nonatomic, retain) CKDKeyValueDiskCache *publicIdentitiesDiskCache;
@property (nonatomic, retain) NSURL *publicShareServiceURL;
@property (getter=isSandboxed, nonatomic) bool sandboxed;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *setupQueue;
@property (nonatomic, readonly) NSString *sourceApplicationBundleID;
@property (nonatomic, retain) CKTimeLogger *timeLogger;
@property (nonatomic, readonly) long long type;
@property (nonatomic) long long usesAPSPublicToken;

+ (id)_sharedContextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3 forInternalUse:(bool)arg4;
+ (id)applicationCachesPathForBundleID:(id)arg1;
+ (id)applicationContainerPathForBundleID:(id)arg1 bundleURL:(id*)arg2 type:(long long*)arg3;
+ (id)contextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3;
+ (id)sharedContextForInternalUseWithAppContainerTuple:(id)arg1;
+ (id)sharedContextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3;
+ (id)sharedContextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3 forInternalUse:(bool)arg4;
+ (id)sharedContexts;

- (void).cxx_destruct;
- (id)CKPropertiesDescription;
- (id)MMCS;
- (void)_cancelAllLongLivedOperations;
- (void)_determineHardwareInfo;
- (id)_issueSandboxExtensionForPath:(id)arg1 error:(id*)arg2;
- (void)_loadApplicationContainerPathAndType;
- (void)_reloadAccount;
- (bool)_setupDirectoriesWithClientProxy:(id)arg1 sandboxExtensions:(id*)arg2 error:(id*)arg3;
- (id)account;
- (id)accountInfoOverride;
- (void)addClientProxy:(id)arg1;
- (bool)allowsCellularAccess;
- (bool)allowsPowerNapScheduling;
- (id)appContainerIntersectionMetadata;
- (id)appContainerTuple;
- (id)applicationAssetDbDirectory;
- (id)applicationBundle;
- (id)applicationBundleID;
- (id)applicationCachesDirectory;
- (id)applicationContainerCloudKitDirectory;
- (id)applicationContainerPath;
- (id)applicationDisplayName;
- (id)applicationFileDownloadDirectory;
- (id)applicationFileStagingDirectory;
- (id)applicationIcon;
- (id)applicationIdentifier;
- (id)applicationMMCSDirectory;
- (id)applicationMetadata;
- (id)applicationRecordCacheDirectory;
- (id)applicationVersion;
- (id)apsEnvironmentString;
- (id)assetDirectoryContext;
- (id)backgroundPublicIdentityLookupService;
- (id)backgroundZoneGatekeeper;
- (id)cachePurger;
- (long long)cachedEnvironment;
- (bool)canAccessAccount;
- (bool)canAccessProtectionData;
- (bool)canSetDeviceIdentifier;
- (bool)captureResponseHTTPHeaders;
- (void)checkAccountAccessWithCompletion:(id)arg1;
- (void)clearAssetCache;
- (void)clearAssetCacheWithDatabaseScope:(long long)arg1;
- (void)clearAuthTokensForRecordWithID:(id)arg1 databaseScope:(long long)arg2;
- (void)clearContextFromMetadataCache;
- (void)clearRecordCacheWithDatabaseScope:(long long)arg1;
- (id)clientPrefixEntitlement;
- (id)config;
- (id)containerHardwareIDHash;
- (id)containerID;
- (id)containerScopedUserID;
- (id)contextID;
- (long long)darkWakeEnabled;
- (void)dealloc;
- (id)description;
- (id)fakeEntitlements;
- (id)fakeErrorByClassName;
- (id)fakeResponseOperationResultByClassNameByItemID;
- (void)finishSetupWithClientProxy:(id)arg1 completionHandler:(id)arg2;
- (bool)finishedAppProxySetup;
- (id)flowControlManager;
- (id)foregroundPublicIdentityLookupService;
- (id)foregroundZoneGatekeeper;
- (bool)hasAllowAccessDuringBuddyEntitlement;
- (bool)hasAllowCustomAccountsEntitlement;
- (bool)hasAllowSetEnvironmentEntitlement;
- (bool)hasDataContainer;
- (bool)hasDisplaysSystemAcceptPromptEntitlement;
- (bool)hasLightweightPCSEntitlement;
- (bool)hasMasqueradingEntitlement;
- (bool)hasOutOfProcessUIEntitlement;
- (bool)hasParticipantPIIEntitlement;
- (bool)hasSystemServiceEntitlement;
- (bool)hasTCCAuthorization;
- (id)initWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3;
- (bool)isForClouddInternalUse;
- (bool)isSandboxed;
- (id)mescalSession;
- (id)pcsCache;
- (id)pcsManager;
- (void)performRequest:(id)arg1;
- (id)proxies;
- (id)publicCloudDBURL;
- (id)publicCodeServiceURL;
- (id)publicDeviceServiceURL;
- (id)publicIdentitiesDiskCache;
- (double)publicIdentitiesExpirationTimeout;
- (id)publicShareServiceURL;
- (void)removeClientProxy:(id)arg1;
- (void)setAPSEnvironmentString:(id)arg1;
- (void)setAccount:(id)arg1;
- (void)setAllowsPowerNapScheduling:(bool)arg1;
- (void)setAppContainerIntersectionMetadata:(id)arg1;
- (void)setAppContainerTuple:(id)arg1;
- (void)setApplicationAssetDbDirectory:(id)arg1;
- (void)setApplicationCachesDirectory:(id)arg1;
- (void)setApplicationContainerCloudKitDirectory:(id)arg1;
- (void)setApplicationContainerPath:(id)arg1;
- (void)setApplicationFileDownloadDirectory:(id)arg1;
- (void)setApplicationFileStagingDirectory:(id)arg1;
- (void)setApplicationIdentifier:(id)arg1;
- (void)setApplicationMMCSDirectory:(id)arg1;
- (void)setApplicationMetadata:(id)arg1;
- (void)setApplicationRecordCacheDirectory:(id)arg1;
- (void)setApplicationVersion:(id)arg1;
- (void)setBackgroundPublicIdentityLookupService:(id)arg1;
- (void)setBackgroundZoneGatekeeper:(id)arg1;
- (void)setCachePurger:(id)arg1;
- (void)setCachedEnvironment:(long long)arg1;
- (void)setCanAccessProtectionData:(bool)arg1;
- (void)setCanSetDeviceIdentifier:(bool)arg1;
- (void)setCaptureResponseHTTPHeaders:(bool)arg1;
- (void)setClientPrefixEntitlement:(id)arg1;
- (void)setConfig:(id)arg1;
- (void)setContainerScopedUserID:(id)arg1;
- (void)setDarkWakeEnabled:(long long)arg1;
- (void)setFakeEntitlements:(id)arg1;
- (void)setFakeError:(id)arg1 forNextRequestOfClassName:(id)arg2;
- (void)setFakeErrorByClassName:(id)arg1;
- (void)setFakeResponseOperationResult:(id)arg1 forNextRequestOfClassName:(id)arg2 forItemID:(id)arg3;
- (void)setFakeResponseOperationResultByClassNameByItemID:(id)arg1;
- (void)setFinishedAppProxySetup:(bool)arg1;
- (void)setFlowControlManager:(id)arg1;
- (void)setForegroundPublicIdentityLookupService:(id)arg1;
- (void)setForegroundZoneGatekeeper:(id)arg1;
- (void)setHasAllowAccessDuringBuddyEntitlement:(bool)arg1;
- (void)setHasAllowCustomAccountsEntitlement:(bool)arg1;
- (void)setHasAllowSetEnvironmentEntitlement:(bool)arg1;
- (void)setHasDataContainer:(bool)arg1;
- (void)setHasDisplaysSystemAcceptPromptEntitlement:(bool)arg1;
- (void)setHasLightweightPCSEntitlement:(bool)arg1;
- (void)setHasMasqueradingEntitlement:(bool)arg1;
- (void)setHasOutOfProcessUIEntitlement:(bool)arg1;
- (void)setHasParticipantPIIEntitlement:(bool)arg1;
- (void)setHasSystemServiceEntitlement:(bool)arg1;
- (void)setHasTCCAuthorization:(bool)arg1;
- (void)setIsForClouddInternalUse:(bool)arg1;
- (void)setMMCS:(id)arg1;
- (void)setMescalSession:(id)arg1;
- (void)setPcsManager:(id)arg1;
- (void)setProxies:(id)arg1;
- (void)setPublicCloudDBURL:(id)arg1;
- (void)setPublicCodeServiceURL:(id)arg1;
- (void)setPublicDeviceServiceURL:(id)arg1;
- (void)setPublicIdentitiesDiskCache:(id)arg1;
- (void)setPublicShareServiceURL:(id)arg1;
- (void)setSandboxed:(bool)arg1;
- (void)setSetupQueue:(id)arg1;
- (void)setTimeLogger:(id)arg1;
- (void)setUsesAPSPublicToken:(long long)arg1;
- (bool)setupAssetTransfersWithClientProxy:(id)arg1 error:(id*)arg2;
- (bool)setupMMCSWrapperWithError:(id*)arg1;
- (id)setupQueue;
- (void)showAssetCache;
- (void)showAssetCacheWithDatabaseScope:(long long)arg1;
- (void)showUserNotification:(struct __CFUserNotification { }*)arg1 withCompletionBlock:(id)arg2;
- (id)sourceApplicationBundleID;
- (void)startSetupWithClientProxy:(id)arg1 completionHandler:(id)arg2;
- (void)tearDownAssetTransfers;
- (id)timeLogger;
- (long long)type;
- (long long)usesAPSPublicToken;

@end
