/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport
 */

@interface NTPBIssueRecord : PBCodable <NSCopying> {
    NSMutableArray * _allArticleIDs;
    NSMutableArray * _allowedStorefrontIDs;
    NTPBRecordBase * _base;
    NSMutableArray * _blockedStorefrontIDs;
    NSString * _channelTagID;
    NSString * _coverArticleID;
    double  _coverAspectRatio;
    NSString * _coverImageURL;
    NSString * _coverPrimaryColor;
    NSString * _edition;
    unsigned long long  _halfLifeMilliseconds;
    struct { 
        unsigned int coverAspectRatio : 1; 
        unsigned int halfLifeMilliseconds : 1; 
        unsigned int layeredCoverAspectRatio : 1; 
        unsigned int minimumNewsVersion : 1; 
        unsigned int type : 1; 
        unsigned int isDraft : 1; 
        unsigned int isPaid : 1; 
    }  _has;
    bool  _isDraft;
    bool  _isPaid;
    NSString * _issueDescription;
    NSString * _layeredCover;
    double  _layeredCoverAspectRatio;
    NSString * _layeredCoverPrimaryColor;
    NSString * _metadataURL;
    long long  _minimumNewsVersion;
    NSString * _notificationDescription;
    NSString * _pdfResourceArchiveURL;
    NTPBDate * _publishDate;
    COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleScores * _scores;
    NSString * _title;
    NSMutableArray * _topicTagIDs;
    int  _type;
}

@property (nonatomic, retain) NSMutableArray *allArticleIDs;
@property (nonatomic, retain) NSMutableArray *allowedStorefrontIDs;
@property (nonatomic, retain) NTPBRecordBase *base;
@property (nonatomic, retain) NSMutableArray *blockedStorefrontIDs;
@property (nonatomic, retain) NSString *channelTagID;
@property (nonatomic, retain) NSString *coverArticleID;
@property (nonatomic) double coverAspectRatio;
@property (nonatomic, retain) NSString *coverImageURL;
@property (nonatomic, retain) NSString *coverPrimaryColor;
@property (nonatomic, retain) NSString *edition;
@property (nonatomic) unsigned long long halfLifeMilliseconds;
@property (nonatomic, readonly) bool hasBase;
@property (nonatomic, readonly) bool hasChannelTagID;
@property (nonatomic, readonly) bool hasCoverArticleID;
@property (nonatomic) bool hasCoverAspectRatio;
@property (nonatomic, readonly) bool hasCoverImageURL;
@property (nonatomic, readonly) bool hasCoverPrimaryColor;
@property (nonatomic, readonly) bool hasEdition;
@property (nonatomic) bool hasHalfLifeMilliseconds;
@property (nonatomic) bool hasIsDraft;
@property (nonatomic) bool hasIsPaid;
@property (nonatomic, readonly) bool hasIssueDescription;
@property (nonatomic, readonly) bool hasLayeredCover;
@property (nonatomic) bool hasLayeredCoverAspectRatio;
@property (nonatomic, readonly) bool hasLayeredCoverPrimaryColor;
@property (nonatomic, readonly) bool hasMetadataURL;
@property (nonatomic) bool hasMinimumNewsVersion;
@property (nonatomic, readonly) bool hasNotificationDescription;
@property (nonatomic, readonly) bool hasPdfResourceArchiveURL;
@property (nonatomic, readonly) bool hasPublishDate;
@property (nonatomic, readonly) bool hasScores;
@property (nonatomic, readonly) bool hasTitle;
@property (nonatomic) bool hasType;
@property (nonatomic) bool isDraft;
@property (nonatomic) bool isPaid;
@property (nonatomic, retain) NSString *issueDescription;
@property (nonatomic, retain) NSString *layeredCover;
@property (nonatomic) double layeredCoverAspectRatio;
@property (nonatomic, retain) NSString *layeredCoverPrimaryColor;
@property (nonatomic, retain) NSString *metadataURL;
@property (nonatomic) long long minimumNewsVersion;
@property (nonatomic, retain) NSString *notificationDescription;
@property (nonatomic, retain) NSString *pdfResourceArchiveURL;
@property (nonatomic, retain) NTPBDate *publishDate;
@property (nonatomic, retain) COMAPPLEFELDSPARPROTOCOLLIVERPOOLArticleScores *scores;
@property (nonatomic, retain) NSString *title;
@property (nonatomic, retain) NSMutableArray *topicTagIDs;
@property (nonatomic) int type;

// Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport

+ (Class)allArticleIDsType;
+ (Class)allowedStorefrontIDsType;
+ (Class)blockedStorefrontIDsType;
+ (Class)topicTagIDsType;

- (void)addAllArticleIDs:(id)arg1;
- (void)addAllowedStorefrontIDs:(id)arg1;
- (void)addBlockedStorefrontIDs:(id)arg1;
- (void)addTopicTagIDs:(id)arg1;
- (id)allArticleIDs;
- (id)allArticleIDsAtIndex:(unsigned long long)arg1;
- (unsigned long long)allArticleIDsCount;
- (id)allowedStorefrontIDs;
- (id)allowedStorefrontIDsAtIndex:(unsigned long long)arg1;
- (unsigned long long)allowedStorefrontIDsCount;
- (id)base;
- (id)blockedStorefrontIDs;
- (id)blockedStorefrontIDsAtIndex:(unsigned long long)arg1;
- (unsigned long long)blockedStorefrontIDsCount;
- (id)channelTagID;
- (void)clearAllArticleIDs;
- (void)clearAllowedStorefrontIDs;
- (void)clearBlockedStorefrontIDs;
- (void)clearTopicTagIDs;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)coverArticleID;
- (double)coverAspectRatio;
- (id)coverImageURL;
- (id)coverPrimaryColor;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (id)edition;
- (unsigned long long)halfLifeMilliseconds;
- (bool)hasBase;
- (bool)hasChannelTagID;
- (bool)hasCoverArticleID;
- (bool)hasCoverAspectRatio;
- (bool)hasCoverImageURL;
- (bool)hasCoverPrimaryColor;
- (bool)hasEdition;
- (bool)hasHalfLifeMilliseconds;
- (bool)hasIsDraft;
- (bool)hasIsPaid;
- (bool)hasIssueDescription;
- (bool)hasLayeredCover;
- (bool)hasLayeredCoverAspectRatio;
- (bool)hasLayeredCoverPrimaryColor;
- (bool)hasMetadataURL;
- (bool)hasMinimumNewsVersion;
- (bool)hasNotificationDescription;
- (bool)hasPdfResourceArchiveURL;
- (bool)hasPublishDate;
- (bool)hasScores;
- (bool)hasTitle;
- (bool)hasType;
- (unsigned long long)hash;
- (bool)isDraft;
- (bool)isEqual:(id)arg1;
- (bool)isPaid;
- (id)issueDescription;
- (id)layeredCover;
- (double)layeredCoverAspectRatio;
- (id)layeredCoverPrimaryColor;
- (void)mergeFrom:(id)arg1;
- (id)metadataURL;
- (long long)minimumNewsVersion;
- (id)notificationDescription;
- (id)pdfResourceArchiveURL;
- (id)publishDate;
- (bool)readFrom:(id)arg1;
- (id)scores;
- (void)setAllArticleIDs:(id)arg1;
- (void)setAllowedStorefrontIDs:(id)arg1;
- (void)setBase:(id)arg1;
- (void)setBlockedStorefrontIDs:(id)arg1;
- (void)setChannelTagID:(id)arg1;
- (void)setCoverArticleID:(id)arg1;
- (void)setCoverAspectRatio:(double)arg1;
- (void)setCoverImageURL:(id)arg1;
- (void)setCoverPrimaryColor:(id)arg1;
- (void)setEdition:(id)arg1;
- (void)setHalfLifeMilliseconds:(unsigned long long)arg1;
- (void)setHasCoverAspectRatio:(bool)arg1;
- (void)setHasHalfLifeMilliseconds:(bool)arg1;
- (void)setHasIsDraft:(bool)arg1;
- (void)setHasIsPaid:(bool)arg1;
- (void)setHasLayeredCoverAspectRatio:(bool)arg1;
- (void)setHasMinimumNewsVersion:(bool)arg1;
- (void)setHasType:(bool)arg1;
- (void)setIsDraft:(bool)arg1;
- (void)setIsPaid:(bool)arg1;
- (void)setIssueDescription:(id)arg1;
- (void)setLayeredCover:(id)arg1;
- (void)setLayeredCoverAspectRatio:(double)arg1;
- (void)setLayeredCoverPrimaryColor:(id)arg1;
- (void)setMetadataURL:(id)arg1;
- (void)setMinimumNewsVersion:(long long)arg1;
- (void)setNotificationDescription:(id)arg1;
- (void)setPdfResourceArchiveURL:(id)arg1;
- (void)setPublishDate:(id)arg1;
- (void)setScores:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTopicTagIDs:(id)arg1;
- (void)setType:(int)arg1;
- (id)title;
- (id)topicTagIDs;
- (id)topicTagIDsAtIndex:(unsigned long long)arg1;
- (unsigned long long)topicTagIDsCount;
- (int)type;
- (void)writeTo:(id)arg1;

// Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore

- (bool)isAllowedInStorefront:(id)arg1;

@end
