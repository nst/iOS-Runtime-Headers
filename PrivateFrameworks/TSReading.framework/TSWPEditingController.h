/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TSReading.framework/TSReading
 */

@interface TSWPEditingController : NSObject <TSDAutoscrollDelegate, TSDGestureTarget, TSDTextInput, TSDTrackerManipulator, TSKChangeSourceObserver, TSKPopoverBasedViewControllerDelegate, TSWPReferenceLibraryViewControllerDelegate> {
    bool  _annotationWasShowingAtStartOfGesture;
    NSMutableDictionary * _autocorrectedEntries;
    TSDAutoscroll * _autoscroll;
    struct CGPoint { 
        double x; 
        double y; 
    }  _autoscrollPoint;
    bool  _canCoalesce;
    bool  _canCoalesceBreakingCharacters;
    bool  _cancelRubyText;
    bool  _coalescingText;
    unsigned long long  _currentSelectionFlags;
    UIPopoverController * _definitionPopoverController;
    TSWPReferenceLibraryViewController * _definitionViewController;
    NSMutableDictionary * _dictationInterpretations;
    bool  _disableInspector;
    bool  _editMenuIsVisible;
    TSKFidgetResolver * _fidgetResolver;
    bool  _gestureBeganWhenEditingBegan;
    <TSDEditor> * _hostEditor;
    bool  _ignoreFutureImmediatePresses;
    unsigned long long  _initialPressTextSelectionGranularity;
    unsigned long long  _initialStorageChangeCount;
    UIView * _inputViewForHidingKeyboard;
    TSDMultiPaneController * _insertBreakPopoverController;
    TSWPCharacterStyle * _insertionStyle;
    TSWPInteractiveCanvasController * _interactiveCanvasController;
    bool  _isBecomingActive;
    bool  _isEditingPlainText;
    unsigned long long  _knobTag;
    struct CGPoint { 
        double x; 
        double y; 
    }  _knobToTouchOffset;
    TSWPTextKnobTracker * _knobTracker;
    bool  _knobTracking;
    struct CGPoint { 
        double x; 
        double y; 
    }  _knobTrackingDragPoint;
    unsigned int  _knobTrackingTapCount;
    bool  _magnifying;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _markedRange;
    NSAttributedString * _markedText;
    NSString * _mostRecentGestureKind;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _originalSelectionRange;
    <TSDAnnotationHosting> * _previousSelectedAnnotation;
    bool  _readyToEnd;
    TSKPopoverBasedViewController<TSWPDismissBlockPopover> * _rubyTextViewController;
    TSWPSelection * _selection;
    unsigned long long  _selectionAnchor;
    bool  _selectionLastModifiedWithKeyboard;
    bool  _selectionLastModifiedWithKnob;
    bool  _shouldDisplayKeyboard;
    bool  _shouldShowEditMenuForInsertionPoint;
    bool  _showNextEditMenu;
    TSWPStorage * _storage;
    NSArray * _suggestions;
    bool  _supportsDataDetectors;
    bool  _suppressBreaks;
    bool  _suppressDataDetectorsOnResignTextInput;
    bool  _suppressEditMenu;
    bool  _suppressPhonetics;
    bool  _suppressTabs;
    bool  _tapAndLongPressIsPossible;
    NSDictionary * _tapInfo;
}

@property (nonatomic, retain) TSDAutoscroll *autoscroll;
@property (nonatomic) struct CGPoint { double x1; double x2; } autoscrollPoint;
@property (nonatomic) bool canCoalesce;
@property (nonatomic) bool canCoalesceBreakingCharacters;
@property (nonatomic) bool coalescingText;
@property (nonatomic, readonly) unsigned long long currentSelectionFlags;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool disableInspector;
@property (readonly) unsigned long long hash;
@property (nonatomic) <TSDEditor> *hostEditor;
@property (nonatomic, readonly) TSDInteractiveCanvasController *icc;
@property (readonly, retain) UIView *inputAccessoryView;
@property (readonly, retain) UIView *inputView;
@property (nonatomic) unsigned long long insertionPoint;
@property (nonatomic, readonly) TSWPCharacterStyle *insertionStyle;
@property (nonatomic, readonly) TSWPInteractiveCanvasController *interactiveCanvasController;
@property (nonatomic) bool isBecomingActive;
@property (nonatomic) bool isEditingPlainText;
@property (nonatomic) unsigned long long knobTag;
@property (nonatomic) bool knobTracking;
@property (nonatomic) struct CGPoint { double x1; double x2; } knobTrackingDragPoint;
@property (nonatomic) unsigned int knobTrackingTapCount;
@property (nonatomic, readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } markedRange;
@property (nonatomic, readonly) NSAttributedString *markedText;
@property (nonatomic, readonly) NSSet *selectedObjectsSupportingConnectionLineAttributes;
@property (nonatomic, readonly) NSSet *selectedObjectsSupportingEndpoints;
@property (nonatomic, readonly) NSSet *selectedObjectsSupportingFill;
@property (nonatomic, readonly) NSSet *selectedObjectsSupportingOpacity;
@property (nonatomic, readonly) NSSet *selectedObjectsSupportingReflection;
@property (nonatomic, readonly) NSSet *selectedObjectsSupportingResize;
@property (nonatomic, readonly) NSSet *selectedObjectsSupportingShadow;
@property (nonatomic, readonly) NSSet *selectedObjectsSupportingShrinkTextToFit;
@property (nonatomic, readonly) NSSet *selectedObjectsSupportingSmartShapeAttributes;
@property (nonatomic, readonly) NSSet *selectedObjectsSupportingStroke;
@property (nonatomic, readonly) NSSet *selectedObjectsSupportingTextInset;
@property (nonatomic, retain) TSWPSelection *selection;
@property (nonatomic, retain) TSKSelection<TSDTextSelection> *selectionForArrowKeys;
@property (nonatomic, readonly) bool selectionLastModifiedWithKeyboard;
@property (nonatomic, readonly) bool selectionLastModifiedWithKnob;
@property (nonatomic) bool shouldDisplayKeyboard;
@property (nonatomic, readonly, retain) TSWPStorage *storage;
@property (readonly) Class superclass;
@property (nonatomic) bool supportsDataDetectors;
@property (nonatomic) bool suppressBreaks;
@property (nonatomic, readonly) bool suppressDataDetectorsOnResignTextInput;
@property (nonatomic) bool suppressPhonetics;
@property (nonatomic) bool suppressTabs;
@property (nonatomic, readonly) bool suppressesTextInspector;
@property (nonatomic, readonly, retain) TSKSelection<TSDTextSelection> *textInputSelection;
@property (readonly) bool wantsRawArrowKeyEvents;

+ (id)_targetedDragPreviewForSelection:(id)arg1 interactiveCanvasController:(id)arg2 reps:(id)arg3 applyScale:(bool)arg4 imageFrameUnion:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg5;
+ (id)dragItemForHitRepWithDragInteraction:(id)arg1 session:(id)arg2 canvasView:(id)arg3 icc:(id)arg4 withTouchPoint:(struct CGPoint { double x1; double x2; })arg5;
+ (id)dropProposalForSession:(id)arg1;
+ (id)previewForDragItem:(id)arg1;
+ (id)retargetedDragItem:(id)arg1 withDefault:(id)arg2 canvasView:(id)arg3 icc:(id)arg4;

- (id)_repsForStorage:(id)arg1 selection:(id)arg2;
- (void)abandonMarkedText;
- (void)addAllDictationInterpretationRangesInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toRanges:(struct TSWPRangeVector { struct _NSRange {} *x1; struct _NSRange {} *x2; struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange> > { struct _NSRange {} *x_3_1_1; } x3; }*)arg2;
- (bool)allowTrackerManipulatorToTakeControl:(id)arg1;
- (void)asyncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (id)autoscroll;
- (struct CGPoint { double x1; double x2; })autoscrollPoint;
- (void)autoscrollWillNotStart;
- (id)calculateVisualRunsFromSelection:(id)arg1 updateControllerSelection:(bool)arg2;
- (bool)canAcceptOrRejectChange;
- (bool)canAddOrShowComment;
- (bool)canCenterHUD;
- (bool)canCoalesce;
- (bool)canCoalesceBreakingCharacters;
- (bool)canHandleGesture:(id)arg1;
- (bool)canHandleSwipeGestureForGestureRecognizer:(id)arg1 outDelta:(long long*)arg2 outTextDirection:(long long*)arg3 outLayoutDirection:(long long*)arg4;
- (bool)canHighlightCurrentSelection;
- (int)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2;
- (bool)canRemoveHighlightForCurrentSelection;
- (bool)canSetWritingDirection:(int)arg1;
- (bool)canShowCommentForCurrentSelectionGetHighlight:(id*)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (void)cancelKnobTrackingAndMagnifying;
- (void)cancelPhoneticsHUDAnimated:(bool)arg1;
- (unsigned long long)charIndexByMovingPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3 preferPosition:(double*)arg4;
- (unsigned long long)charIndexInRep:(id)arg1 fromPoint:(struct CGPoint { double x1; double x2; })arg2 allowPastBreak:(bool)arg3 allowNotFound:(bool)arg4 isAtEndOfLine:(bool*)arg5;
- (unsigned long long)charIndexInRep:(id)arg1 fromPoint:(struct CGPoint { double x1; double x2; })arg2 allowPastBreak:(bool)arg3 allowNotFound:(bool)arg4 pastCenterGoesToNextChar:(bool)arg5 isAtEndOfLine:(bool*)arg6;
- (unsigned long long)charIndexInRep:(id)arg1 fromPoint:(struct CGPoint { double x1; double x2; })arg2 allowPastBreak:(bool)arg3 isAtEndOfLine:(bool*)arg4 leadingEdge:(bool*)arg5;
- (unsigned long long)charIndexMovingByCharacterFromCharIndex:(unsigned long long)arg1 inDirection:(long long)arg2;
- (unsigned long long)charIndexMovingByCharacterFromCharIndex:(unsigned long long)arg1 leadingEdge:(bool*)arg2 inDirection:(long long)arg3;
- (unsigned long long)charIndexMovingByWordFromCharIndex:(unsigned long long)arg1 inDirection:(long long)arg2;
- (id)characterStyleForDeletedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)clearMarkedRange;
- (unsigned long long)closestCharIndexToPoint:(struct CGPoint { double x1; double x2; })arg1 isAtEndOfLine:(bool*)arg2;
- (bool)coalescingText;
- (void)copy:(id)arg1;
- (void)copyObject:(id)arg1;
- (id)copyString;
- (void)copyToPasteboard:(id)arg1;
- (unsigned long long)countOfHyperlinksInUserSelection;
- (id)currentFontColor;
- (id)currentLayoutParent;
- (unsigned long long)currentSelectionFlags;
- (void)customSelect:(id)arg1;
- (void)customSelectAll:(id)arg1;
- (void)dealloc;
- (void)definitionAction:(id)arg1;
- (void)deleteBackward;
- (void)deleteForward;
- (id)dictationInterpretationsAtCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (void)didBecomeCurrentEditor;
- (void)didBecomeTextInputEditor;
- (void)didEnterBackground;
- (bool)disableInspector;
- (void)dismissActivePopovers;
- (void)dismissPhoneticsHUDAnimated:(bool)arg1;
- (id)documentRoot;
- (id)dragItemForCurrentSelectionWithDragInteraction:(id)arg1 session:(id)arg2 withTouchPoint:(struct CGPoint { double x1; double x2; })arg3;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })editRange;
- (id)editingReps;
- (id)editingSearchReference;
- (bool)editorCanHideEditMenu;
- (id)editorKeyboardLanguage;
- (bool)editorKeyboardLanguageIsRTL;
- (void)endEditing;
- (void)endEditingAndSelectParent:(id)arg1;
- (void)endHardPressGestureRecognizer:(id)arg1;
- (void)extendSelectionLeft;
- (void)extendSelectionRight;
- (id)extendSelectionToParagraphs:(id)arg1;
- (id)extraMenuItems;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })firstRectForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)gestureSequenceDidEnd;
- (void)gestureSequenceWillBegin;
- (bool)handleGesture:(id)arg1;
- (void)handleHardPressGestureRecognizer:(id)arg1;
- (id)hostEditor;
- (id)icc;
- (id)initWithStorage:(id)arg1 interactiveCanvasController:(id)arg2;
- (id)inputAccessoryView;
- (id)inputView;
- (void)insertText:(id)arg1;
- (unsigned long long)insertionPoint;
- (id)insertionStyle;
- (id)interactiveCanvasController;
- (void)invalidateSelectionVisualRuns;
- (bool)isBecomingActive;
- (bool)isCharIndex:(unsigned long long)arg1 withEolAffinity:(bool)arg2 atBoundary:(long long)arg3 inDirection:(long long)arg4;
- (bool)isCharIndex:(unsigned long long)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;
- (bool)isDisplayingPhoneticsHUD;
- (bool)isEditingPlainText;
- (bool)isInParagraphMode;
- (bool)isParagraphModeWithSelection:(id)arg1 onStorage:(id)arg2;
- (bool)isSelectionSingleAnchoredDrawableAttachment;
- (bool)isUnscaledPointInTextSelection:(struct CGPoint { double x1; double x2; })arg1;
- (unsigned long long)knobTag;
- (bool)knobTracking;
- (struct CGPoint { double x1; double x2; })knobTrackingDragPoint;
- (unsigned int)knobTrackingTapCount;
- (id)logicalToVisualSelection:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })markedRange;
- (id)markedText;
- (id)model;
- (void)noReplacementsFound:(id)arg1;
- (void)operationDidEnd;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })overrideCaretRectForSelection:(id)arg1;
- (bool)pIsSelectionPlaceHolderText;
- (bool)pIsSelectionPlaceHolderTextWithSelection:(id)arg1;
- (bool)pStorageCanAcceptDrawableAttachments;
- (unsigned long long)p_LeftCharForInsertion:(const struct { struct TSWPLineFragment {} *x1; struct TSWPLineFragment {} *x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; bool x7; bool x8; }*)arg1;
- (unsigned long long)p_MoveByLineRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 up:(bool)arg2;
- (void)p_addCommonEditItemsIntoMenu:(id)arg1;
- (void)p_addInsertItemsIntoMenu:(id)arg1;
- (void)p_adjustSelection:(id)arg1 withOtherSelection:(id)arg2 textSelectionGranularity:(unsigned long long)arg3;
- (void)p_adjustSelection:(id)arg1 withUnscaledCanvasPoint:(struct CGPoint { double x1; double x2; })arg2 textSelectionGranularity:(unsigned long long)arg3 isTapHold:(bool)arg4 allowPastBreak:(bool)arg5;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })p_adjustVisualSelection:(id)arg1 withOtherSelection:(id)arg2;
- (unsigned long long)p_adjustedCharIndexForWordTestingFromCharIndex:(unsigned long long)arg1 forDirection:(long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })p_adjustedPopoverTargetRectForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)p_beginHorizontalRangedMagnificationForRep:(id)arg1 unscaledCanvasPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)p_beginKnobTrackingSelection:(id)arg1 forRep:(id)arg2 atPoint:(struct CGPoint { double x1; double x2; })arg3;
- (void)p_beginMagnification:(id)arg1 forRep:(id)arg2 atPoint:(struct CGPoint { double x1; double x2; })arg3;
- (void)p_beginOperationAndTakeControl;
- (void)p_beginTapAndLongPress:(id)arg1;
- (bool)p_canEditTextString;
- (bool)p_canInsertBreak;
- (int)p_canPerformOptInEditorAction:(SEL)arg1 withSender:(id)arg2;
- (bool)p_canSelectAllWithSender:(id)arg1;
- (void)p_cancelDelayedSelectors;
- (void)p_cancelTapAndLongPressPreviousSelector;
- (unsigned long long)p_caretCharIndexForLayoutOrderCharIndex:(unsigned long long)arg1 inDirection:(long long)arg2;
- (unsigned long long)p_charIndexAtPoint:(struct CGPoint { double x1; double x2; })arg1 isAtEndOfLine:(bool*)arg2;
- (unsigned long long)p_charIndexByMovingCharIndex:(unsigned long long)arg1 withEolAffinity:(bool*)arg2 toBoundary:(int)arg3 inDirection:(long long)arg4 preferPosition:(double*)arg5 isLeadingEdge:(bool*)arg6;
- (struct CGPoint { double x1; double x2; })p_clampPointToLine:(struct CGPoint { double x1; double x2; })arg1 trackingRep:(id)arg2;
- (void)p_clearEditMenuFlags;
- (void)p_clearSecondaryHighlight;
- (id)p_columnForCharIndex:(unsigned long long)arg1;
- (id)p_columnForCharIndex:(unsigned long long)arg1 withStorage:(id)arg2;
- (id)p_containingShapeRep;
- (void)p_createKnobTracker:(id)arg1 forRep:(id)arg2 tapCount:(unsigned long long)arg3;
- (struct __CFStringTokenizer { }*)p_createTokenizerForCharIndex:(unsigned long long)arg1 outTokenizerRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (void)p_dismissDefinitionPopover;
- (id)p_documentViewController;
- (id)p_editingRepForCharIndex:(unsigned long long)arg1;
- (double)p_effectiveFontSizeForCurrentSelection;
- (void)p_endAutoscroll;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })p_expandParagraphRangeForEnumerator:(struct TSWPParagraphEnumerator { id x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; bool x6; }*)arg1;
- (id)p_extendSelectionToIncludeSmartFields:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })p_firstRectForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 actualRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (unsigned long long)p_getVisualDeletionIndexForSelection:(id)arg1 backward:(bool*)arg2;
- (unsigned long long)p_getVisualInsertionPointIndexForString:(id)arg1 selection:(id)arg2;
- (void)p_handleKnobDragGestureRecognizer:(id)arg1;
- (void)p_handleLongPressGesture:(id)arg1;
- (void)p_handleSwipeMoveCaretWithTextGranularity:(long long)arg1 textDirection:(long long)arg2 layoutDirection:(long long)arg3;
- (void)p_handleTapAndTouchGesture:(id)arg1;
- (void)p_handleTapGestures:(id)arg1;
- (void)p_highlightRubyTextWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)p_highlightSelectionForSelection:(id)arg1;
- (bool)p_hitListLabelAtCharIndex:(unsigned long long)arg1 atNaturalPoint:(struct CGPoint { double x1; double x2; })arg2 inRep:(id)arg3;
- (id)p_hitRepWithPoint:(struct CGPoint { double x1; double x2; })arg1 keyboardAdjustmentDelta:(double)arg2;
- (void)p_inputLanguageDidChangeNotification:(id)arg1;
- (bool)p_isCharIndex:(unsigned long long)arg1 withEolAffinity:(bool)arg2 atBoundary:(int)arg3 inDirection:(long long)arg4;
- (bool)p_isCharIndex:(unsigned long long)arg1 withinTextUnit:(int)arg2 inDirection:(long long)arg3;
- (bool)p_isIgnoringKeyboardInput;
- (bool)p_isLayoutLeftToRightAtCharIndex:(unsigned long long)arg1;
- (bool)p_isTextInputEditor;
- (bool)p_keyboardShouldShowOnscreen;
- (const struct TSWPLineFragment { unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned int x4; double x5; double x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_8_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_8_1_2; } x8; struct { double x_9_1_1; double x_9_1_2; double x_9_1_3; double x_9_1_4; double x_9_1_5; double x_9_1_6; double x_9_1_7; double x_9_1_8; } x9; struct TSWPListLabel {} *x10; id x11; void x12; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x13; BOOL x14; void*x15; out const void*x16; void*x17; unsigned short x18; void*x19; void*x20; unsigned long x21; int x22; in void*x23; void*x24; void*x25; float x26; void*x27; void*x28; short x29; void*x30; double x31; SEL x32; SEL x33; void*x34; void*x35; void*x36; SEL x37; SEL x38; void*x39; long x40; long x41; out BOOL x42; void*x43; void*x44; out const void*x45; void*x46; unsigned short x47; }*)p_lastVisibleLineFragmentForCharIndex:(unsigned long long)arg1 eol:(bool)arg2;
- (unsigned long long)p_layoutOrderCharIndexForCaretCharIndex:(unsigned long long)arg1 inDirection:(long long)arg2;
- (id)p_layoutTargetForCharIndex:(unsigned long long)arg1 eolAffinity:(bool)arg2;
- (unsigned long long)p_leftEdgeForSelection:(id)arg1 withLeadingEdge:(bool*)arg2;
- (const struct TSWPLineFragment { unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned int x4; double x5; double x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_8_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_8_1_2; } x8; struct { double x_9_1_1; double x_9_1_2; double x_9_1_3; double x_9_1_4; double x_9_1_5; double x_9_1_6; double x_9_1_7; double x_9_1_8; } x9; struct TSWPListLabel {} *x10; id x11; void x12; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x13; BOOL x14; void*x15; out const void*x16; void*x17; unsigned short x18; void*x19; void*x20; unsigned long x21; int x22; in void*x23; void*x24; void*x25; float x26; void*x27; void*x28; short x29; void*x30; double x31; SEL x32; SEL x33; void*x34; void*x35; void*x36; SEL x37; SEL x38; void*x39; long x40; long x41; out BOOL x42; void*x43; void*x44; out const void*x45; void*x46; unsigned short x47; }*)p_lineFragmentForCharIndex:(unsigned long long)arg1 column:(id*)arg2 eol:(bool)arg3;
- (const struct TSWPLineFragment { unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned int x4; double x5; double x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_8_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_8_1_2; } x8; struct { double x_9_1_1; double x_9_1_2; double x_9_1_3; double x_9_1_4; double x_9_1_5; double x_9_1_6; double x_9_1_7; double x_9_1_8; } x9; struct TSWPListLabel {} *x10; id x11; void x12; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x13; BOOL x14; void*x15; out const void*x16; void*x17; unsigned short x18; void*x19; void*x20; unsigned long x21; int x22; in void*x23; void*x24; void*x25; float x26; void*x27; void*x28; short x29; void*x30; double x31; SEL x32; SEL x33; void*x34; void*x35; void*x36; SEL x37; SEL x38; void*x39; long x40; long x41; out BOOL x42; void*x43; void*x44; out const void*x45; void*x46; unsigned short x47; }*)p_lineFragmentWithCaretInfo:(struct { unsigned long long x1; bool x2; bool x3; int x4; unsigned long long x5; bool x6; int x7; unsigned long long x8; bool x9; int x10; }*)arg1 forSelection:(id)arg2;
- (unsigned long long)p_lineIndexForCharIndex:(unsigned long long)arg1 column:(id*)arg2 eol:(bool)arg3;
- (int)p_moveFromCharIndex:(unsigned long long*)arg1 tokenizerRef:(struct __CFStringTokenizer {}**)arg2 tokenizerRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg3 direction:(long long)arg4 currentWordRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg5 newWordRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg6 reasonToStop:(unsigned int)arg7;
- (void)p_moveHorizontalRangedLoupeForRep:(id)arg1 unscaledCanvasPoint:(struct CGPoint { double x1; double x2; })arg2;
- (const struct TSWPLineFragment { unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned int x4; double x5; double x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_8_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_8_1_2; } x8; struct { double x_9_1_1; double x_9_1_2; double x_9_1_3; double x_9_1_4; double x_9_1_5; double x_9_1_6; double x_9_1_7; double x_9_1_8; } x9; struct TSWPListLabel {} *x10; id x11; void x12; /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*x13; BOOL x14; void*x15; out const void*x16; void*x17; unsigned short x18; void*x19; void*x20; unsigned long x21; int x22; in void*x23; void*x24; void*x25; float x26; void*x27; void*x28; short x29; void*x30; double x31; SEL x32; SEL x33; void*x34; void*x35; void*x36; SEL x37; SEL x38; void*x39; long x40; long x41; out BOOL x42; void*x43; void*x44; out const void*x45; void*x46; unsigned short x47; }*)p_nearestLineFragmentWithSameVerticalPositionAs:(unsigned long long)arg1 xPos:(double)arg2 inColumn:(id)arg3;
- (void)p_postSelectionContentsChangedNotification;
- (void)p_postWillStyleTextNotification;
- (id)p_previousAutocorrectionForWordAtCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (void)p_removeAutocorrectionAtCharIndex:(unsigned long long)arg1;
- (id)p_repForSwipeAtUnscaledLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)p_rescheduleDelayedUpdateHUDState;
- (bool)p_respondsToHyperlinkGestures;
- (bool)p_respondsToListGestures;
- (bool)p_respondsToRubyGestures;
- (unsigned long long)p_rightEdgeForSelection:(id)arg1 withLeadingEdge:(bool*)arg2;
- (void)p_selection:(id)arg1 toGlyphRange:(struct { struct TSWPLineFragment {} *x1; struct TSWPLineFragment {} *x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; bool x7; bool x8; }*)arg2;
- (id)p_selectionForRep:(id)arg1 point:(struct CGPoint { double x1; double x2; })arg2 textSelectionGranularity:(unsigned long long)arg3 isTapHold:(bool)arg4 precise:(bool)arg5 includeListLabels:(bool)arg6 allowPastBreak:(bool)arg7 selectsEntireLink:(bool)arg8;
- (id)p_selectionFromUnscaledCanvasPoint:(struct CGPoint { double x1; double x2; })arg1 textSelectionGranularity:(unsigned long long)arg2 isTapHold:(bool)arg3 allowPastBreak:(bool)arg4 selectsEntireLink:(bool)arg5;
- (bool)p_selectionIsSimpleInsertionPoint;
- (void)p_sendHandleTapNotification;
- (void)p_setInsertionStyle:(id)arg1;
- (void)p_setRevertibleSelection:(id)arg1;
- (void)p_setSelection:(id)arg1 withFlags:(unsigned long long)arg2 force:(bool)arg3;
- (void)p_setSelectionFromPoint:(struct CGPoint { double x1; double x2; })arg1 textSelectionGranularity:(unsigned long long)arg2 includeListLabels:(bool)arg3;
- (void)p_setTappedSelection:(id)arg1;
- (void)p_stopHorizontalRangedMagnification;
- (void)p_suppressSelectionHighlight:(bool)arg1;
- (void)p_switchToReplaceSelection;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })p_targetRectForSelection:(id)arg1;
- (id)p_updateEditingRepIfApplicableWithGesture:(id)arg1 unscaledCanvasPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)p_updateHUDState;
- (id)p_viewControllerForPresenting;
- (id)p_wordRangesForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (int)p_writingDirectionForCharAtIndex:(unsigned long long)arg1;
- (id)pasteboardController;
- (void)popoverControllerDidDismissPopoverBasedViewController:(id)arg1;
- (void)protectedStopMagnification;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfWordEnclosingCharIndex:(unsigned long long)arg1 backward:(bool)arg2;
- (bool)readyToEndOperation;
- (void)referenceLibrarayViewControllerWasDismissed:(id)arg1;
- (void)replaceAction:(id)arg1;
- (void)replaceRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withText:(id)arg2;
- (long long)returnKeyType;
- (void)revertLastSelectionChangeIfElapsedTimeIsUnderPinFidgetThreshold;
- (void)select:(id)arg1;
- (void)selectAll:(id)arg1;
- (id)selection;
- (void)selectionChangedWithFlags:(unsigned long long)arg1 wpFlags:(unsigned long long)arg2;
- (id)selectionForRep:(id)arg1 point:(struct CGPoint { double x1; double x2; })arg2 textSelectionGranularity:(unsigned long long)arg3;
- (id)selectionFromUnscaledCanvasPoint:(struct CGPoint { double x1; double x2; })arg1 textSelectionGranularity:(unsigned long long)arg2 isTapHold:(bool)arg3 allowPastBreak:(bool)arg4 selectsEntireLink:(bool)arg5;
- (bool)selectionIsOnEmptyParagraph;
- (bool)selectionLastModifiedWithKeyboard;
- (bool)selectionLastModifiedWithKnob;
- (id)selectionRectsForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)selectionWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setAutoscroll:(id)arg1;
- (void)setAutoscrollPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)setCanCoalesce:(bool)arg1;
- (void)setCanCoalesceBreakingCharacters:(bool)arg1;
- (void)setCoalescingText:(bool)arg1;
- (void)setDisableInspector:(bool)arg1;
- (void)setHostEditor:(id)arg1;
- (void)setInsertionPoint:(unsigned long long)arg1;
- (void)setInsertionPoint:(unsigned long long)arg1 withFlags:(unsigned long long)arg2;
- (void)setIsBecomingActive:(bool)arg1;
- (void)setIsEditingPlainText:(bool)arg1;
- (void)setKnobTag:(unsigned long long)arg1;
- (void)setKnobTracking:(bool)arg1;
- (void)setKnobTrackingDragPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)setKnobTrackingTapCount:(unsigned int)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)setSelection:(id)arg1;
- (void)setSelection:(id)arg1 withFlags:(unsigned long long)arg2;
- (void)setSelectionWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 endOfLine:(bool)arg2;
- (void)setSelectionWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 leadingEdge:(bool)arg2 endOfLine:(bool)arg3;
- (void)setShouldDisplayKeyboard:(bool)arg1;
- (void)setSupportsDataDetectors:(bool)arg1;
- (void)setSuppressBreaks:(bool)arg1;
- (void)setSuppressPhonetics:(bool)arg1;
- (void)setSuppressTabs:(bool)arg1;
- (bool)shouldDisplayKeyboard;
- (bool)shouldShowEditMenu;
- (bool)shouldShowSelectedTextAsFocused;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })smartDeletionSelection:(id)arg1 isVisual:(bool*)arg2;
- (id)storage;
- (void)styleAction:(id)arg1;
- (id)styleProvider;
- (bool)supportsDataDetectors;
- (bool)suppressBreaks;
- (bool)suppressDataDetectorsOnResignTextInput;
- (bool)suppressPhonetics;
- (bool)suppressTabs;
- (bool)suppressesTextInspector;
- (bool)swipeableParagraphIsSelected;
- (void)tappedInRep:(id)arg1 point:(struct CGPoint { double x1; double x2; })arg2 tapCount:(unsigned long long)arg3 isTapHold:(bool)arg4 precise:(bool)arg5;
- (void)tappedOnKnob:(id)arg1;
- (double)targetPointSizeForSelectionWithViewScale:(double)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })targetRectForSelection:(id)arg1;
- (void)teardown;
- (id)textColorAtCharIndex:(unsigned long long)arg1;
- (bool)textEditingSupportsFormatBar;
- (id)textFontAtCharIndex:(unsigned long long)arg1;
- (id)textInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)textInputSelection;
- (bool)textIsVerticalAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)textLength;
- (unsigned long long)textSelectionGranularityForTapCount:(unsigned long long)arg1;
- (bool)textStorage:(id)arg1 hasWhitespaceBoundedWordAtSelection:(id)arg2;
- (id)topLevelInspectorAutosaveName;
- (id)tracker;
- (bool)trackingKnobInParagraphMode;
- (id)tsax_listItemLabelForCharIndex:(unsigned long long)arg1 textIsLiteral:(bool*)arg2;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })tsax_rangeOfLineFragmentAtCharIndex:(unsigned long long)arg1;
- (id)unfilteredText;
- (void)updateAfterAutoscroll:(id)arg1;
- (void)updateHUDState;
- (int)valueForWritingDirectionPropertyForInspector:(id)arg1;
- (double)viewScaleForSelectionWithTargetPointSize:(double)arg1;
- (bool)wantsCaret;
- (bool)wantsDoneButtonWhenEditing;
- (bool)wantsKeyboard;
- (void)willBeginMagnification;
- (void)willEnterForeground;
- (void)willResignCurrentEditor;
- (void)willResignTextInputEditor;
- (void)willResignTextInputEditorAndDeselect:(bool)arg1;
- (long long)writingDirectionForCharIndex:(unsigned long long)arg1;

@end
