/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreImage.framework/CoreImage
 */

@interface CIPortraitEffectBlack : CIPortraitEffect {
    NSNumber * inputAdaptiveThresholdConstOffset;
    NSNumber * inputAdaptiveThresholdDoDisparityError;
    NSNumber * inputAdaptiveThresholdFaceErrorMargin;
    NSNumber * inputAdaptiveThresholdFaceGroupRange;
    NSNumber * inputAdaptiveThresholdLinearDepthOffset;
    NSNumber * inputAdaptiveThresholdRange;
    NSNumber * inputAdaptiveThresholdZRangeConst;
    NSNumber * inputAdaptiveThresholdZRangeLinearDepth;
    NSNumber * inputBackgroundSeparationLikehood;
    CIVector * inputBandRange;
    NSNumber * inputContour;
    NSNumber * inputDepthDataScore;
    CIImage * inputDepthMap;
    NSNumber * inputDepthThreshold;
    CIImage * inputDisparity;
    NSNumber * inputFaceLight;
    NSNumber * inputFeatherBandRange;
    NSNumber * inputFilterCut;
    NSNumber * inputFocalLengthNormalized;
    CIVector * inputFocusRect;
    CIImage * inputFullSizeImage;
    NSNumber * inputGrainAmount;
    NSNumber * inputKickLight;
    NSNumber * inputLambda;
    NSNumber * inputMaxNumIterations;
    NSNumber * inputMaxNumVertices;
    NSNumber * inputMinimumEffectLevel;
    NSNumber * inputSharpenRadius;
    NSNumber * inputSigmaFallout;
    NSNumber * inputSigmaRChroma;
    NSNumber * inputSigmaRLuma;
    NSNumber * inputSigmaS;
    NSNumber * inputThresholdOffset;
    NSNumber * inputUseAbsoluteDisparity;
}

@property (nonatomic, copy) NSNumber *inputAdaptiveThresholdConstOffset;
@property (nonatomic, copy) NSNumber *inputAdaptiveThresholdDoDisparityError;
@property (nonatomic, copy) NSNumber *inputAdaptiveThresholdFaceErrorMargin;
@property (nonatomic, copy) NSNumber *inputAdaptiveThresholdFaceGroupRange;
@property (nonatomic, copy) NSNumber *inputAdaptiveThresholdLinearDepthOffset;
@property (nonatomic, copy) NSNumber *inputAdaptiveThresholdRange;
@property (nonatomic, copy) NSNumber *inputAdaptiveThresholdZRangeConst;
@property (nonatomic, copy) NSNumber *inputAdaptiveThresholdZRangeLinearDepth;
@property (nonatomic, copy) NSNumber *inputBackgroundSeparationLikehood;
@property (retain) CIVector *inputBandRange;
@property (nonatomic, retain) NSNumber *inputContour;
@property (nonatomic, copy) NSNumber *inputDepthDataScore;
@property (nonatomic, retain) CIImage *inputDepthMap;
@property (nonatomic, retain) NSNumber *inputDepthThreshold;
@property (nonatomic, retain) CIImage *inputDisparity;
@property (nonatomic, copy) NSNumber *inputFeatherBandRange;
@property (nonatomic, copy) NSNumber *inputFilterCut;
@property (nonatomic, copy) NSNumber *inputFocalLengthNormalized;
@property (nonatomic, copy) CIVector *inputFocusRect;
@property (nonatomic, retain) CIImage *inputFullSizeImage;
@property (nonatomic, retain) NSNumber *inputGrainAmount;
@property (nonatomic, copy) NSNumber *inputLambda;
@property (nonatomic, copy) NSNumber *inputMaxNumIterations;
@property (nonatomic, copy) NSNumber *inputMaxNumVertices;
@property (nonatomic, copy) NSNumber *inputMinimumEffectLevel;
@property (nonatomic, retain) NSNumber *inputSharpenRadius;
@property (nonatomic, copy) NSNumber *inputSigmaFallout;
@property (nonatomic, copy) NSNumber *inputSigmaRChroma;
@property (nonatomic, copy) NSNumber *inputSigmaRLuma;
@property (nonatomic, copy) NSNumber *inputSigmaS;
@property (nonatomic, copy) NSNumber *inputThresholdOffset;
@property (nonatomic, retain) NSNumber *inputUseAbsoluteDisparity;

+ (id)customAttributes;

- (id)_CIApplyBlackDepth;
- (id)_CIPrepareBlackDepth;
- (id)_CIPrepareBlackDisparity;
- (id)_CIRefineBlackDepth;
- (id)_applyVignette;
- (id)_faceAndBodyFill_orient1;
- (id)_faceAndBodyFill_orient6;
- (id)_faceProtect;
- (id)_faceVignette;
- (id)_getFocusRect:(id)arg1;
- (unsigned long long)_maxNumVerticesForImage:(id)arg1 sigmaLuma:(id)arg2 sigmaSpace:(id)arg3;
- (id)_offsetImage:(id)arg1 inputDisparity:(id)arg2 thresholdImage:(id)arg3;
- (id)adaptiveNormalization2;
- (id)adaptiveNormalizationAbsolute;
- (id)adaptiveNormalizationGPU;
- (id)backgroundPreviewCubeName;
- (id)blendDepth;
- (id)inputAdaptiveThresholdConstOffset;
- (id)inputAdaptiveThresholdDoDisparityError;
- (id)inputAdaptiveThresholdFaceErrorMargin;
- (id)inputAdaptiveThresholdFaceGroupRange;
- (id)inputAdaptiveThresholdLinearDepthOffset;
- (id)inputAdaptiveThresholdRange;
- (id)inputAdaptiveThresholdZRangeConst;
- (id)inputAdaptiveThresholdZRangeLinearDepth;
- (id)inputBackgroundSeparationLikehood;
- (id)inputBandRange;
- (id)inputContour;
- (id)inputDepthDataScore;
- (id)inputDepthMap;
- (id)inputDepthThreshold;
- (id)inputDisparity;
- (id)inputFeatherBandRange;
- (id)inputFilterCut;
- (id)inputFocalLengthNormalized;
- (id)inputFocusRect;
- (id)inputFullSizeImage;
- (id)inputGrainAmount;
- (id)inputLambda;
- (id)inputMaxNumIterations;
- (id)inputMaxNumVertices;
- (id)inputMinimumEffectLevel;
- (id)inputSharpenRadius;
- (id)inputSigmaFallout;
- (id)inputSigmaRChroma;
- (id)inputSigmaRLuma;
- (id)inputSigmaS;
- (id)inputThresholdOffset;
- (id)inputUseAbsoluteDisparity;
- (id)invertRed;
- (id)outputImage;
- (id)previewCubeName;
- (void)setDefaults;
- (void)setDefaultsAbsoluteDisparity;
- (void)setInputAdaptiveThresholdConstOffset:(id)arg1;
- (void)setInputAdaptiveThresholdDoDisparityError:(id)arg1;
- (void)setInputAdaptiveThresholdFaceErrorMargin:(id)arg1;
- (void)setInputAdaptiveThresholdFaceGroupRange:(id)arg1;
- (void)setInputAdaptiveThresholdLinearDepthOffset:(id)arg1;
- (void)setInputAdaptiveThresholdRange:(id)arg1;
- (void)setInputAdaptiveThresholdZRangeConst:(id)arg1;
- (void)setInputAdaptiveThresholdZRangeLinearDepth:(id)arg1;
- (void)setInputBackgroundSeparationLikehood:(id)arg1;
- (void)setInputBandRange:(id)arg1;
- (void)setInputContour:(id)arg1;
- (void)setInputDepthDataScore:(id)arg1;
- (void)setInputDepthMap:(id)arg1;
- (void)setInputDepthThreshold:(id)arg1;
- (void)setInputDisparity:(id)arg1;
- (void)setInputFeatherBandRange:(id)arg1;
- (void)setInputFilterCut:(id)arg1;
- (void)setInputFocalLengthNormalized:(id)arg1;
- (void)setInputFocusRect:(id)arg1;
- (void)setInputFullSizeImage:(id)arg1;
- (void)setInputGrainAmount:(id)arg1;
- (void)setInputLambda:(id)arg1;
- (void)setInputMaxNumIterations:(id)arg1;
- (void)setInputMaxNumVertices:(id)arg1;
- (void)setInputMinimumEffectLevel:(id)arg1;
- (void)setInputSharpenRadius:(id)arg1;
- (void)setInputSigmaFallout:(id)arg1;
- (void)setInputSigmaRChroma:(id)arg1;
- (void)setInputSigmaRLuma:(id)arg1;
- (void)setInputSigmaS:(id)arg1;
- (void)setInputThresholdOffset:(id)arg1;
- (void)setInputUseAbsoluteDisparity:(id)arg1;
- (id)standbyCubeName;

@end
