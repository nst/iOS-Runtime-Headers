/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GameCenterUI.framework/GameCenterUI
 */

@interface GKHostedAuthenticateViewController : UIViewController <GKAuthenticateViewController, GKExtensionParentViewControllerProtocol> {
    id  _completionHandler;
    bool  _disablesSignIn;
    id  _dismissCompletionHandler;
    NSError * _error;
    GKAuthenticateHostViewController * _extensionHostViewController;
    long long  _mode;
    id  _remoteViewReadyHandler;
    bool  _rotationLocked;
}

@property (nonatomic, copy) id completionHandler;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool disablesSignIn;
@property (nonatomic, copy) id dismissCompletionHandler;
@property (nonatomic, retain) NSError *error;
@property (nonatomic, retain) GKAuthenticateHostViewController *extensionHostViewController;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long mode;
@property (nonatomic, copy) id remoteViewReadyHandler;
@property (getter=isRotationLocked, nonatomic) bool rotationLocked;
@property (readonly) Class superclass;

+ (bool)_preventsAppearanceProxyCustomization;

- (void)_setupChildViewController;
- (void)_setupExtensionHostViewController;
- (bool)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers;
- (id)completionHandler;
- (void)continueWithMode:(long long)arg1;
- (void)dealloc;
- (bool)disablesSignIn;
- (id)dismissCompletionHandler;
- (void)dismissViewControllerAnimated:(bool)arg1 completion:(id)arg2;
- (id)error;
- (void)extensionDidFinishWithError:(id)arg1;
- (id)extensionHostViewController;
- (void)finishAuthenticationWithError:(id)arg1;
- (id)init;
- (bool)isRotationLocked;
- (long long)mode;
- (id)remoteViewReadyHandler;
- (void)setCompletionHandler:(id)arg1;
- (void)setDisablesSignIn:(bool)arg1;
- (void)setDismissCompletionHandler:(id)arg1;
- (void)setError:(id)arg1;
- (void)setExtensionHostViewController:(id)arg1;
- (void)setMode:(long long)arg1;
- (void)setRemoteViewReadyHandler:(id)arg1;
- (void)setRotationLocked:(bool)arg1;
- (bool)shouldAutomaticallyForwardAppearanceMethods;
- (bool)shouldAutomaticallyForwardRotationMethods;
- (bool)shouldAutorotate;
- (void)showPasswordChangeAlertWithURL:(id)arg1;
- (void)viewWillAppear:(bool)arg1;

@end
