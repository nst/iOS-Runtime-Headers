/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI
 */

@interface PUOneUpViewControllerSpec : PUViewControllerSpec {
    UIColor * _backgroundColorOverride;
    struct CGSize { 
        double width; 
        double height; 
    }  _bufferingIndicatorSize;
    bool  _canDisplayLoadingIndicators;
    bool  _isChromeVisible;
    bool  _isPresentedForPreview;
    bool  _isShowingPlayPauseButtonInBars;
    double  _maximumAccessoryToolbarHeight;
    double  _maximumToolbarHeight;
    unsigned long long  _options;
    struct CGSize { 
        double width; 
        double height; 
    }  _progressIndicatorSize;
    bool  _shouldAutoplayOnAppear;
    bool  _shouldDisplayAssetExplorerReviewScreenBadges;
    bool  _shouldDisplayBadges;
    bool  _shouldDisplayBufferingIndicators;
    bool  _shouldDisplayEmptyPlaceholder;
    bool  _shouldDisplayPlayButtons;
    bool  _shouldDisplayProgressIndicators;
    bool  _shouldPinContentToTop;
    bool  _shouldPlaceButtonsInNavigationBar;
    bool  _shouldUseCompactCommentsTitle;
    bool  _shouldUseCompactTitleView;
    bool  _shouldUseContentGuideInsets;
    bool  _shouldUseUserTransformTiles;
    long long  _tileInitialContentMode;
}

@property (nonatomic, readonly) bool allowAccessoryVisibility;
@property (nonatomic, readonly) bool allowDoneButton;
@property (nonatomic, readonly) bool allowTapOnTitle;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } assetExplorerReviewScreenProgressIndicatorSize;
@property (setter=_setBackgroundColorOverride:, nonatomic, retain) UIColor *backgroundColorOverride;
@property (setter=_setBufferingIndicatorSize:, nonatomic) struct CGSize { double x1; double x2; } bufferingIndicatorSize;
@property (setter=_setCanDisplayLoadingIndicators:, nonatomic) bool canDisplayLoadingIndicators;
@property (nonatomic, readonly) PUOneUpViewControllerSpecChange *currentChange;
@property (setter=setChromeVisible:, nonatomic) bool isChromeVisible;
@property (setter=setPresentedForPreview:, nonatomic) bool isPresentedForPreview;
@property (setter=setShowingPlayPauseButtonInBars:, nonatomic) bool isShowingPlayPauseButtonInBars;
@property (setter=_setMaximumAccessoryToolbarHeight:, nonatomic) double maximumAccessoryToolbarHeight;
@property (setter=_setMaximumToolbarHeight:, nonatomic) double maximumToolbarHeight;
@property (nonatomic, readonly) unsigned long long options;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } playButtonSize;
@property (setter=_setProgressIndicatorSize:, nonatomic) struct CGSize { double x1; double x2; } progressIndicatorSize;
@property (setter=_setShouldAutoplayOnAppear:, nonatomic) bool shouldAutoplayOnAppear;
@property (setter=_setShouldDisplayAssetExplorerReviewScreenBadges:, nonatomic) bool shouldDisplayAssetExplorerReviewScreenBadges;
@property (nonatomic, readonly) bool shouldDisplayAssetExplorerReviewScreenProgressIndicators;
@property (nonatomic, readonly) bool shouldDisplayAssetExplorerReviewScreenSelectionIndicators;
@property (setter=_setShouldDisplayBadges:, nonatomic) bool shouldDisplayBadges;
@property (setter=_setShouldDisplayBufferingIndicators:, nonatomic) bool shouldDisplayBufferingIndicators;
@property (setter=_setShouldDisplayEmptyPlaceholder:, nonatomic) bool shouldDisplayEmptyPlaceholder;
@property (setter=_setShouldDisplayPlayButtons:, nonatomic) bool shouldDisplayPlayButtons;
@property (setter=_setShouldDisplayProgressIndicators:, nonatomic) bool shouldDisplayProgressIndicators;
@property (setter=_setShouldPinContentToTop:, nonatomic) bool shouldPinContentToTop;
@property (setter=_setShouldPlaceButtonsInNavigationBar:, nonatomic) bool shouldPlaceButtonsInNavigationBar;
@property (nonatomic, readonly) bool shouldShowTitleView;
@property (setter=_setShouldUseCompactCommentsTitle:, nonatomic) bool shouldUseCompactCommentsTitle;
@property (setter=_setShouldUseCompactTitleView:, nonatomic) bool shouldUseCompactTitleView;
@property (setter=_setShouldUseContentGuideInsets:, nonatomic) bool shouldUseContentGuideInsets;
@property (setter=_setShouldUseUserTransformTiles:, nonatomic) bool shouldUseUserTransformTiles;
@property (setter=_setTileInitialContentMode:, nonatomic) long long tileInitialContentMode;

- (void).cxx_destruct;
- (bool)_isAssetExplorerReviewScreen;
- (void)_setBackgroundColorOverride:(id)arg1;
- (void)_setBufferingIndicatorSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_setCanDisplayLoadingIndicators:(bool)arg1;
- (void)_setMaximumAccessoryToolbarHeight:(double)arg1;
- (void)_setMaximumToolbarHeight:(double)arg1;
- (void)_setProgressIndicatorSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_setShouldAutoplayOnAppear:(bool)arg1;
- (void)_setShouldDisplayAssetExplorerReviewScreenBadges:(bool)arg1;
- (void)_setShouldDisplayBadges:(bool)arg1;
- (void)_setShouldDisplayBufferingIndicators:(bool)arg1;
- (void)_setShouldDisplayEmptyPlaceholder:(bool)arg1;
- (void)_setShouldDisplayPlayButtons:(bool)arg1;
- (void)_setShouldDisplayProgressIndicators:(bool)arg1;
- (void)_setShouldPinContentToTop:(bool)arg1;
- (void)_setShouldPlaceButtonsInNavigationBar:(bool)arg1;
- (void)_setShouldUseCompactCommentsTitle:(bool)arg1;
- (void)_setShouldUseCompactTitleView:(bool)arg1;
- (void)_setShouldUseContentGuideInsets:(bool)arg1;
- (void)_setShouldUseUserTransformTiles:(bool)arg1;
- (void)_setTileInitialContentMode:(long long)arg1;
- (bool)allowAccessoryVisibility;
- (bool)allowDoneButton;
- (bool)allowTapOnTitle;
- (struct CGSize { double x1; double x2; })assetExplorerReviewScreenProgressIndicatorSize;
- (id)backgroundColorOverride;
- (struct CGSize { double x1; double x2; })bufferingIndicatorSize;
- (bool)canDisplayLoadingIndicators;
- (id)currentChange;
- (id)initWithOptions:(unsigned long long)arg1;
- (bool)isChromeVisible;
- (bool)isPresentedForPreview;
- (bool)isShowingPlayPauseButtonInBars;
- (double)maximumAccessoryToolbarHeight;
- (double)maximumToolbarHeight;
- (id)newSpecChange;
- (unsigned long long)options;
- (struct CGSize { double x1; double x2; })playButtonSize;
- (struct CGSize { double x1; double x2; })progressIndicatorSize;
- (void)setChromeVisible:(bool)arg1;
- (void)setPresentedForPreview:(bool)arg1;
- (void)setShowingPlayPauseButtonInBars:(bool)arg1;
- (bool)shouldAutoplayOnAppear;
- (bool)shouldDisplayAssetExplorerReviewScreenBadges;
- (bool)shouldDisplayAssetExplorerReviewScreenProgressIndicators;
- (bool)shouldDisplayAssetExplorerReviewScreenSelectionIndicators;
- (bool)shouldDisplayBadges;
- (bool)shouldDisplayBufferingIndicators;
- (bool)shouldDisplayEmptyPlaceholder;
- (bool)shouldDisplayPlayButtons;
- (bool)shouldDisplayProgressIndicators;
- (bool)shouldPinContentToTop;
- (bool)shouldPlaceButtonsInNavigationBar;
- (bool)shouldShowTitleView;
- (bool)shouldUseCompactCommentsTitle;
- (bool)shouldUseCompactTitleView;
- (bool)shouldUseContentGuideInsets;
- (bool)shouldUseUserTransformTiles;
- (long long)tileInitialContentMode;
- (void)updateIfNeeded;

@end
