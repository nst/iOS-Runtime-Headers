/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PencilKit.framework/PencilKit
 */

@interface PKInkPicker : UIControl <UIScrollViewDelegate> {
    UIView * _aboveDockView;
    UIButton * _collapsedColorButton;
    NSMutableDictionary * _colorButtonImages;
    NSArray * _colorButtons;
    PKColorInfiniteScrollView * _colorScrollView;
    NSMutableDictionary * _colorSelectedButtonImages;
    NSArray * _colors;
    bool  _dockHidden;
    UIView * _dockView;
    PKInternalDrawingRulerView * _drawingView;
    UIButton * _eraseButton;
    CALayer * _navigationBarLayer;
    PKPageIndicatorView * _pageIndicatorView;
    bool  _rulerSelected;
    UIImage * _selectedToolImage;
    bool  _showColors;
    unsigned int  _state;
    NSArray * _toolButtons;
    NSMutableDictionary * _toolDockMaskImages;
    UIView * _toolsView;
    bool  _wantsObjectErase;
    bool  _wantsThickerInks;
}

@property (nonatomic, retain) UIView *aboveDockView;
@property (nonatomic, retain) UIButton *collapsedColorButton;
@property (nonatomic, retain) NSMutableDictionary *colorButtonImages;
@property (nonatomic, retain) NSArray *colorButtons;
@property (nonatomic, retain) PKColorInfiniteScrollView *colorScrollView;
@property (nonatomic) bool colorScrollViewEnabled;
@property (nonatomic, retain) NSMutableDictionary *colorSelectedButtonImages;
@property (nonatomic, retain) NSArray *colors;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool dockHasBorder;
@property (nonatomic) bool dockHidden;
@property (nonatomic, retain) UIView *dockView;
@property (nonatomic) PKInternalDrawingRulerView *drawingView;
@property (nonatomic, retain) UIButton *eraseButton;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } idealSize;
@property (nonatomic, readonly) bool isCollapsed;
@property (nonatomic, retain) CALayer *navigationBarLayer;
@property (nonatomic, retain) PKPageIndicatorView *pageIndicatorView;
@property (nonatomic) bool rulerSelected;
@property (nonatomic, readonly) UIColor *selectedColor;
@property (nonatomic, copy) PKInk *selectedInk;
@property (nonatomic, retain) UIImage *selectedToolImage;
@property (nonatomic, readonly) bool shouldUseLargeTools;
@property (nonatomic) bool showColors;
@property (nonatomic) unsigned int state;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSArray *toolButtons;
@property (nonatomic, retain) NSMutableDictionary *toolDockMaskImages;
@property (nonatomic, retain) UIView *toolsView;
@property (nonatomic) bool wantsObjectErase;
@property (nonatomic) bool wantsThickerInks;

+ (unsigned int)_stateForWidth:(double)arg1;
+ (id)imageCache;

- (void).cxx_destruct;
- (bool)_accessibilityOnlyComparesByXAxis;
- (bool)_accessibilityServesAsContainingParentForOrdering;
- (unsigned long long)_controlEventsForActionTriggered;
- (id)aboveDockView;
- (id)accessibilityLabel;
- (bool)accessibilityScroll:(long long)arg1;
- (unsigned long long)accessibilityTraits;
- (double)allToolsWidth;
- (void)animateIn;
- (void)animateOut;
- (void)announceSelectedToolForAccessibility:(unsigned int)arg1 afterDelay:(double)arg2;
- (id)buttonImageForColor:(id)arg1 selected:(bool)arg2;
- (void)changeColor:(id)arg1;
- (void)changeTool:(id)arg1;
- (void)changeToolType:(unsigned int)arg1;
- (id)collapsedColorButton;
- (double)collapsedColorYOrigin;
- (id)colorButtonImages;
- (id)colorButtons;
- (id)colorForIndex:(unsigned long long)arg1;
- (unsigned long long)colorIndexClosestToColor:(id)arg1;
- (id)colorScrollView;
- (bool)colorScrollViewEnabled;
- (id)colorSelectedButtonImages;
- (id)colors;
- (id)dockColor;
- (bool)dockHasBorder;
- (bool)dockHidden;
- (id)dockView;
- (id)drawingView;
- (void)erase:(id)arg1;
- (id)eraseButton;
- (void)fadeColorButtons;
- (void)hideAllColors;
- (struct CGSize { double x1; double x2; })idealSize;
- (id)imageNamed:(id)arg1 small:(bool)arg2;
- (id)init;
- (bool)isCollapsed;
- (bool)navigationBackgroundHidden;
- (id)navigationBarLayer;
- (id)pageIndicatorView;
- (double)paletteSpacing;
- (double)paletteTotalWidth;
- (void)positionToolsOffscreen;
- (unsigned int)previousTool;
- (bool)rulerSelected;
- (void)scrollViewDidScroll:(id)arg1;
- (id)selectedColor;
- (unsigned long long)selectedColorIndex;
- (id)selectedInk;
- (unsigned int)selectedTool;
- (id)selectedToolImage;
- (void)setAboveDockView:(id)arg1;
- (void)setCollapsedColorButton:(id)arg1;
- (void)setColorButtonImages:(id)arg1;
- (void)setColorButtons:(id)arg1;
- (void)setColorScrollView:(id)arg1;
- (void)setColorScrollViewEnabled:(bool)arg1;
- (void)setColorSelectedButtonImages:(id)arg1;
- (void)setColors:(id)arg1;
- (void)setDockHidden:(bool)arg1;
- (void)setDockHidden:(bool)arg1 animationDuration:(double)arg2;
- (void)setDockView:(id)arg1;
- (void)setDrawingView:(id)arg1;
- (void)setEraseButton:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setNavigationBackgroundHidden:(bool)arg1;
- (void)setNavigationBarLayer:(id)arg1;
- (void)setPageIndicatorView:(id)arg1;
- (void)setPreviousTool:(unsigned int)arg1;
- (void)setRulerSelected:(bool)arg1;
- (void)setRulerSelected:(bool)arg1 animated:(bool)arg2;
- (void)setSelectedColorIndex:(unsigned long long)arg1;
- (void)setSelectedInk:(id)arg1;
- (void)setSelectedTool:(unsigned int)arg1;
- (void)setSelectedToolImage:(id)arg1;
- (void)setShowColors:(bool)arg1;
- (void)setState:(unsigned int)arg1;
- (void)setToolButtons:(id)arg1;
- (void)setToolDockMaskImages:(id)arg1;
- (void)setToolsView:(id)arg1;
- (void)setWantsObjectErase:(bool)arg1;
- (void)setWantsThickerInks:(bool)arg1;
- (void)setupColors;
- (void)setupDock;
- (void)setupTools;
- (bool)shouldUseLargeTools;
- (void)showAllColors:(id)arg1;
- (bool)showColors;
- (void)shrinkColorButtons;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (unsigned int)state;
- (unsigned long long)swatchFromIndex:(unsigned long long)arg1;
- (double)swatchHeight;
- (double)swatchTotalWidth;
- (double)swatchWidth;
- (void)toggleRuler:(id)arg1;
- (id)toolButtons;
- (id)toolDockMaskImage:(unsigned long long)arg1;
- (id)toolDockMaskImages;
- (double)toolHeight;
- (id)toolImage:(unsigned long long)arg1;
- (double)toolNotSelectedYOrigin;
- (void)toolPressed:(id)arg1;
- (double)toolSelectedYOrigin;
- (double)toolSpacing;
- (double)toolToSwatchSpacing;
- (void)toolUnpressed:(id)arg1;
- (id)toolsView;
- (void)updateColorButtons;
- (void)updateColorScrollView;
- (void)updateRulerButtonAccessibilityLabel;
- (void)updateToolButtons:(id /* block */)arg1;
- (bool)useLargeColorsForState:(unsigned int)arg1;
- (bool)wantsObjectErase;
- (bool)wantsThickerInks;

@end
