/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI
 */

@interface PUAutoScroller : NSObject {
    double  _autoScrollerInset;
    double  _autoScrollerMaximumSpeed;
    double  _autoScrollerTimerInterval;
    <PUAutoScrollerDelegate> * _delegate;
    struct CGPoint { 
        double x; 
        double y; 
    }  _distanceFromCenterFrame;
    UIScrollView * _scrollView;
    struct CGPoint { 
        double x; 
        double y; 
    }  _speed;
    NSTimer * _timer;
    long long  _updateTrigger;
}

@property (nonatomic) double autoScrollerInset;
@property (nonatomic) double autoScrollerMaximumSpeed;
@property (nonatomic) double autoScrollerTimerInterval;
@property (nonatomic) <PUAutoScrollerDelegate> *delegate;
@property (nonatomic) struct CGPoint { double x1; double x2; } distanceFromCenterFrame;
@property (nonatomic, retain) UIScrollView *scrollView;
@property (nonatomic) struct CGPoint { double x1; double x2; } speed;
@property (nonatomic, retain) NSTimer *timer;
@property (nonatomic) long long updateTrigger;

+ (void)_scrollTestFire;
+ (void)performScrollTest:(id)arg1 iterations:(unsigned long long)arg2 length:(double)arg3 delta:(double)arg4 vertical:(bool)arg5;

- (void).cxx_destruct;
- (void)_handlerTimer:(id)arg1;
- (void)_startTimer;
- (void)_stopTimer;
- (double)autoScrollerInset;
- (double)autoScrollerMaximumSpeed;
- (double)autoScrollerTimerInterval;
- (void)dealloc;
- (id)delegate;
- (struct CGPoint { double x1; double x2; })distanceFromCenterFrame;
- (id)initWithTargetScrollView:(id)arg1;
- (id)scrollView;
- (void)setAutoScrollerInset:(double)arg1;
- (void)setAutoScrollerMaximumSpeed:(double)arg1;
- (void)setAutoScrollerTimerInterval:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDistanceFromCenterFrame:(struct CGPoint { double x1; double x2; })arg1;
- (void)setScrollView:(id)arg1;
- (void)setSpeed:(struct CGPoint { double x1; double x2; })arg1;
- (void)setTimer:(id)arg1;
- (void)setUpdateTrigger:(long long)arg1;
- (struct CGPoint { double x1; double x2; })speed;
- (void)stopAndInvalidate;
- (id)timer;
- (long long)updateTrigger;
- (void)updateWithGestureRecognizer:(id)arg1;

@end
