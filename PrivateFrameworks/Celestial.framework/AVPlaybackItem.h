/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

@interface AVPlaybackItem : NSObject {
    AVItem * _avItem;
    double  _bookmarkTime;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _currentDuration;
    struct CGSize { 
        double width; 
        double height; 
    }  _currentSize;
    bool  _currentSizeIsValid;
    id  _delegate;
    struct OpaqueFigPlaybackItem { } * _fpItem;
    NSDictionary * _inspectionNotificationInfo;
    bool  _isInPlayQueue;
    bool  _isPreparingForInspectionAccurateDuration;
    bool  _isPreparingForInspectionInitialSamples;
    NSDictionary * _lyricsNotificationInfo;
    NSDictionary * _playToEndNotificationInfo;
    NSDictionary * _streamStateNotificationInfo;
}

@property (retain) NSDictionary *inspectionNotificationInfo;
@property bool isInPlayQueue;
@property (readonly) bool isPreparingForInspection;
@property bool isPreparingForInspectionAccurateDuration;
@property bool isPreparingForInspectionInitialSamples;
@property (retain) NSDictionary *lyricsNotificationInfo;
@property (retain) NSDictionary *playToEndNotificationInfo;
@property (retain) NSDictionary *streamStateNotificationInfo;

+ (id)convertFigTimeDictionaryToTimeIntervalWithKey:(id)arg1 stringURLToNSURLWithKey:(id)arg2 inArrayOfDictionaries:(id)arg3;

- (void)addFPListeners;
- (bool)addToPlayQueue:(struct OpaqueFigPlayer { }*)arg1 afterItem:(struct OpaqueFigPlaybackItem { }*)arg2;
- (void)applyAttributesFromAVItemToFPItem:(id)arg1;
- (void)applyBookmarkTime;
- (id)attributeForKey:(id)arg1;
- (id)avItem;
- (void)cacheCurrentDuration;
- (void)cacheCurrentSize;
- (void)dealloc;
- (void)ensureFPItem;
- (id)evenlySpacedThumbnailTimesFromStartTime:(double)arg1 toEndTime:(double)arg2 maxCount:(long long)arg3;
- (id)formatDetailsForTracks;
- (struct OpaqueFigPlaybackItem { }*)fpItem;
- (void)fpItemNotificationInfo:(id)arg1;
- (void)fpItemNotificationName:(id)arg1 userInfo:(id)arg2;
- (id)fpNotificationNames;
- (id)initWithDelegate:(id)arg1 item:(id)arg2;
- (id)inspectionNotificationInfo;
- (bool)isInPlayQueue;
- (bool)isPreparingForInspection;
- (bool)isPreparingForInspectionAccurateDuration;
- (bool)isPreparingForInspectionInitialSamples;
- (id)itemAttribute:(id)arg1 forKey:(id)arg2;
- (id)lyricsNotificationInfo;
- (void)makeReadyForInspection;
- (id)nextThumbnailTimesStartingAt:(double)arg1 minimumInterval:(double)arg2 forwards:(bool)arg3 maxCount:(long long)arg4;
- (id)playToEndNotificationInfo;
- (id)propertiesNeededForInspection;
- (void)removeFPListeners;
- (void)removeFromPlayQueue:(struct OpaqueFigPlayer { }*)arg1;
- (void)setAttribute:(id)arg1 forKey:(id)arg2;
- (void)setBookmarkTime:(double)arg1;
- (void)setInspectionNotificationInfo:(id)arg1;
- (void)setIsInPlayQueue:(bool)arg1;
- (void)setIsPreparingForInspectionAccurateDuration:(bool)arg1;
- (void)setIsPreparingForInspectionInitialSamples:(bool)arg1;
- (void)setItemAttribute:(id)arg1 value:(id)arg2 forKey:(id)arg3 error:(id*)arg4;
- (void)setLyricsNotificationInfo:(id)arg1;
- (void)setPlayToEndNotificationInfo:(id)arg1;
- (void)setStreamStateNotificationInfo:(id)arg1;
- (void)stealControlOfAVItem;
- (id)streamStateNotificationInfo;

@end
