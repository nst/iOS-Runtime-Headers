/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEOCompanionRouteDetails : PBCodable <NSCopying> {
    bool  _canNavigate;
    struct { 
        double *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _coordinates;
    GEOTransitDecoderData * _decoderData;
    GEOMapItemStorage * _destination;
    NSString * _destinationName;
    unsigned int  _distance;
    struct { 
        unsigned int distance : 1; 
        unsigned int historicalDuration : 1; 
        unsigned int originalDuration : 1; 
        unsigned int transportType : 1; 
        unsigned int canNavigate : 1; 
        unsigned int showTransitSchedules : 1; 
    }  _has;
    unsigned int  _historicalDuration;
    NSString * _name;
    GEOMapItemStorage * _origin;
    unsigned int  _originalDuration;
    NSData * _originalRouteID;
    GEOTransitSuggestedRoute * _originalSuggestedRoute;
    GEODirectionsRequest * _request;
    GEODirectionsResponse * _response;
    NSMutableArray * _routeDescriptions;
    NSData * _routeID;
    bool  _showTransitSchedules;
    NSMutableArray * _steps;
    struct { 
        unsigned int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _trafficColorOffsets;
    struct { 
        unsigned int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _trafficColors;
    NSString * _trafficDescription;
    int  _transportType;
}

@property (nonatomic) bool canNavigate;
@property (nonatomic, readonly) double*coordinates;
@property (nonatomic, readonly) unsigned long long coordinatesCount;
@property (nonatomic, retain) GEOTransitDecoderData *decoderData;
@property (nonatomic, retain) GEOMapItemStorage *destination;
@property (nonatomic, retain) NSString *destinationName;
@property (nonatomic) unsigned int distance;
@property (nonatomic) bool hasCanNavigate;
@property (nonatomic, readonly) bool hasDecoderData;
@property (nonatomic, readonly) bool hasDestination;
@property (nonatomic, readonly) bool hasDestinationName;
@property (nonatomic) bool hasDistance;
@property (nonatomic) bool hasHistoricalDuration;
@property (nonatomic, readonly) bool hasName;
@property (nonatomic, readonly) bool hasOrigin;
@property (nonatomic) bool hasOriginalDuration;
@property (nonatomic, readonly) bool hasOriginalRouteID;
@property (nonatomic, readonly) bool hasOriginalSuggestedRoute;
@property (nonatomic, readonly) bool hasRequest;
@property (nonatomic, readonly) bool hasResponse;
@property (nonatomic, readonly) bool hasRouteID;
@property (nonatomic) bool hasShowTransitSchedules;
@property (nonatomic, readonly) bool hasTrafficDescription;
@property (nonatomic) bool hasTransportType;
@property (nonatomic) unsigned int historicalDuration;
@property (nonatomic, retain) NSString *name;
@property (nonatomic, retain) GEOMapItemStorage *origin;
@property (nonatomic) unsigned int originalDuration;
@property (nonatomic, retain) NSData *originalRouteID;
@property (nonatomic, retain) GEOTransitSuggestedRoute *originalSuggestedRoute;
@property (nonatomic, retain) GEODirectionsRequest *request;
@property (nonatomic, retain) GEODirectionsResponse *response;
@property (nonatomic, retain) NSMutableArray *routeDescriptions;
@property (nonatomic, retain) NSData *routeID;
@property (nonatomic) bool showTransitSchedules;
@property (nonatomic, retain) NSMutableArray *steps;
@property (nonatomic, readonly) unsigned int*trafficColorOffsets;
@property (nonatomic, readonly) unsigned long long trafficColorOffsetsCount;
@property (nonatomic, readonly) unsigned int*trafficColors;
@property (nonatomic, readonly) unsigned long long trafficColorsCount;
@property (nonatomic, retain) NSString *trafficDescription;
@property (nonatomic) int transportType;

+ (Class)routeDescriptionsType;
+ (Class)stepType;
+ (id)syntheticRouteDetailsWithOrigin:(id)arg1 destination:(id)arg2 transportType:(int)arg3 destinationName:(id)arg4;

- (void).cxx_destruct;
- (int)StringAsTransportType:(id)arg1;
- (void)addCoordinates:(double)arg1;
- (void)addRouteDescriptions:(id)arg1;
- (void)addStep:(id)arg1;
- (void)addTrafficColor:(unsigned int)arg1;
- (void)addTrafficColorOffset:(unsigned int)arg1;
- (bool)canNavigate;
- (void)clearCoordinates;
- (void)clearRouteDescriptions;
- (void)clearSteps;
- (void)clearTrafficColorOffsets;
- (void)clearTrafficColors;
- (double*)coordinates;
- (double)coordinatesAtIndex:(unsigned long long)arg1;
- (unsigned long long)coordinatesCount;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)decoderData;
- (id)description;
- (id)destination;
- (id)destinationName;
- (id)dictionaryRepresentation;
- (unsigned int)distance;
- (bool)hasCanNavigate;
- (bool)hasDecoderData;
- (bool)hasDestination;
- (bool)hasDestinationName;
- (bool)hasDistance;
- (bool)hasHistoricalDuration;
- (bool)hasName;
- (bool)hasOrigin;
- (bool)hasOriginalDuration;
- (bool)hasOriginalRouteID;
- (bool)hasOriginalSuggestedRoute;
- (bool)hasRequest;
- (bool)hasResponse;
- (bool)hasRouteID;
- (bool)hasShowTransitSchedules;
- (bool)hasTrafficDescription;
- (bool)hasTransportType;
- (unsigned long long)hash;
- (unsigned int)historicalDuration;
- (id)initWithRoute:(id)arg1 destinationName:(id)arg2 stringFormatter:(id)arg3;
- (id)initWithRoute:(id)arg1 fallbackDestinationName:(id)arg2 stringFormatter:(id)arg3;
- (bool)isEqual:(id)arg1;
- (bool)isSyntheticRoute;
- (void)mergeFrom:(id)arg1;
- (id)name;
- (id)origin;
- (unsigned int)originalDuration;
- (id)originalRouteID;
- (id)originalSuggestedRoute;
- (bool)readFrom:(id)arg1;
- (id)request;
- (id)response;
- (id)routeDescriptions;
- (id)routeDescriptionsAtIndex:(unsigned long long)arg1;
- (unsigned long long)routeDescriptionsCount;
- (id)routeID;
- (void)setCanNavigate:(bool)arg1;
- (void)setCoordinates:(double*)arg1 count:(unsigned long long)arg2;
- (void)setDecoderData:(id)arg1;
- (void)setDestination:(id)arg1;
- (void)setDestinationName:(id)arg1;
- (void)setDistance:(unsigned int)arg1;
- (void)setHasCanNavigate:(bool)arg1;
- (void)setHasDistance:(bool)arg1;
- (void)setHasHistoricalDuration:(bool)arg1;
- (void)setHasOriginalDuration:(bool)arg1;
- (void)setHasShowTransitSchedules:(bool)arg1;
- (void)setHasTransportType:(bool)arg1;
- (void)setHistoricalDuration:(unsigned int)arg1;
- (void)setName:(id)arg1;
- (void)setOrigin:(id)arg1;
- (void)setOriginalDuration:(unsigned int)arg1;
- (void)setOriginalRouteID:(id)arg1;
- (void)setOriginalSuggestedRoute:(id)arg1;
- (void)setRequest:(id)arg1;
- (void)setResponse:(id)arg1;
- (void)setRouteDescriptions:(id)arg1;
- (void)setRouteID:(id)arg1;
- (void)setShowTransitSchedules:(bool)arg1;
- (void)setSteps:(id)arg1;
- (void)setTrafficColorOffsets:(unsigned int*)arg1 count:(unsigned long long)arg2;
- (void)setTrafficColors:(unsigned int*)arg1 count:(unsigned long long)arg2;
- (void)setTrafficDescription:(id)arg1;
- (void)setTransportType:(int)arg1;
- (bool)showTransitSchedules;
- (id)stepAtIndex:(unsigned long long)arg1;
- (unsigned long long)stepIndexWithID:(unsigned long long)arg1;
- (id)stepWithID:(unsigned long long)arg1;
- (id)steps;
- (unsigned long long)stepsCount;
- (unsigned int)trafficColorAtIndex:(unsigned long long)arg1;
- (unsigned int)trafficColorOffsetAtIndex:(unsigned long long)arg1;
- (unsigned int*)trafficColorOffsets;
- (unsigned long long)trafficColorOffsetsCount;
- (unsigned int*)trafficColors;
- (unsigned long long)trafficColorsCount;
- (id)trafficDescription;
- (int)transportType;
- (id)transportTypeAsString:(int)arg1;
- (void)writeTo:(id)arg1;

@end
