/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
 */

@interface _CDSystemMonitor : NSObject {
    unsigned long long  _chargingState;
    bool  _inBatterySaverMode;
    unsigned long long  _memState;
    NSString * _powerSource;
    NSObject<OS_dispatch_queue> * _queue;
    unsigned long long  _thermalState;
    bool  _userInactive;
    NSObject<OS_dispatch_source> * backlightChangeDispatch;
    int  backlightMonitorToken;
    bool  backlightTimerDispatched;
    NSObject<OS_dispatch_source> * memPressureMonitor;
    NSObject<OS_dispatch_source> * psChangeDispatch;
    bool  psChangeTimerDispatched;
    NSMutableArray * registrations;
}

@property (nonatomic) unsigned long long chargingState;
@property (nonatomic) bool inBatterySaverMode;
@property (nonatomic) unsigned long long memState;
@property (nonatomic, retain) NSString *powerSource;
@property (nonatomic) unsigned long long thermalState;
@property (nonatomic) bool userInactive;

+ (id)sharedInstance;

- (void).cxx_destruct;
- (unsigned long long)chargingState;
- (void)checkMemoryState;
- (bool)deRegisterHandler:(id)arg1;
- (void)handleBacklightStateChange;
- (void)handleBatterySaverNotification:(unsigned long long)arg1;
- (void)handlePowerSourceNotification;
- (void)handleThermalNotification:(unsigned long long)arg1;
- (void)handleUserActivityNotification:(unsigned long long)arg1;
- (bool)inBatterySaverMode;
- (id)init;
- (unsigned long long)memState;
- (void)notifyPsChange;
- (id)powerSource;
- (void)registerForNotifications;
- (id)registerHandler:(id)arg1 onQueue:(id)arg2;
- (void)sendNotification:(unsigned long long)arg1;
- (void)setChargingState:(unsigned long long)arg1;
- (void)setInBatterySaverMode:(bool)arg1;
- (void)setMemState:(unsigned long long)arg1;
- (void)setPowerSource:(id)arg1;
- (void)setThermalState:(unsigned long long)arg1;
- (void)setUserInactive:(bool)arg1;
- (unsigned long long)thermalState;
- (bool)userInactive;

@end
