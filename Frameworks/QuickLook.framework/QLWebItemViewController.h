/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/QuickLook.framework/QuickLook
 */

@interface QLWebItemViewController : QLItemViewController <QLScrubViewDataSource, UIScrollViewDelegate, UIWebPDFViewHandlerDelegate, UIWebViewDelegate> {
    id  _completionBlock;
    double  _defaultZoom;
    bool  _embeddedPDFWasCopied;
    QLPDFHanderDelegateForwarder * _forwarder;
    bool  _fullScreen;
    NSMutableArray * _htmlSlideNodes;
    bool  _inScroll;
    unsigned int  _isLoadedDuringZoom;
    long long  _lastPage;
    unsigned int  _loadStarted;
    NSString * _password;
    NSData * _pdfPreviewData;
    QLPreviewConverter * _previewConverter;
    NSURLRequest * _previewRequest;
    QLWebViewPrintPageHelper * _printPageHelper;
    QLScrubView * _scrubView;
    NSLayoutConstraint * _scrubberRightConstraint;
    bool  _tryToFit;
    UIWebView * _webView;
    bool  _webViewReadyForThumbnailing;
    unsigned long long  webItemType;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (retain) NSString *password;
@property (readonly) NSData *pdfPreviewData;
@property (readonly) QLPreviewConverter *previewConverter;
@property (readonly) QLScrubView *scrubView;
@property (readonly) Class superclass;
@property (readonly) unsigned long long webItemType;
@property (readonly) UIWebView *webView;

- (void).cxx_destruct;
- (id)_defaultColor;
- (struct CGPDFDocument { }*)_getCGPDFDocumentRef;
- (void)_hideScrubberIfNeeded:(bool)arg1;
- (id)_htmlPageXPath;
- (id)_htmlSlideNodes;
- (void)_showScrubberIfNeeded:(bool)arg1;
- (void)_updateScrubberForTraitCollection:(id)arg1 animated:(bool)arg2;
- (void)_updateScrubberVisibilityAnimated:(bool)arg1;
- (id)alertViewForUIWebPDFViewHandler:(id)arg1;
- (bool)automaticallyUpdateScrollViewContentInset;
- (bool)automaticallyUpdateScrollViewContentOffset;
- (bool)canEnterFullScreen;
- (bool)canPinchToDismiss;
- (bool)canSwipeToDismiss;
- (unsigned long long)currentPageNumber;
- (void)dealloc;
- (void)didReceiveMemoryWarning;
- (void)loadPreviewControllerWithPreviewItem:(id)arg1 completionHandler:(id)arg2;
- (void)loadView;
- (long long)numberOfPagesInScrubView:(id)arg1;
- (struct CGPoint { double x1; double x2; })originForPDFPageLabelViewWithHandler:(id)arg1 proposedOrigin:(struct CGPoint { double x1; double x2; })arg2;
- (long long)pageCount;
- (struct CGSize { double x1; double x2; })pageSizeAtIndex:(long long)arg1;
- (id)password;
- (id)pdfPreviewData;
- (void)pdfViewHandlerCompletedLayoutAndIsUnlocked:(id)arg1;
- (void)performCompletionBlockWithError:(id)arg1;
- (long long)preferredWhitePointAdaptivityStyle;
- (void)previewBecameFullScreen:(bool)arg1 animated:(bool)arg2;
- (id)previewConverter;
- (void)previewDidDisappear:(bool)arg1;
- (id)printer;
- (id)registeredKeyCommands;
- (void)scrollToPage:(unsigned long long)arg1;
- (id)scrollView;
- (void)scrollViewDidScroll:(id)arg1;
- (id)scrubView;
- (void)scrubView:(id)arg1 didSelectPageAtIndex:(unsigned long long)arg2;
- (struct CGSize { double x1; double x2; })scrubView:(id)arg1 pageSizeAtIndex:(unsigned long long)arg2;
- (id)scrubView:(id)arg1 thumbnailOperationForPageAtIndex:(unsigned long long)arg2;
- (void)setAppearance:(id)arg1 animated:(bool)arg2;
- (void)setPassword:(id)arg1;
- (bool)shouldAcceptTouch:(id)arg1 ofGestureRecognizer:(id)arg2;
- (bool)shouldRecognizeGestureRecognizer:(id)arg1;
- (void)transitionDidFinish:(bool)arg1 didComplete:(bool)arg2;
- (void)transitionDidStart:(bool)arg1;
- (void)transitionWillFinish:(bool)arg1 didComplete:(bool)arg2;
- (id)transitioningView;
- (void)uiWebView:(id)arg1 decidePolicyForMIMEType:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)uiWebView:(id)arg1 didFirstLayoutInFrame:(id)arg2;
- (void)uiWebView:(id)arg1 resource:(id)arg2 didFailLoadingWithError:(id)arg3 fromDataSource:(id)arg4;
- (void)uiWebView:(id)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(id)arg3;
- (id)uiWebView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (unsigned long long)webItemType;
- (id)webView;
- (bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;

@end
