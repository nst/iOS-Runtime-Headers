/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SceneKit.framework/SceneKit
 */

@interface SCNAuthoringEnvironment : NSObject {
    unsigned short  _arrowIndicesCount;
    const void * _arrowIndicesOffset;
    SCNAuthoringEnvironment2 * _authEnv2;
    long long  _authoringDisplayMask;
    struct { 
        struct __C3DFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __C3DImage {} *textureImage; 
        struct __C3DTexture {} *texture; 
        unsigned int drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __C3DMesh {} *mesh; 
        struct __C3DMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _boldLogsInfo;
    struct { 
        struct { 
            struct __C3DImage {} *texture; 
            struct CGSize { 
                double width; 
                double height; 
            } textureSize; 
            bool isRetina; 
        } textureInfo; 
        double lineHeight; 
        short characterWidth_texture; 
        double *characterWidth_typography; 
        short characterHeight_texture; 
        struct { /* ? */ } *symbolRects; 
    }  _boldTextInfo;
    struct __C3DFXProgram { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned char x_1_2_2[4]; unsigned int x_1_2_3; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; long long x_1_1_6; long long x_1_1_7; } x1; int x2; unsigned int x3 : 1; unsigned int x4 : 1; struct __C3DFXProgramDelegate {} *x5; } * _colorAndTextureProgram;
    struct __C3DFXProgram { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned char x_1_2_2[4]; unsigned int x_1_2_3; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; long long x_1_1_6; long long x_1_1_7; } x1; int x2; unsigned int x3 : 1; unsigned int x4 : 1; struct __C3DFXProgramDelegate {} *x5; } * _colorOnlyProgram;
    id  _delegate;
    struct __C3DRasterizerStates { } * _depthOffCullOffStates;
    struct __C3DRasterizerStates { } * _depthOffCullOnStates;
    struct __C3DRasterizerStates { } * _depthOnCullOffStates;
    struct __C3DRasterizerStates { } * _depthOnCullOnStates;
    float  _drawScale;
    struct { 
        struct __C3DFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __C3DImage {} *textureImage; 
        struct __C3DTexture {} *texture; 
        unsigned int drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __C3DMesh {} *mesh; 
        struct __C3DMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _dynamicLinesInfo;
    struct { 
        struct __C3DFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __C3DImage {} *textureImage; 
        struct __C3DTexture {} *texture; 
        unsigned int drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __C3DMesh {} *mesh; 
        struct __C3DMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _dynamicTrianglesInfo;
    long long  _editingSpace;
    struct __C3DEngineContext { } * _engineContext;
    bool  _graphicalSelectionEnabled;
    double  _gridUnit;
    unsigned int  _hasLighting;
    NSSet * _initialSelection;
    float  _lastGridDistance;
    struct { 
        struct __C3DFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __C3DImage {} *textureImage; 
        struct __C3DTexture {} *texture; 
        unsigned int drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __C3DMesh {} *mesh; 
        struct __C3DMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _lightProbesInfo;
    struct __C3DFXProgram { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned char x_1_2_2[4]; unsigned int x_1_2_3; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; long long x_1_1_6; long long x_1_1_7; } x1; int x2; unsigned int x3 : 1; unsigned int x4 : 1; struct __C3DFXProgramDelegate {} *x5; } * _lightProbesProgram;
    struct { 
        struct __C3DFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __C3DImage {} *textureImage; 
        struct __C3DTexture {} *texture; 
        unsigned int drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __C3DMesh {} *mesh; 
        struct __C3DMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _logsInfo;
    SCNManipulator * _manipulator;
    struct __C3DFXProgram { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned char x_1_2_2[4]; unsigned int x_1_2_3; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; long long x_1_1_6; long long x_1_1_7; } x1; int x2; unsigned int x3 : 1; unsigned int x4 : 1; struct __C3DFXProgramDelegate {} *x5; } * _noColorProgram;
    struct { 
        struct { 
            struct __C3DImage {} *texture; 
            struct CGSize { 
                double width; 
                double height; 
            } textureSize; 
            bool isRetina; 
        } textureInfo; 
        double lineHeight; 
        short characterWidth_texture; 
        double *characterWidth_typography; 
        short characterHeight_texture; 
        struct { /* ? */ } *symbolRects; 
    }  _normalTextInfo;
    struct { 
        struct __C3DFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __C3DImage {} *textureImage; 
        struct __C3DTexture {} *texture; 
        unsigned int drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __C3DMesh {} *mesh; 
        struct __C3DMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _overlayDynamicLinesInfo;
    struct { 
        struct __C3DFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __C3DImage {} *textureImage; 
        struct __C3DTexture {} *texture; 
        unsigned int drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __C3DMesh {} *mesh; 
        struct __C3DMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _overlayDynamicTriangleInfo;
    struct __C3DFXPass { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned char x_1_1_2[4]; unsigned int x_1_1_3; } x1; struct __CFString {} *x2; int x3; int x4; bool x5; struct __C3DFXTechnique {} *x6; struct __CFString {} *x7; struct __CFString {} *x8; struct __CFString {} *x9; struct __CFString {} *x10; bool x11; struct __C3DFXProgram {} *x12; struct __C3DMaterial {} *x13; struct __C3DBlendStates {} *x14; struct __C3DRasterizerStates {} *x15; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_16_1_1; } x16; unsigned char x17; unsigned int x18; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 1; unsigned int x31 : 1; unsigned int x32 : 1; unsigned int x33 : 1; unsigned int x34 : 1; unsigned int x35 : 1; unsigned int x36 : 1; unsigned int x37 : 1; } * _pass;
    unsigned short  _quadrantIndicesCount;
    const void * _quadrantIndicesOffset;
    unsigned short  _quadrantRingIndicesCount;
    const void * _quadrantRingIndicesOffset;
    <SCNSceneRenderer> * _sceneRenderer;
    NSArray * _selectedNodes;
    bool  _selecting;
    NSMutableOrderedSet * _selection;
    bool  _selectionIsReadonly;
    void _selectionP0;
    void _selectionP1;
    bool  _shouldSnapOnGrid;
    bool  _shouldSnapToAlign;
    struct { 
        bool initialized; 
        bool showFullStatistics; 
        float fps; 
        float waitDisplayLinkTime; 
        long long pressedButtonIndex; 
        struct __CFString {} *fpsString; 
        struct __CFString {} *shortString; 
        unsigned int lightingStatistics[9]; 
        struct __C3DEngineStats { 
            unsigned int verticesProcessed; 
            unsigned int primitivesProcessed; 
            unsigned int drawCount; 
            unsigned int drawStep; 
            unsigned int frameCount; 
            unsigned int fboSwitches; 
            unsigned int vboSwitches; 
            unsigned int attSwitches; 
            unsigned int attEnabling; 
            unsigned int iboSwitches; 
            unsigned int vaoSwitches; 
            unsigned int prgSwitches; 
            unsigned int texSwitches; 
            unsigned int rssSwitches; 
            unsigned int getCount; 
            unsigned int uniformFloatSent; 
            unsigned int uniformIntSent; 
            unsigned int uniformVector2Sent; 
            unsigned int uniformVector3Sent; 
            unsigned int uniformVector4Sent; 
            unsigned int uniformMatrix4Sent; 
            unsigned int vboUploaded; 
            unsigned int iboUploaded; 
            unsigned int texUploaded; 
            double cpuTime; 
            double cstrTime; 
            double phyTime; 
            double prtTime; 
            double animTime; 
            double skinTime; 
            double mrphTime; 
            double rendTime; 
            double twoDTime; 
            double delegateTime; 
            double glFlushTime; 
            double waitDisplayLinkTime; 
            double drawableWaitTime; 
            double lastDisplayLinkTime; 
            unsigned int prgCount; 
            unsigned int texCount; 
            unsigned int fboCount; 
            unsigned int vboCount; 
            unsigned int rboCount; 
            unsigned int iboCount; 
            unsigned int cboCount; 
            unsigned int vaoCount; 
            unsigned int fboMemory; 
            unsigned int rboMemory; 
            unsigned int vboMemory; 
            unsigned int iboMemory; 
            unsigned int cboMemory; 
            unsigned int texMemory; 
            unsigned int backBufferMemory; 
            unsigned int depthBuffersMemory; 
            double frmAvgTime; 
            double frmMinTime; 
            double frmMaxTime; 
            double frameTimeHistory[60]; 
            unsigned int frameTimeCurrentIndex; 
            double startTime; 
            double lastFrameTime; 
        } stats; 
    }  _statisticsInfo;
    bool  _surroundToSelect;
    struct { 
        struct __C3DFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __C3DImage {} *textureImage; 
        struct __C3DTexture {} *texture; 
        unsigned int drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __C3DMesh {} *mesh; 
        struct __C3DMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _textInfo;
    struct { 
        struct __C3DFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __C3DImage {} *textureImage; 
        struct __C3DTexture {} *texture; 
        unsigned int drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __C3DMesh {} *mesh; 
        struct __C3DMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _upArrowInfo;
    NSMutableArray * _visibleManipulableItems;
    struct __C3DFXProgram { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned char x_1_2_2[4]; unsigned int x_1_2_3; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; long long x_1_1_6; long long x_1_1_7; } x1; int x2; unsigned int x3 : 1; unsigned int x4 : 1; struct __C3DFXProgramDelegate {} *x5; } * _wireframeProgram;
    void * _wireframeRenderer;
    struct { 
        struct __C3DFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __C3DImage {} *textureImage; 
        struct __C3DTexture {} *texture; 
        unsigned int drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __C3DMesh {} *mesh; 
        struct __C3DMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _xyQuadrantInfo;
    struct { 
        struct __C3DFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __C3DImage {} *textureImage; 
        struct __C3DTexture {} *texture; 
        unsigned int drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __C3DMesh {} *mesh; 
        struct __C3DMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _xyQuadrantRingInfo;
}

@property (nonatomic) long long authoringDisplayMask;
@property (nonatomic) <SCNAuthoringEnvironmentDelegate> *delegate;
@property (nonatomic) long long editingSpace;
@property (nonatomic) bool graphicalSelectionEnabled;
@property (nonatomic, readonly) double gridUnit;
@property (nonatomic, readonly) SCNManipulator *manipulator;
@property (readonly) <SCNSceneRenderer> *sceneRenderer;
@property (nonatomic, readonly) NSArray *selectedNodes;
@property (nonatomic, readonly) bool selecting;
@property (nonatomic) bool selectionIsReadonly;
@property (nonatomic) bool shouldSnapOnGrid;
@property (nonatomic) bool shouldSnapToAlign;
@property (nonatomic) bool surroundToSelect;
@property (nonatomic, readonly) struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; } viewMatrix;

+ (id)authoringEnvironmentForSceneRenderer:(id)arg1;
+ (long long)defaultAuthoringDisplayMask;

- (id)_initWithEngineContext:(struct __C3DEngineContext { }*)arg1;
- (void)_updateManipulatorTargets;
- (long long)authoringDisplayMask;
- (void)beginEditingNode:(id)arg1;
- (void)beginEditingNodes:(id)arg1;
- (void)cancelEdition;
- (void)dealloc;
- (id)delegate;
- (bool)didTapAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)drawLineFromPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg1 toPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg2 color:(id)arg3;
- (void)drawString:(id)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2 color:(id)arg3;
- (long long)editingSpace;
- (bool)graphicalSelectionEnabled;
- (double)gridUnit;
- (id)init;
- (bool)isEditingSubComponent;
- (id)manipulator;
- (void)saveInitialSelection;
- (id)sceneRenderer;
- (id)selectedItems;
- (id)selectedNodes;
- (bool)selecting;
- (bool)selectionIsReadonly;
- (void)setAuthoringDisplayMask:(long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEditingSpace:(long long)arg1;
- (void)setGraphicalSelectionEnabled:(bool)arg1;
- (void)setSelectionIsReadonly:(bool)arg1;
- (void)setShouldSnapOnGrid:(bool)arg1;
- (void)setShouldSnapToAlign:(bool)arg1;
- (void)setSurroundToSelect:(bool)arg1;
- (bool)shouldSnapOnGrid;
- (bool)shouldSnapToAlign;
- (bool)surroundToSelect;
- (void)update;
- (struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })viewMatrix;

@end
