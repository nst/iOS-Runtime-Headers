/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSCHSelectionPathType : NSObject <NSCopying> {
    NSString * mName;
    NSString * mType;
}

@property (nonatomic, readonly) NSString *name;
@property (nonatomic, readonly) NSString *type;

+ (id)axisLabelsType;
+ (id)axisLineType;
+ (id)axisTitleType;
+ (id)categoryAxisType;
+ (id)chartBodyType;
+ (id)chartDataSetNameType;
+ (id)chartTitleType;
+ (id)errorBarType;
+ (id)gridLineType;
+ (id)legendSeriesNameType;
+ (id)legendTrendLineNameType;
+ (id)legendType;
+ (id)referenceLineLabelType;
+ (id)referenceLineType;
+ (id)referenceLineValueLabelType;
+ (id)selectionPathTypeWithType:(id)arg1 name:(id)arg2;
+ (id)seriesLabelType;
+ (id)seriesSymbolType;
+ (id)seriesType;
+ (id)seriesValueLabelType;
+ (id)trendLineEquationType;
+ (id)trendLineR2Type;
+ (id)trendLineType;
+ (id)valueAxisType;

- (void).cxx_destruct;
- (bool)canApplyChartStyleWithDescription:(id)arg1;
- (bool)canApplyParagraphStyle;
- (bool)canApplyShapeStyle;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (unsigned long long)hash;
- (id)initWithArchive:(const struct ChartSelectionPathTypeArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_4_1_1; } x4; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_5_1_1; } x5; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_6_1_1; } x6; }*)arg1;
- (id)initWithType:(id)arg1 name:(id)arg2;
- (bool)isEqual:(id)arg1;
- (id)name;
- (void)saveToArchive:(struct ChartSelectionPathTypeArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_4_1_1; } x4; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_5_1_1; } x5; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_6_1_1; } x6; }*)arg1;
- (id)type;

@end
