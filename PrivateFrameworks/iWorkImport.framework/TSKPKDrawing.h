/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSKPKDrawing : NSObject {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _cachedRenderedFrame;
    CHRecognizer * _lineRecognizer;
    double  _pencilAnnotationDrawingScale;
    PKDrawing * _pencilKitDrawing;
    CHRecognizer * _textRecognizer;
}

@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } cachedRenderedFrame;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } estimatedExcessPaddingOnIncorrectUnscaledFastFrame;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } incorrectUnscaledFastFrame;
@property (nonatomic, retain) CHRecognizer *lineRecognizer;
@property (nonatomic, readonly) double pencilAnnotationDrawingScale;
@property (nonatomic, retain) PKDrawing *pencilKitDrawing;
@property (nonatomic, readonly) NSMutableArray *strokes;
@property (nonatomic, retain) CHRecognizer *textRecognizer;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } unscaledRenderedFrame;

+ (void)initialize;
+ (id)p_strokesForPencilKitDrawing:(id)arg1;

- (void).cxx_destruct;
- (id)CHDrawing;
- (id)PKDrawing;
- (void)addSubStrokeFromStroke:(id)arg1 fromStartIndex:(unsigned long long)arg2 toEndIndex:(unsigned long long)arg3 andAdjustStart:(bool)arg4 andAdjustEnd:(bool)arg5 toEdgesOfRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg6;
- (struct CGPoint { double x1; double x2; })averageUnscaledCenterPoint;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cachedRenderedFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertStrokeToUnscaledCanvasRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertUnscaledCanvasToStrokeRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)copyAndAddStroke:(id)arg1;
- (id)copyAndAddStroke:(id)arg1 transform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg2;
- (void)copyAndAddStrokes:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)drawingByCroppingToClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)drawingByFilteringStrokesWithFilter:(id /* block */)arg1;
- (id)drawingByScaling:(struct CGSize { double x1; double x2; })arg1;
- (id)drawingByScaling:(struct CGSize { double x1; double x2; })arg1 andMovingByDelta:(struct CGPoint { double x1; double x2; })arg2;
- (id)drawingByScaling:(struct CGSize { double x1; double x2; })arg1 andMovingByDelta:(struct CGPoint { double x1; double x2; })arg2 andCroppingToClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (struct CGSize { double x1; double x2; })estimatedExcessPaddingOnIncorrectUnscaledFastFrame;
- (bool)hasLargeBracketAnchorStroke;
- (bool)hasLargeVerticalLineAnchorStroke;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })incorrectUnscaledFastFrame;
- (id)initWithData:(id)arg1 pencilAnnotationDrawingScale:(double)arg2;
- (id)initWithPKDrawing:(id)arg1 cachedRenderedFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 pencilAnnotationDrawingScale:(double)arg3;
- (id)initWithPKDrawing:(id)arg1 pencilAnnotationDrawingScale:(double)arg2;
- (id)initWithPencilAnnotationDrawingScale:(double)arg1;
- (id)initWithStrokes:(id)arg1;
- (id)initWithStrokes:(id)arg1 cachedRenderedFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (bool)isCircle;
- (bool)isHorizontalLine;
- (bool)isLine;
- (bool)isRectangle;
- (bool)isText:(id)arg1;
- (bool)isVerticalLine;
- (bool)isXMark;
- (id)lineRecognizer;
- (id)p_drawingByCroppingToClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)p_drawingByTransformingByDeltaPosition:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })p_incorrectPencilCoordinatesFastFrame;
- (id)p_paragraphAnnotationAnchorComponentsPassingFilterBlock:(id /* block */)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })p_transparencyInsetsForCGImage:(struct CGImage { }*)arg1;
- (double)pencilAnnotationDrawingScale;
- (id)pencilKitDrawing;
- (id)renderImageWithContentsScale:(double)arg1;
- (id)renderImageWithContentsScale:(double)arg1 drawingScale:(double)arg2;
- (id)renderImageWithContentsScale:(double)arg1 drawingScale:(double)arg2 drawingFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })renderedFrame;
- (void)setCachedRenderedFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setLineRecognizer:(id)arg1;
- (void)setPencilKitDrawing:(id)arg1;
- (void)setTextRecognizer:(id)arg1;
- (id)strokes;
- (id)textRecognizer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })unscaledRenderedFrame;

@end
