/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
 */

@interface MRAVOutputDevice : NSObject {
    NSData * _MACAddress;
    float  _batteryLevel;
    bool  _canAccessRemoteAssets;
    unsigned int  _deviceSubtype;
    unsigned int  _deviceType;
    void * _endpoint;
    NSString * _groupID;
    bool  _groupLeader;
    bool  _groupable;
    bool  _hasBatteryLevel;
    bool  _localDevice;
    NSString * _logicalDeviceID;
    NSString * _modelID;
    NSDictionary * _modelSpecificInfo;
    NSString * _name;
    bool  _pickedOnPairedDevice;
    NSString * _playingPairedDeviceName;
    bool  _remoteControllable;
    bool  _requiresAuthorization;
    MRAVOutputDeviceSourceInfo * _sourceInfo;
    bool  _supportsExternalScreen;
    NSString * _uid;
    float  _volume;
    bool  _volumeControlAvailable;
}

@property (nonatomic, readonly) NSData *MACAddress;
@property (nonatomic, readonly) float batteryLevel;
@property (nonatomic, readonly) bool canAccessRemoteAssets;
@property (nonatomic, readonly) _MRAVOutputDeviceDescriptorProtobuf *descriptor;
@property (nonatomic, readonly) unsigned int deviceSubtype;
@property (nonatomic, readonly) unsigned int deviceType;
@property (nonatomic) void*endpoint;
@property (nonatomic, readonly) NSString *groupID;
@property (getter=isGroupLeader, nonatomic, readonly) bool groupLeader;
@property (getter=isGroupable, nonatomic, readonly) bool groupable;
@property (nonatomic, readonly) bool hasBatteryLevel;
@property (getter=isLocalDevice, nonatomic, readonly) bool localDevice;
@property (nonatomic, readonly) NSString *logicalDeviceID;
@property (nonatomic, readonly) NSString *modelID;
@property (nonatomic, readonly) NSDictionary *modelSpecificInfo;
@property (nonatomic, readonly) NSString *name;
@property (getter=isPickedOnPairedDevice, nonatomic, readonly) bool pickedOnPairedDevice;
@property (nonatomic, readonly) NSString *playingPairedDeviceName;
@property (getter=isRemoteControllable, nonatomic, readonly) bool remoteControllable;
@property (nonatomic, readonly) bool requiresAuthorization;
@property (nonatomic, readonly) MRAVOutputDeviceSourceInfo *sourceInfo;
@property (nonatomic, readonly) bool supportsExternalScreen;
@property (nonatomic, readonly) NSString *uid;
@property (nonatomic) float volume;
@property (getter=isVolumeControlAvailable, nonatomic, readonly) bool volumeControlAvailable;

+ (id)localDeviceUID;

- (id)MACAddress;
- (float)batteryLevel;
- (bool)canAccessRemoteAssets;
- (id)description;
- (id)descriptor;
- (unsigned int)deviceSubtype;
- (unsigned int)deviceType;
- (void*)endpoint;
- (id)groupID;
- (bool)hasBatteryLevel;
- (bool)isEqual:(id)arg1;
- (bool)isGroupLeader;
- (bool)isGroupable;
- (bool)isLocalDevice;
- (bool)isPickedOnPairedDevice;
- (bool)isRemoteControllable;
- (bool)isVolumeControlAvailable;
- (id)logicalDeviceID;
- (id)modelID;
- (id)modelSpecificInfo;
- (id)name;
- (id)playingPairedDeviceName;
- (bool)requiresAuthorization;
- (void)setEndpoint:(void*)arg1;
- (void)setVolume:(float)arg1;
- (id)sourceInfo;
- (bool)supportsExternalScreen;
- (id)uid;
- (float)volume;

@end
