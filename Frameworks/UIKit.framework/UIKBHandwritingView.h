/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface UIKBHandwritingView : UIKBKeyView <UIGestureRecognizerDelegate> {
    NSMutableSet * _activeTouches;
    UIKBHandwritingBezierPathPointFIFO * _bezierPathFIFO;
    UIBezierPath * _currentPath;
    NSMutableArray * _currentPoints;
    bool  _initialPointPosted;
    struct CGColor { } * _inkColor;
    struct CGImage { } * _inkMask;
    double  _inkWidth;
    NSMutableArray * _interpolatedPoints;
    UIKBHandwritingQuadCurvePointFIFO * _interpolatingFIFO;
    struct { 
        struct CGPoint { 
            double x; 
            double y; 
        } point; 
        double force; 
    }  _previousPoint;
    UIKBHandwritingBoxcarFilterPointFIFO * _smoothingFIFO;
    UIKBHandwritingStrokePointFIFO * _strokeFIFO;
    UIKBHandwritingStrokeView * _strokeView;
}

@property (nonatomic, retain) NSMutableSet *activeTouches;
@property (nonatomic, retain) UIKBHandwritingBezierPathPointFIFO *bezierPathFIFO;
@property (nonatomic, retain) UIBezierPath *currentPath;
@property (nonatomic, retain) NSMutableArray *currentPoints;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool initialPointPosted;
@property (nonatomic) struct CGColor { }*inkColor;
@property (nonatomic) struct CGImage { }*inkMask;
@property (nonatomic) double inkWidth;
@property (nonatomic, retain) NSMutableArray *interpolatedPoints;
@property (nonatomic, retain) UIKBHandwritingQuadCurvePointFIFO *interpolatingFIFO;
@property (nonatomic) struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; } previousPoint;
@property (nonatomic, retain) UIKBHandwritingBoxcarFilterPointFIFO *smoothingFIFO;
@property (nonatomic, retain) UIKBHandwritingStrokePointFIFO *strokeFIFO;
@property (nonatomic, retain) UIKBHandwritingStrokeView *strokeView;
@property (readonly) Class superclass;

// Image: /System/Library/Frameworks/UIKit.framework/UIKit

- (void).cxx_destruct;
- (void)dealloc;

// Image: /Developer/usr/lib/libMainThreadChecker.dylib

- (id)activeTouches;
- (void)addInkPoint:(struct CGPoint { double x1; double x2; })arg1 value:(double)arg2;
- (id)bezierPathFIFO;
- (bool)cancelTouchTracking;
- (void)clearAndNotify:(bool)arg1;
- (void)clearTouches;
- (id)currentPath;
- (id)currentPoints;
- (void)deleteStrokesAtIndexes:(id)arg1;
- (bool)endStrokeWithTouches:(id)arg1 event:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 keyplane:(id)arg2 key:(id)arg3;
- (bool)initialPointPosted;
- (struct CGColor { }*)inkColor;
- (struct CGImage { }*)inkMask;
- (double)inkWidth;
- (id)interpolatedPoints;
- (id)interpolatingFIFO;
- (void)log;
- (unsigned long long)numberOfStrokes;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; })previousPoint;
- (void)send;
- (void)setActiveTouches:(id)arg1;
- (void)setBezierPathFIFO:(id)arg1;
- (void)setCurrentPath:(id)arg1;
- (void)setCurrentPoints:(id)arg1;
- (void)setInitialPointPosted:(bool)arg1;
- (void)setInkColor:(struct CGColor { }*)arg1;
- (void)setInkMask:(struct CGImage { }*)arg1;
- (void)setInkWidth:(double)arg1;
- (void)setInterpolatedPoints:(id)arg1;
- (void)setInterpolatingFIFO:(id)arg1;
- (void)setPreviousPoint:(struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; })arg1;
- (void)setRenderConfig:(id)arg1;
- (void)setSmoothingFIFO:(id)arg1;
- (void)setStrokeFIFO:(id)arg1;
- (void)setStrokeView:(id)arg1;
- (bool)shouldAllowSelectionGestures:(bool)arg1;
- (bool)shouldCache;
- (id)smoothingFIFO;
- (id)strokeFIFO;
- (id)strokeView;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)updateForKeyplane:(id)arg1 key:(id)arg2;
- (void)updateInkColor;

@end
