/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
 */

@interface PLManagedAsset : PLManagedObject <PLMomentAssetData_Private, PLSyncableAsset, UIActivityItemSource, _PLImageLoadingAsset> {
    CLLocation * _cachedLocation;
    bool  _deleteReasonExists;
    bool  _didLoadReverseGeo;
    bool  _didPrepareForDeletion;
    bool  _disableDupeAnalysis;
    bool  _disableFileSystemPersistency;
    bool  _hasSetFaceAnalysisData;
    bool  _isLocatedAtHome;
    bool  _isRegisteredForChanges;
    bool  _needsMomentUpdate;
    NSString * _reverseGeoDescription;
    bool  _setCustomCreationDate;
    bool  _setCustomLocation;
    NSURL * cachedNonPersistedVideoPlaybackURL;
    NSError * cachedNonPersistedVideoPlaybackURLError;
    NSDate * cachedNonPersistedVideoPlaybackURLExpiration;
    UIImage * inflightImageInMemory;
    NSString * inflightImagePath;
    UIImage * inflightIndexSheetImage;
    NSDictionary * inflightMetadata;
}

@property (nonatomic, retain) NSDate *addedDate;
@property (nonatomic, retain) PLAdditionalAssetAttributes *additionalAttributes;
@property (nonatomic, readonly, retain) NSDate *adjustmentTimestamp;
@property (nonatomic, retain) NSOrderedSet *adjustments;
@property (nonatomic, retain) NSSet *albumOrders;
@property (nonatomic, retain) NSSet *albums;
@property (nonatomic, retain) NSSet *albumsBeingCustomKeyAssetFor;
@property (nonatomic, retain) NSSet *albumsBeingKeyAssetFor;
@property (nonatomic, retain) NSSet *albumsBeingSecondaryKeyAssetFor;
@property (nonatomic, retain) NSSet *albumsBeingTertiaryKeyAssetFor;
@property (nonatomic, readonly, copy) NSSet *allFileURLs;
@property (nonatomic, readonly, copy) NSArray *allUniformTypeIdentifiers;
@property (nonatomic, readonly) bool allowsWallpaperEditing;
@property (nonatomic, retain) NSSet *analysisStates;
@property (nonatomic, readonly, retain) NSURL *assetURL;
@property (nonatomic) int avalanchePickType;
@property (nonatomic, retain) NSString *avalancheUUID;
@property (nonatomic, retain) CLLocation *cachedLocation;
@property (nonatomic, retain) NSURL *cachedNonPersistedVideoPlaybackURL;
@property (nonatomic, retain) NSError *cachedNonPersistedVideoPlaybackURLError;
@property (nonatomic, retain) NSDate *cachedNonPersistedVideoPlaybackURLExpiration;
@property (nonatomic, readonly) bool canPlayPhotoIris;
@property (nonatomic, retain) NSString *cloudAssetGUID;
@property (nonatomic, readonly, retain) NSString *cloudAssetGUID;
@property (nonatomic, retain) NSString *cloudBatchID;
@property (nonatomic, retain) NSDate *cloudBatchPublishDate;
@property (nonatomic, retain) NSString *cloudCollectionGUID;
@property (nonatomic, retain) NSOrderedSet *cloudComments;
@property (nonatomic, retain) NSNumber *cloudDownloadRequests;
@property (nonatomic, retain) PLCloudFeedAssetsEntry *cloudFeedAssetsEntry;
@property (nonatomic) bool cloudHasCommentsByMe;
@property (nonatomic) bool cloudHasCommentsConversation;
@property (nonatomic) bool cloudHasUnseenComments;
@property (nonatomic) bool cloudIsDeletable;
@property (nonatomic) bool cloudIsMyAsset;
@property (nonatomic, retain) NSDate *cloudLastViewedCommentDate;
@property (nonatomic) short cloudLocalState;
@property (nonatomic, readonly) NSString *cloudOwnerEmail;
@property (nonatomic, readonly) NSString *cloudOwnerFirstName;
@property (nonatomic, readonly) NSString *cloudOwnerFullName;
@property (nonatomic, retain) NSString *cloudOwnerHashedPersonID;
@property (nonatomic, readonly) NSString *cloudOwnerLastName;
@property (nonatomic) short cloudPlaceholderKind;
@property (nonatomic, retain) NSDate *cloudServerPublishDate;
@property (nonatomic, readonly) <PLCloudSharedAlbumProtocol> *cloudShareAlbum;
@property (nonatomic) bool complete;
@property (nonatomic, retain) NSString *creatorBundleID;
@property (nonatomic) double curationScore;
@property (nonatomic, retain) NSString *customCollectionName;
@property (nonatomic, retain) NSString *customCollectionUUID;
@property (nonatomic, retain) NSString *customMomentName;
@property (nonatomic, retain) NSString *customMomentUUID;
@property (nonatomic) short customRenderedValue;
@property (nonatomic, retain) NSDate *dateCreated;
@property (nonatomic, readonly, copy) NSDate *dateForComparingAdjustmentVersions;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSSet *detectedFaces;
@property (nonatomic, retain) NSString *directory;
@property (nonatomic) bool disableDupeAnalysis;
@property (nonatomic) bool disableFileSystemPersistency;
@property (nonatomic) double duration;
@property (nonatomic, retain) NSString *editorBundleID;
@property unsigned long long effectiveThumbnailIndex;
@property (nonatomic, readonly, retain) NSData *embeddedThumbnailData;
@property (nonatomic) short embeddedThumbnailHeight;
@property (nonatomic) int embeddedThumbnailLength;
@property (nonatomic) int embeddedThumbnailOffset;
@property (nonatomic) short embeddedThumbnailWidth;
@property (nonatomic) long long externalUsageIntent;
@property (nonatomic, retain) id faceAdjustmentVersion;
@property (nonatomic) long long faceAreaPoints;
@property (nonatomic) int faceDetectionState;
@property (nonatomic, retain) NSData *faceRegions;
@property (nonatomic) bool favorite;
@property (nonatomic, readonly, copy) NSString *fileExtension;
@property (nonatomic, readonly, copy) NSSet *filePathsWithoutThumbs;
@property (nonatomic, readonly, copy) NSURL *fileURLForLargeThumbnailFile;
@property (nonatomic, readonly, copy) NSURL *fileURLForPrebakedLandscapeScrubberThumbnails;
@property (nonatomic, readonly, copy) NSURL *fileURLForPrebakedPortraitScrubberThumbnails;
@property (nonatomic, readonly, copy) NSURL *fileURLForThumbnailFile;
@property (nonatomic, retain) NSString *filename;
@property (nonatomic) struct CLLocationCoordinate2D { double x1; double x2; } gpsCoordinate;
@property (nonatomic, retain) NSString *groupingUUID;
@property (nonatomic) bool hasAdjustedVideoComplement;
@property (nonatomic) bool hasAdjustments;
@property (nonatomic) bool hasSetFaceAnalysisData;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) short height;
@property (nonatomic) short height;
@property (nonatomic) bool hidden;
@property (nonatomic, readonly) short highDynamicRangeType;
@property (nonatomic) struct CGSize { double x1; double x2; } imageSize;
@property (nonatomic, retain) NSString *importSessionID;
@property (nonatomic, readonly, retain) UIImage *inflightImage;
@property (nonatomic, retain) UIImage *inflightImageInMemory;
@property (nonatomic, retain) NSString *inflightImagePath;
@property (nonatomic, retain) UIImage *inflightIndexSheetImage;
@property (nonatomic, retain) NSDictionary *inflightMetadata;
@property (nonatomic, readonly) bool isAudio;
@property (nonatomic, readonly) bool isCloudPhotoLibraryAsset;
@property (nonatomic, readonly) bool isCloudSharedAsset;
@property (nonatomic, readonly) bool isColorAware;
@property (nonatomic, readonly) bool isHDVideo;
@property (nonatomic) bool isInFlight;
@property (nonatomic, readonly) bool isJPEG;
@property (nonatomic, readonly) bool isMogul;
@property (nonatomic, readonly) bool isPhoto;
@property (nonatomic, readonly) bool isPhotoIris;
@property (nonatomic, readonly) bool isPhotoIrisPlaceholder;
@property (nonatomic, readonly) bool isPhotoStreamPhoto;
@property (setter=setSearchDataValid:, nonatomic) bool isSearchDataValid;
@property (nonatomic, readonly) bool isStreamedVideo;
@property (nonatomic, readonly) bool isUsedByiPhoto;
@property (nonatomic, readonly) bool isVideo;
@property (nonatomic) short kind;
@property (nonatomic) short kindSubtype;
@property (nonatomic, retain) NSDate *lastSharedDate;
@property (nonatomic) double latitude;
@property (nonatomic, retain) NSSet *legacyFaces;
@property (nonatomic, retain) NSOrderedSet *likeComments;
@property (nonatomic) unsigned long long localResourcesState;
@property (nonatomic, retain) CLLocation *location;
@property (nonatomic, retain) NSData *locationData;
@property (nonatomic) int locationHash;
@property (nonatomic, retain) NSString *longDescription;
@property (nonatomic) double longitude;
@property (nonatomic, readonly, copy) NSURL *mainFileURL;
@property (nonatomic, retain) PLCloudMaster *master;
@property (nonatomic, retain) NSString *mediaGroupUUID;
@property (nonatomic, retain) NSSet *memoriesBeingCuratedAssets;
@property (nonatomic, retain) NSSet *memoriesBeingKeyAsset;
@property (nonatomic, retain) NSSet *memoriesBeingMovieCuratedAssets;
@property (nonatomic, retain) NSSet *memoriesBeingRepresentativeAssets;
@property (nonatomic, retain) NSDate *modificationDate;
@property (nonatomic, retain) PLMoment *moment;
@property (nonatomic) bool needsMomentUpdate;
@property (nonatomic) short orientation;
@property (nonatomic, retain) PLManagedAsset *originalAsset;
@property (nonatomic, retain) NSString *originalAssetsUUID;
@property (nonatomic, retain) NSString *originalColorSpace;
@property (nonatomic, retain) NSString *originalFilename;
@property (nonatomic) int originalFilesize;
@property (nonatomic, retain) NSData *originalHash;
@property (nonatomic) short originalHeight;
@property (nonatomic) short originalOrientation;
@property (nonatomic) short originalWidth;
@property (nonatomic, readonly, copy) NSString *pathForAdjustmentDirectory;
@property (nonatomic, readonly, copy) NSString *pathForLargeDisplayableImageFile;
@property (nonatomic, readonly, copy) NSString *pathForLargeThumbnailFile;
@property (nonatomic, readonly, copy) NSString *pathForLegacySlalomRegionsArchive;
@property (nonatomic, readonly, copy) NSString *pathForMediumThumbnailFile;
@property (nonatomic, readonly, copy) NSString *pathForMetadataDirectory;
@property (nonatomic, readonly, copy) NSString *pathForOriginalFile;
@property (nonatomic, readonly, copy) NSString *pathForPrebakedLandscapeScrubberThumbnails;
@property (nonatomic, readonly, copy) NSString *pathForPrebakedPortraitScrubberThumbnails;
@property (nonatomic, readonly, copy) NSString *pathForPrebakedWildcatThumbnailsFile;
@property (nonatomic, readonly, copy) NSString *pathForTrimmedVideoFile;
@property (nonatomic, readonly, copy) NSString *pathForVideoFile;
@property (nonatomic, readonly, copy) NSString *pathForVideoPreviewFile;
@property (nonatomic, readonly, copy) NSString *pathForXMPFile;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } photoIrisStillDisplayTime;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } photoIrisVideoDuration;
@property (nonatomic, retain) NSData *placeAnnotationData;
@property (nonatomic, retain) NSString *publicGlobalUUID;
@property (nonatomic, retain) NSSet *resources;
@property (nonatomic, retain) NSData *reverseLocationData;
@property (nonatomic) bool reverseLocationDataIsValid;
@property (nonatomic) short savedAssetType;
@property (nonatomic, retain) NSData *searchCategoryData;
@property (nonatomic, retain) NSManagedObject *searchData;
@property (nonatomic, retain) CLLocation *shiftedLocation;
@property (nonatomic) bool shiftedLocationIsValid;
@property (nonatomic, retain) NSSet *sidecarFiles;
@property (nonatomic) double sortToken;
@property (nonatomic, readonly, copy) NSArray *sortedSidecarFiles;
@property (readonly) Class superclass;
@property (nonatomic, readonly, copy) NSString *textBadgeString;
@property (nonatomic) int thumbnailIndex;
@property (nonatomic, retain) NSString *title;
@property (nonatomic, readonly) unsigned long long totalCommentsCount;
@property (nonatomic, retain) NSDate *trashedDate;
@property (nonatomic) short trashedState;
@property (nonatomic, retain) NSString *uniformTypeIdentifier;
@property (nonatomic, readonly, retain) NSObject<NSCopying> *uniqueObjectID;
@property (nonatomic) bool userCloudSharedLiked;
@property (nonatomic, retain) id uuid;
@property (nonatomic) long long videoCpDurationValue;
@property (nonatomic) unsigned short videoCpVisibilityState;
@property (nonatomic) short visibilityState;
@property (nonatomic, readonly, retain) UIImage *wallpaperFullScreenImage;
@property (nonatomic, readonly) short width;
@property (nonatomic) short width;

// Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices

+ (unsigned long long)CPLAssetHDRTypeFromPLPhotoHDRType:(short)arg1;
+ (id)URLForMetadataWithExtension:(id)arg1 forMediaInMainDirectory:(id)arg2 withFilename:(id)arg3;
+ (id)_assetsWithCloudAssetUUIDs:(id)arg1 inLibrary:(id)arg2 fetchLimit:(unsigned long long)arg3;
+ (short)_correctedOrientation:(short)arg1;
+ (id)_dataFromCPLPlaceAnnotation:(id)arg1;
+ (id)_insertAssetIntoPhotoLibrary:(id)arg1 mainFileURL:(id)arg2 savedAssetType:(short)arg3 replacementUUID:(id)arg4 imageSource:(struct CGImageSource {}**)arg5 imageData:(id*)arg6 isPlaceholder:(bool)arg7 deleteFileOnFailure:(bool)arg8;
+ (bool)_isPlayableVideoCloudResource:(id)arg1;
+ (bool)_isPlayableVideoUTI:(struct __CFString { }*)arg1;
+ (long long)_locationDataFormat:(id)arg1;
+ (id)_newPathAndDateDictionariesByAssetUUIDFromFetchResults:(id)arg1;
+ (id)_placeAnnotationFromAnnotationData:(id)arg1;
+ (id)_ptpCalendar;
+ (id)_ptpEventInfoIsolationQueue;
+ (id)abbreviatedMetadataDirectoryForDirectory:(id)arg1;
+ (long long)adjustmentBaseVersionFromPFAdjustmentsBaseVersion:(long long)arg1;
+ (id)allCloudSharedAssetsInLibrary:(id)arg1;
+ (id)assetBaseFilenameForAdjustmentFilePath:(id)arg1;
+ (short)assetTypeFromUniformTypeIdentifier:(id)arg1;
+ (bool)assetTypeIsSupportedForUpload:(short)arg1;
+ (id)assetWithCloudAssetUUID:(id)arg1 inLibrary:(id)arg2;
+ (id)assetWithObjectID:(id)arg1 inLibrary:(id)arg2;
+ (id)assetWithObjectID:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)assetWithUUID:(id)arg1 inLibrary:(id)arg2;
+ (id)assetWithUUID:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)assetsByCloudAssetUUID:(id)arg1 inLibrary:(id)arg2;
+ (id)assetsLibraryURLWithUUID:(id)arg1 extension:(id)arg2;
+ (id)assetsToRetryInLibrary:(id)arg1 limit:(unsigned long long)arg2;
+ (id)assetsToUploadInitiallyInLibrary:(id)arg1 limit:(unsigned long long)arg2;
+ (id)assetsWithCloudAssetUUIDs:(id)arg1 inLibrary:(id)arg2;
+ (id)assetsWithSavedAssetType:(short)arg1 inManagedObjectContext:(id)arg2;
+ (id)assetsWithUUIDs:(id)arg1 options:(unsigned long long)arg2 inLibrary:(id)arg3;
+ (id)assetsWithUUIDs:(id)arg1 options:(unsigned long long)arg2 inManagedObjectContext:(id)arg3;
+ (id)baseSearchIndexPredicate;
+ (void)batchFetchAssetsByFaceUUIDWithFaceUUIDs:(id)arg1 completion:(id)arg2;
+ (id)bestCreationDateForAssetAtURL:(id)arg1 modificationDate:(id*)arg2 creationDateString:(id*)arg3;
+ (bool)canPlayPhotoIrisWithPhotoIris:(bool)arg1 photoIrisPlaceholder:(bool)arg2 hasAdjustments:(bool)arg3 videoCpVisibilityState:(unsigned short)arg4;
+ (id)cloudSharedAssetsWithGUIDs:(id)arg1 inLibrary:(id)arg2;
+ (id)convertKey:(unsigned long long)arg1 toBases:(id)arg2;
+ (unsigned long long)countForAssetsWithUUIDs:(id)arg1 includePendingChanges:(bool)arg2 inManagedObjectContext:(id)arg3 error:(id*)arg4;
+ (unsigned long long)countUsedAssetsWithKind:(short)arg1 excludeTrashed:(bool)arg2 excludeInvisible:(bool)arg3 excludeCloudShared:(bool)arg4 inManagedObjectContext:(id)arg5;
+ (id)createCloudPhotoLibraryAssetWithAssetRecord:(id)arg1 withCloudMaster:(id)arg2 inLibrary:(id)arg3;
+ (void)createMastersInLibrary:(id)arg1;
+ (id)createPTPEventKeyForImportSessionID:(id)arg1 createDate:(id)arg2 filename:(id)arg3 value:(id)arg4;
+ (short)customRenderedValueFromHighDynamicRangeType:(short)arg1 isValid:(bool*)arg2;
+ (id)dcfCompliantNameForFilename:(id)arg1 createDate:(id)arg2 size:(int)arg3;
+ (id)dcfFormatChecker;
+ (id)diagnosticFilePathForMainFilePath:(id)arg1;
+ (struct CGSize { double x1; double x2; })dimensionsForAVAsset:(id)arg1;
+ (struct CGSize { double x1; double x2; })dimensionsForVideoAtURL:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)eventInfoForPTP;
+ (id)extensionForFullsizeThumbnailFile;
+ (id)extensionForLargeThumbnailFile;
+ (id)extensionForMediumThumbnailFile;
+ (void)extractDirectory:(id*)arg1 andFilename:(id*)arg2 fromMainFileURL:(id)arg3;
+ (id)fetchPredicateForLegacyRequiredResourcesLocallyAvailable;
+ (id)fileURLFromAssetURL:(id)arg1 photoLibrary:(id)arg2;
+ (void)fixupCloudPhotoLibraryAsset:(id)arg1 withCloudMaster:(id)arg2 inLibrary:(id)arg3;
+ (int)fullSizeImageFormat;
+ (bool)guaranteedFlashOffForAssetAtURL:(id)arg1;
+ (short)highDynamicRangeTypeFromCustomRenderedValue:(short)arg1;
+ (id)incompleteAssetsInManagedObjectContext:(id)arg1;
+ (id)insertAssetIntoPhotoLibrary:(id)arg1 mainFileURL:(id)arg2 savedAssetType:(short)arg3 replacementUUID:(id)arg4 imageSource:(struct CGImageSource {}**)arg5 imageData:(id*)arg6;
+ (id)insertAssetIntoPhotoLibrary:(id)arg1 mainFileURL:(id)arg2 savedAssetType:(short)arg3 replacementUUID:(id)arg4 imageSource:(struct CGImageSource {}**)arg5 imageData:(id*)arg6 isPlaceholder:(bool)arg7 deleteFileOnFailure:(bool)arg8;
+ (id)insertInManagedObjectContext:(id)arg1;
+ (bool)isOrphanedMediaGroupUUID:(id)arg1;
+ (bool)isPhotoIrisPlaceholderWithPhotoIris:(bool)arg1 videoCpDuration:(long long)arg2 isCloudShared:(bool)arg3 videoCpFilePath:(id)arg4;
+ (bool)isValidFileExtensionForImport:(id)arg1;
+ (bool)isVideoComplementVisibilityStatePlayable:(unsigned short)arg1 hasAdjustments:(bool)arg2;
+ (id)keyPathsForValuesAffectingGpsCoordinate;
+ (id)keyPathsForValuesAffectingImageSize;
+ (id)keyPathsForValuesAffectingIsJPEG;
+ (id)keyPathsForValuesAffectingIsPhotoStreamPhoto;
+ (int)landscapeScrubberThumbnailFormat;
+ (id)listOfSyncedProperties;
+ (unsigned long long)localResourceOptionFromResourceType:(unsigned long long)arg1 useMaster:(bool)arg2;
+ (struct CLLocationCoordinate2D { double x1; double x2; })locationFromAVAsset:(id)arg1;
+ (void)markAssetAsRecentlyUsed:(id)arg1;
+ (int)masterThumbnailFormat;
+ (id)newImagePropertiesFromImageSource:(struct CGImageSource { }*)arg1;
+ (id)newLocationDataFromLocation:(id)arg1;
+ (id)newLocationFromLocationData:(id)arg1 timestampIfMissing:(id)arg2;
+ (id)pathAndDateDictionariesForAllIncompleteAssetsInManagedObjectContext:(id)arg1;
+ (id)pathForAdjustmentDirectoryWithMutationsDirectory:(id)arg1;
+ (id)pathForMutationsDirectoryWithDirectory:(id)arg1 filename:(id)arg2;
+ (id)persistedRecentlyUsedGUIDS;
+ (long long)pfAdjustmentsBaseVersionFromAdjustmentBaseVersion:(long long)arg1;
+ (id)photoFromAssetURL:(id)arg1 photoLibrary:(id)arg2;
+ (id)photoFromAssetURL:(id)arg1 photoLibrary:(id)arg2 sidecar:(id*)arg3;
+ (int)portraitScrubberThumbnailFormat;
+ (id)predicateForSupportedAssetTypesForUpload;
+ (id)predicateToExcludeHiddenAssets;
+ (id)predicateToExcludeHiddenAssetsWithHiddenKeyPath:(id)arg1;
+ (id)predicateToExcludeNonvisibleBurstAssets;
+ (id)predicateToExcludeNonvisibleBurstAssetsWithAvalanchePickTypeKeyPath:(id)arg1;
+ (id)predicateToExcludeTrashedAssets;
+ (id)predicateToExcludeTrashedAssetsWithTrashedStateKeyPath:(id)arg1;
+ (id)preferredFileExtensionForType:(id)arg1;
+ (id)ptpAssetIDForEventAndFilenameKey:(id)arg1;
+ (void)ptpResetEventAndFilenameMapping;
+ (void)ptpSetAssetIDForEventAndFilenameKey:(id)arg1 value:(id)arg2;
+ (id)recentlyUsedGUIDsPath;
+ (void)resetAssetsCloudStateInLibrary:(id)arg1;
+ (void)resetLocalResourcesStateForAllAssetsInContext:(id)arg1;
+ (void)scheduleUserInitiatedAnalysisJobForWorkerType:(short)arg1 assetUUID:(id)arg2 workerFlags:(int)arg3;
+ (struct CGSize { double x1; double x2; })sizeOfImageAtURL:(id)arg1 outOrientation:(short*)arg2;
+ (id)sortedCloudSharedAssetsWithPlaceholderKind:(short)arg1 ascending:(bool)arg2 inLibrary:(id)arg3;
+ (id)supportedAssetTypesForUpload;
+ (unsigned long long)totalSizeOfUnpushedOriginalsInPhotoLibrary:(id)arg1;
+ (id)uniformTypeIdentifierFromPathExtension:(id)arg1 assetType:(short)arg2;
+ (id)uuidFromAssetURL:(id)arg1;
+ (id)uuidFromAssetURL:(id)arg1 fileExtension:(id*)arg2 sidecarIndex:(id*)arg3;

- (unsigned long long)CPLResourceTypeFromVideoFormat:(int)arg1;
- (void)_addSidecarFromResource:(id)arg1 inManagedObjectContext:(id)arg2;
- (id)_adjustmentFingerprint;
- (bool)_analysisStateWasChangedForWorkerType:(short)arg1;
- (void)_appendAssetTextDataToAsset:(id)arg1;
- (void)_appendDateCreatedToAsset:(id)arg1 dateFormatter:(id)arg2;
- (void)_appendGEODataToAsset:(id)arg1;
- (void)_appendKeywords:(id)arg1 toAsset:(id)arg2;
- (void)_appendPersonNamesToAsset:(id)arg1;
- (void)_appendSceneClassificationsToAsset:(id)arg1;
- (void)_applyPropertiesChangeToCPLAssetChange:(id)arg1 withMasterID:(id)arg2 inLibrary:(id)arg3;
- (void)_applyPropertiesFromCloudMaster:(id)arg1;
- (void)_applyResourceChangeToCPLAsset:(id)arg1 withIdentifier:(id)arg2 forChangeType:(unsigned long long)arg3 shouldGenerateDerivatives:(bool)arg4 inLibrary:(id)arg5;
- (void)_asyncGenerateRenderImageFileWithSize:(struct CGSize { double x1; double x2; })arg1 formatIdentifier:(id)arg2 formatVersion:(id)arg3 adjustmentDataBlob:(id)arg4 originalImageFilePath:(id)arg5 originalImageEXIFOrientation:(long long)arg6 renderedImageFilePath:(id)arg7 completionHandler:(id)arg8;
- (id)_availableCloudResourcesForPhotosRequireUnadjusted:(bool)arg1 allowPenultimate:(bool)arg2;
- (int)_avalancheTypeFromCplBurstFlags:(unsigned long long)arg1;
- (int)_calculateStateForWorkerType:(short)arg1;
- (void)_cleanSubstandardFile;
- (void)_cleanupPenultimateResources;
- (id)_compactDebugDescription;
- (void)_computePreCropThumbnailSize:(struct CGSize { double x1; double x2; }*)arg1 andPostCropSize:(struct CGSize { double x1; double x2; }*)arg2 forOrientedOriginalSize:(struct CGSize { double x1; double x2; })arg3 andCroppedSize:(struct CGSize { double x1; double x2; })arg4 isLargeThumbnail:(bool)arg5;
- (void)_copyResourceFileFrom:(id)arg1 to:(id)arg2;
- (void)_copySRGBFileFrom:(id)arg1 to:(id)arg2;
- (unsigned long long)_cplAdjustmentSourceTypeFromPLAdjustmentBaseVersion:(long long)arg1;
- (id)_cplMasterFromCloudMaster:(id)arg1 withCPLResources:(id)arg2;
- (id)_cplMasterResourcesFromCloudMaster:(id)arg1 includeFile:(bool)arg2;
- (id)_cplRelationsForAssetInLibrary:(id)arg1;
- (id)_createCPLResourceFromResourcePath:(id)arg1 withResourceType:(unsigned long long)arg2 uniformTypeIdentifier:(id)arg3 itemIdentifier:(id)arg4;
- (id)_createImageResourceForResourceType:(unsigned long long)arg1 withPreviewImagePath:(id)arg2 itemIdentifier:(id)arg3 forMaster:(bool)arg4;
- (id)_createJPEGResourcesFromFullSizeJPEGPath:(id)arg1 withItemIdentifier:(id)arg2 forMaster:(bool)arg3;
- (id)_createJPEGResourcesFromFullSizeJPEGPath:(id)arg1 withItemIdentifier:(id)arg2 forMaster:(bool)arg3 forResourceTypes:(id)arg4;
- (void)_createPhotoResourcesForMaster:(id)arg1 intoMasterResources:(id)arg2 shouldGenerateDerivatives:(bool)arg3;
- (void)_createTHMFileWithPreviewImage:(id)arg1 thumbnailImage:(id)arg2;
- (id)_createVideoResourceFromVideoURL:(id)arg1 withResourceType:(unsigned long long)arg2 itemIdentifier:(id)arg3 applyVideoAdjustments:(bool)arg4 forMaster:(bool)arg5 forPhotoIris:(bool)arg6;
- (void)_createVideoResourcesForMaster:(id)arg1 intoMasterResources:(id)arg2 shouldGenerateDerivatives:(bool)arg3;
- (void)_debugPrintAdjustmentState;
- (id)_dictionaryRepresentationForSceneClassifications:(id)arg1;
- (id)_generatePosterFrameForVideoAtURL:(id)arg1 withResourceType:(unsigned long long)arg2 itemIdentifier:(id)arg3 forMaster:(bool)arg4;
- (id)_generatePosterFrameResourcesFromVideoURL:(id)arg1 withIdentifier:(id)arg2 forMaster:(bool)arg3;
- (id)_generateVideoResourcesFromURL:(id)arg1 withIdentifier:(id)arg2 forMaster:(bool)arg3;
- (void)_getLargestAvailableDataRepresentation:(id*)arg1 type:(id*)arg2;
- (bool)_hasBecomeNonVisibleToMemories:(id)arg1;
- (bool)_hasFFCDimensions;
- (bool)_hasPanoramaDimensions;
- (bool)_hasScreenshotDimensions;
- (bool)_hasScreenshotMetadata;
- (bool)_hasVideoComplementData;
- (id)_highDynamicRangeTypeDescription;
- (id)_imageDataForThumbGeneration;
- (id)_insertResource:(id)arg1 forOtherDuplicatedAssetInMaster:(id)arg2 inPhotoLibrary:(id)arg3;
- (bool)_isAdjustedResourceAvailableForResourceType:(unsigned long long)arg1 outResource:(id*)arg2;
- (bool)_isMasterResourceAvailableForResourceType:(unsigned long long)arg1 outResource:(id*)arg2;
- (bool)_isResourceAvailableForResourceType:(unsigned long long)arg1 outResource:(id*)arg2;
- (bool)_isResourceType:(unsigned long long)arg1 inResources:(id)arg2;
- (bool)_isSavedAssetTypeValid:(short)arg1;
- (bool)_isValidUTI:(id)arg1 forService:(id)arg2;
- (bool)_isVisibleAvalanchePickType:(int)arg1;
- (id)_kindDescription;
- (void)_loadReverseGeoIfNeeded;
- (id)_localResourcePathForResource:(id)arg1;
- (bool)_location:(id)arg1 isEqualToLocationForUpdating:(id)arg2;
- (id)_markDirtyChangeDictionaryForWorkerType:(short)arg1 workerFlags:(int)arg2;
- (id)_mediaGroupUUIDForPersistence;
- (id)_mediaGroupUUIDFromPersistence:(id)arg1;
- (bool)_migrateKeyedArchiverAdjustmentsToPropertyListSerializationFormat;
- (bool)_migrateLegacySLMAdjustments;
- (void)_migrateResourcePathForMaster:(id)arg1;
- (bool)_moveOrCopyFromSourceURL:(id)arg1 toDestinationURL:(id)arg2 useSecureMove:(bool)arg3 error:(id*)arg4;
- (id)_newLocationFromFileURL:(id)arg1;
- (long long)_plAdjustmentBaseVersionFromCPLAdjustmentSourceType:(unsigned long long)arg1;
- (void)_postProcessApplyResourceDependentPropertyChangeToCPLAsset:(id)arg1 inLibrary:(id)arg2;
- (id)_prettyDescription;
- (id)_savedAssetTypeDescription;
- (id)_searchDataCreateIfNeeded;
- (id)_serializedPropertyDataFromFilter:(id)arg1;
- (void)_setAllowedForAnalysisDependentValue:(id)arg1 forKey:(id)arg2;
- (bool)_setDefaultSlowMotionAdjustments;
- (void)_setLocationFromCoordinate:(struct CLLocationCoordinate2D { double x1; double x2; })arg1;
- (void)_setValue:(id)arg1 forKey:(id)arg2 valueDidChangeHandler:(id)arg3;
- (void)_setVideoComplementData:(id)arg1;
- (id)_settingsDictionaryFromFilter:(id)arg1;
- (id)_settingsDictionaryFromFilters:(id)arg1 inputImageExtent:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)_sidecarFileMatchingUTI:(struct __CFString { }*)arg1 requireExactMatch:(bool)arg2 requireSort:(bool)arg3;
- (struct CGSize { double x1; double x2; })_targetSizeForInputSize:(struct CGSize { double x1; double x2; })arg1 maxPixelSize:(unsigned long long)arg2;
- (void)_tryAddDelayedAnalysisJobToManagedObjectContext:(id)arg1 workerFlags:(int)arg2 forWorkerType:(short)arg3;
- (void)_updateAssetSubtypeForCPLAssetChange:(id)arg1;
- (void)_updateAssetSubtypeFromCPLAssetSubtype:(unsigned long long)arg1;
- (void)_updateBurstFlagsForCPLAssetChange:(id)arg1;
- (id)_updateChangeDictionaryForWorkerType:(short)arg1;
- (void)_updateOriginalResourceChoice;
- (id)_videoComplementDerivativeResourcesForMaster:(id)arg1;
- (id)_videoComplementResource;
- (id)_videoMetadata;
- (bool)_wasPreviouslyProcessedForWorkerType:(short)arg1;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;
- (id)addAdjustment;
- (void)addComment:(id)arg1;
- (id)addLegacyFaceWithRelativeRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 identifier:(short)arg2 albumUUID:(id)arg3;
- (id)addedDateData;
- (id)adjustedPathForCPLResourceType:(unsigned long long)arg1;
- (id)adjustmentsXMPRepresentation;
- (id)allFileExtensions;
- (id)allFileURLs;
- (id)allUniformTypeIdentifiers;
- (bool)allowsWallpaperEditing;
- (id)analysisStateForWorkerType:(short)arg1;
- (void)applyPropertiesFromAssetChange:(id)arg1 inLibrary:(id)arg2 withKeywordManager:(id)arg3;
- (void)applyResourcesFromAssetChange:(id)arg1 inLibrary:(id)arg2;
- (void)applyTrashedState:(short)arg1;
- (double)aspectRatio;
- (id)assetURL;
- (id)assetURLForSidecarFile:(id)arg1;
- (id)assetURLWithExtension:(id)arg1;
- (id)assetsLibraryURL;
- (id)availableAdjustedCloudResourcesForPhotos:(bool)arg1;
- (id)availableUnadjustedCloudResourcesForPhotos;
- (id)avalanchePickDescription;
- (bool)avalanchePickTypeIsVisible;
- (void)awakeFromFetch;
- (void)awakeFromInsert;
- (void)awakeFromSnapshotEvents:(unsigned long long)arg1;
- (bool)becomePhotoIrisWithMediaGroupUUID:(id)arg1 videoURL:(id)arg2 videoDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 stillDisplayTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg4 createSidecar:(bool)arg5;
- (unsigned long long)bestResourceTypeForAdjustedFingerPrint;
- (id)cachedLocation;
- (id)cachedNonPersistedVideoPlaybackURL;
- (id)cachedNonPersistedVideoPlaybackURLError;
- (id)cachedNonPersistedVideoPlaybackURLExpiration;
- (bool)calculateAllowedForAnalysis;
- (id)cameraMake;
- (bool)canMoveToTrash;
- (bool)canPerformEditOperation:(unsigned long long)arg1;
- (bool)canPlayPhotoIris;
- (int)cloudCommentsStatusForOwnedAsset:(bool)arg1;
- (bool)cloudHasSameOwnerAsAsset:(id)arg1;
- (id)cloudOwnerEmail;
- (id)cloudOwnerFirstName;
- (id)cloudOwnerFullName;
- (id)cloudOwnerLastName;
- (id)cloudResourceForResourceType:(unsigned long long)arg1;
- (id)cloudShareAlbum;
- (long long)cloudSharedAssetPlaceholderKind;
- (long long)compareToAsset:(id)arg1;
- (bool)couldBeStoredInDCIM;
- (id)cplAssetChangeWithMasterID:(id)arg1 withChangeType:(unsigned long long)arg2 shouldGenerateDerivatives:(bool)arg3 inLibrary:(id)arg4;
- (unsigned long long)cplAssetSubtypeFromPLAssetSubtype:(short)arg1;
- (unsigned long long)cplBurstFlagsFromPLAvalancheType:(int)arg1;
- (id)cplMasterChangeInLibrary:(id)arg1 shouldGenerateDerivatives:(bool)arg2;
- (id)cplResourceForResourceType:(unsigned long long)arg1;
- (void)createMasterIfNecessaryInLibrary:(id)arg1;
- (void)createMasterResourcesIn:(id)arg1 inManagedObjectContext:(id)arg2;
- (bool)createNewResourcesIn:(id)arg1 inManagedObjectContext:(id)arg2;
- (id)createResourcesForAssetInPhotoLibrary:(id)arg1 shouldGenerateDerivatives:(bool)arg2;
- (id)createResourcesForMaster:(id)arg1 shouldGenerateDerivatives:(bool)arg2 inPhotoLibrary:(id)arg3;
- (id)creatorBundleID;
- (id)customCollectionName;
- (id)customCollectionUUID;
- (id)customMomentName;
- (id)customMomentUUID;
- (id)dateCreatedData;
- (id)dateForComparingAdjustmentVersions;
- (void)dealloc;
- (id)debugFilename;
- (id)decodedFaceRegions;
- (id)deduplicatedCloudMasterResources;
- (void)delete;
- (void)deleteComment:(id)arg1;
- (void)deleteFromDatabaseOnly;
- (void)deleteFromDatabaseOnlyWithReason:(id)arg1;
- (void)deleteWithReason:(id)arg1;
- (id)descriptionForAnalysisStates;
- (id)descriptionForNonCloudResources;
- (id)descriptionForResources;
- (id)descriptionForSceneAnalysis;
- (id)descriptionForSidecarFiles;
- (void)didSave;
- (void)didSetCustomDateCreated;
- (void)didSetCustomLocation;
- (void)didTurnIntoFault;
- (bool)disableDupeAnalysis;
- (bool)disableFileSystemPersistency;
- (id)editorBundleID;
- (unsigned long long)effectiveThumbnailIndex;
- (id)embeddedThumbnailData;
- (short)embeddedThumbnailHeight;
- (int)embeddedThumbnailLength;
- (int)embeddedThumbnailOffset;
- (short)embeddedThumbnailWidth;
- (void)enumerateUserVisibleResourcesWithBlock:(id)arg1;
- (id)existingCloudMaster;
- (long long)externalUsageIntent;
- (id)faceDescription;
- (id)faceRegions;
- (id)fileExtension;
- (id)filePathsWithoutThumbs;
- (id)fileURLForAdjustedLargeThumbnailFile;
- (id)fileURLForAdjustedMediumThumbnailFile;
- (id)fileURLForFullsizeRenderImage;
- (id)fileURLForFullsizeRenderVideo;
- (id)fileURLForHypotheticalSidecarFileWithFilename:(id)arg1;
- (id)fileURLForLargeThumbnailFile;
- (id)fileURLForMediumThumbnailFile;
- (id)fileURLForMetadataWithExtension:(id)arg1;
- (id)fileURLForNonAdjustedLargeThumbnailFile;
- (id)fileURLForNonAdjustedMediumThumbnailFile;
- (id)fileURLForPrebakedLandscapeScrubberThumbnails;
- (id)fileURLForPrebakedPortraitScrubberThumbnails;
- (id)fileURLForThumbnailFile;
- (id)filteredImage:(id)arg1 withCIContext:(id)arg2;
- (void)generateAndUpdateThumbnailsWithPreviewImage:(id)arg1 thumbnailImage:(id)arg2 fromImageSource:(struct CGImageSource { }*)arg3 imageData:(id)arg4 thumbnailDataByFormatID:(struct __CFDictionary { }*)arg5 updateExistingLargePreview:(bool)arg6 forceSRGBConversion:(bool)arg7;
- (void)generateLargeThumbnailFileIfNecessary;
- (void)generateSRGBMediumThumbnailFileIfNecessaryFromURL:(id)arg1;
- (void)generateThumbnailsWithImageSource:(struct CGImageSource { }*)arg1 imageData:(id)arg2 updateExistingLargePreview:(bool)arg3 allowMediumPreview:(bool)arg4 forceSRGBConversion:(bool)arg5 outSmallThumbnail:(id*)arg6 outLargeThumbnail:(id*)arg7;
- (void)getFileURL:(id*)arg1 originalFilename:(id*)arg2 uti:(id*)arg3 fileSize:(long long*)arg4 forSidecarMatchingUTI:(id)arg5 requireExactMatch:(bool)arg6;
- (void)getSearchIndexContents:(id)arg1 dateFormatter:(id)arg2 keywords:(id)arg3;
- (id)globalUUID;
- (struct CLLocationCoordinate2D { double x1; double x2; })gpsCoordinate;
- (void)handleDelayedAnalysisStateUpdateForAdditionalAttributes:(id)arg1 withChangedValues:(id)arg2 modificationDateUpdated:(bool)arg3 managedObjectContext:(id)arg4;
- (void)handleDelayedAnalysisStateUpdateWithChangedValues:(id)arg1 modificationDateUpdated:(bool)arg2 managedObjectContext:(id)arg3;
- (bool)hasAdjustedVideoComplement;
- (bool)hasGPS;
- (bool)hasJustBeenHidden;
- (bool)hasJustBeenShown;
- (bool)hasLegacyAdjustments;
- (bool)hasLegacyRequiredResourcesLocallyAvailable;
- (bool)hasOriginalFile;
- (bool)hasSetFaceAnalysisData;
- (short)highDynamicRangeType;
- (id)imagePropertiesAllowReadFromFile:(bool)arg1;
- (struct CGSize { double x1; double x2; })imageSize;
- (id)imageWithFormat:(int)arg1;
- (id)imageWithFormat:(int)arg1 outImageProperties:(const struct __CFDictionary {}**)arg2;
- (id)importSessionID;
- (void)incrementUploadAttempts;
- (id)indexSheetImage;
- (id)inflightImage;
- (id)inflightImageInMemory;
- (id)inflightImagePath;
- (id)inflightIndexSheetImage;
- (id)inflightMetadata;
- (bool)isAudio;
- (bool)isAvalanchePhoto;
- (bool)isAvalancheStackPhoto;
- (bool)isCloudPhotoLibraryAsset;
- (bool)isCloudPlaceholder;
- (bool)isCloudSharedAsset;
- (bool)isColorAware;
- (bool)isDeletableFromAssetsLibrary;
- (bool)isEditable;
- (bool)isEditableFromAssetsLibrary;
- (bool)isFavorite;
- (bool)isHDVideo;
- (bool)isInFlight;
- (bool)isInTrash;
- (bool)isIncludedInCloudFeeds;
- (bool)isIncludedInMoments;
- (bool)isInterestingForAvalanche;
- (bool)isJPEG;
- (bool)isLocatedAtCoordinates:(struct CLLocationCoordinate2D { double x1; double x2; })arg1;
- (bool)isLocatedAtHome;
- (bool)isMogul;
- (bool)isOriginalSRGB;
- (bool)isPanorama;
- (bool)isPartOfBurst;
- (bool)isPhoto;
- (bool)isPhotoIris;
- (bool)isPhotoIrisPlaceholder;
- (bool)isPhotoStreamPhoto;
- (bool)isPlayableVideo;
- (bool)isRAW;
- (bool)isRAWOnly;
- (bool)isRAWPlusJPEG;
- (bool)isResourceAvailableForResourceType:(unsigned long long)arg1;
- (bool)isSavedPhotosAsset;
- (bool)isSearchDataValid;
- (bool)isStreamedVideo;
- (bool)isSyncableChange;
- (bool)isTimelapsePlaceholder;
- (bool)isUsedByiPhoto;
- (bool)isValidTypeForPersistence;
- (bool)isVideo;
- (id)itemIdentifier;
- (id)largestAvailableDataRepresentationAndType:(id*)arg1;
- (id)lastUploadAttemptDate;
- (id)legacyFaceWithIdentifier:(short)arg1;
- (id)lensModel;
- (id)location;
- (int)locationHash;
- (id)longDescription;
- (id)mainFileURL;
- (id)managedAssetForPhotoLibrary:(id)arg1;
- (void)markCloudResourceOfType:(unsigned long long)arg1 asLocallyAvailable:(bool)arg2;
- (id)masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint:(id*)arg1 error:(id*)arg2;
- (bool)migrateLegacyPhotoAdjustments;
- (bool)migrateLegacyVideoAdjustments;
- (bool)migrateLocationDataIfNeededAfterOTARestore:(bool)arg1;
- (id)mutableAdjustments;
- (id)mutableAlbumsBeingCustomKeyAssetFor;
- (id)mutableAlbumsBeingKeyAssetFor;
- (id)mutableAlbumsBeingSecondaryKeyAssetFor;
- (id)mutableAlbumsBeingTertiaryKeyAssetFor;
- (id)mutableDetectedFaces;
- (id)mutableSidecarFiles;
- (bool)needToAddVideoComplementResourceForMaster;
- (bool)needsMomentUpdate;
- (id)newFullScreenImage:(const struct __CFDictionary {}**)arg1;
- (id)newFullSizeImage;
- (id)newLowResolutionFullScreenImage;
- (id)nonAdjustedPathForCPLResourceType:(unsigned long long)arg1;
- (id)originalAsset;
- (id)originalAssetsUUID;
- (id)originalFileName;
- (id)originalFilename;
- (int)originalFilesize;
- (id)originalHash;
- (short)originalHeight;
- (long long)originalImageOrientation;
- (short)originalOrientation;
- (unsigned long long)originalResourceChoice;
- (short)originalWidth;
- (id)pasteBoardRepresentation;
- (id)pathForAdjustedFullsizeImageFile;
- (id)pathForAdjustedLargeSizeImageFile;
- (id)pathForAdjustedLargeThumbnailFile;
- (id)pathForAdjustedMediumThumbnailFile;
- (id)pathForAdjustedMediumVideoFile;
- (id)pathForAdjustedSRGBLargeThumbnailFile;
- (id)pathForAdjustedSmallVideoFile;
- (id)pathForAdjustmentDataFile;
- (id)pathForAdjustmentDirectory;
- (id)pathForAdjustmentFile;
- (id)pathForCPLResourceType:(unsigned long long)arg1 adjusted:(bool)arg2;
- (id)pathForDiagnosticFile;
- (id)pathForFullsizeImageFile;
- (id)pathForFullsizeRenderImageFile;
- (id)pathForFullsizeRenderVideoFile;
- (id)pathForLargeDisplayableImageFile;
- (id)pathForLargeSizeImageFile;
- (id)pathForLargeThumbnailFile;
- (id)pathForLegacySlalomRegionsArchive;
- (id)pathForMediaMetadataFile;
- (id)pathForMediumThumbnailFile;
- (id)pathForMetadataDirectory;
- (id)pathForMetadataWithExtension:(id)arg1;
- (id)pathForMutationsDirectory;
- (id)pathForNonAdjustedFullsizeImageFile;
- (id)pathForNonAdjustedLargeSizeImageFile;
- (id)pathForNonAdjustedLargeThumbnailFile;
- (id)pathForNonAdjustedMediumThumbnailFile;
- (id)pathForNonAdjustedMediumVideoFile;
- (id)pathForNonAdjustedSRGBLargeThumbnailFile;
- (id)pathForNonAdjustedSmallVideoFile;
- (id)pathForOriginalFile;
- (id)pathForPenultimateFullsizeRenderImageFile;
- (id)pathForPenultimateFullsizeRenderVideoFile;
- (id)pathForPrebakedLandscapeScrubberThumbnails;
- (id)pathForPrebakedPortraitScrubberThumbnails;
- (id)pathForPrebakedWildcatThumbnailsFile;
- (id)pathForSRGBLargeThumbnailFile;
- (id)pathForSideCarImageFile;
- (id)pathForSubstandardFullsizeRenderImageFile;
- (id)pathForTrimmedVideoFile;
- (id)pathForVideoComplementFile;
- (id)pathForVideoFile;
- (id)pathForVideoPreviewFile;
- (id)pathForXMPFile;
- (id)pathToOriginalVideoFile;
- (void)persistMetadataToFilesystem;
- (id)photoIrisSidecarIgnoringSubtype:(bool)arg1;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })photoIrisStillDisplayTime;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })photoIrisVideoDuration;
- (id)pictureTransferProtocolInformation;
- (id)pictureTransferProtocolInformationAsFirstAsset:(bool)arg1;
- (id)pl_photoLibrary;
- (id)placeAnnotationData;
- (void)postProcessResourceDependentPropertyChangesFromAssetChange:(id)arg1 inLibrary:(id)arg2;
- (void)prepareForDeletion;
- (id)publicGlobalUUID;
- (void)refreshFaces;
- (void)registerForChanges;
- (void)removeLegacyAdjustments;
- (void)removeSceneClassifications;
- (void)revalidateFaceAreaPoints;
- (id)reverseGeoDescription;
- (id)reverseLocationData;
- (bool)reverseLocationDataIsValid;
- (void)revertToOriginal;
- (bool)sceneAnalysisWasPerformedOnLatestAdjustment;
- (id)searchCategoryData;
- (void)setAdjustments:(id)arg1 renderedContentURL:(id)arg2 penultimateRenderedJPEGData:(id)arg3 isSubstandardRender:(bool)arg4 fullSizeRenderSize:(struct CGSize { double x1; double x2; })arg5 renderedVideoComplementContentURL:(id)arg6 penultimateRenderedVideoComplementContentURL:(id)arg7 shouldUpdateAttributes:(bool)arg8 useSecureMove:(bool)arg9 inManagedObjectContext:(id)arg10;
- (void)setAdjustments:(id)arg1 shouldUpdateAttributes:(bool)arg2 inManagedObjectContext:(id)arg3;
- (bool)setAttributesFromMainFileURL:(id)arg1 fullSizeRenderURL:(id)arg2 savedAssetType:(short)arg3 isPlaceholder:(bool)arg4 overwriteOriginalProperties:(bool)arg5 imageSource:(struct CGImageSource {}**)arg6 imageData:(id*)arg7;
- (void)setAvalanchePickType:(int)arg1;
- (void)setCachedLocation:(id)arg1;
- (void)setCachedNonPersistedVideoPlaybackURL:(id)arg1;
- (void)setCachedNonPersistedVideoPlaybackURLError:(id)arg1;
- (void)setCachedNonPersistedVideoPlaybackURLExpiration:(id)arg1;
- (bool)setCameraCaptureDeviceFromImageProperties:(id)arg1;
- (void)setColorSpaceNameFromProperties:(id)arg1;
- (void)setCreatorBundleID:(id)arg1;
- (void)setCustomCollectionName:(id)arg1;
- (void)setCustomCollectionUUID:(id)arg1;
- (void)setCustomMetadataWithPersistedFileSystemAttributes;
- (void)setCustomMomentName:(id)arg1;
- (void)setCustomMomentUUID:(id)arg1;
- (bool)setCustomRenderedValueFromImageProperties:(id)arg1;
- (void)setDateCreated:(id)arg1;
- (bool)setDefaultAdjustmentsIfNecessary;
- (void)setDisableDupeAnalysis:(bool)arg1;
- (void)setDisableFileSystemPersistency:(bool)arg1;
- (void)setEditorBundleID:(id)arg1;
- (void)setEffectiveThumbnailIndex:(unsigned long long)arg1;
- (void)setEmbeddedThumbnailHeight:(short)arg1;
- (void)setEmbeddedThumbnailLength:(int)arg1;
- (void)setEmbeddedThumbnailOffset:(int)arg1;
- (void)setEmbeddedThumbnailWidth:(short)arg1;
- (void)setExternalUsageIntent:(long long)arg1;
- (void)setFaceAdjustmentVersion:(id)arg1;
- (void)setFaceRegions:(id)arg1;
- (void)setFaceRegionsFromImageMetadata:(struct CGImageMetadata { }*)arg1;
- (void)setGroupingUUIDFromImageProperties:(id)arg1;
- (void)setHasSetFaceAnalysisData:(bool)arg1;
- (void)setHidden:(bool)arg1;
- (void)setImageSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setImportSessionID:(id)arg1;
- (void)setInflightImageInMemory:(id)arg1;
- (void)setInflightImagePath:(id)arg1;
- (void)setInflightIndexSheetImage:(id)arg1;
- (void)setInflightMetadata:(id)arg1;
- (void)setIsInFlight:(bool)arg1;
- (void)setLastUploadAttemptDate:(id)arg1;
- (void)setLocation:(id)arg1;
- (void)setLocationFromImageProperties:(id)arg1;
- (void)setLocationHash:(int)arg1;
- (void)setLongDescription:(id)arg1;
- (void)setNeedsMomentUpdate:(bool)arg1;
- (void)setOriginalAsset:(id)arg1;
- (void)setOriginalAssetsUUID:(id)arg1;
- (void)setOriginalFilename:(id)arg1;
- (void)setOriginalFilesize:(int)arg1;
- (void)setOriginalHash:(id)arg1;
- (void)setOriginalHeight:(short)arg1;
- (void)setOriginalOrientation:(short)arg1;
- (void)setOriginalResourceChoice:(unsigned long long)arg1;
- (void)setOriginalSizeAndOrientationFromImageProperties:(id)arg1;
- (void)setOriginalWidth:(short)arg1;
- (void)setPhotoIrisPropertiesFromImageProperties:(id)arg1;
- (void)setPlaceAnnotationData:(id)arg1;
- (void)setPublicGlobalUUID:(id)arg1;
- (void)setReverseLocationData:(id)arg1;
- (void)setReverseLocationDataIsValid:(bool)arg1;
- (void)setSavedAssetType:(short)arg1;
- (void)setSavedAssetTypeFromImageProperties:(id)arg1;
- (void)setSearchCategoryData:(id)arg1;
- (void)setSearchDataValid:(bool)arg1;
- (void)setShiftedLocation:(id)arg1;
- (void)setShiftedLocationIsValid:(bool)arg1;
- (void)setSizeAndOrientationFromImageProperties:(id)arg1;
- (void)setThumbnailDataFromImageProperties:(id)arg1;
- (void)setThumbnailIndex:(int)arg1;
- (void)setTitle:(id)arg1;
- (void)setTrashedState:(short)arg1;
- (void)setUniformTypeIdentifierFromPathExtension:(id)arg1;
- (void)setUploadAttempts:(short)arg1;
- (void)setUserCloudSharedLiked:(bool)arg1;
- (void)setUuid:(id)arg1;
- (bool)setVideoInfoFromFileAtURL:(id)arg1 fullSizeRenderURL:(id)arg2 overwriteOriginalProperties:(bool)arg3;
- (id)shiftedLocation;
- (bool)shiftedLocationIsValid;
- (id)shortenedFilePath;
- (bool)shouldUseNonAdjustedVideo;
- (id)sortedSidecarFiles;
- (bool)supportsCloudUpload;
- (void)synchronizeWithPersistedFileSystemAttributes;
- (void)synchronouslyFetchAdjustmentDataWithCompletionHandler:(id)arg1;
- (void)synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath:(id)arg1 withCompletionHandler:(id)arg2;
- (struct CGSize { double x1; double x2; })targetSizeForInputSize:(struct CGSize { double x1; double x2; })arg1 maxPixelSize:(unsigned long long)arg2;
- (id)textBadgeString;
- (id)thumbnailIdentifier;
- (id)title;
- (unsigned long long)totalCommentsCount;
- (id)uniqueObjectID;
- (void)unregisterForChanges;
- (void)updateAdjustmentsWithAdjustmentMetadata:(id)arg1;
- (void)updateAdjustmentsWithFiltersAndIdentifiers:(id)arg1;
- (void)updateAssetKindFromUniformTypeIdentifier;
- (bool)updateKindSubtypeIfScreenshot;
- (void)updateLocalResourcesStateGivenCloudResource:(id)arg1;
- (void)updatePanoramosity;
- (void)updatePhotoIrisMetadataWithMediaGroupUUID:(id)arg1 videoDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 stillDisplayTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (short)uploadAttempts;
- (id)userAddCloudSharedCommentWithText:(id)arg1;
- (bool)userCloudSharedLiked;
- (void)userDeleteCloudSharedComment:(id)arg1;
- (void)userReadAllCloudSharedComments;
- (id)userVisibleCloudResourceOfType:(unsigned long long)arg1;
- (bool)validateForInsert:(id*)arg1;
- (bool)validateForUpdate:(id*)arg1;
- (id)videoComplementData;
- (bool)visibilityStateIsEqualToState:(short)arg1;
- (id)wallpaperFullScreenImage;
- (void)willSave;
- (void)willTurnIntoFault;

// Image: /System/Library/Frameworks/Photos.framework/Photos

+ (id)pl_PHAssetsForManagedAssets:(id)arg1;

- (id)pl_PHAsset;
- (id)pl_PHAssetWithPropertySets:(id)arg1;

@end
