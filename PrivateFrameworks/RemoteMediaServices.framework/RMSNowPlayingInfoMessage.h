/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/RemoteMediaServices.framework/RemoteMediaServices
 */

@interface RMSNowPlayingInfoMessage : PBCodable <NSCopying> {
    NSString * _albumName;
    NSString * _artistName;
    bool  _canSkipNext;
    bool  _canSkipPrevious;
    bool  _canWishlist;
    unsigned long long  _databaseID;
    struct { 
        unsigned int databaseID : 1; 
        unsigned int itemID : 1; 
        unsigned int timeRemaining : 1; 
        unsigned int timestamp : 1; 
        unsigned int totalDuration : 1; 
        unsigned int likedState : 1; 
        unsigned int mediaKind : 1; 
        unsigned int playbackState : 1; 
        unsigned int revisionNumber : 1; 
        unsigned int scrubbableState : 1; 
        unsigned int canSkipNext : 1; 
        unsigned int canSkipPrevious : 1; 
        unsigned int canWishlist : 1; 
        unsigned int hasChapterData : 1; 
        unsigned int likeable : 1; 
    }  _has;
    bool  _hasChapterData;
    unsigned long long  _itemID;
    bool  _likeable;
    int  _likedState;
    int  _mediaKind;
    int  _playbackState;
    unsigned int  _revisionNumber;
    int  _scrubbableState;
    double  _timeRemaining;
    double  _timestamp;
    double  _totalDuration;
    NSString * _trackName;
}

@property (nonatomic, retain) NSString *albumName;
@property (nonatomic, retain) NSString *artistName;
@property (nonatomic) bool canSkipNext;
@property (nonatomic) bool canSkipPrevious;
@property (nonatomic) bool canWishlist;
@property (nonatomic) unsigned long long databaseID;
@property (nonatomic, readonly) bool hasAlbumName;
@property (nonatomic, readonly) bool hasArtistName;
@property (nonatomic) bool hasCanSkipNext;
@property (nonatomic) bool hasCanSkipPrevious;
@property (nonatomic) bool hasCanWishlist;
@property (nonatomic) bool hasChapterData;
@property (nonatomic) bool hasDatabaseID;
@property (nonatomic) bool hasHasChapterData;
@property (nonatomic) bool hasItemID;
@property (nonatomic) bool hasLikeable;
@property (nonatomic) bool hasLikedState;
@property (nonatomic) bool hasMediaKind;
@property (nonatomic) bool hasPlaybackState;
@property (nonatomic) bool hasRevisionNumber;
@property (nonatomic) bool hasScrubbableState;
@property (nonatomic) bool hasTimeRemaining;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasTotalDuration;
@property (nonatomic, readonly) bool hasTrackName;
@property (nonatomic) unsigned long long itemID;
@property (nonatomic) bool likeable;
@property (nonatomic) int likedState;
@property (nonatomic) int mediaKind;
@property (nonatomic) int playbackState;
@property (nonatomic) unsigned int revisionNumber;
@property (nonatomic) int scrubbableState;
@property (nonatomic) double timeRemaining;
@property (nonatomic) double timestamp;
@property (nonatomic) double totalDuration;
@property (nonatomic, retain) NSString *trackName;

- (void).cxx_destruct;
- (id)albumName;
- (id)artistName;
- (bool)canSkipNext;
- (bool)canSkipPrevious;
- (bool)canWishlist;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)databaseID;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasAlbumName;
- (bool)hasArtistName;
- (bool)hasCanSkipNext;
- (bool)hasCanSkipPrevious;
- (bool)hasCanWishlist;
- (bool)hasChapterData;
- (bool)hasDatabaseID;
- (bool)hasHasChapterData;
- (bool)hasItemID;
- (bool)hasLikeable;
- (bool)hasLikedState;
- (bool)hasMediaKind;
- (bool)hasPlaybackState;
- (bool)hasRevisionNumber;
- (bool)hasScrubbableState;
- (bool)hasTimeRemaining;
- (bool)hasTimestamp;
- (bool)hasTotalDuration;
- (bool)hasTrackName;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (unsigned long long)itemID;
- (bool)likeable;
- (int)likedState;
- (int)mediaKind;
- (void)mergeFrom:(id)arg1;
- (int)playbackState;
- (bool)readFrom:(id)arg1;
- (unsigned int)revisionNumber;
- (int)scrubbableState;
- (void)setAlbumName:(id)arg1;
- (void)setArtistName:(id)arg1;
- (void)setCanSkipNext:(bool)arg1;
- (void)setCanSkipPrevious:(bool)arg1;
- (void)setCanWishlist:(bool)arg1;
- (void)setDatabaseID:(unsigned long long)arg1;
- (void)setHasCanSkipNext:(bool)arg1;
- (void)setHasCanSkipPrevious:(bool)arg1;
- (void)setHasCanWishlist:(bool)arg1;
- (void)setHasChapterData:(bool)arg1;
- (void)setHasDatabaseID:(bool)arg1;
- (void)setHasHasChapterData:(bool)arg1;
- (void)setHasItemID:(bool)arg1;
- (void)setHasLikeable:(bool)arg1;
- (void)setHasLikedState:(bool)arg1;
- (void)setHasMediaKind:(bool)arg1;
- (void)setHasPlaybackState:(bool)arg1;
- (void)setHasRevisionNumber:(bool)arg1;
- (void)setHasScrubbableState:(bool)arg1;
- (void)setHasTimeRemaining:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasTotalDuration:(bool)arg1;
- (void)setItemID:(unsigned long long)arg1;
- (void)setLikeable:(bool)arg1;
- (void)setLikedState:(int)arg1;
- (void)setMediaKind:(int)arg1;
- (void)setPlaybackState:(int)arg1;
- (void)setRevisionNumber:(unsigned int)arg1;
- (void)setScrubbableState:(int)arg1;
- (void)setTimeRemaining:(double)arg1;
- (void)setTimestamp:(double)arg1;
- (void)setTotalDuration:(double)arg1;
- (void)setTrackName:(id)arg1;
- (double)timeRemaining;
- (double)timestamp;
- (double)totalDuration;
- (id)trackName;
- (void)writeTo:(id)arg1;

@end
