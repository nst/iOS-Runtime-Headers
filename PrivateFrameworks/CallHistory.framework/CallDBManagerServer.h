/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CallHistory.framework/CallHistory
 */

@interface CallDBManagerServer : CallDBManager

+ (id)downgradeDatabaseAtLocation:(id)arg1 toVersion:(long long)arg2;
+ (id)getDestinationModel:(long long)arg1;
+ (id)getDestinationModelForVersion:(long long)arg1;
+ (long long)getNextVersionToDowngradeTo:(long long)arg1;
+ (long long)getNextVersionToDowngradeTo:(long long)arg1 withSourceVersion:(long long)arg2;
+ (long long)getNextVersionToMigrateToCurrentVersion:(long long)arg1;
+ (id)getObjectIdsForAllRecords:(id)arg1;
+ (id)getObjectIdsForDuplicateRecordsWithUniqueIds:(id)arg1 andHavingObjectIds:(id)arg2;
+ (id)getUniqueIdsForAllRecords:(id)arg1;

- (bool)bootUpDBAtLocation:(id)arg1 isEncrypted:(bool)arg2;
- (bool)bootUpDBAtLocationWithRecovery:(id)arg1 isEncrypted:(bool)arg2;
- (bool)createCallDBProperties;
- (id)createMOCForDBAtLocation:(id)arg1 dbVersion:(long long)arg2 isEncrypted:(bool)arg3;
- (void)createPermanent;
- (void)createTemporary;
- (id)getUUIDsOfNMostRecentRecords:(unsigned long long)arg1 fromManagedObjectContext:(id)arg2;
- (bool)handleBootUpFailure:(id)arg1;
- (bool)handleDatabaseMigration:(id)arg1 isEncrypted:(bool)arg2 isRetry:(bool)arg3;
- (void)modifyCallRecordForDBAtLocation:(id)arg1 dbVersion:(long long)arg2 isEncrypted:(bool)arg3 modifyCallRecord:(id /* block */)arg4;
- (void)moveCallsFromTempDatabase;
- (id)permDBLocation:(unsigned char*)arg1;
- (void)populateHandleType:(id)arg1 dbVersion:(long long)arg2 isEncrypted:(bool)arg3;
- (void)populateServiceProviderAndCallCategory:(id)arg1 dbVersion:(long long)arg2 isEncrypted:(bool)arg3;
- (void)prepareDatabaseForNextStepInMigration:(id)arg1 dbVersion:(long long)arg2 isEncrypted:(bool)arg3;
- (void)prepareForMigrationDBAtURL:(id)arg1 withModelAtURL:(id)arg2 andIsEncrypted:(bool)arg3;
- (bool)removeDuplicatesFromDBAtLocation:(id)arg1 dbVersion:(long long)arg2 isEncrypted:(bool)arg3;
- (id)tempDBLocation:(unsigned char*)arg1;

@end
