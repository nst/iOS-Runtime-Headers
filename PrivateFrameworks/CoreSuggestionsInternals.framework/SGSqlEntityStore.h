/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreSuggestionsInternals.framework/CoreSuggestionsInternals
 */

@interface SGSqlEntityStore : NSObject <CSSearchableIndexDelegate> {
    id  _crLookup;
    SGSqliteDatabase * _db;
    NSMutableArray * _deallocNotifications;
    SGDuetBridge * _duetBridge;
    bool  _entityMigrationRequiresMergeBlobUpdate;
    NSDictionary * _entityMigrations;
    unsigned long long  _entityVersion;
    bool  _executeJournals;
    SGSuggestHistory * _history;
    bool  _identityStoreDirty;
    struct atomic_flag { 
        bool _Value; 
    }  _isClosed;
    bool  _isEphemeral;
    SGJournal * _journal;
    id  _lockStateNotificationRegistrationToken;
    unsigned long long  _lostMessageOverflow;
    SGBloomFilter * _messageRecipients;
    unsigned long long  _parentMessagesLimit;
    NSObject<OS_dispatch_queue> * _precomputationQueue;
    NSSet * _prematchedContactIdentifiers;
    NSCache * _recentlyDeletedEmailKeys;
    NSSet * _serializedContactEntityIDs;
    unsigned long long  _serializedContactsLimit;
    SGSqliteDatabase * _snippetDb;
    NSString * _snippetDbPath;
    SGDatabaseJournal * _snippetsJournal;
    NSDictionary * _snippetsMigrations;
    unsigned long long  _snippetsVersion;
    SGSpotlightContactsAdapter * _spotlightContactsAdapter;
    int  _spotlightReindexCount;
    NSObject<OS_dispatch_queue> * _spotlightReindexQueue;
    bool  _waitForMigrations;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool executeJournals;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isEphemeral;
@property unsigned long long serializedContactsLimit;
@property (readonly) SGSpotlightContactsAdapter *spotlightContactsAdapter;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool waitForMigrations;

+ (id)_fieldValuesClassWhitelist;
+ (id)_initializeDatabase:(id)arg1 withProtection:(bool)arg2 newDatabaseCreated:(bool*)arg3;
+ (id)_recreateCorruptDatabase:(id)arg1 withProtection:(bool)arg2;
+ (void)addPathToFutureDbSchemas:(id)arg1;
+ (void)clearMigrationCompletedForPaths;
+ (id)defaultHarvestStore;
+ (id)defaultPath;
+ (id)defaultPathCreatingSuggestionsDirectoryIfNeeded:(bool)arg1;
+ (id)defaultSnippetPath;
+ (id)defaultStore;
+ (void)deletePreparedSqlStoreInMemory;
+ (bool)pathHasFutureDbSchema:(id)arg1;
+ (void)prepareSqlStoreInMemory;
+ (void)prepareSqlStoreInMemoryByClearingExistingStore:(id)arg1;
+ (void)releaseInstanceAndWaitForDealloc:(id*)arg1;
+ (id)sqlStoreInMemory;
+ (id)sqlStoreWithEntityDbPath:(id)arg1 snippetDbPath:(id)arg2 isEphemeral:(bool)arg3 executeJournals:(bool)arg4;
+ (id)sqlStoreWithEntityDbPathNoMigrate:(id)arg1 snippetDbPath:(id)arg2 isEphemeral:(bool)arg3 executeJournals:(bool)arg4;
+ (id)storeWithDefaultLocationAndExecuteJournals:(bool)arg1;

- (void).cxx_destruct;
- (void)_addIndexingTagsTo:(id)arg1;
- (void)_addLocations:(id)arg1 toEntityWriteDictionary:(id)arg2;
- (void)_addSpotlightReferenceToEmailRecordId:(id)arg1 withBundleIdentifier:(id)arg2 uniqueIdentifier:(id)arg3 domainIdentifier:(id)arg4;
- (void)_addTimeRange:(id)arg1 toEntityWriteDictionary:(id)arg2;
- (bool)_analyzeMergeBlobsIncremental:(id)arg1;
- (id)_buildContactMatchForStorageContact:(id)arg1 fromQuery:(id)arg2 tokens:(id)arg3 matchInfo:(id)arg4 preprocessSgContact:(id)arg5;
- (id)_buildUnknownMatchContactMatchForSGContact:(id)arg1;
- (id)_buildUnknownMatchContactMatchForStorageContact:(id)arg1 preprocessSgContact:(id)arg2;
- (id)_computeBlobsRaw:(id*)arg1;
- (id)_computePseudoContactContentHash:(id)arg1 contactDetails:(id)arg2;
- (bool)_createEntityFTSTableWithName:(id)arg1;
- (id)_deleteChildEntitiesByRecordIdsInTable:(id)arg1;
- (id)_deleteEntitiesByDuplicateKeyNoRecurse:(id)arg1;
- (void)_deleteIfNoSpotlightReferences:(id)arg1 addToRecentlyDeletedCache:(bool)arg2;
- (id)_deleteMessageMetadataByDuplicateKeyNoRecurse:(id)arg1;
- (void)_deleteWithSqlJoining:(id)arg1 where:(id)arg2 onPrep:(id)arg3;
- (id)_derefChildrenOf:(id)arg1;
- (void)_dumpTable:(id)arg1 columns:(id)arg2 limitTo:(int)arg3;
- (id)_duplicateKeysFromMailMessageKeys:(id)arg1;
- (id)_duplicateKeysFromRecordIds:(id)arg1;
- (id)_duplicateKeysWithZeroSpotlightReferencesFromRecordIds:(id)arg1;
- (void)_emitChangeNotifications:(id)arg1;
- (void)_enqueueBatchOfCNContactIds:(id)arg1;
- (id)_eventFromSqlResult:(struct sqlite3_stmt { }*)arg1;
- (id)_filterOutAllButAcceptedWithUpdatedFields:(id)arg1;
- (id)_filterOutCancelledEvents:(id)arg1;
- (id)_filterOutOlderVersionsOfPseudoEvents:(id)arg1;
- (void)_filterOutRejectedDetailsFromContact:(id)arg1;
- (id)_filterOutUndisplayableEntities:(id)arg1;
- (void)_hashAttachedPseudoContacts:(id)arg1;
- (bool)_isBlobAnalysisQueueEmpty;
- (bool)_isIdentityStoreDirty;
- (void)_joinNamelessEmailWithOthersOfItsIlk:(id)arg1 recordId:(id)arg2;
- (void)_joinNamelessPhonesWithOthersOfTheirIlk:(id)arg1 recordId:(id)arg2;
- (id)_labelIdentityBlobs:(id)arg1;
- (void)_linkNamelessEmailsIfAppropriate:(struct graph_t { unsigned int x1; unsigned int x2; struct _vertex_t {} *x3; }*)arg1 nameToVertex:(id)arg2 disjointSets:(struct DisjointSetHandle { }*)arg3 edges:(id)arg4;
- (void)_linkNamelessPhonesIfAppropriate:(struct graph_t { unsigned int x1; unsigned int x2; struct _vertex_t {} *x3; }*)arg1 nameToVertex:(id)arg2 disjointSets:(struct DisjointSetHandle { }*)arg3 edges:(id)arg4;
- (id)_loadContactForStorageContact:(id)arg1 usingSerializedContactCache:(bool)arg2;
- (id)_loadIdentityBlobs;
- (id)_loadMessageByKey:(id)arg1;
- (void)_logConfirmPercentWithConfirmCount:(double)arg1 rejectCount:(double)arg2 domain:(id)arg3 suffix:(id)arg4;
- (id)_makeBlobsFromConnectedComponents:(id)arg1 edges:(id)arg2;
- (void)_markIdentityStoreClean;
- (void)_markIdentityStoreDirty;
- (void)_markRecordsLostIfNoSpotlightReferences:(id)arg1;
- (id)_masterEntityIDsForMasterEntityQuery:(id)arg1 bindings:(id)arg2;
- (id)_matchinfoForFTSMatchWhere:(id)arg1 bindings:(id)arg2;
- (long long)_maxIdForTable:(id)arg1;
- (unsigned long long)_minEntityIdFromMinEntityId:(unsigned long long)arg1 withContactIdentifiers:(id)arg2;
- (id)_normalizeHandle:(id)arg1;
- (id)_popBatchOfCNContactIds;
- (id)_popMergeBlobForAnalysis;
- (long long)_popQueuedSerializedContactId;
- (bool)_prepareToCopyFrom:(id)arg1 toNewTableNamed:(id)arg2;
- (bool)_processBatchOfSerializedContactJobs;
- (void)_prunePseudoContactGeneratingEmails:(id)arg1;
- (id)_queryForAllContactsWithLimit;
- (id)_rankSGContacts:(id)arg1 bySimilarityToContact:(id)arg2;
- (id)_recordIdsFromRemovingSpotlightReferencesWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2;
- (void)_recordPseudoContactsWithDeletedDetailsInTable:(id)arg1 deletedChildrenTable:(id)arg2;
- (void)_registerJournalUnlockHandler;
- (void)_removeCorruptionMarker;
- (void)_removeSnippetsForEmails:(id)arg1;
- (void)_removeSnippetsForEntities:(id)arg1;
- (bool)_renameTable:(id)arg1 to:(id)arg2;
- (void)_reportDbStatsBackground;
- (int)_scoreContactDetail:(id)arg1;
- (double)_scoreSGContact:(id)arg1 bySimilarityToContact:(id)arg2 cnContactFullname:(id)arg3;
- (void)_selectAuthoritativeDetailsForContactWithId:(long long)arg1;
- (bool)_shouldContinueReindex:(int)arg1;
- (void)_slowCopyFromTable:(id)arg1 toTable:(id)arg2 startingAtEntityId:(unsigned long long)arg3;
- (id)_storageContactsForMasterEntityIds:(id)arg1;
- (void)_trimSerializedContacts;
- (void)_tryExecuteSnippetsJournal;
- (id)_uniqueGoodDetailMatchFrom:(id)arg1 toDetails:(id)arg2 nonUnique:(bool*)arg3;
- (void)_writeContactEntityToJournal:(id)arg1;
- (void)_writeEntityParentageFor:(id)arg1 entityId:(long long)arg2;
- (void)_writeEntityToSnippetsDb:(id)arg1;
- (void)_writeEventEntityToJournal:(id)arg1;
- (void)_writeFTSTermsForEntity:(id)arg1 entityId:(long long)arg2;
- (long long)_writeGenericExtractionEntityToDb:(id)arg1;
- (void)_writeLabeledBlobs:(id)arg1 isDelete:(bool)arg2;
- (void)_writeMergeBlobSnapshotForAnalysis:(id)arg1;
- (long long)_writeMessageEntityToDb:(id)arg1;
- (void)_writeMessageEntityToSnippetsDb:(id)arg1;
- (long long)_writeOneEntityToDb:(id)arg1;
- (void)_writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2 domainIdentifier:(id)arg3;
- (void)addDeallocNotification:(id)arg1;
- (void)addInterdictFrom:(id)arg1 with:(id)arg2;
- (bool)addSpotlightReferenceToEmailIfFullyDownloaded:(id)arg1 withBundleIdentifier:(id)arg2 uniqueIdentifier:(id)arg3 domainIdentifier:(id)arg4;
- (id)allContactsLimitedTo:(unsigned long long)arg1;
- (id)allContactsMasterEntityIdsLimitedTo:(unsigned long long)arg1;
- (id)allContactsWithEntityType:(unsigned long long)arg1;
- (id)allPseudoContacts;
- (void)analyzeDatabase;
- (void)analyzeMergeBlobs:(id)arg1;
- (bool)anyEmailAddressIsSignificant:(id)arg1;
- (id)batch:(id)arg1;
- (id)batchOf:(unsigned long long)arg1 contactsStartingAtEntityId:(unsigned long long)arg2;
- (id)childrenFromParentKey:(id)arg1;
- (void)clearAllTables;
- (void)clearAllTombstonesForSpotlightReferences;
- (void)clearCaches;
- (long long)clearDatabase:(id)arg1;
- (bool)clearDatabases;
- (void)clearMasterEntityCache;
- (void)closeDatabases;
- (id)cnContactMatchesForRecordId:(id)arg1;
- (id)computeBlobs;
- (long long)configureMigratorThenMigrateToVersion:(unsigned long long)arg1;
- (bool)confirm:(bool)arg1 orRejectContactByRecordID:(id)arg2 error:(id*)arg3;
- (bool)confirmContactByRecordID:(id)arg1 error:(id*)arg2;
- (bool)confirmContactDetailByRecordID:(id)arg1 error:(id*)arg2;
- (bool)confirmEventByRecordId:(id)arg1 error:(id*)arg2;
- (void)confirmFieldValues:(id)arg1 forEntity:(id)arg2;
- (bool)confirmRealtimeContact:(id)arg1 error:(id*)arg2;
- (bool)confirmRealtimeEvent:(id)arg1 error:(id*)arg2;
- (bool)confirmStoredEvent:(id)arg1 error:(id*)arg2;
- (id)confirmedFieldValuesForEntity:(id)arg1;
- (id)confirmedFieldValuesForEvent:(id)arg1;
- (id)contactIdsMergedWithMasterEntityId:(id)arg1;
- (bool)contactIsDisplayable:(id)arg1;
- (bool)contactIsSignificant:(id)arg1;
- (bool)contactIsSignificantOrSignificanceIsDisabled:(id)arg1;
- (id)contactsWithIdentifiers:(id)arg1;
- (bool)corruptionMarkerPresent;
- (id)curatedRecordIds;
- (bool)databasecheck_BrokenEntityIDReferences;
- (bool)databasecheck_IntegrityCheck;
- (bool)databasecheck_contactMergeGroupConsistency;
- (id)dbHandleForTesting;
- (id)dbStats;
- (void)dealloc;
- (void)deleteAllCNContactMatches;
- (void)deleteAllCNContactMatchesForEntityID:(long long)arg1;
- (void)deleteAllCNContactMatchesForIdSet:(id)arg1;
- (void)deleteByRecordId:(id)arg1;
- (void)deleteCNContactMatchForContact:(id)arg1;
- (void)deleteEntitiesByDuplicateKey:(id)arg1 emitChangeNotifications:(bool)arg2;
- (void)deleteInteractionEntitiesOnBlacklist:(id)arg1;
- (void)deleteInteractionsWithBundleId:(id)arg1;
- (void)deleteInteractionsWithBundleId:(id)arg1 groupIdentifiers:(id)arg2;
- (void)deleteInteractionsWithBundleId:(id)arg1 identifiers:(id)arg2;
- (void)deleteMessageWithUniqueIdentifiers:(id)arg1;
- (void)deleteMessages:(id)arg1;
- (void)deleteMessagesBeforeDate:(id)arg1;
- (void)deleteMessagesByDuplicateKey:(id)arg1;
- (void)deleteMessagesForConversation:(id)arg1;
- (void)deleteSerializedContact:(id)arg1;
- (void)deleteSerializedContactForId:(long long)arg1;
- (void)deleteSerializedContactsForIdSet:(id)arg1;
- (void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1;
- (void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1 domainIdentifiers:(id)arg2;
- (void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2;
- (void)deleteSpotlightReferencesWithNoBundleIdentifier;
- (id)displayableEntities:(id)arg1;
- (id)domainIdentifierForSpotlightReferenceForBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2;
- (id)duplicateKeysMatchingAnyEventHash:(id)arg1;
- (id)duplicateKeysMatchingAnyTag:(id)arg1;
- (id)duplicateKeysMatchingEmailAddressPrefix:(id)arg1 limitTo:(unsigned long long)arg2;
- (unsigned long long)entityCount;
- (id)entityFromSqlResult:(struct sqlite3_stmt { }*)arg1;
- (bool)entityWantsFullDownload:(id)arg1;
- (bool)eventIsCancelled:(id)arg1;
- (bool)executeJournals;
- (long long)fixupVersionMismatch;
- (void)forceBlobSync;
- (id)getAllLinks;
- (long long)getMaxEntityId;
- (id)getNewBlobsIfChanged;
- (bool)hasSpotlightReferenceForBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2;
- (id)historyForTesting;
- (double)incStatsCounterWithKey:(id)arg1;
- (id)initForDbStatsOnlyWithError:(id*)arg1;
- (id)initForMigratorTestWithEntityDb:(id)arg1 snippetDb:(id)arg2;
- (id)initForRawDatabaseAccessWithEntityPath:(id)arg1 snippetsPath:(id)arg2 error:(id*)arg3;
- (id)initWithEntityDbPath:(id)arg1 snippetDbPath:(id)arg2 isEphemeral:(bool)arg3 executeJournals:(bool)arg4 noMigrate:(bool)arg5;
- (bool)isEphemeral;
- (bool)isRecentlyDeleted:(id)arg1;
- (id)journal;
- (id)languageToUpdateEntityFTSTo;
- (struct SGUnixTimestamp_ { double x1; })lastSeenTimestampForKey:(id)arg1;
- (void)link:(id)arg1 to:(id)arg2 type:(unsigned int)arg3 strength:(double)arg4;
- (id)loadAllContactDetailsForRecordId:(id)arg1;
- (id)loadAllContactDetailsWithWhereClause:(id)arg1 onPrep:(id)arg2 dedupeAgainst:(id)arg3;
- (id)loadAllPrecomputedContactMatches;
- (id)loadAllSerializedContacts;
- (id)loadCNContactMatchesForContact:(id)arg1 andGetMaxEntityId:(long long*)arg2;
- (id)loadContactByRecordId:(id)arg1;
- (id)loadContactByRecordId:(id)arg1 error:(id*)arg2;
- (id)loadContactDetailsForRecordId:(id)arg1 type:(unsigned long long)arg2;
- (id)loadContactDetailsWithWhereClause:(id)arg1 onPrep:(id)arg2 type:(unsigned long long)arg3 dedupeAgainst:(id)arg4;
- (id)loadCuratedEventsStartingAt:(double)arg1;
- (id)loadEntitiesByEntityKey:(id)arg1 entityType:(long long)arg2 resolveDuplicates:(id)arg3;
- (id)loadEntityByKey:(id)arg1;
- (id)loadEntityByRecordId:(id)arg1;
- (id)loadEventByKey:(id)arg1;
- (id)loadEventByRecordId:(id)arg1;
- (id)loadFullDownloadRequestBatch:(unsigned long long)arg1;
- (id)loadInterdicts;
- (id)loadMessageWithUniqueIdentifier:(id)arg1;
- (id)loadMessagesForConversation:(id)arg1 limit:(long long)arg2;
- (id)loadMessagesToRefresh;
- (id)loadOriginByRecordId:(id)arg1;
- (id)loadSerializedContact:(id)arg1;
- (id)loadStatsCounterWithKey:(id)arg1;
- (void)logConfirmPercentAfterContactConfirmation;
- (void)logConfirmPercentAfterContactDetailConfirmation;
- (void)logConfirmPercentAfterContactDetailRejection;
- (void)logConfirmPercentAfterContactRejection;
- (id)makeInterdictsForBlob:(id)arg1 withContactStore:(id)arg2;
- (void)markLostSpotlightReferencesWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2;
- (void)markMessagesFound:(id)arg1;
- (void)markMessagesLost:(id)arg1;
- (void)markMessagesUndisplayablyLost:(id)arg1;
- (unsigned long long)maxKnownDbVersion;
- (bool)mayHaveSentMessageToEmail:(id)arg1;
- (bool)mayHaveSentMessageToHandle:(id)arg1;
- (long long)migrate;
- (long long)migrateDatabases;
- (long long)migrateToVersion:(unsigned long long)arg1;
- (bool)migrationNeeded;
- (long long)migration_AddAuthorColumnIfMissing;
- (long long)migration_AddNewishTablesIfMissing;
- (long long)migration_ConvertContentAndDupKeyHashesToBlobs;
- (long long)migration_CreateFTSTableWithITS;
- (long long)migration_DeduplicateIdentityPhones;
- (long long)migration_DropMessagingTermsWithPhoneExtensions;
- (long long)migration_FixUpColumnsForDevicesWhoMissedTheImprovedLegacyMigration;
- (long long)migration_FixupMergeGroups;
- (long long)migration_MoveContentToSnippets;
- (long long)migration_RebuildIdentityTables;
- (long long)migration_RecreateFTSTableWithITS;
- (long long)migration_RemoveEntityReferencesWithoutBundleIdentifier;
- (long long)migration_deleteInteractions;
- (long long)migration_rebuildFTSWithDetailEntityIDDocIDs;
- (long long)migration_separateMessageEntities;
- (long long)migration_separateMessageSnippets;
- (id)mostRecentParentKeyForDuplicateKey:(id)arg1;
- (id)nextPendingGeocode;
- (id)parentKeysForDuplicateKey:(id)arg1;
- (bool)performDatabaseCheck;
- (id)prematchedContactIdentifiers;
- (void)prepMigrator;
- (bool)processEntity:(id)arg1 recordId:(id)arg2;
- (bool)processPseudoContactEntity:(id)arg1 recordId:(id)arg2;
- (void)pruneEntitiesOlderThan:(struct SGUnixTimestamp_ { double x1; })arg1 suspensionHandler:(id)arg2;
- (void)pruneEntitiesOlderThan:(struct SGUnixTimestamp_ { double x1; })arg1 suspensionHandler:(id)arg2 batchSize:(unsigned long long)arg3;
- (void)pruneEntitiesOlderThanOneYearWithSuspensionHandler:(id)arg1;
- (void)pruneLostMessagesWithSource:(id)arg1 count:(unsigned long long)arg2;
- (bool)realtimeContactIsSignificant:(id)arg1;
- (bool)realtimeContactIsSignificantOrSignificanceIsDisabled:(id)arg1;
- (bool)rebuildIdentityTables;
- (bool)recentsContainSomeOfEmails:(id)arg1 phoneNumbers:(id)arg2 instantMessageAddresses:(id)arg3;
- (id)recordIdForKey:(id)arg1;
- (bool)registerAndLinkIdentity:(id)arg1 recordId:(id)arg2 phones:(id)arg3 instantMessageAddresses:(id)arg4 email:(id)arg5 curated:(bool)arg6;
- (void)registerCachePrecomputationWithCTS;
- (void)registerSentMailMessage:(id)arg1;
- (void)registerSentTextMessage:(id)arg1;
- (void)reindexSearchableItemsWithMinimumEntityId:(unsigned long long)arg1 searchableIndex:(id)arg2 acknowledgementHandler:(id)arg3 reindexCount:(int)arg4;
- (bool)rejectContactByRecordID:(id)arg1 error:(id*)arg2;
- (bool)rejectContactDetailByRecordID:(id)arg1 error:(id*)arg2;
- (bool)rejectEventByRecordId:(id)arg1 error:(id*)arg2;
- (id)rejectFieldValuesForRecordId:(id)arg1;
- (bool)rejectRealtimeContact:(id)arg1 error:(id*)arg2;
- (bool)rejectRealtimeEvent:(id)arg1 error:(id*)arg2;
- (bool)rejectStoredEvent:(id)arg1 error:(id*)arg2;
- (void)reportDbStats;
- (void)resolveFullDownloadRequests:(id)arg1;
- (long long)rowIdWhenContactsEnabled;
- (long long)rowIdWhenEventsEnabled;
- (long long)runQueries:(id)arg1 forVersion:(unsigned long long)arg2 inTransactionOnDb:(id)arg3;
- (long long)runQuery:(id)arg1 onDb:(id)arg2;
- (void)searchableIndex:(id)arg1 reindexAllSearchableItemsWithAcknowledgementHandler:(id)arg2;
- (void)searchableIndex:(id)arg1 reindexSearchableItemsWithIdentifiers:(id)arg2 acknowledgementHandler:(id)arg3;
- (id)selectEntityQuery:(id)arg1;
- (id)selectMigrationQueue;
- (unsigned long long)serializedContactsLimit;
- (id)serializedEntityIds;
- (void)setCRLookupForTesting:(id)arg1;
- (void)setContactsEnabled:(bool)arg1;
- (void)setEventsEnabled:(bool)arg1;
- (void)setLostMessageOverflow:(unsigned long long)arg1;
- (void)setParentMessagesLimitForTesting:(unsigned long long)arg1;
- (void)setSerializedContactsLimit:(unsigned long long)arg1;
- (long long)skipFromZeroSchema;
- (id)snippetsDbHandleForTesting;
- (id)splitBlob:(id)arg1 withInterdicts:(id)arg2 edges:(id)arg3 curatedRecordIds:(id)arg4;
- (id)splitNeededFor:(id)arg1 withInterdicts:(id)arg2 curatedRecordIds:(id)arg3;
- (id)spotlightContactsAdapter;
- (void)startJournaling;
- (void)stopJournaling;
- (void)storeMessage:(id)arg1;
- (void)storeStatsCounterWithKey:(id)arg1 value:(double)arg2;
- (id)suggestContactByIdentityKey:(id)arg1 parentKey:(id)arg2;
- (id)suggestContactByKey:(id)arg1;
- (id)suggestContactByMasterEntityId:(long long)arg1;
- (id)suggestContactByRecordId:(id)arg1;
- (id)suggestContactMatchesByContactDetailTag:(id)arg1;
- (id)suggestContactMatchesByEmailAddress:(id)arg1;
- (id)suggestContactMatchesByPhoneNumber:(id)arg1;
- (id)suggestContactMatchesWithContact:(id)arg1 limitTo:(unsigned long long)arg2;
- (id)suggestContactMatchesWithFullTextSearch:(id)arg1 limitTo:(unsigned long long)arg2;
- (id)suggestContactMatchesWithMessagingPrefix:(id)arg1 limitTo:(unsigned long long)arg2;
- (id)suggestContactsByMasterEntityQuery:(id)arg1 limit:(unsigned long long)arg2 bindings:(id)arg3;
- (id)suggestContactsByTag:(id)arg1;
- (id)suggestContactsWithPrefix:(id)arg1 limitTo:(unsigned long long)arg2;
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_ { double x1; })arg1 endingAt:(struct SGUnixTimestamp_ { double x1; })arg2 limitTo:(unsigned long long)arg3;
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_ { double x1; })arg1 endingAt:(struct SGUnixTimestamp_ { double x1; })arg2 limitTo:(unsigned long long)arg3 additionalWhereClause:(id)arg4 options:(unsigned int)arg5 onPrep:(id)arg6;
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_ { double x1; })arg1 endingAt:(struct SGUnixTimestamp_ { double x1; })arg2 limitTo:(unsigned long long)arg3 options:(unsigned int)arg4;
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_ { double x1; })arg1 endingAt:(struct SGUnixTimestamp_ { double x1; })arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4;
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_ { double x1; })arg1 endingAt:(struct SGUnixTimestamp_ { double x1; })arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4 options:(unsigned int)arg5;
- (struct SGTuple3 { Class x1; }*)suggestStorageContactsAndTokensWithQuery:(id)arg1 limitTo:(unsigned long long)arg2;
- (id)suggestStorageContactsWithContact:(id)arg1 limitTo:(unsigned long long)arg2;
- (bool)syncNewBlobsIfChanged;
- (bool)tombstoneExistsForSpotlightReferenceWithBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2 domainIdentifier:(id)arg3;
- (id)unmergedCandidatesLimitedTo:(int)arg1;
- (long long)unmigrateDatabases;
- (void)updateCNContactMatches:(id)arg1;
- (void)updateLanguageForFTSTablesToLanguage:(id)arg1;
- (void)updateMessages:(id)arg1 state:(unsigned long long)arg2;
- (void)updateSerializedContacts:(id)arg1;
- (void)vacuum;
- (bool)waitForMigrations;
- (void)writeCNContactMatchAndUpdateSetForContact:(id)arg1 withMatches:(id)arg2 andMaxEntityID:(long long)arg3;
- (void)writeCNContactMatchForContact:(id)arg1 withMatches:(id)arg2 andMaxEntityID:(long long)arg3;
- (long long)writeEntity:(id)arg1;
- (long long)writeEntity:(id)arg1 withSpotlightReferenceForBundleIdentifier:(id)arg2 uniqueIdentifier:(id)arg3 domainIdentifier:(id)arg4;
- (void)writeEntityGeocodeResultToDb:(id)arg1;
- (void)writeIdentityBlobs:(id)arg1 forceRewrite:(bool)arg2;
- (void)writeSerializedContact:(id)arg1;
- (void)writeSerializedContactAndUpdateEntityIDSet:(id)arg1;
- (void)writeSerializedContactPlaceholder:(long long)arg1;
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1;
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1 domainIdentifier:(id)arg2;
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2;

@end
