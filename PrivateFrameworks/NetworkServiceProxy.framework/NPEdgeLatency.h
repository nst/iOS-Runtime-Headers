/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy
 */

@interface NPEdgeLatency : NSObject <NSSecureCoding> {
    long long  _TFOStatus;
    NSNumber * _addressFamily;
    NSDate * _creationDate;
    NSNumber * _currentTimeout;
    unsigned long long  _edgeIndex;
    long long  _interfaceType;
    bool  _isObserving;
    bool  _needReprobe;
    bool  _passedReprobeThreshold;
    id /* block */  _probeCompletionHandler;
    NWTCPConnection * _probeConnection;
    long long  _probeCount;
    NWEndpoint * _probeEndpoint;
    bool  _probeNoTFOCookie;
    bool  _probeTFO;
    NSObject<OS_dispatch_source> * _probeTimer;
    bool  _probeUseTFOHeuristics;
    long long  _reprobeCount;
    NPAverage * _roundTripAverage;
    NPAverage * _roundTripAverageObserved;
    unsigned long long  _roundTripTime;
}

@property long long TFOStatus;
@property (readonly) NSString *TFOStatusString;
@property (retain) NSNumber *addressFamily;
@property (readonly) NSString *addressFamilyString;
@property (readonly) NSString *connectionParametersString;
@property (retain) NSDate *creationDate;
@property (retain) NSNumber *currentTimeout;
@property unsigned long long edgeIndex;
@property long long interfaceType;
@property bool isObserving;
@property (readonly) bool isTFOEnabled;
@property bool needReprobe;
@property bool passedReprobeThreshold;
@property (copy) id /* block */ probeCompletionHandler;
@property (retain) NWTCPConnection *probeConnection;
@property long long probeCount;
@property (retain) NWEndpoint *probeEndpoint;
@property bool probeNoTFOCookie;
@property bool probeTFO;
@property (retain) NSObject<OS_dispatch_source> *probeTimer;
@property bool probeUseTFOHeuristics;
@property long long reprobeCount;
@property (retain) NPAverage *roundTripAverage;
@property (retain) NPAverage *roundTripAverageObserved;
@property unsigned long long roundTripTime;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (long long)TFOStatus;
- (id)TFOStatusString;
- (void)addRoundTripSample:(unsigned long long)arg1;
- (void)addRoundTripSampleObserved:(unsigned long long)arg1;
- (void)addRoundTripSamples:(id)arg1;
- (id)addressFamily;
- (id)addressFamilyString;
- (id)connectionParametersString;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)creationDate;
- (id)currentTimeout;
- (id)description;
- (unsigned long long)edgeIndex;
- (void)encodeWithCoder:(id)arg1;
- (bool)fillTestLatency;
- (unsigned long long)getRoundTripSample:(unsigned long long)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithProbeEndpoint:(id)arg1 probeTFO:(bool)arg2;
- (long long)interfaceType;
- (bool)isComplete:(bool)arg1;
- (bool)isMatched:(id)arg1;
- (bool)isMatched:(id)arg1 parameters:(struct networkParameters { bool x1; bool x2; bool x3; }*)arg2;
- (bool)isObserving;
- (bool)isTFOEnabled;
- (void)measureLatencyWithTimeout:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)needReprobe;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (bool)passedReprobeThreshold;
- (void)pingPong;
- (id /* block */)probeCompletionHandler;
- (id)probeConnection;
- (long long)probeCount;
- (id)probeEndpoint;
- (bool)probeNoTFOCookie;
- (bool)probeTFO;
- (id)probeTimer;
- (bool)probeUseTFOHeuristics;
- (long long)reprobeCount;
- (id)roundTripAverage;
- (id)roundTripAverageObserved;
- (unsigned long long)roundTripTime;
- (void)setAddressFamily:(id)arg1;
- (void)setCreationDate:(id)arg1;
- (void)setCurrentTimeout:(id)arg1;
- (void)setEdgeIndex:(unsigned long long)arg1;
- (void)setInterfaceType:(long long)arg1;
- (void)setIsObserving:(bool)arg1;
- (void)setNeedReprobe:(bool)arg1;
- (void)setPassedReprobeThreshold:(bool)arg1;
- (void)setProbeCompletionHandler:(id /* block */)arg1;
- (void)setProbeConnection:(id)arg1;
- (void)setProbeCount:(long long)arg1;
- (void)setProbeEndpoint:(id)arg1;
- (void)setProbeNoTFOCookie:(bool)arg1;
- (void)setProbeTFO:(bool)arg1;
- (void)setProbeTimer:(id)arg1;
- (void)setProbeUseTFOHeuristics:(bool)arg1;
- (void)setReprobeCount:(long long)arg1;
- (void)setRoundTripAverage:(id)arg1;
- (void)setRoundTripAverageObserved:(id)arg1;
- (void)setRoundTripTime:(unsigned long long)arg1;
- (void)setTFOStatus:(long long)arg1;

@end
