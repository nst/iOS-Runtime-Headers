/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI
 */

@interface VUIPlaybackManager : NSObject <AVPlayerViewControllerDelegatePrivate, VUINowPlayingFeatureMonitorDelegate, VideosExtrasContextDelegate> {
    VUIPlayer * _activePlayer;
    AVPlayerViewController * _avPlayerViewController;
    VUIPlayer * _backgroundAudioPlayer;
    long long  _dismissalOperation;
    AVPlayerViewController * _extrasAVPlayerViewController;
    VideosExtrasContext * _extrasContext;
    VUIPlayer * _extrasPlayer;
    VideosExtrasPresenter * _extrasPresenter;
    VUINowPlayingFeatureMonitor * _featureMonitor;
    VUIVideoAdvisoryLogoImageDownloader * _logoImageDownloader;
    AVPlayerViewController * _mainAVPlayerViewController;
    VUIPlayer * _mainPlayer;
    UIViewController * _presentingViewController;
    UIImage * _ratingImage;
    VUIVideoAdvisoryView * _ratingView;
    bool  _requiresLinearPlayback;
    MPAVRoutingController * _routingController;
    bool  _shouldAnimateTVRatingView;
    bool  _shouldDisplayTVRatingWhenVideoBoundsIsAvailable;
    UIButton * _skipButton;
    TVPStateMachine * _stateMachine;
}

@property (nonatomic) VUIPlayer *activePlayer;
@property (nonatomic, retain) AVPlayerViewController *avPlayerViewController;
@property (nonatomic, retain) VUIPlayer *backgroundAudioPlayer;
@property (nonatomic, readonly) NSObject<TVPMediaItem> *currentMediaItem;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) long long dismissalOperation;
@property (nonatomic, retain) AVPlayerViewController *extrasAVPlayerViewController;
@property (nonatomic, retain) VideosExtrasContext *extrasContext;
@property (nonatomic, retain) VUIPlayer *extrasPlayer;
@property (nonatomic, retain) VideosExtrasPresenter *extrasPresenter;
@property (nonatomic, retain) VUINowPlayingFeatureMonitor *featureMonitor;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isPIPing;
@property (nonatomic, readonly) bool isPlaybackUIBeingShown;
@property (nonatomic, retain) VUIVideoAdvisoryLogoImageDownloader *logoImageDownloader;
@property (nonatomic, retain) AVPlayerViewController *mainAVPlayerViewController;
@property (nonatomic, retain) VUIPlayer *mainPlayer;
@property (nonatomic) UIViewController *presentingViewController;
@property (nonatomic, retain) UIImage *ratingImage;
@property (nonatomic, retain) VUIVideoAdvisoryView *ratingView;
@property (nonatomic) bool requiresLinearPlayback;
@property (nonatomic, retain) MPAVRoutingController *routingController;
@property (nonatomic) bool shouldAnimateTVRatingView;
@property (nonatomic) bool shouldDisplayTVRatingWhenVideoBoundsIsAvailable;
@property (nonatomic, retain) UIButton *skipButton;
@property (nonatomic, retain) TVPStateMachine *stateMachine;
@property (readonly) Class superclass;

+ (void)_performRatingAndAgeVerificationWithMediaItem:(id)arg1 presentingController:(id)arg2 completion:(id /* block */)arg3;
+ (id)_playlistForIKMediaElements:(id)arg1 isExtrasContent:(bool)arg2;
+ (void)_presentCantPlaybackOverCellularAlertControllerWithMediaItem:(id)arg1 presentingViewController:(id)arg2 completionHandler:(id /* block */)arg3;
+ (void)_presentCellularPlaybackIsDisabledAlertControllerWithPresentingViewController:(id)arg1 completionHandler:(id /* block */)arg2;
+ (void)_presentStartingPlaybackWindowWarningWithRentalMediaItem:(id)arg1 presentingViewController:(id)arg2 completionHandler:(id /* block */)arg3;
+ (id)_rentalPlaybackStartDateWithMediaItem:(id)arg1;
+ (bool)_shouldWarnAboutPlaybackQualityForRentalMediaItem:(id)arg1;
+ (bool)_shouldWarnStartingRentalPlaybackWindowWithMediaItem:(id)arg1;
+ (void)_showCellularPlaybackQualityOptionsForRentalMediaItem:(id)arg1 presentingViewController:(id)arg2 completionHandler:(id /* block */)arg3;
+ (id)_storeAuxMediaItemForIKMediaElement:(id)arg1 isExtrasContent:(bool)arg2;
+ (id)_storeMediaItemsForAdamID:(long long)arg1 IKMediaElement:(id)arg2;
+ (void)_verifyMediaItemIsPlayableOnCellular:(id)arg1 presentingViewController:(id)arg2 completionHandler:(id /* block */)arg3;
+ (id)mediaItemForMPMediaItem:(id)arg1;
+ (id)playlistForIKMediaElements:(id)arg1;
+ (id)playlistForIKPlaylistElement:(id)arg1;
+ (id)playlistForMPMediaItems:(id)arg1;
+ (id)playlistForVUIMediaItems:(id)arg1;
+ (void)preflightPlaybackWithMediaItem:(id)arg1 presentingViewController:(id)arg2 completionHandler:(id /* block */)arg3;
+ (id)sharedInstance;

- (void).cxx_destruct;
- (void)_addRollsInfoFeaturesFromMediaItem:(id)arg1;
- (void)_addSkipInfoFeaturesFromMediaItem:(id)arg1;
- (void)_addTVRatingFeatureFromMediaItem:(id)arg1;
- (void)_addTappableViewToRemoveSkipButton;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_applicationWillResignActive:(id)arg1;
- (void)_configureStillWatchingFeatureMonitoringIfLivePlayback;
- (void)_currentMediaItemDidChange:(id)arg1;
- (void)_downloadRatingImageIfAvailable:(id)arg1;
- (void)_handleTapGesture:(id)arg1;
- (bool)_isiPhone;
- (void)_notifyAVPlayerViewControllerDisplaySize;
- (void)_playbackErrorDidOccur:(id)arg1;
- (void)_playbackStateDidChange:(id)arg1;
- (void)_registerApplicationNotifications;
- (void)_registerStateMachineHandlers;
- (void)_removeTappableViewForSkipButtonIfNeeded;
- (void)_setExtrasButtonVisible:(bool)arg1;
- (void)_showOrUpdateTVRatingIfNeeded;
- (void)_showSkipButtonWithTitle:(id)arg1 show:(bool)arg2 animated:(bool)arg3;
- (void)_showStillWatchingAlertFeature:(id)arg1;
- (void)_showTVRating:(bool)arg1 withImage:(id)arg2 animated:(bool)arg3;
- (void)_skipButtonTapped:(id)arg1;
- (id)_stillWatchingAlertDurationOverride;
- (void)_updateAVPlayerViewControllerWithActiveAVPlayer;
- (void)_updateRequiresLinearPlayback;
- (void)_updateRollsInfoFromMainPlayersCurrentMediaItem;
- (void)_updateTimeBoundFeature:(id)arg1 animated:(bool)arg2;
- (void)_updateTimeTriggeredFeature:(id)arg1 animated:(bool)arg2;
- (id)activePlayer;
- (id)avPlayerViewController;
- (id)backgroundAudioPlayer;
- (id)currentMediaItem;
- (void)dismissPlaybackAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (long long)dismissalOperation;
- (id)extrasAVPlayerViewController;
- (void)extrasBackButtonPressed;
- (id)extrasContext;
- (void)extrasContext:(id)arg1 extrasVisibilityNeedsUpdate:(bool)arg2;
- (void)extrasContext:(id)arg1 hadFatalError:(id)arg2;
- (void)extrasContextDidLoadMainMenuItems:(id)arg1;
- (void)extrasDoneButtonPressed;
- (void)extrasMenuItemSelected:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)extrasPlayer;
- (id)extrasPresenter;
- (void)extrasRequestReloadWithContext:(id)arg1;
- (void)extrasRequestsMediaPlayback:(id)arg1 isBackground:(bool)arg2;
- (void)extrasRequestsPlaybackStop;
- (id)featureMonitor;
- (void)featureMonitor:(id)arg1 featureDidChangeState:(id)arg2 animated:(bool)arg3;
- (id)init;
- (bool)isPIPing;
- (bool)isPlaybackUIBeingShown;
- (id)logoImageDownloader;
- (id)mainAVPlayerViewController;
- (id)mainPlayer;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)playerViewController:(id)arg1 contentViewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg2 withTransitionCoordinator:(id)arg3;
- (void)playerViewController:(id)arg1 failedToStartPictureInPictureWithError:(id)arg2;
- (void)playerViewController:(id)arg1 restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:(id /* block */)arg2;
- (void)playerViewController:(id)arg1 willEndFullScreenPresentationWithAnimationCoordinator:(id)arg2;
- (void)playerViewControllerDidStartPictureInPicture:(id)arg1;
- (void)playerViewControllerDidStopPictureInPicture:(id)arg1;
- (void)playerViewControllerWillStartPictureInPicture:(id)arg1;
- (void)playerViewControllerWillStopPictureInPicture:(id)arg1;
- (void)presentExtrasWithURL:(id)arg1 storeID:(id)arg2 actionParams:(id)arg3 fromViewController:(id)arg4 completion:(id /* block */)arg5;
- (void)presentPlaylist:(id)arg1 fromViewController:(id)arg2 dismissalOperation:(long long)arg3 animated:(bool)arg4 completion:(id /* block */)arg5;
- (id)presentingViewController;
- (id)ratingImage;
- (id)ratingView;
- (bool)requiresLinearPlayback;
- (id)routingController;
- (void)setActivePlayer:(id)arg1;
- (void)setAvPlayerViewController:(id)arg1;
- (void)setBackgroundAudioPlayer:(id)arg1;
- (void)setDismissalOperation:(long long)arg1;
- (void)setExtrasAVPlayerViewController:(id)arg1;
- (void)setExtrasContext:(id)arg1;
- (void)setExtrasPlayer:(id)arg1;
- (void)setExtrasPresenter:(id)arg1;
- (void)setFeatureMonitor:(id)arg1;
- (void)setLogoImageDownloader:(id)arg1;
- (void)setMainAVPlayerViewController:(id)arg1;
- (void)setMainPlayer:(id)arg1;
- (void)setPresentingViewController:(id)arg1;
- (void)setRatingImage:(id)arg1;
- (void)setRatingView:(id)arg1;
- (void)setRequiresLinearPlayback:(bool)arg1;
- (void)setRoutingController:(id)arg1;
- (void)setShouldAnimateTVRatingView:(bool)arg1;
- (void)setShouldDisplayTVRatingWhenVideoBoundsIsAvailable:(bool)arg1;
- (void)setSkipButton:(id)arg1;
- (void)setStateMachine:(id)arg1;
- (bool)shouldAnimateTVRatingView;
- (bool)shouldDisplayTVRatingWhenVideoBoundsIsAvailable;
- (id)skipButton;
- (id)stateMachine;

@end
