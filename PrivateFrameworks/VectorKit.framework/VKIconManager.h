/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKIconManager : NSObject <GEOResourceManifestTileGroupObserver> {
    NSMapTable * _atlases;
    NSLock * _atlasesLock;
    _VKLocalIconAtlas * _localAtlas;
    GEOResourceManifestConfiguration * _manifestConfiguration;
    struct map<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>, std::__1::shared_ptr<gss::StylesheetManager<gss::PropertyID> >, NSStringMapComparison, std::__1::allocator<std::__1::pair<const geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>, std::__1::shared_ptr<gss::StylesheetManager<gss::PropertyID> > > > > { 
        struct __tree<std::__1::__value_type<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>, std::__1::shared_ptr<gss::StylesheetManager<gss::PropertyID> > >, std::__1::__map_value_compare<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>, std::__1::__value_type<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>, std::__1::shared_ptr<gss::StylesheetManager<gss::PropertyID> > >, NSStringMapComparison, true>, std::__1::allocator<std::__1::__value_type<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>, std::__1::shared_ptr<gss::StylesheetManager<gss::PropertyID> > > > > { 
            struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>, std::__1::shared_ptr<gss::StylesheetManager<gss::PropertyID> > >, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __first_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::__map_value_compare<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>, std::__1::__value_type<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>, std::__1::shared_ptr<gss::StylesheetManager<gss::PropertyID> > >, NSStringMapComparison, true> > { 
                unsigned long long __first_; 
            } __pair3_; 
        } __tree_; 
    }  _nameToStyleManager;
    struct read_write_lock { 
        struct _opaque_pthread_rwlock_t { 
            long long __sig; 
            BOOL __opaque[192]; 
        } _lock; 
    }  _nameToStyleManagerLock;
    NSArray * _nonRegionalResourceNames;
    struct mutex { 
        struct _opaque_pthread_mutex_t { 
            long long __sig; 
            BOOL __opaque[56]; 
        } __m_; 
    }  _nonRegionalResourceNamesLock;
    VKResourceManager * _resourceManager;
    bool  _shouldCacheAtlases;
    struct shared_ptr<md::StylesheetVendor> { 
        struct StylesheetVendor {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _stylesheetVendor;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool shouldCacheAtlases;
@property (readonly) Class superclass;

+ (id)sharedManager;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)_allResourceNames;
- (id)_artworkForStyleAttributes:(id)arg1 iconStyleDescriptor:(struct VKIconStyleDescriptor { unsigned int x1; float x2; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_3_1_1; } x3; struct Style { struct optional<gss::IconStyle> { bool x_1_2_1; union ValueUnion { unsigned char x_2_3_1[1]; unsigned char x_2_3_2; } x_1_2_2; } x_4_1_1; struct vector<md::IconImage::IconLayer, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_2_2_1; unsigned char *x_2_2_2; struct __compressed_pair<md::IconImage::IconLayer *, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_3_3_1; } x_2_2_3; } x_4_1_2; float x_4_1_3; float x_4_1_4; float x_4_1_5; float x_4_1_6; float x_4_1_7; float x_4_1_8; struct Matrix<float, 2, 1> { float x_9_2_1[2]; } x_4_1_9; struct Matrix<float, 2, 1> { float x_10_2_1[2]; } x_4_1_10; struct FixedPointVector<unsigned char, 4> { unsigned char x_11_2_1[4]; } x_4_1_11; struct FixedPointVector<unsigned char, 4> { unsigned char x_12_2_1[4]; } x_4_1_12; struct FixedPointVector<unsigned char, 4> { unsigned char x_13_2_1[4]; } x_4_1_13; struct FixedPointVector<unsigned char, 4> { unsigned char x_14_2_1[4]; } x_4_1_14; struct FixedPointVector<unsigned char, 4> { unsigned char x_15_2_1[4]; } x_4_1_15; } x4; })arg2 contentScale:(double)arg3 size:(long long)arg4 customIconID:(unsigned long long)arg5 transparent:(bool)arg6;
- (id)_atlasForName:(id)arg1;
- (void)_didReceiveMemoryWarning:(id)arg1;
- (id)_forEachIconPackWithContentScale:(double)arg1 iconSize:(long long)arg2 resourceNames:(id)arg3 allowSizeFallback:(bool)arg4 visitUntilMatch:(id /* block */)arg5;
- (id)_forEachIconPackWithContentScale:(double)arg1 iconSize:(long long)arg2 resourceNames:(id)arg3 visitUntilMatch:(id /* block */)arg4;
- (bool)_getIconStyleDescriptorForStyleAttributes:(id)arg1 withStylesheetName:(id)arg2 contentScale:(double)arg3 iconStyleDescriptor:(struct VKIconStyleDescriptor { unsigned int x1; float x2; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_3_1_1; } x3; struct Style { struct optional<gss::IconStyle> { bool x_1_2_1; union ValueUnion { unsigned char x_2_3_1[1]; unsigned char x_2_3_2; } x_1_2_2; } x_4_1_1; struct vector<md::IconImage::IconLayer, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_2_2_1; unsigned char *x_2_2_2; struct __compressed_pair<md::IconImage::IconLayer *, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_3_3_1; } x_2_2_3; } x_4_1_2; float x_4_1_3; float x_4_1_4; float x_4_1_5; float x_4_1_6; float x_4_1_7; float x_4_1_8; struct Matrix<float, 2, 1> { float x_9_2_1[2]; } x_4_1_9; struct Matrix<float, 2, 1> { float x_10_2_1[2]; } x_4_1_10; struct FixedPointVector<unsigned char, 4> { unsigned char x_11_2_1[4]; } x_4_1_11; struct FixedPointVector<unsigned char, 4> { unsigned char x_12_2_1[4]; } x_4_1_12; struct FixedPointVector<unsigned char, 4> { unsigned char x_13_2_1[4]; } x_4_1_13; struct FixedPointVector<unsigned char, 4> { unsigned char x_14_2_1[4]; } x_4_1_14; struct FixedPointVector<unsigned char, 4> { unsigned char x_15_2_1[4]; } x_4_1_15; } x4; }*)arg4;
- (bool)_getIconStyleDescriptorForStyleAttributes:(id)arg1 withStylesheetName:(id)arg2 contentScale:(double)arg3 iconStyleDescriptor:(struct VKIconStyleDescriptor { unsigned int x1; float x2; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_3_1_1; } x3; struct Style { struct optional<gss::IconStyle> { bool x_1_2_1; union ValueUnion { unsigned char x_2_3_1[1]; unsigned char x_2_3_2; } x_1_2_2; } x_4_1_1; struct vector<md::IconImage::IconLayer, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_2_2_1; unsigned char *x_2_2_2; struct __compressed_pair<md::IconImage::IconLayer *, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_3_3_1; } x_2_2_3; } x_4_1_2; float x_4_1_3; float x_4_1_4; float x_4_1_5; float x_4_1_6; float x_4_1_7; float x_4_1_8; struct Matrix<float, 2, 1> { float x_9_2_1[2]; } x_4_1_9; struct Matrix<float, 2, 1> { float x_10_2_1[2]; } x_4_1_10; struct FixedPointVector<unsigned char, 4> { unsigned char x_11_2_1[4]; } x_4_1_11; struct FixedPointVector<unsigned char, 4> { unsigned char x_12_2_1[4]; } x_4_1_12; struct FixedPointVector<unsigned char, 4> { unsigned char x_13_2_1[4]; } x_4_1_13; struct FixedPointVector<unsigned char, 4> { unsigned char x_14_2_1[4]; } x_4_1_14; struct FixedPointVector<unsigned char, 4> { unsigned char x_15_2_1[4]; } x_4_1_15; } x4; }*)arg4 transitMode:(bool)arg5;
- (bool)_getIconStyleDescriptorForStyleAttributes:(id)arg1 withStylesheetName:(id)arg2 contentScale:(double)arg3 iconStyleDescriptor:(struct VKIconStyleDescriptor { unsigned int x1; float x2; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_3_1_1; } x3; struct Style { struct optional<gss::IconStyle> { bool x_1_2_1; union ValueUnion { unsigned char x_2_3_1[1]; unsigned char x_2_3_2; } x_1_2_2; } x_4_1_1; struct vector<md::IconImage::IconLayer, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_2_2_1; unsigned char *x_2_2_2; struct __compressed_pair<md::IconImage::IconLayer *, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_3_3_1; } x_2_2_3; } x_4_1_2; float x_4_1_3; float x_4_1_4; float x_4_1_5; float x_4_1_6; float x_4_1_7; float x_4_1_8; struct Matrix<float, 2, 1> { float x_9_2_1[2]; } x_4_1_9; struct Matrix<float, 2, 1> { float x_10_2_1[2]; } x_4_1_10; struct FixedPointVector<unsigned char, 4> { unsigned char x_11_2_1[4]; } x_4_1_11; struct FixedPointVector<unsigned char, 4> { unsigned char x_12_2_1[4]; } x_4_1_12; struct FixedPointVector<unsigned char, 4> { unsigned char x_13_2_1[4]; } x_4_1_13; struct FixedPointVector<unsigned char, 4> { unsigned char x_14_2_1[4]; } x_4_1_14; struct FixedPointVector<unsigned char, 4> { unsigned char x_15_2_1[4]; } x_4_1_15; } x4; }*)arg4 transitMode:(bool)arg5 interactive:(bool)arg6 navMode:(bool)arg7;
- (id)_nonRegionalPacks;
- (id)artworkForFeatureID:(unsigned long long)arg1 withResourceNames:(id)arg2 style:(struct Style { struct optional<gss::IconStyle> { bool x_1_1_1; union ValueUnion { unsigned char x_2_2_1[1]; unsigned char x_2_2_2; } x_1_1_2; } x1; struct vector<md::IconImage::IconLayer, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_2_1_1; unsigned char *x_2_1_2; struct __compressed_pair<md::IconImage::IconLayer *, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_3_2_1; } x_2_1_3; } x2; float x3; float x4; float x5; float x6; float x7; float x8; struct Matrix<float, 2, 1> { float x_9_1_1[2]; } x9; struct Matrix<float, 2, 1> { float x_10_1_1[2]; } x10; struct FixedPointVector<unsigned char, 4> { unsigned char x_11_1_1[4]; } x11; struct FixedPointVector<unsigned char, 4> { unsigned char x_12_1_1[4]; } x12; struct FixedPointVector<unsigned char, 4> { unsigned char x_13_1_1[4]; } x13; struct FixedPointVector<unsigned char, 4> { unsigned char x_14_1_1[4]; } x14; struct FixedPointVector<unsigned char, 4> { unsigned char x_15_1_1[4]; } x15; struct FixedPointVector<unsigned char, 4> { unsigned char x_16_1_1[4]; } x16; }*)arg3 extraStyle:(struct ExtraStyle { float x1; float x2; float x3; struct Matrix<unsigned int, 2, 1> { unsigned int x_4_1_1[2]; } x4; struct Matrix<unsigned int, 2, 1> { unsigned int x_5_1_1[2]; } x5; struct Matrix<unsigned int, 2, 1> { unsigned int x_6_1_1[2]; } x6; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_7_1_1; } x7; }*)arg4 contentScale:(double)arg5 size:(long long)arg6;
- (id)artworkForName:(id)arg1 withResourceNames:(id)arg2 style:(struct Style { struct optional<gss::IconStyle> { bool x_1_1_1; union ValueUnion { unsigned char x_2_2_1[1]; unsigned char x_2_2_2; } x_1_1_2; } x1; struct vector<md::IconImage::IconLayer, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_2_1_1; unsigned char *x_2_1_2; struct __compressed_pair<md::IconImage::IconLayer *, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_3_2_1; } x_2_1_3; } x2; float x3; float x4; float x5; float x6; float x7; float x8; struct Matrix<float, 2, 1> { float x_9_1_1[2]; } x9; struct Matrix<float, 2, 1> { float x_10_1_1[2]; } x10; struct FixedPointVector<unsigned char, 4> { unsigned char x_11_1_1[4]; } x11; struct FixedPointVector<unsigned char, 4> { unsigned char x_12_1_1[4]; } x12; struct FixedPointVector<unsigned char, 4> { unsigned char x_13_1_1[4]; } x13; struct FixedPointVector<unsigned char, 4> { unsigned char x_14_1_1[4]; } x14; struct FixedPointVector<unsigned char, 4> { unsigned char x_15_1_1[4]; } x15; struct FixedPointVector<unsigned char, 4> { unsigned char x_16_1_1[4]; } x16; }*)arg3 extraStyle:(struct ExtraStyle { float x1; float x2; float x3; struct Matrix<unsigned int, 2, 1> { unsigned int x_4_1_1[2]; } x4; struct Matrix<unsigned int, 2, 1> { unsigned int x_5_1_1[2]; } x5; struct Matrix<unsigned int, 2, 1> { unsigned int x_6_1_1[2]; } x6; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_7_1_1; } x7; }*)arg4 contentScale:(double)arg5 size:(long long)arg6;
- (id)artworkForName:(id)arg1 withResourceNames:(id)arg2 style:(struct Style { struct optional<gss::IconStyle> { bool x_1_1_1; union ValueUnion { unsigned char x_2_2_1[1]; unsigned char x_2_2_2; } x_1_1_2; } x1; struct vector<md::IconImage::IconLayer, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_2_1_1; unsigned char *x_2_1_2; struct __compressed_pair<md::IconImage::IconLayer *, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_3_2_1; } x_2_1_3; } x2; float x3; float x4; float x5; float x6; float x7; float x8; struct Matrix<float, 2, 1> { float x_9_1_1[2]; } x9; struct Matrix<float, 2, 1> { float x_10_1_1[2]; } x10; struct FixedPointVector<unsigned char, 4> { unsigned char x_11_1_1[4]; } x11; struct FixedPointVector<unsigned char, 4> { unsigned char x_12_1_1[4]; } x12; struct FixedPointVector<unsigned char, 4> { unsigned char x_13_1_1[4]; } x13; struct FixedPointVector<unsigned char, 4> { unsigned char x_14_1_1[4]; } x14; struct FixedPointVector<unsigned char, 4> { unsigned char x_15_1_1[4]; } x15; struct FixedPointVector<unsigned char, 4> { unsigned char x_16_1_1[4]; } x16; }*)arg3 extraStyle:(struct ExtraStyle { float x1; float x2; float x3; struct Matrix<unsigned int, 2, 1> { unsigned int x_4_1_1[2]; } x4; struct Matrix<unsigned int, 2, 1> { unsigned int x_5_1_1[2]; } x5; struct Matrix<unsigned int, 2, 1> { unsigned int x_6_1_1[2]; } x6; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_7_1_1; } x7; }*)arg4 contentScale:(double)arg5 size:(long long)arg6 hasText:(bool)arg7;
- (id)artworkForStyleAttributeKey:(unsigned int)arg1 attributeValue:(unsigned int)arg2 withResourceNames:(id)arg3 style:(struct Style { struct optional<gss::IconStyle> { bool x_1_1_1; union ValueUnion { unsigned char x_2_2_1[1]; unsigned char x_2_2_2; } x_1_1_2; } x1; struct vector<md::IconImage::IconLayer, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_2_1_1; unsigned char *x_2_1_2; struct __compressed_pair<md::IconImage::IconLayer *, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_3_2_1; } x_2_1_3; } x2; float x3; float x4; float x5; float x6; float x7; float x8; struct Matrix<float, 2, 1> { float x_9_1_1[2]; } x9; struct Matrix<float, 2, 1> { float x_10_1_1[2]; } x10; struct FixedPointVector<unsigned char, 4> { unsigned char x_11_1_1[4]; } x11; struct FixedPointVector<unsigned char, 4> { unsigned char x_12_1_1[4]; } x12; struct FixedPointVector<unsigned char, 4> { unsigned char x_13_1_1[4]; } x13; struct FixedPointVector<unsigned char, 4> { unsigned char x_14_1_1[4]; } x14; struct FixedPointVector<unsigned char, 4> { unsigned char x_15_1_1[4]; } x15; struct FixedPointVector<unsigned char, 4> { unsigned char x_16_1_1[4]; } x16; }*)arg4 extraStyle:(struct ExtraStyle { float x1; float x2; float x3; struct Matrix<unsigned int, 2, 1> { unsigned int x_4_1_1[2]; } x4; struct Matrix<unsigned int, 2, 1> { unsigned int x_5_1_1[2]; } x5; struct Matrix<unsigned int, 2, 1> { unsigned int x_6_1_1[2]; } x6; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_7_1_1; } x7; }*)arg5 contentScale:(double)arg6 size:(long long)arg7;
- (id)artworkForStyleAttributeKey:(unsigned int)arg1 attributeValue:(unsigned int)arg2 withResourceNames:(id)arg3 style:(struct Style { struct optional<gss::IconStyle> { bool x_1_1_1; union ValueUnion { unsigned char x_2_2_1[1]; unsigned char x_2_2_2; } x_1_1_2; } x1; struct vector<md::IconImage::IconLayer, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_2_1_1; unsigned char *x_2_1_2; struct __compressed_pair<md::IconImage::IconLayer *, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_3_2_1; } x_2_1_3; } x2; float x3; float x4; float x5; float x6; float x7; float x8; struct Matrix<float, 2, 1> { float x_9_1_1[2]; } x9; struct Matrix<float, 2, 1> { float x_10_1_1[2]; } x10; struct FixedPointVector<unsigned char, 4> { unsigned char x_11_1_1[4]; } x11; struct FixedPointVector<unsigned char, 4> { unsigned char x_12_1_1[4]; } x12; struct FixedPointVector<unsigned char, 4> { unsigned char x_13_1_1[4]; } x13; struct FixedPointVector<unsigned char, 4> { unsigned char x_14_1_1[4]; } x14; struct FixedPointVector<unsigned char, 4> { unsigned char x_15_1_1[4]; } x15; struct FixedPointVector<unsigned char, 4> { unsigned char x_16_1_1[4]; } x16; }*)arg4 extraStyle:(struct ExtraStyle { float x1; float x2; float x3; struct Matrix<unsigned int, 2, 1> { unsigned int x_4_1_1[2]; } x4; struct Matrix<unsigned int, 2, 1> { unsigned int x_5_1_1[2]; } x5; struct Matrix<unsigned int, 2, 1> { unsigned int x_6_1_1[2]; } x6; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_7_1_1; } x7; }*)arg5 contentScale:(double)arg6 size:(long long)arg7 hasText:(bool)arg8;
- (id)artworkForStyleAttributeKey:(unsigned int)arg1 longAttributeValue:(unsigned long long)arg2 withResourceNames:(id)arg3 style:(struct Style { struct optional<gss::IconStyle> { bool x_1_1_1; union ValueUnion { unsigned char x_2_2_1[1]; unsigned char x_2_2_2; } x_1_1_2; } x1; struct vector<md::IconImage::IconLayer, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_2_1_1; unsigned char *x_2_1_2; struct __compressed_pair<md::IconImage::IconLayer *, std::__1::allocator<md::IconImage::IconLayer> > { unsigned char *x_3_2_1; } x_2_1_3; } x2; float x3; float x4; float x5; float x6; float x7; float x8; struct Matrix<float, 2, 1> { float x_9_1_1[2]; } x9; struct Matrix<float, 2, 1> { float x_10_1_1[2]; } x10; struct FixedPointVector<unsigned char, 4> { unsigned char x_11_1_1[4]; } x11; struct FixedPointVector<unsigned char, 4> { unsigned char x_12_1_1[4]; } x12; struct FixedPointVector<unsigned char, 4> { unsigned char x_13_1_1[4]; } x13; struct FixedPointVector<unsigned char, 4> { unsigned char x_14_1_1[4]; } x14; struct FixedPointVector<unsigned char, 4> { unsigned char x_15_1_1[4]; } x15; struct FixedPointVector<unsigned char, 4> { unsigned char x_16_1_1[4]; } x16; }*)arg4 extraStyle:(struct ExtraStyle { float x1; float x2; float x3; struct Matrix<unsigned int, 2, 1> { unsigned int x_4_1_1[2]; } x4; struct Matrix<unsigned int, 2, 1> { unsigned int x_5_1_1[2]; } x5; struct Matrix<unsigned int, 2, 1> { unsigned int x_6_1_1[2]; } x6; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_7_1_1; } x7; }*)arg5 contentScale:(double)arg6 size:(long long)arg7;
- (void)dealloc;
- (id)iconForIconAttributeKey:(unsigned int)arg1 attributeValue:(unsigned int)arg2 size:(long long)arg3 contentScale:(double)arg4;
- (id)iconForStyleAttributes:(id)arg1 styleManager:(struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x1; struct __shared_weak_count {} *x2; })arg2 contentScale:(double)arg3 size:(long long)arg4 customIconID:(unsigned long long)arg5 transparent:(bool)arg6;
- (id)iconForStyleAttributes:(id)arg1 styleManager:(struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x1; struct __shared_weak_count {} *x2; })arg2 contentScale:(double)arg3 size:(long long)arg4 customIconID:(unsigned long long)arg5 transparent:(bool)arg6 overrides:(struct QueryOverrides { bool x1; bool x2; bool x3; bool x4; bool x5; bool x6; bool x7; unsigned char x8; struct DisplayStyle { unsigned char x_9_1_1; unsigned char x_9_1_2; unsigned char x_9_1_3; unsigned char x_9_1_4; unsigned char x_9_1_5; } x9; unsigned char x10; bool x11; unsigned char x12; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_13_1_1; } x13; bool x14; })arg7;
- (id)iconForStyleAttributes:(id)arg1 withStylesheetName:(id)arg2 contentScale:(double)arg3 size:(long long)arg4 customIconID:(unsigned long long)arg5 transparent:(bool)arg6 transitMode:(bool)arg7 interactive:(bool)arg8;
- (id)iconForTransitSystemType:(unsigned int)arg1 size:(long long)arg2 contentScale:(double)arg3;
- (id)iconForTransitType:(unsigned int)arg1 size:(long long)arg2 contentScale:(double)arg3;
- (unsigned char)iconStyleForStyleAttributes:(id)arg1 withStylesheetName:(id)arg2 contentScale:(double)arg3;
- (id)imageForName:(id)arg1 contentScale:(double)arg2;
- (id)imageForStyleAttributes:(id)arg1 withStylesheetName:(id)arg2 contentScale:(double)arg3 size:(long long)arg4 customIconID:(unsigned long long)arg5;
- (id)imageForStyleAttributes:(id)arg1 withStylesheetName:(id)arg2 contentScale:(double)arg3 size:(long long)arg4 customIconID:(unsigned long long)arg5 transparent:(bool)arg6;
- (id)imageForStyleAttributes:(id)arg1 withStylesheetName:(id)arg2 contentScale:(double)arg3 size:(long long)arg4 customIconID:(unsigned long long)arg5 transparent:(bool)arg6 transitMode:(bool)arg7;
- (id)imageForStyleAttributes:(id)arg1 withStylesheetName:(id)arg2 contentScale:(double)arg3 size:(long long)arg4 customIconID:(unsigned long long)arg5 transparent:(bool)arg6 transitMode:(bool)arg7 interactive:(bool)arg8;
- (id)imageForStyleAttributes:(id)arg1 withStylesheetName:(id)arg2 contentScale:(double)arg3 size:(long long)arg4 customIconID:(unsigned long long)arg5 transparent:(bool)arg6 transitMode:(bool)arg7 interactive:(bool)arg8 navMode:(bool)arg9;
- (id)imageForStyleAttributes:(id)arg1 withStylesheetName:(id)arg2 iconText:(const char *)arg3 contentScale:(double)arg4 size:(long long)arg5 customIconID:(unsigned long long)arg6 transparent:(bool)arg7 transitMode:(bool)arg8 interactive:(bool)arg9 navMode:(bool)arg10;
- (id)initWithConfiguration:(id)arg1;
- (id)initWithConfiguration:(id)arg1 resourceManager:(id)arg2 stylesheetVendor:(struct shared_ptr<md::StylesheetVendor> { struct StylesheetVendor {} *x1; struct __shared_weak_count {} *x2; })arg3 shouldCacheAtlases:(bool)arg4;
- (id)initWithConfiguration:(id)arg1 shouldCacheAtlases:(bool)arg2;
- (struct CGColor { }*)newFillColorForStyleAttributes:(id)arg1 withStylesheetName:(id)arg2 contentScale:(double)arg3;
- (struct CGColor { }*)newGlyphColorForStyleAttributes:(id)arg1 withStylesheetName:(id)arg2 contentScale:(double)arg3;
- (struct CGColor { }*)newHaloColorForStyleAttributes:(id)arg1 withStylesheetName:(id)arg2 contentScale:(double)arg3;
- (void)purge;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (bool)shouldCacheAtlases;

@end
