/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@interface MPStoreDownloadManager : NSObject <SSDownloadHandlerDelegate, SSDownloadManagerObserver, SSPurchaseManagerDelegate, UIAlertViewDelegate> {
    NSObject<OS_dispatch_queue> * _accessQueue;
    NSArray * _activeDownloads;
    NSMutableArray * _blockObservers;
    NSObject<OS_dispatch_queue> * _calloutSerialQueue;
    NSMutableDictionary * _downloadHandlers;
    NSMapTable * _downloadIdentifiersToDownloads;
    NSDictionary * _downloadKindToRequiredClientBundleIdentifiers;
    SSDownloadManager * _downloadManager;
    NSMutableArray * _downloads;
    NSMapTable * _downloadsToObservers;
    bool  _fetchedInitialDownloads;
    NSMapTable * _libraryIdentifiersToDownloads;
    NSHashTable * _observersForAllDownloads;
    SSPurchaseManager * _purchaseManager;
    NSMapTable * _storeIdentifiersToDownloads;
    NSMutableArray * _userDownloads;
}

@property (nonatomic, readonly) NSArray *activeDownloads;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSArray *downloads;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSArray *userDownloads;
@property (getter=isUsingNetwork, nonatomic, readonly) bool usingNetwork;

+ (id)sharedManager;

- (void).cxx_destruct;
- (void)_addNonCancelledDownloadsToActiveList:(id)arg1;
- (void)_addPurchaseFinishedHandler:(id /* block */)arg1 forDownloads:(id)arg2;
- (void)_addStoreDownloadForRedownloadProductItem:(id)arg1;
- (id)_existingDownloadForSSDownload:(id)arg1;
- (id)_init;
- (bool)_isActiveDownload:(id)arg1;
- (id)_observersForAllDownloads;
- (id)_observersForDownload:(id)arg1;
- (void)_onQueue_addDownloadToMapTables:(id)arg1;
- (id)_onQueue_findStoreDownloadWithSSDownload:(id)arg1 SSPurchase:(id)arg2;
- (bool)_onQueue_hasExistingDownloadForStoreDownload:(id)arg1;
- (void)_onQueue_removeDownloadFromMapTables:(id)arg1;
- (void)_registerBlockObserver:(id)arg1;
- (void)_sendActiveDownloadsDidChangeToObserversWithAddedDownloads:(id)arg1 removedDownloads:(id)arg2;
- (void)_sendDownloadsDidChangeToObserversWithAddedDownloads:(id)arg1 removedDownloads:(id)arg2;
- (void)_sendDownloadsDidFinishPurchasesToObserversForDownloads:(id)arg1;
- (void)_sendDownloadsDidFinishToObserversForDownloads:(id)arg1 notifyDownloadManager:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)_sendDownloadsDidProgressToObserversForDownloads:(id)arg1;
- (bool)_shouldHideDownload:(id)arg1;
- (void)_unregisterBlockObserver:(id)arg1;
- (void)_updateActiveDownloadsWithCancelledDownloads:(id)arg1;
- (void)_updateActiveDownloadsWithChangedActiveDownloads:(id)arg1 inactiveDownloads:(id)arg2;
- (void)_updateDownloadsWithAdditions:(id)arg1 removals:(id)arg2;
- (void)_updateMediaItemPropertiesForFinishedStoreDownload:(id)arg1 SSDownload:(id)arg2;
- (id)activeDownloadForMediaItemPersistentID:(unsigned long long)arg1;
- (id)activeDownloadForStoreID:(long long)arg1;
- (id)activeDownloads;
- (id)addDownloads:(id)arg1;
- (void)addFinishHandler:(id /* block */)arg1 forDownloads:(id)arg2;
- (void)addObserver:(id)arg1 forDownloads:(id)arg2;
- (void)cancelDownloads:(id)arg1;
- (void)dealloc;
- (id)downloadForDownloadPersistentIdentifier:(long long)arg1;
- (id)downloadForMediaItem:(id)arg1;
- (id)downloadForMediaItemPersistentID:(unsigned long long)arg1;
- (id)downloadForMediaPlaybackItemMetadata:(id)arg1;
- (id)downloadForStoreID:(long long)arg1;
- (void)downloadHandler:(id)arg1 handleSession:(id)arg2;
- (void)downloadManager:(id)arg1 downloadStatesDidChange:(id)arg2;
- (void)downloadManagerNetworkUsageDidChange:(id)arg1;
- (id)downloads;
- (bool)hasFetchedInitialDownloads;
- (id)init;
- (bool)isUsingNetwork;
- (void)pauseDownloads:(id)arg1;
- (void)prioritizeDownloads:(id)arg1;
- (void)purchaseManager:(id)arg1 didFinishPurchasesWithResponses:(id)arg2;
- (void)reloadFromServer;
- (void)removeObserver:(id)arg1 forDownloads:(id)arg2;
- (void)requestPermissionToDownloadWithType:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)restartDownloads:(id)arg1;
- (void)resumeDownloads:(id)arg1;
- (id)userDownloads;

@end
