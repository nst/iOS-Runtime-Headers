/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NanoMediaRemote.framework/NanoMediaRemote
 */

@interface NMRNowPlayingState : NSObject <NSCopying> {
    NSNumber * _actualPlaybackRate;
    bool  _addToLibraryActive;
    bool  _addToLibraryCommandEnabled;
    bool  _addToLibraryCommandSupported;
    bool  _advertisement;
    NSString * _album;
    bool  _alwaysLive;
    NSString * _applicationBundleIdentifier;
    NSString * _applicationDisplayName;
    NSData * _applicationIconImageData;
    NSString * _artist;
    NSData * _artworkImageData;
    bool  _banCommandEnabled;
    long long  _banCommandPresentationStyle;
    bool  _banCommandSupported;
    bool  _bannedActive;
    bool  _bookmarkCommandEnabled;
    bool  _bookmarkCommandSupported;
    bool  _bookmarkedActive;
    double  _duration;
    double  _elapsedTimeAtLastUpdate;
    bool  _explicitTrack;
    double  _fastForwardTimeInterval;
    bool  _firstPartyMusicApp;
    NSNumber * _itemAlbumPersistentID;
    NSNumber * _itemCompanionPersistentID;
    NSNumber * _itemPersistentID;
    bool  _likeCommandEnabled;
    long long  _likeCommandPresentationStyle;
    bool  _likeCommandSupported;
    bool  _likedActive;
    NSString * _localizedBanTitle;
    NSString * _localizedBookmarkTitle;
    NSString * _localizedLikeTitle;
    NSNumber * _nextTrackCommandEnabled;
    bool  _playbackRateCommandSupported;
    unsigned int  _playbackState;
    NSNumber * _previousTrackCommandEnabled;
    NSString * _radioStationHash;
    NSNumber * _radioStationIdentifier;
    NSString * _radioStationName;
    int  _repeatMode;
    bool  _repeatModeCommandSupported;
    double  _rewindTimeInterval;
    int  _shuffleMode;
    bool  _shuffleModeCommandSupported;
    bool  _skipBackwardCommandEnabled;
    bool  _skipForwardCommandEnabled;
    NSNumber * _storeAdamID;
    NSDate * _timestamp;
    NSString * _title;
    bool  _usingLegacySupportedCommandsFallback;
}

@property (getter=isAddToLibraryActive, nonatomic) bool addToLibraryActive;
@property (getter=isAddToLibraryCommandEnabled, nonatomic) bool addToLibraryCommandEnabled;
@property (getter=isAddToLibraryCommandSupported, nonatomic) bool addToLibraryCommandSupported;
@property (getter=isAdvertisement, nonatomic) bool advertisement;
@property (nonatomic, copy) NSString *album;
@property (getter=isAlwaysLive, nonatomic) bool alwaysLive;
@property (nonatomic, copy) NSString *applicationBundleIdentifier;
@property (nonatomic, copy) NSString *applicationDisplayName;
@property (nonatomic, retain) NSData *applicationIconImageData;
@property (nonatomic, copy) NSString *artist;
@property (nonatomic, retain) NSData *artworkImageData;
@property (getter=isBanCommandEnabled, nonatomic) bool banCommandEnabled;
@property (nonatomic) long long banCommandPresentationStyle;
@property (getter=isBanCommandSupported, nonatomic) bool banCommandSupported;
@property (getter=isBannedActive, nonatomic) bool bannedActive;
@property (getter=isBookmarkCommandEnabled, nonatomic) bool bookmarkCommandEnabled;
@property (getter=isBookmarkCommandSupported, nonatomic) bool bookmarkCommandSupported;
@property (getter=isBookmarkedActive, nonatomic) bool bookmarkedActive;
@property (nonatomic) double duration;
@property (nonatomic, readonly) double elapsedTime;
@property (nonatomic) double elapsedTimeAtLastUpdate;
@property (getter=isExplicitTrack, nonatomic) bool explicitTrack;
@property (nonatomic) double fastForwardTimeInterval;
@property (getter=isFirstPartyApp, nonatomic, readonly) bool firstPartyApp;
@property (nonatomic, readonly) bool hasNowPlayingInfo;
@property (nonatomic, readonly) bool hasSupportedFeedbackCommands;
@property (nonatomic, copy) NSNumber *itemAlbumPersistentID;
@property (nonatomic, copy) NSNumber *itemCompanionPersistentID;
@property (nonatomic, copy) NSNumber *itemPersistentID;
@property (getter=isLikeCommandEnabled, nonatomic) bool likeCommandEnabled;
@property (nonatomic) long long likeCommandPresentationStyle;
@property (getter=isLikeCommandSupported, nonatomic) bool likeCommandSupported;
@property (getter=isLikedActive, nonatomic) bool likedActive;
@property (nonatomic, copy) NSString *localizedBanTitle;
@property (nonatomic, copy) NSString *localizedBookmarkTitle;
@property (nonatomic, copy) NSString *localizedLikeTitle;
@property (nonatomic, retain) NSNumber *nextTrackCommandEnabled;
@property (nonatomic) float playbackRate;
@property (getter=isPlaybackRateCommandSupported, nonatomic) bool playbackRateCommandSupported;
@property (nonatomic) unsigned int playbackState;
@property (getter=isPlaying, nonatomic, readonly) bool playing;
@property (nonatomic, retain) NSNumber *previousTrackCommandEnabled;
@property (nonatomic, copy) NSString *radioStationHash;
@property (nonatomic, copy) NSNumber *radioStationIdentifier;
@property (nonatomic, copy) NSString *radioStationName;
@property (nonatomic) int repeatMode;
@property (getter=isRepeatModeCommandSupported, nonatomic) bool repeatModeCommandSupported;
@property (nonatomic) double rewindTimeInterval;
@property (nonatomic) int shuffleMode;
@property (getter=isShuffleModeCommandSupported, nonatomic) bool shuffleModeCommandSupported;
@property (getter=isSkipBackwardCommandEnabled, nonatomic) bool skipBackwardCommandEnabled;
@property (getter=isSkipForwardCommandEnabled, nonatomic) bool skipForwardCommandEnabled;
@property (nonatomic, copy) NSNumber *storeAdamID;
@property (nonatomic, copy) NSDate *timestamp;
@property (nonatomic, copy) NSString *title;
@property (getter=isUsingLegacySupportedCommandsFallback, nonatomic) bool usingLegacySupportedCommandsFallback;

- (void).cxx_destruct;
- (bool)_nowPlayingInfoIncludesLegacySupportedCommandsInfo:(id)arg1;
- (bool)_updateAddToLibraryActiveIfNecessary:(bool)arg1;
- (bool)_updateAddToLibraryCommandEnabledIfNecessary:(bool)arg1;
- (bool)_updateAddToLibraryCommandSupportedIfNecessary:(bool)arg1;
- (bool)_updateAdvertisementIfNecessary:(bool)arg1;
- (bool)_updateAlbumIfNecessary:(id)arg1;
- (bool)_updateAlwaysLiveIfNecessary:(bool)arg1;
- (bool)_updateApplicationIconImageDataIfNecessary:(id)arg1;
- (bool)_updateArtistIfNecessary:(id)arg1;
- (bool)_updateArtworkImageDataIfNecessary:(id)arg1;
- (bool)_updateBanCommandEnabledIfNecessary:(bool)arg1;
- (bool)_updateBanCommandPresentationStyleIfNecessary:(long long)arg1;
- (bool)_updateBanCommandSupportedIfNecessary:(bool)arg1;
- (bool)_updateBannedActiveIfNecessary:(bool)arg1;
- (bool)_updateBookmarkCommandEnabledIfNecessary:(bool)arg1;
- (bool)_updateBookmarkCommandSupportedIfNecessary:(bool)arg1;
- (bool)_updateBookmarkedActiveIfNecessary:(bool)arg1;
- (bool)_updateExplicitTrackIfNecessary:(bool)arg1;
- (bool)_updateFastForwardTimeIntervalIfNecessary:(double)arg1;
- (bool)_updateFirstPartyMusicAppIfNecessary:(bool)arg1;
- (bool)_updateItemAlbumPersistentIDIfNecessary:(id)arg1;
- (bool)_updateItemCompanionPersistentIDIfNecessary:(id)arg1;
- (bool)_updateItemPersistentIDIfNecessary:(id)arg1;
- (bool)_updateLikeCommandEnabledIfNecessary:(bool)arg1;
- (bool)_updateLikeCommandPresentationStyleIfNecessary:(long long)arg1;
- (bool)_updateLikeCommandSupportedIfNecessary:(bool)arg1;
- (bool)_updateLikedActiveIfNecessary:(bool)arg1;
- (bool)_updateRadioStationHashIfNecessary:(id)arg1;
- (bool)_updateRadioStationIdentifierIfNecessary:(id)arg1;
- (bool)_updateRadioStationNameIfNecessary:(id)arg1;
- (bool)_updateRewindTimeIntervalIfNecessary:(double)arg1;
- (bool)_updateStoreAdamIDIfNecessary:(id)arg1;
- (bool)_updateTitleIfNecessary:(id)arg1;
- (id)album;
- (id)applicationBundleIdentifier;
- (id)applicationDisplayName;
- (id)applicationIconImageData;
- (void)applyMediaPlayerNowPlayingInfo:(id)arg1 generalInfoChanged:(bool*)arg2 elapsedTimeChanged:(bool*)arg3 playbackStateChanged:(bool*)arg4;
- (bool)applyMediaPlayerSupportedCommandsWithCommandCenter:(id)arg1;
- (void)applyMediaRemoteNowPlayingInfo:(id)arg1;
- (void)applyMediaRemoteNowPlayingInfo:(id)arg1 artwork:(id)arg2 generalInfoChanged:(bool*)arg3 elapsedTimeChanged:(bool*)arg4 playbackStateChanged:(bool*)arg5 applicationInfoChanged:(bool*)arg6 supportedCommandsChanged:(bool*)arg7 timestampChanged:(bool*)arg8;
- (bool)applyMediaRemoteSupportedCommands:(id)arg1;
- (id)artist;
- (id)artworkImageData;
- (long long)banCommandPresentationStyle;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (double)duration;
- (double)elapsedTime;
- (double)elapsedTimeAtLastUpdate;
- (double)fastForwardTimeInterval;
- (bool)hasNowPlayingInfo;
- (bool)hasSupportedFeedbackCommands;
- (id)init;
- (bool)isAddToLibraryActive;
- (bool)isAddToLibraryCommandEnabled;
- (bool)isAddToLibraryCommandSupported;
- (bool)isAdvertisement;
- (bool)isAlwaysLive;
- (bool)isBanCommandEnabled;
- (bool)isBanCommandSupported;
- (bool)isBannedActive;
- (bool)isBookmarkCommandEnabled;
- (bool)isBookmarkCommandSupported;
- (bool)isBookmarkedActive;
- (bool)isExplicitTrack;
- (bool)isFirstPartyApp;
- (bool)isLikeCommandEnabled;
- (bool)isLikeCommandSupported;
- (bool)isLikedActive;
- (bool)isPlaybackRateCommandSupported;
- (bool)isPlaying;
- (bool)isRepeatModeCommandSupported;
- (bool)isShuffleModeCommandSupported;
- (bool)isSkipBackwardCommandEnabled;
- (bool)isSkipForwardCommandEnabled;
- (bool)isUsingLegacySupportedCommandsFallback;
- (id)itemAlbumPersistentID;
- (id)itemCompanionPersistentID;
- (id)itemPersistentID;
- (long long)likeCommandPresentationStyle;
- (id)localizedBanTitle;
- (id)localizedBookmarkTitle;
- (id)localizedLikeTitle;
- (id)mpKeyForMRKey:(struct __CFString { }*)arg1;
- (id)nextTrackCommandEnabled;
- (float)playbackRate;
- (unsigned int)playbackState;
- (id)previousTrackCommandEnabled;
- (id)radioStationHash;
- (id)radioStationIdentifier;
- (id)radioStationName;
- (int)repeatMode;
- (double)rewindTimeInterval;
- (void)setAddToLibraryActive:(bool)arg1;
- (void)setAddToLibraryCommandEnabled:(bool)arg1;
- (void)setAddToLibraryCommandSupported:(bool)arg1;
- (void)setAdvertisement:(bool)arg1;
- (void)setAlbum:(id)arg1;
- (void)setAlwaysLive:(bool)arg1;
- (void)setApplicationBundleIdentifier:(id)arg1;
- (void)setApplicationDisplayName:(id)arg1;
- (void)setApplicationIconImageData:(id)arg1;
- (void)setArtist:(id)arg1;
- (void)setArtworkImageData:(id)arg1;
- (void)setBanCommandEnabled:(bool)arg1;
- (void)setBanCommandPresentationStyle:(long long)arg1;
- (void)setBanCommandSupported:(bool)arg1;
- (void)setBannedActive:(bool)arg1;
- (void)setBookmarkCommandEnabled:(bool)arg1;
- (void)setBookmarkCommandSupported:(bool)arg1;
- (void)setBookmarkedActive:(bool)arg1;
- (void)setDuration:(double)arg1;
- (void)setElapsedTimeAtLastUpdate:(double)arg1;
- (void)setExplicitTrack:(bool)arg1;
- (void)setFastForwardTimeInterval:(double)arg1;
- (void)setFirstPartyMusicApp:(bool)arg1;
- (void)setItemAlbumPersistentID:(id)arg1;
- (void)setItemCompanionPersistentID:(id)arg1;
- (void)setItemPersistentID:(id)arg1;
- (void)setLikeCommandEnabled:(bool)arg1;
- (void)setLikeCommandPresentationStyle:(long long)arg1;
- (void)setLikeCommandSupported:(bool)arg1;
- (void)setLikedActive:(bool)arg1;
- (void)setLocalizedBanTitle:(id)arg1;
- (void)setLocalizedBookmarkTitle:(id)arg1;
- (void)setLocalizedLikeTitle:(id)arg1;
- (void)setNextTrackCommandEnabled:(id)arg1;
- (void)setPlaybackRate:(float)arg1;
- (void)setPlaybackRateCommandSupported:(bool)arg1;
- (void)setPlaybackState:(unsigned int)arg1;
- (void)setPreviousTrackCommandEnabled:(id)arg1;
- (void)setRadioStationHash:(id)arg1;
- (void)setRadioStationIdentifier:(id)arg1;
- (void)setRadioStationName:(id)arg1;
- (void)setRepeatMode:(int)arg1;
- (void)setRepeatModeCommandSupported:(bool)arg1;
- (void)setRewindTimeInterval:(double)arg1;
- (void)setShuffleMode:(int)arg1;
- (void)setShuffleModeCommandSupported:(bool)arg1;
- (void)setSkipBackwardCommandEnabled:(bool)arg1;
- (void)setSkipForwardCommandEnabled:(bool)arg1;
- (void)setStoreAdamID:(id)arg1;
- (void)setTimestamp:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setUsingLegacySupportedCommandsFallback:(bool)arg1;
- (int)shuffleMode;
- (id)storeAdamID;
- (id)timestamp;
- (id)title;

@end
