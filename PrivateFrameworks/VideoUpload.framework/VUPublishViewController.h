/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VideoUpload.framework/VideoUpload
 */

@interface VUPublishViewController : UIViewController <UIAlertViewDelegate, UIPickerViewDelegate, UITableViewDataSource, UITableViewDelegate> {
    long long  _HDSize;
    long long  _SDSize;
    NSArray * _accessCells;
    unsigned long long  _accessRow;
    UIAlertView * _accountAlert;
    UITableViewCell * _accountCell;
    UIAlertView * _authenticationAlert;
    UIAlertView * _authenticationFailedAlert;
    VUCategoryCell * _categoryCell;
    <VUPublishViewControllerDelegate> * _delegate;
    PLTableViewEditableCell * _descriptionCell;
    double  _descriptionHeight;
    bool  _enableHDSection;
    VUFooterContainerView * _footerContainer;
    UIImageView * _headerImageView;
    PLTableViewEditableCell * _optionCells;
    UIPickerView * _picker;
    UIView * _pickerContainer;
    struct { 
        long long title; 
        long long hd; 
        long long tags; 
        long long category; 
        long long access; 
        long long account; 
    }  _sectionIndices;
    int  _selectedOption;
    bool  _showHDSection;
    bool  _showingPicker;
    UITableView * _tableView;
    NSMutableArray * _tagCells;
    PLTableViewEditableCell * _titleCell;
    bool  _viewShrunk;
}

@property (nonatomic) long long HDSize;
@property (nonatomic) long long SDSize;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <VUPublishViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool enableHDSection;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) int selectedOption;
@property (nonatomic) bool showHDSection;
@property (readonly) Class superclass;
@property (nonatomic, readonly) VUCategory *videoCategory;
@property (nonatomic, readonly) NSString *videoDescription;
@property (nonatomic, readonly) NSArray *videoTags;
@property (nonatomic, readonly) NSString *videoTitle;

- (void).cxx_destruct;
- (long long)HDSize;
- (long long)SDSize;
- (void)_addNewTagCell;
- (void)_authenticatorFailed:(id)arg1;
- (void)_authenticatorStateChanged:(id)arg1;
- (void)_automaticKeyboardDidHide:(id)arg1;
- (void)_automaticKeyboardDidShow:(id)arg1;
- (void)_cancel;
- (void)_footerFrameDidChangeWithSplitKeyboard:(bool)arg1;
- (void)_hidePicker;
- (long long)_indexOfBlankTagCellOtherThan:(id)arg1;
- (bool)_isAuthenticated;
- (void)_publish;
- (void)_showPicker;
- (void)_shrinkView;
- (void)_termsButtonPressed:(id)arg1;
- (void)_unshrinkView;
- (void)_updateAccountCell;
- (void)_updatePublishButton;
- (id)accessCells;
- (id)accountAlert;
- (id)accountString;
- (void)alertView:(id)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)authReturnKeyPressed:(id)arg1;
- (id)authenticator;
- (id)categories;
- (bool)checkParametersAndWarn;
- (void)dealloc;
- (id)delegate;
- (void)editableCell:(id)arg1 textChanged:(id)arg2;
- (void)editableCellDidBeginEditing:(id)arg1;
- (void)editableCellReturnPressed:(id)arg1;
- (void)editableTagCellEndOfTagCharacterPressed:(id)arg1;
- (bool)enableHDSection;
- (id)headerLogo;
- (id)init;
- (void)loadView;
- (long long)numberOfComponentsInPickerView:(id)arg1;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)orderOutKeyboard;
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (double)pickerView:(id)arg1 rowHeightForComponent:(long long)arg2;
- (id)pickerView:(id)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (void)resignResponder;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (int)selectedOption;
- (void)setDelegate:(id)arg1;
- (void)setEnableHDSection:(bool)arg1;
- (void)setHDSize:(long long)arg1;
- (void)setSDSize:(long long)arg1;
- (void)setShowHDSection:(bool)arg1;
- (bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)showAlertWithTitle:(id)arg1 message:(id)arg2;
- (bool)showHDSection;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (id)termsOfUseString;
- (id)termsOfUseURL;
- (id)videoCategory;
- (id)videoDescription;
- (id)videoTags;
- (id)videoTitle;
- (void)viewDidAppear:(bool)arg1;
- (void)viewWillAppear:(bool)arg1;

@end
