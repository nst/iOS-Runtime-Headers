/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NotesShared.framework/NotesShared
 */

@interface ICNote : ICCloudSyncingObject <ICCloudObject, ICSearchIndexableNote, NSTextStorageDelegate, TTTextStorageDelegate> {
    bool  _attemptedToMergeWhenChangingSelectionByGesture;
    bool  _attemptedToMergeWhenEditingMarkedText;
    NSMutableSet * _connectedDevices;
    NSMutableSet * _connectedSockets;
    <ICNoteDelegate> * _delegate;
    bool  _didAddNotificationCenterObservers;
    bool  _shouldBypassDidUnmarkTextCallback;
    bool  _shouldUseLongDelayWhenSchedulingUnmarkTextTimer;
    TTTextStorage * _textStorage;
    bool  _textViewNotificationCenterCounter;
    NSTimer * _unmarkTextTimer;
    NSUUID * _uuid;
    TTVectorMultiTimestamp * archivedTimestamp;
    NSData * decryptedData;
    bool  needsRefresh;
    bool  observingData;
    bool  sendingNoteDataKVO;
}

@property (nonatomic, retain) ICAccount *account;
@property (nonatomic, copy) TTVectorMultiTimestamp *archivedTimestamp;
@property (nonatomic) short attachmentViewType;
@property (nonatomic, retain) NSSet *attachments;
@property (nonatomic) bool attemptedToMergeWhenChangingSelectionByGesture;
@property (nonatomic) bool attemptedToMergeWhenEditingMarkedText;
@property (nonatomic, retain) NSDate *creationDate;
@property (readonly, copy) NSString *debugDescription;
@property (retain) NSData *decryptedData;
@property (nonatomic) <ICNoteDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didAddNotificationCenterObservers;
@property (nonatomic, retain) NSSet *folders;
@property (nonatomic, retain) NSDate *foldersModificationDate;
@property (nonatomic, readonly) bool hasUnreadChanges;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSNumber *integerId;
@property (nonatomic, retain) NSDate *lastViewedModificationDate;
@property (nonatomic, retain) NSString *legacyContentHashAtImport;
@property (nonatomic, retain) NSString *legacyImportDeviceIdentifier;
@property (nonatomic, retain) NSString *legacyManagedObjectIDURIRepresentation;
@property (nonatomic, retain) NSDate *legacyModificationDateAtImport;
@property (nonatomic, retain) NSNumber *legacyNoteIntegerId;
@property (nonatomic, retain) NSNumber *legacyNoteWasPlainText;
@property (nonatomic, retain) NSDate *modificationDate;
@property (nonatomic) bool needsRefresh;
@property (nonatomic, retain) ICNoteData *noteData;
@property (nonatomic, retain) NSNumber *noteHasChanges;
@property (getter=isObservingData, nonatomic) bool observingData;
@property (getter=isSendingNoteDataKVO, nonatomic) bool sendingNoteDataKVO;
@property (nonatomic) bool shouldBypassDidUnmarkTextCallback;
@property (nonatomic) bool shouldUseLongDelayWhenSchedulingUnmarkTextTimer;
@property (nonatomic, retain) NSString *snippet;
@property (readonly) Class superclass;
@property (nonatomic, retain) TTTextStorage *textStorage;
@property (nonatomic, readonly) TTTextStorage *textStorageWithoutCreating;
@property (nonatomic) bool textViewNotificationCenterCounter;
@property (nonatomic, retain) NSString *thumbnailAttachmentIdentifier;
@property (nonatomic, retain) NSString *title;
@property (nonatomic, retain) NSTimer *unmarkTextTimer;

+ (id)allCloudObjectsInContext:(id)arg1;
+ (id)allNotesInContext:(id)arg1;
+ (id)attributedStringFromHTMLString:(id)arg1;
+ (id)attributedStringFromHTMLString:(id)arg1 baseURL:(id)arg2 readerDelegate:(id)arg3;
+ (id)attributedStringFromHTMLString:(id)arg1 readerDelegate:(id)arg2;
+ (unsigned long long)countOfAllNotesInContext:(id)arg1;
+ (unsigned long long)countOfNotesMatchingPredicate:(id)arg1 context:(id)arg2;
+ (unsigned long long)countOfVisibleNotesInContext:(id)arg1;
+ (id)createNoteFromNote:(id)arg1 inFolder:(id)arg2 isPasswordProtected:(bool)arg3 removingOriginalNote:(bool)arg4;
+ (id)createNoteFromNote:(id)arg1 isPasswordProtected:(bool)arg2 removingOriginalNote:(bool)arg3;
+ (id)defaultTitleForEmptyNote;
+ (void)deleteEmptyNote:(id)arg1;
+ (void)deleteNote:(id)arg1;
+ (id)existingCloudObjectForRecordID:(id)arg1 context:(id)arg2;
+ (void)fixDashedListsInAttributedString:(id)arg1;
+ (void)fixFontsInAttributedString:(id)arg1;
+ (void)fixUnwantedCharactersInAttributedString:(id)arg1;
+ (id)hexStringForColor:(struct UIColor { Class x1; }*)arg1;
+ (id)htmlObjectAttributesForAttachmentWithContentID:(id)arg1;
+ (id)htmlStringByFixingDashedListsInHTMLString:(id)arg1;
+ (id)htmlStringFromAttributedString:(id)arg1 attachmentConversionHandler:(id)arg2;
+ (bool)isDefaultColor:(struct UIColor { Class x1; }*)arg1;
+ (id)keyPathsForValuesAffectingCanBeSharedViaICloud;
+ (id)keyPathsForValuesAffectingCloudAccount;
+ (id)keyPathsForValuesAffectingFolder;
+ (id)keyPathsForValuesAffectingHasUnreadChanges;
+ (id)keyPathsForValuesAffectingIsSharedViaICloud;
+ (id)keyPathsForValuesAffectingParentCloudObject;
+ (unsigned long long)maxNoteTextLength;
+ (id)mutableAttributedStringFromHTMLString:(id)arg1 baseURL:(id)arg2;
+ (id)mutableAttributedStringFromHTMLString:(id)arg1 readerDelegate:(id)arg2;
+ (id)newCloudObjectForRecord:(id)arg1 context:(id)arg2;
+ (id)newEmptyNoteInContext:(id)arg1;
+ (id)newEmptyNoteWithIdentifier:(id)arg1 context:(id)arg2;
+ (id)newEmptyNoteWithUUID:(id)arg1 context:(id)arg2;
+ (id)newFetchRequestForNotes;
+ (id)newNoteWithoutIdentifierInContext:(id)arg1;
+ (id)newObjectWithIdentifier:(id)arg1 context:(id)arg2;
+ (id)noteWithIdentifier:(id)arg1 context:(id)arg2;
+ (id)noteWithIdentifier:(id)arg1 includeDeleted:(bool)arg2 context:(id)arg3;
+ (id)noteWithLegacyManagedObjectID:(id)arg1 context:(id)arg2;
+ (id)noteWithUUID:(id)arg1 context:(id)arg2;
+ (id)notesMatchingPredicate:(id)arg1 context:(id)arg2;
+ (id)predicateForNote:(id)arg1;
+ (id)predicateForSearchableNotes;
+ (id)predicateForVisibleNotes;
+ (id)predicateForVisibleNotesIncludingTrash:(bool)arg1;
+ (void)purgeAllNotesInContext:(id)arg1;
+ (void)purgeNote:(id)arg1;
+ (void)redactNote:(id)arg1;
+ (id)refreshAllOfNoteWithIdentifier:(id)arg1 context:(id)arg2;
+ (bool)supportsUserSpecificRecords;
+ (id)tagDictionariesForAttributes:(id)arg1 attachmentConversionHandler:(id)arg2;
+ (id)tagDictionaryForWrapperAroundParagraphStyle:(id)arg1;
+ (id)visibleNoteWithIdentifier:(id)arg1 context:(id)arg2;
+ (id)visibleNotesInContext:(id)arg1;

- (void).cxx_destruct;
- (id)addAttachment;
- (id)addAttachmentWithData:(id)arg1 filename:(id)arg2;
- (id)addAttachmentWithFileURL:(id)arg1;
- (id)addAttachmentWithFileWrapper:(id)arg1;
- (id)addAttachmentWithIdentifier:(id)arg1;
- (id)addAttachmentWithRemoteFileURL:(id)arg1;
- (id)addAttachmentWithUTI:(id)arg1 data:(id)arg2 filename:(id)arg3;
- (id)addAttachmentWithUTI:(id)arg1 data:(id)arg2 filenameExtension:(id)arg3;
- (id)addAttachmentWithUTI:(id)arg1 withURL:(id)arg2;
- (void)addNotificationCenterObserversIfNecessary;
- (void)addShareParticipantsToAttributeSet:(id)arg1;
- (id)addURLAttachmentWithURL:(id)arg1;
- (bool)allowsNewTextLength:(unsigned long long)arg1;
- (void)announceAccessibilitySelectionChangedByMerge;
- (void)announceAccessibilitySelectionChangedByMergeWithSavedSelections:(id)arg1 beforeMergeTimestamp:(id)arg2;
- (id)archivedTimestamp;
- (id)attachmentActivityItemsForSharing;
- (bool)attachmentExceedsMaxSizeAllowed:(unsigned long long)arg1;
- (id)attachmentForWebThumbnail;
- (id)attachmentFromLegacyAttachmentFileWrapper:(id)arg1;
- (id)attachmentFromObject:(id)arg1 createIfNecessary:(bool)arg2;
- (id)attachmentFromRemoteFileWrapper:(id)arg1;
- (id)attachmentFromStandardFileWrapper:(id)arg1;
- (id)attachmentWithIdentifier:(id)arg1;
- (bool)attemptedToMergeWhenChangingSelectionByGesture;
- (bool)attemptedToMergeWhenEditingMarkedText;
- (id)authorsExcludingCurrentUser;
- (void)awakeFromFetch;
- (void)awakeFromInsert;
- (bool)canAddAttachment;
- (bool)canAddAttachments:(unsigned long long)arg1;
- (bool)canBeSharedViaICloud;
- (void)checkPreviewImagesIntegrityAndGeneratePreviewIfNeeded;
- (id)checklistStyleAccessibilityDescriptionForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)childCloudObjects;
- (id)cloudAccount;
- (id)connectedDevices;
- (id)connectedSockets;
- (bool)containsAttachmentsUnsupportedInPasswordProtection;
- (id)contentInfoText;
- (id)dateForCurrentSortType;
- (void)dealloc;
- (void)decrypt;
- (id)decryptedData;
- (void)deduplicateSelfAndCreateNewObjectFromRecord:(id)arg1;
- (id)delegate;
- (void)deleteFromLocalDatabase;
- (void)didAcceptShare:(id)arg1;
- (bool)didAddNotificationCenterObservers;
- (void)didChangeNoteText;
- (void)faultLiveTextStorageIfNecessary;
- (void)fetchThumbnailImageWithMinSize:(struct CGSize { double x1; double x2; })arg1 scale:(double)arg2 cache:(id)arg3 cacheKey:(id)arg4 processingBlock:(id)arg5 completionBlock:(id)arg6;
- (void)filterAttachmentsInTextStorage:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)fixBrokenReferences;
- (id)folder;
- (bool)hasAllMandatoryFields;
- (bool)hasTextStorage;
- (bool)hasThumbnailImage;
- (bool)hasUnreadChanges;
- (id)htmlString;
- (id)htmlStringWithAttachmentConversionHandler:(id)arg1;
- (id)htmlStringWithAttachments:(bool)arg1;
- (id)ic_loggingValues;
- (bool)isDeletedOrInTrash;
- (bool)isEditable;
- (bool)isEmpty;
- (bool)isHiddenFromSearch;
- (bool)isInICloudAccount;
- (bool)isObservingData;
- (bool)isSendingNoteDataKVO;
- (bool)isSharedViaICloud;
- (bool)isTooLargeForPasswordProtection;
- (bool)isVisible;
- (void)markForDeletion;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })markedTextRange;
- (void)mergeDataFromRecord:(id)arg1;
- (void)mergeDataFromRecord:(id)arg1 withMergePolicy:(long long)arg2;
- (void)mergeDataFromUserSpecificRecord:(id)arg1;
- (void)mergeEncryptedDataFromRecord:(id)arg1;
- (void)mergeFoldersFromRecord:(id)arg1;
- (void)mergeNotePrimitiveData;
- (long long)mergePolicyForRecord:(id)arg1;
- (void)mergeTextData:(id)arg1 record:(id)arg2 mergePolicy:(long long)arg3;
- (void)mergeTextDataFromRecord:(id)arg1 mergePolicy:(long long)arg2;
- (void)mergeUnappliedEncryptedRecordsIncludingAttachments;
- (void)mergeUnappliedEncryptedRecordsIncludingAttachmentsInBackground;
- (unsigned long long)mergeWithNoteData:(id)arg1;
- (unsigned long long)mergeWithNoteDocument:(id)arg1;
- (bool)needsRefresh;
- (bool)needsToDeleteShare;
- (bool)needsToFetchAfterServerRecordChanged:(id)arg1;
- (id)newlyCreatedRecord;
- (id)newlyCreatedUserSpecificRecord;
- (id)noteAsPlainText;
- (id)noteAsPlainTextWithoutTitle;
- (void)notifyTextViewsNoteDidMerge;
- (void)notifyTextViewsNoteWillMerge;
- (id)objectIdentifier;
- (void)objectWasFetchedFromCloudWithRecord:(id)arg1;
- (id)objectsToBeDeletedBeforeThisObject;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)parentCloudObject;
- (id)parentEncryptableObject;
- (long long)primaryWritingDirection;
- (id)quotedTitle;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeForAttachment:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeForSnippet;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeForTitle:(bool*)arg1;
- (id)recordType;
- (id)recordZoneName;
- (void)refreshNoteTextFromDataStore;
- (void)regenerateSnippet;
- (void)regenerateTitle;
- (void)releaseMemoryForIndexing;
- (void)releaseTextStorage;
- (void)removeNotificationCenterObservers;
- (void)removeNotificationCenterObserversIfNecessary;
- (void)replaceWithDocument:(id)arg1;
- (id)replicaID;
- (bool)requiresLegacyTombstoneAfterDeletion;
- (void)resetUniqueIdentifier;
- (void)resetUnmarkTextTimerIfNeeded;
- (void)save;
- (void)saveAfterDelay;
- (void)saveAndClearDecryptedData;
- (void)saveNoteData;
- (id)searchDomainIdentifier;
- (id)searchIndexStringsOutHasAdditionalStrings:(bool*)arg1;
- (id)searchIndexableTitleUsingContentTextIfNecessary:(id)arg1;
- (bool)searchResultCanBeDeletedFromNoteContext;
- (unsigned long long)searchResultsSection;
- (id)searchableContentKeyPaths;
- (id)searchableItemAttributeSet;
- (id)searchableItemIdentifier;
- (void)setArchivedTimestamp:(id)arg1;
- (void)setAttemptedToMergeWhenChangingSelectionByGesture:(bool)arg1;
- (void)setAttemptedToMergeWhenEditingMarkedText:(bool)arg1;
- (void)setCryptoInitializationVector:(id)arg1;
- (void)setCryptoTag:(id)arg1;
- (void)setDecryptedData:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDidAddNotificationCenterObservers:(bool)arg1;
- (void)setFolder:(id)arg1;
- (void)setFolders:(id)arg1;
- (void)setLegacyManagedObjectID:(id)arg1;
- (void)setNeedsInitialFetchFromCloud:(bool)arg1;
- (void)setNeedsRefresh:(bool)arg1;
- (void)setNeedsSave;
- (void)setObservingData:(bool)arg1;
- (void)setSendingNoteDataKVO:(bool)arg1;
- (void)setShouldBypassDidUnmarkTextCallback:(bool)arg1;
- (void)setShouldUseLongDelayWhenSchedulingUnmarkTextTimer:(bool)arg1;
- (void)setTextStorage:(id)arg1;
- (void)setTextViewNotificationCenterCounter:(bool)arg1;
- (void)setUnmarkTextTimer:(id)arg1;
- (id)shareTitle;
- (id)shareType;
- (bool)shouldBypassDidUnmarkTextCallback;
- (bool)shouldUpdateIndexForChangedValues:(id)arg1;
- (bool)shouldUseLongDelayWhenSchedulingUnmarkTextTimer;
- (void)startObservingDataIfNecessary;
- (void)startObservingTextViewNotifications;
- (void)startUnmarkTextTimerIfNeeded;
- (void)stopObservingDataIfNecessary;
- (void)stopObservingTextViewNotifications;
- (void)stopUnmarkTextTimerIfNeeded;
- (bool)supportsDeletionByTTL;
- (bool)supportsEncryptedValuesDictionary;
- (id)textDataDecryptedIfNecessary;
- (id)textStorage;
- (void)textStorage:(id)arg1 didProcessEditing:(unsigned long long)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 changeInLength:(long long)arg4;
- (void)textStorage:(id)arg1 willProcessEditing:(unsigned long long)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 changeInLength:(long long)arg4;
- (void)textStorageDidEndEditingNotification:(id)arg1;
- (void)textStorageDidPerformUndo:(id)arg1;
- (void)textStorageWillProcessEditing:(id)arg1;
- (id)textStorageWithoutCreating;
- (void)textViewDidEndSelectionChange:(id)arg1;
- (void)textViewDidUnmarkText:(id)arg1;
- (bool)textViewNotificationCenterCounter;
- (struct UIImage { Class x1; }*)thumbnailImageWithMinSize:(struct CGSize { double x1; double x2; })arg1 scale:(double)arg2 imageScaling:(unsigned long long*)arg3 showAsFileIcon:(bool*)arg4 isMovie:(bool*)arg5 movieDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg6;
- (id)trimmedTitle;
- (void)unmarkForDeletion;
- (void)unmarkTextIfNecessary;
- (id)unmarkTextTimer;
- (double)unmarkTextTimerTimeout;
- (void)updateChangeCount;
- (void)userExpandedOrClosedKeyboardCandidateCollectionView:(id)arg1;
- (id)uuid;
- (long long)visibilityTestingType;
- (id)visibleAttachments;
- (void)willSave;
- (void)willTurnIntoFault;

@end
