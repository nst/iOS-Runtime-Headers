/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AppPredictionInternal.framework/AppPredictionInternal
 */

@interface APRAppIntentMonitor : NSObject <APRIntentStreamUpdateInterface, NSXPCListenerDelegate> {
    _ATXAppLaunchSequenceManager * _appActionLaunchSequenceManager;
    _ATXAppInfoManager * _appInfoManager;
    NSObject<OS_dispatch_queue> * _appIntentHistoryQueue;
    _ATXAppLaunchHistogramManager * _appLaunchHistogramManager;
    ATXInternalAppRegistrationNotification * _appRegistrationListener;
    <_CDLocalContext> * _context;
    _ATXDataStore * _dataStore;
    PETDistributionEventTracker * _donatedActionInCacheTracker;
    PETScalarEventTracker * _donatedActionsTracker;
    NSObject<OS_dispatch_queue> * _donationQueue;
    _ATXDuetHelper * _duetHelper;
    NSXPCListener * _listener;
    _PASLock * _lock;
    _APRParzenModel * _nonSiriKitParzenModel;
    NSMutableSet * _registrations;
    _APRParzenModel * _siriKitParzenModel;
    unsigned long long  deletionHandlerToken;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_respondToIntentStreamChangingWithContext:(id)arg1;
- (void)_syncForTests;
- (void)_updateActionPredictionHistogramsRemovingActionUUIDs:(id)arg1;
- (id)adjustedEndDateForFiveSecondFlooringWithAppSessionEndDate:(id)arg1;
- (id)adjustedStartDateForFiveSecondFlooringWithAppSessionStartDate:(id)arg1;
- (id)adjustedStartDateForIntentsWithAppSessionStartDate:(id)arg1 bundleId:(id)arg2;
- (id)appActionLaunchSequenceManager;
- (id)currentAppSessionBundleId;
- (void)dealloc;
- (void)displayDonationOnLockscreenWithAction:(id)arg1;
- (void)endAppSession:(id)arg1;
- (id)getLastAppIntentsFromDuetWithStartDate:(id)arg1 endDate:(id)arg2;
- (void)handleCompletedIntentForForUUID:(id)arg1 atxIntentSource:(long long)arg2;
- (void)handleIntentDonationWithType:(id)arg1 bundleId:(id)arg2 startDate:(id)arg3 intentSource:(long long)arg4;
- (void)handleIntentOrActivityDeletion;
- (void)handleNonSiriKitIntentDonationWithType:(id)arg1 bundleId:(id)arg2 startDate:(id)arg3;
- (void)handleSiriKitIntentDonationWithType:(id)arg1 bundleId:(id)arg2 startDate:(id)arg3;
- (id)inCallServiceStartDate;
- (id)init;
- (id)initWithAppLaunchHistogramManager:(id)arg1 siriKitParzenModel:(id)arg2 nonSiriKitParzenModel:(id)arg3 appInfoManager:(id)arg4 appActionLaunchSequenceManager:(id)arg5 dataStore:(id)arg6;
- (id)initWithAppLaunchHistogramManager:(id)arg1 siriKitParzenModel:(id)arg2 nonSiriKitParzenModel:(id)arg3 appInfoManager:(id)arg4 appActionLaunchSequenceManager:(id)arg5 duetHelper:(id)arg6 dataStore:(id)arg7;
- (bool)isWhitelistedDaemonDonationBundleId:(id)arg1;
- (void)listenToActivityStream;
- (void)listenToAppSessionEnds;
- (void)listenToAppSessionStarts;
- (void)listenToIntentStream;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)logIntentPredictionsForIntentEvent:(id)arg1;
- (void)logSirikitIntentWithDKUUIDKey:(id)arg1 bundleId:(id)arg2;
- (void)notifyAboutIntentStreamChangeWithReply:(id /* block */)arg1;
- (void)recordIntentDonationWithType:(id)arg1 intentSource:(long long)arg2 bundleId:(id)arg3 startDate:(id)arg4;
- (void)retrainParzenModelForIntentSource:(long long)arg1;
- (void)setCurrentAppSessionBundleId:(id)arg1;
- (void)setInCallServiceStartDate:(id)arg1;
- (void)setPendingNSUAStatus:(bool)arg1;
- (void)setPendingNonSirikitIntentStatus:(bool)arg1;
- (bool)shouldAcceptMessageDonation:(id)arg1;
- (void)start;
- (void)startAppSession:(id)arg1;
- (void)stop;
- (void)updateActionPredictionHistogramsForIntentEvent:(id)arg1 weight:(float)arg2;
- (void)updateActionPredictionPipelineForAppSession:(id)arg1 startDate:(id)arg2 endDate:(id)arg3;
- (void)updateActionPredictionPipelineForIntentEvent:(id)arg1 weight:(float)arg2 appSessionStartDate:(id)arg3 appSessionEndDate:(id)arg4;
- (void)updateActionPredictionSlotResolutionForIntentEvent:(id)arg1 weight:(float)arg2 prevLocationUUID:(id)arg3 locationUUID:(id)arg4 currentMotionType:(long long)arg5 appSessionStartDate:(id)arg6 appSessionEndDate:(id)arg7;
- (void)updateLaunchHistoryFromDuet;
- (void)updateLaunchHistoryFromDuet:(double)arg1 intentSource:(long long)arg2;
- (void)updateLaunchHistoryFromDuetForInterval:(double)arg1;
- (void)updateLaunchHistoryFromDuetForSource:(long long)arg1;

@end
