/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TPSectionHint : NSObject {
    unsigned long long  _documentStartPageIndex;
    NSMutableArray * _pageHints;
}

@property (nonatomic, readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } documentPageRange;
@property (nonatomic) unsigned long long documentStartPageIndex;
@property (nonatomic, readonly) unsigned long long lastPageIndex;
@property (nonatomic, readonly) unsigned long long pageCount;
@property (nonatomic, readonly) unsigned long long pageCountWithoutFillerPage;
@property (nonatomic, readonly) NSArray *pageHints;

+ (bool)verifyHints:(id)arg1 withBodyStorage:(id)arg2 upToPageIndex:(unsigned long long)arg3;

- (void).cxx_destruct;
- (bool)containsDocumentPageIndex:(unsigned long long)arg1;
- (id)copyForArchiving;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })documentPageRange;
- (unsigned long long)documentStartPageIndex;
- (bool)hasEndOfTextLayoutBeforePageIndex:(unsigned long long)arg1;
- (bool)hasPageHintOfKind:(long long)arg1 atPageIndex:(unsigned long long)arg2;
- (bool)hasPageHintOfKind:(long long)arg1 beforePageIndex:(unsigned long long)arg2;
- (id)init;
- (id)initWithArchive:(const struct SectionHintArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_4_1_1; } x4; struct RepeatedPtrField<TP::PageHintArchive> { struct Arena {} *x_5_1_1; int x_5_1_2; int x_5_1_3; struct Rep {} *x_5_1_4; } x5; unsigned int x6; }*)arg1 unarchiver:(id)arg2;
- (unsigned long long)lastPageIndex;
- (unsigned long long)pageCount;
- (unsigned long long)pageCountWithoutFillerPage;
- (id)pageHintForPageIndex:(unsigned long long)arg1;
- (id)pageHints;
- (void)saveToArchive:(struct SectionHintArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { int x_1_2_1; } x_4_1_1; } x4; struct RepeatedPtrField<TP::PageHintArchive> { struct Arena {} *x_5_1_1; int x_5_1_2; int x_5_1_3; struct Rep {} *x_5_1_4; } x5; unsigned int x6; }*)arg1 archiver:(id)arg2 context:(id)arg3 shouldArchiveHintBlock:(id /* block */)arg4;
- (void)setDocumentStartPageIndex:(unsigned long long)arg1;
- (void)setPageHints:(id)arg1;
- (void)trimPageHintsFromPageIndex:(unsigned long long)arg1;

@end
