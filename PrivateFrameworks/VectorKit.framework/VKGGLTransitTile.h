/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKGGLTransitTile : VKVectorTile {
    float  _alphaScale;
    VKAnimation * _animation;
    bool  _areNormalsSynchedForTileEdge;
    struct vector<std::__1::shared_ptr<md::TransitConnectedNode>, std::__1::allocator<std::__1::shared_ptr<md::TransitConnectedNode> > > { 
        struct shared_ptr<md::TransitConnectedNode> {} *__begin_; 
        struct shared_ptr<md::TransitConnectedNode> {} *__end_; 
        struct __compressed_pair<std::__1::shared_ptr<md::TransitConnectedNode> *, std::__1::allocator<std::__1::shared_ptr<md::TransitConnectedNode> > > { 
            struct shared_ptr<md::TransitConnectedNode> {} *__first_; 
        } __end_cap_; 
    }  _connectedNodes;
    struct shared_ptr<md::DataOverrideManager> { 
        struct DataOverrideManager {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _dataOverrideManager;
    bool  _didLineDataChange;
    bool  _didNeighboringTilesChange;
    float  _displayConnectionInflation;
    struct unique_ptr<ggl::RibbonLayer<ggl::RoadRibbonDescriptor>, std::__1::default_delete<ggl::RibbonLayer<ggl::RoadRibbonDescriptor> > > { 
        struct __compressed_pair<ggl::RibbonLayer<ggl::RoadRibbonDescriptor> *, std::__1::default_delete<ggl::RibbonLayer<ggl::RoadRibbonDescriptor> > > { 
            struct RibbonLayer<ggl::RoadRibbonDescriptor> {} *__first_; 
        } __ptr_; 
    }  _displayConnectionLayer;
    struct list<md::TransitDisplayConnection, std::__1::allocator<md::TransitDisplayConnection> > { 
        struct __list_node_base<md::TransitDisplayConnection, void *> { 
            struct __list_node_base<md::TransitDisplayConnection, void *> {} *__prev_; 
            struct __list_node_base<md::TransitDisplayConnection, void *> {} *__next_; 
        } __end_; 
        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<md::TransitDisplayConnection, void *> > > { 
            unsigned long long __first_; 
        } __size_alloc_; 
    }  _displayConnections;
    unsigned int  _easingPointCount;
    struct shared_ptr<md::TransitInterTileMediator> { 
        struct TransitInterTileMediator {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _interTileMediator;
    bool  _isNeighboringTilePresent;
    struct unique_ptr<md::TransitJunctionManager, std::__1::default_delete<md::TransitJunctionManager> > { 
        struct __compressed_pair<md::TransitJunctionManager *, std::__1::default_delete<md::TransitJunctionManager> > { 
            struct TransitJunctionManager {} *__first_; 
        } __ptr_; 
    }  _junctionManager;
    struct LabelExternalObjectsModerator { struct fast_shared_ptr<md::unsynchronized_weak_interface_ptr<md::LabelExternalObjectsModerator> > { struct _fast_shared_ptr_control {} *x_1_1_1; } x1; struct LabelExternalIconRenderer {} *x2; struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; } x_3_1_1; } x3; } * _labelExternalObjectsModerator;
    struct map<unsigned int, ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *> > > { 
        struct __tree<std::__1::__value_type<unsigned int, ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *> > > { 
            struct __tree_node<std::__1::__value_type<unsigned int, ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *>, void *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *>, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __first_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *>, std::__1::less<unsigned int>, true> > { 
                unsigned long long __first_; 
            } __pair3_; 
        } __tree_; 
    }  _lineBatches;
    struct unique_ptr<ggl::TransitLineRibbon::BasePipelineSetup, std::__1::default_delete<ggl::TransitLineRibbon::BasePipelineSetup> > { 
        struct __compressed_pair<ggl::TransitLineRibbon::BasePipelineSetup *, std::__1::default_delete<ggl::TransitLineRibbon::BasePipelineSetup> > { 
            struct BasePipelineSetup {} *__first_; 
        } __ptr_; 
    }  _lineFillPipelineSetup;
    struct unique_ptr<md::StyleTexture<md::TransitLineSegment::StylePixel>, std::__1::default_delete<md::StyleTexture<md::TransitLineSegment::StylePixel> > > { 
        struct __compressed_pair<md::StyleTexture<md::TransitLineSegment::StylePixel> *, std::__1::default_delete<md::StyleTexture<md::TransitLineSegment::StylePixel> > > { 
            struct StyleTexture<md::TransitLineSegment::StylePixel> {} *__first_; 
        } __ptr_; 
    }  _lineFillStyleTexture;
    struct unordered_map<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > > > > { 
        struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > > > > { 
            struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > >, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > >, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > >, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > >, void *> *> > > { 
                    struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > >, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > >, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > >, void *> *> > { 
                            unsigned long long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > >, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > >, void *> *> { 
                    struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > >, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > >, std::__1::hash<unsigned long long>, true> > { 
                unsigned long long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_set<md::TransitNode *, std::__1::hash<md::TransitNode *>, std::__1::equal_to<md::TransitNode *>, std::__1::allocator<md::TransitNode *> > >, std::__1::equal_to<unsigned long long>, true> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    }  _lineIDToAssociatedNodesMap;
    float  _lineInflation;
    struct unique_ptr<ggl::RibbonLayer<ggl::TransitRibbonDescriptor>, std::__1::default_delete<ggl::RibbonLayer<ggl::TransitRibbonDescriptor> > > { 
        struct __compressed_pair<ggl::RibbonLayer<ggl::TransitRibbonDescriptor> *, std::__1::default_delete<ggl::RibbonLayer<ggl::TransitRibbonDescriptor> > > { 
            struct RibbonLayer<ggl::TransitRibbonDescriptor> {} *__first_; 
        } __ptr_; 
    }  _lineLayer;
    struct unique_ptr<ggl::TransitLineRibbon::BasePipelineSetup, std::__1::default_delete<ggl::TransitLineRibbon::BasePipelineSetup> > { 
        struct __compressed_pair<ggl::TransitLineRibbon::BasePipelineSetup *, std::__1::default_delete<ggl::TransitLineRibbon::BasePipelineSetup> > { 
            struct BasePipelineSetup {} *__first_; 
        } __ptr_; 
    }  _lineStrokePipelineSetup;
    struct unique_ptr<md::StyleTexture<md::TransitLineSegment::StylePixel>, std::__1::default_delete<md::StyleTexture<md::TransitLineSegment::StylePixel> > > { 
        struct __compressed_pair<md::StyleTexture<md::TransitLineSegment::StylePixel> *, std::__1::default_delete<md::StyleTexture<md::TransitLineSegment::StylePixel> > > { 
            struct StyleTexture<md::TransitLineSegment::StylePixel> {} *__first_; 
        } __ptr_; 
    }  _lineStrokeStyleTexture;
    struct vector<md::TransitLine, std::__1::allocator<md::TransitLine> > { 
        struct TransitLine {} *__begin_; 
        struct TransitLine {} *__end_; 
        struct __compressed_pair<md::TransitLine *, std::__1::allocator<md::TransitLine> > { 
            struct TransitLine {} *__first_; 
        } __end_cap_; 
    }  _lines;
    struct vector<md::TransitLink, std::__1::allocator<md::TransitLink> > { 
        struct TransitLink {} *__begin_; 
        struct TransitLink {} *__end_; 
        struct __compressed_pair<md::TransitLink *, std::__1::allocator<md::TransitLink> > { 
            struct TransitLink {} *__first_; 
        } __end_cap_; 
    }  _links;
    struct TransitNodeFeaturePool { int (**x1)(); int (**x2)(); struct _retain_ptr<NSArray *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x_3_1_1)(); id x_3_1_2; /* Warning: Unrecognized filer type: '_' using 'void*' */ void*x_3_1_3; const void*x_3_1_4; void*x_3_1_5; void*x_3_1_6; int x_3_1_7; in void*x_3_1_8; out unsigned int x_3_1_9/* : ? */; void*x_3_1_10; BOOL x_3_1_11; void*x_3_1_12; } x3; struct _release_objc { } x4; } * _nodeFeaturePool;
    struct vector<std::__1::shared_ptr<md::TransitNode>, std::__1::allocator<std::__1::shared_ptr<md::TransitNode> > > { 
        struct shared_ptr<md::TransitNode> {} *__begin_; 
        struct shared_ptr<md::TransitNode> {} *__end_; 
        struct __compressed_pair<std::__1::shared_ptr<md::TransitNode> *, std::__1::allocator<std::__1::shared_ptr<md::TransitNode> > > { 
            struct shared_ptr<md::TransitNode> {} *__first_; 
        } __end_cap_; 
    }  _nodes;
    struct vector<std::__1::shared_ptr<md::TransitConnectedNode>, std::__1::allocator<std::__1::shared_ptr<md::TransitConnectedNode> > > { 
        struct shared_ptr<md::TransitConnectedNode> {} *__begin_; 
        struct shared_ptr<md::TransitConnectedNode> {} *__end_; 
        struct __compressed_pair<std::__1::shared_ptr<md::TransitConnectedNode> *, std::__1::allocator<std::__1::shared_ptr<md::TransitConnectedNode> > > { 
            struct shared_ptr<md::TransitConnectedNode> {} *__first_; 
        } __end_cap_; 
    }  _nodesWithConnectivity;
    struct vector<std::__1::shared_ptr<md::TransitOrphanNode>, std::__1::allocator<std::__1::shared_ptr<md::TransitOrphanNode> > > { 
        struct shared_ptr<md::TransitOrphanNode> {} *__begin_; 
        struct shared_ptr<md::TransitOrphanNode> {} *__end_; 
        struct __compressed_pair<std::__1::shared_ptr<md::TransitOrphanNode> *, std::__1::allocator<std::__1::shared_ptr<md::TransitOrphanNode> > > { 
            struct shared_ptr<md::TransitOrphanNode> {} *__first_; 
        } __end_cap_; 
    }  _orphanNodes;
    struct vector<std::__1::shared_ptr<md::TransitParentNode>, std::__1::allocator<std::__1::shared_ptr<md::TransitParentNode> > > { 
        struct shared_ptr<md::TransitParentNode> {} *__begin_; 
        struct shared_ptr<md::TransitParentNode> {} *__end_; 
        struct __compressed_pair<std::__1::shared_ptr<md::TransitParentNode> *, std::__1::allocator<std::__1::shared_ptr<md::TransitParentNode> > > { 
            struct shared_ptr<md::TransitParentNode> {} *__first_; 
        } __end_cap_; 
    }  _parentNodes;
    bool  _shouldUpdateMergedLinesForNodes;
    double  _worldUnitsPerMeter;
}

@property (nonatomic, retain) VKAnimation *animation;
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{RibbonLayer<ggl::RoadRibbonDescriptor>=^^?{vector<ggl::RibbonBatch<ggl::RoadRibbonDescriptor> *' */ struct *displayConnectionLayer; /* unknown property attribute:  std::__1::allocator<ggl::Ribbon::BaseMesh *> >=^^{BaseMesh}}}[8^{RenderState}]} */
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{list<md::TransitDisplayConnection' */ struct *displayConnections; /* unknown property attribute:  void *> > >=Q}} */
@property (nonatomic, readonly) struct BasePipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; /* Warning: unhandled struct encoding: '{vector<ggl::ConstantDataElement' */ struct x4; }*lineFillPipelineSetup; /* unknown property attribute:  std::__1::allocator<ggl::Texture *> >=^^{Texture}}}^{Mesh}} */
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{RibbonLayer<ggl::TransitRibbonDescriptor>=^^?{vector<ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *' */ struct *lineLayer; /* unknown property attribute:  std::__1::allocator<ggl::TransitLineRibbon::BaseMesh *> >=^^{BaseMesh}}}[2^{RenderState}]} */
@property (nonatomic, readonly) struct BasePipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; /* Warning: unhandled struct encoding: '{vector<ggl::ConstantDataElement' */ struct x4; }*lineStrokePipelineSetup; /* unknown property attribute:  std::__1::allocator<ggl::Texture *> >=^^{Texture}}}^{Mesh}} */
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{vector<md::TransitLink' */ struct *links; /* unknown property attribute:  std::__1::allocator<md::TransitLink> >=^{TransitLink}}} */
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{vector<std::__1::shared_ptr<md::TransitNode>' */ struct *nodes; /* unknown property attribute:  std::__1::allocator<std::__1::shared_ptr<md::TransitNode> > >=^{shared_ptr<md::TransitNode>}}} */

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_createDisplayConnectionsWithLoader:(struct Loader { struct unique_ptr<ggl::LoaderImpl, std::__1::default_delete<ggl::LoaderImpl> > { struct __compressed_pair<ggl::LoaderImpl *, std::__1::default_delete<ggl::LoaderImpl> > { struct LoaderImpl {} *x_1_2_1; } x_1_1_1; } x1; }*)arg1 sharedResources:(const struct TransitLineSharedResources { struct shared_ptr<ggl::TransitLineRibbon::BasePipelineState> { struct BasePipelineState {} *x_1_1_1; struct __shared_weak_count {} *x_1_1_2; } x1; struct shared_ptr<ggl::SolidRibbon::PipelineState> { struct PipelineState {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg2;
- (void)_createLinesWithLoader:(struct Loader { struct unique_ptr<ggl::LoaderImpl, std::__1::default_delete<ggl::LoaderImpl> > { struct __compressed_pair<ggl::LoaderImpl *, std::__1::default_delete<ggl::LoaderImpl> > { struct LoaderImpl {} *x_1_2_1; } x_1_1_1; } x1; }*)arg1;
- (void)_createNodes;
- (void)_prepareLinesWithSharedResources:(const struct TransitLineSharedResources { struct shared_ptr<ggl::TransitLineRibbon::BasePipelineState> { struct BasePipelineState {} *x_1_1_1; struct __shared_weak_count {} *x_1_1_2; } x1; struct shared_ptr<ggl::SolidRibbon::PipelineState> { struct PipelineState {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg1;
- (float)_tilePerPoint:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg1;
- (void)addTransitLinesAtGroundPoint:(const struct Matrix<double, 3, 1> { double x1[3]; }*)arg1 toArray:(struct vector<std::__1::pair<TransitLineWithLink, float>, std::__1::allocator<std::__1::pair<TransitLineWithLink, float> > > { struct pair<TransitLineWithLink, float> {} *x1; struct pair<TransitLineWithLink, float> {} *x2; struct __compressed_pair<std::__1::pair<TransitLineWithLink, float> *, std::__1::allocator<std::__1::pair<TransitLineWithLink, float> > > { struct pair<TransitLineWithLink, float> {} *x_3_1_1; } x3; }*)arg2;
- (void)addTransitLinesInRect:(const struct Box<double, 2> { struct Matrix<double, 2, 1> { double x_1_1_1[2]; } x1; struct Matrix<double, 2, 1> { double x_2_1_1[2]; } x2; }*)arg1 toSet:(struct unordered_set<TransitLineWithLink, TransitLineWithLinkHash, std::__1::equal_to<TransitLineWithLink>, std::__1::allocator<TransitLineWithLink> > { struct __hash_table<TransitLineWithLink, TransitLineWithLinkHash, std::__1::equal_to<TransitLineWithLink>, std::__1::allocator<TransitLineWithLink> > { struct unique_ptr<std::__1::__hash_node<TransitLineWithLink, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TransitLineWithLink, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<TransitLineWithLink, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TransitLineWithLink, void *> *> > > { struct __hash_node<TransitLineWithLink, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TransitLineWithLink, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<TransitLineWithLink, void *> *> > { unsigned long long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TransitLineWithLink, void *> *>, std::__1::allocator<std::__1::__hash_node<TransitLineWithLink, void *> > > { struct __hash_node_base<std::__1::__hash_node<TransitLineWithLink, void *> *> { struct __hash_node<TransitLineWithLink, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; } x1; }*)arg2;
- (id)animation;
- (void)appendNodesAttachedToLines:(const struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; } x1; }*)arg1 toNodes:(struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; } x1; }*)arg2;
- (struct shared_ptr<md::TransitItemMarker> { struct TransitItemMarker {} *x1; struct __shared_weak_count {} *x2; })closestItemAtPixel:(struct Matrix<float, 2, 1> { float x1[2]; })arg1 maxDistance:(float)arg2 itemDistanceSqrd:(float*)arg3 screenProjectionMatrix:(const struct Matrix<double, 4, 4> { double x1[16]; }*)arg4;
- (bool)containsLinesInSet:(const struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; } x1; }*)arg1;
- (void)createGroupsWithDevice:(struct Device { int (**x1)(); struct DeviceVersion { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; struct DeviceCapabilities { bool x_3_1_1; unsigned int x_3_1_2; unsigned int x_3_1_3; unsigned int x_3_1_4; } x3; struct DeviceAPIProperties { int x_4_1_1; double x_4_1_2; } x4; int x5; int x6; }*)arg1 sharedResources:(const struct TransitLineSharedResources { struct shared_ptr<ggl::TransitLineRibbon::BasePipelineState> { struct BasePipelineState {} *x_1_1_1; struct __shared_weak_count {} *x_1_1_2; } x1; struct shared_ptr<ggl::SolidRibbon::PipelineState> { struct PipelineState {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg2;
- (void)dealloc;
- (void)debugDrawWithConsole:(struct DebugConsole { int (**x1)(); struct Matrix<float, 2, 1> { float x_2_1_1[2]; } x2; struct Matrix<float, 2, 1> { float x_3_1_1[2]; } x3; struct Matrix<float, 2, 1> { float x_4_1_1[2]; } x4; struct Matrix<float, 2, 1> { float x_5_1_1[2]; } x5; unsigned long long x6; struct unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > { struct __compressed_pair<ggl::RenderItem *, std::__1::default_delete<ggl::RenderItem> > { struct RenderItem {} *x_1_2_1; } x_7_1_1; } x7; struct unique_ptr<ggl::DataWrite<ggl::ColoredText::My>, std::__1::default_delete<ggl::DataWrite<ggl::ColoredText::My> > > { struct __compressed_pair<ggl::DataWrite<ggl::ColoredText::My> *, std::__1::default_delete<ggl::DataWrite<ggl::ColoredText::My> > > { struct DataWrite<ggl::ColoredText::My> {} *x_1_2_1; } x_8_1_1; } x8; unsigned long long x9; struct Matrix<float, 2, 1> {} *x10; struct Matrix<unsigned char, 4, 1> { unsigned char x_11_1_1[4]; } x11; struct Matrix<unsigned char, 4, 1> { unsigned char x_12_1_1[4]; } x12; float x13; struct CommonLibrary {} *x14; }*)arg1 context:(struct HighlightHelper { id x1; struct Matrix<double, 4, 4> {} x2; }*)arg2;
- (id)debugString;
- (struct RibbonLayer<ggl::RoadRibbonDescriptor> { int (**x1)(); struct vector<ggl::RibbonBatch<ggl::RoadRibbonDescriptor> *, std::__1::allocator<ggl::RibbonBatch<ggl::RoadRibbonDescriptor> *> > { struct RibbonBatch<ggl::RoadRibbonDescriptor> {} **x_2_1_1; struct RibbonBatch<ggl::RoadRibbonDescriptor> {} **x_2_1_2; struct __compressed_pair<ggl::RibbonBatch<ggl::RoadRibbonDescriptor> **, std::__1::allocator<ggl::RibbonBatch<ggl::RoadRibbonDescriptor> *> > { struct RibbonBatch<ggl::RoadRibbonDescriptor> {} **x_3_2_1; } x_2_1_3; } x2; struct vector<ggl::Ribbon::BaseMesh *, std::__1::allocator<ggl::Ribbon::BaseMesh *> > { struct BaseMesh {} **x_3_1_1; struct BaseMesh {} **x_3_1_2; struct __compressed_pair<ggl::Ribbon::BaseMesh **, std::__1::allocator<ggl::Ribbon::BaseMesh *> > { struct BaseMesh {} **x_3_2_1; } x_3_1_3; } x3; struct RenderState {} *x4[8]; }*)displayConnectionLayer;
- (struct list<md::TransitDisplayConnection, std::__1::allocator<md::TransitDisplayConnection> > { struct __list_node_base<md::TransitDisplayConnection, void *> { struct __list_node_base<md::TransitDisplayConnection, void *> {} *x_1_1_1; struct __list_node_base<md::TransitDisplayConnection, void *> {} *x_1_1_2; } x1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<md::TransitDisplayConnection, void *> > > { unsigned long long x_2_1_1; } x2; }*)displayConnections;
- (id)initWithKey:(const struct VKTileKey { unsigned int x1; int x2; int x3; unsigned int x4; }*)arg1 modelTile:(id)arg2 styleManager:(struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x1; struct __shared_weak_count {} *x2; })arg3 dataOverrideManager:(struct shared_ptr<md::DataOverrideManager> { struct DataOverrideManager {} *x1; struct __shared_weak_count {} *x2; })arg4 sharedResources:(id)arg5 contentScale:(double)arg6 device:(struct Device { int (**x1)(); struct DeviceVersion { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; struct DeviceCapabilities { bool x_3_1_1; unsigned int x_3_1_2; unsigned int x_3_1_3; unsigned int x_3_1_4; } x3; struct DeviceAPIProperties { int x_4_1_1; double x_4_1_2; } x4; int x5; int x6; }*)arg7 labelExternalObjectsModerator:(struct LabelExternalObjectsModerator { struct fast_shared_ptr<md::unsynchronized_weak_interface_ptr<md::LabelExternalObjectsModerator> > { struct _fast_shared_ptr_control {} *x_1_1_1; } x1; struct LabelExternalIconRenderer {} *x2; struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; } x_3_1_1; } x3; }*)arg8;
- (struct BasePipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)lineFillPipelineSetup;
- (struct RibbonLayer<ggl::TransitRibbonDescriptor> { int (**x1)(); struct vector<ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *, std::__1::allocator<ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *> > { struct RibbonBatch<ggl::TransitRibbonDescriptor> {} **x_2_1_1; struct RibbonBatch<ggl::TransitRibbonDescriptor> {} **x_2_1_2; struct __compressed_pair<ggl::RibbonBatch<ggl::TransitRibbonDescriptor> **, std::__1::allocator<ggl::RibbonBatch<ggl::TransitRibbonDescriptor> *> > { struct RibbonBatch<ggl::TransitRibbonDescriptor> {} **x_3_2_1; } x_2_1_3; } x2; struct vector<ggl::TransitLineRibbon::BaseMesh *, std::__1::allocator<ggl::TransitLineRibbon::BaseMesh *> > { struct BaseMesh {} **x_3_1_1; struct BaseMesh {} **x_3_1_2; struct __compressed_pair<ggl::TransitLineRibbon::BaseMesh **, std::__1::allocator<ggl::TransitLineRibbon::BaseMesh *> > { struct BaseMesh {} **x_3_2_1; } x_3_1_3; } x3; struct RenderState {} *x4[2]; }*)lineLayer;
- (struct BasePipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)lineStrokePipelineSetup;
- (const struct vector<md::TransitLine, std::__1::allocator<md::TransitLine> > { struct TransitLine {} *x1; struct TransitLine {} *x2; struct __compressed_pair<md::TransitLine *, std::__1::allocator<md::TransitLine> > { struct TransitLine {} *x_3_1_1; } x3; }*)lines;
- (struct vector<md::TransitLink, std::__1::allocator<md::TransitLink> > { struct TransitLink {} *x1; struct TransitLink {} *x2; struct __compressed_pair<md::TransitLink *, std::__1::allocator<md::TransitLink> > { struct TransitLink {} *x_3_1_1; } x3; }*)links;
- (float)minLineZoomForIDs:(const struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; } x1; }*)arg1;
- (void)neighborTileDidChange;
- (struct vector<std::__1::shared_ptr<md::TransitNode>, std::__1::allocator<std::__1::shared_ptr<md::TransitNode> > > { struct shared_ptr<md::TransitNode> {} *x1; struct shared_ptr<md::TransitNode> {} *x2; struct __compressed_pair<std::__1::shared_ptr<md::TransitNode> *, std::__1::allocator<std::__1::shared_ptr<md::TransitNode> > > { struct shared_ptr<md::TransitNode> {} *x_3_1_1; } x3; }*)nodes;
- (void)populateSelectedLineBounds:(id)arg1;
- (void)setAlphaScale:(float)arg1;
- (void)setAnimation:(id)arg1;
- (void)setInterTileMediator:(const struct shared_ptr<md::TransitInterTileMediator> { struct TransitInterTileMediator {} *x1; struct __shared_weak_count {} *x2; }*)arg1;
- (void)setNodeFeaturePool:(struct TransitNodeFeaturePool { int (**x1)(); int (**x2)(); struct _retain_ptr<NSArray *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x_3_1_1)(); id x_3_1_2; /* Warning: Unrecognized filer type: '_' using 'void*' */ void*x_3_1_3; const void*x_3_1_4; void*x_3_1_5; void*x_3_1_6; int x_3_1_7; in void*x_3_1_8; out unsigned int x_3_1_9/* : ? */; void*x_3_1_10; BOOL x_3_1_11; void*x_3_1_12; } x3; struct _release_objc { } x4; }*)arg1;
- (void)setSelectedLines:(const struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; } x1; }*)arg1;
- (void)setSelectedNodes:(const struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> > { struct unique_ptr<std::__1::__hash_node<unsigned long long, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > > { struct __hash_node<unsigned long long, void *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> *> > { unsigned long long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > > { struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> { struct __hash_node<unsigned long long, void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; } x1; }*)arg1;
- (void)updateDisplayConnectionStylesInContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg1;
- (void)updateLineStylesInContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg1 lineMergingDisabled:(unsigned char)arg2 forceMeshCreation:(bool)arg3;
- (bool)updateLinesAtZoom:(float)arg1;
- (void)updateNodeStylesInContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg1;
- (void)willAppear;
- (void)willDisappear;

@end
