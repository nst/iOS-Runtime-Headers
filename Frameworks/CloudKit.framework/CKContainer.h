/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CloudKit.framework/CloudKit
 */

@interface CKContainer : NSObject <CKXPCClient, SCKContainerProxying> {
    int  _accountChangeToken;
    ACAccountStore * _accountStore;
    NSMapTable * _assetsByUUID;
    NSOperationQueue * _backgroundThrottlingOperationQueue;
    CKContainerSetupInfo * _cachedSetupInfo;
    CKOperationCallbackManager * _callbackManager;
    CKContainerID * _containerID;
    CKRecordID * _containerScopedUserID;
    NSOperationQueue * _convenienceOperationQueue;
    NSMutableDictionary * _fakeEntitlements;
    CKOperationFlowControlManager * _flowControlManager;
    bool  _hasCachedSetupInfo;
    bool  _hasValidConnection;
    bool  _holdAllOperations;
    int  _identityUpdateToken;
    int  _killSwitchToken;
    bool  _masqueradeAsThirdPartyApp;
    CKContainerOptions * _options;
    CKRecordID * _orgAdminUserID;
    CKDatabase * _organizationCloudDatabase;
    CKDatabase * _privateCloudDatabase;
    CKDatabase * _publicCloudDatabase;
    NSMutableArray * _sandboxExtensionHandles;
    CKDatabase * _sharedCloudDatabase;
    NSString * _sourceApplicationBundleIdentifier;
    NSString * _sourceApplicationSecondaryIdentifier;
    unsigned long long  _stateHandle;
    int  _statusReportToken;
    NSOperationQueue * _throttlingOperationQueue;
    NSObject<OS_dispatch_queue> * _underlyingDispatchQueue;
    NSXPCConnection * _xpcConnection;
}

@property (nonatomic) int accountChangeToken;
@property (nonatomic, copy) CKAccountOverrideInfo *accountInfoOverride;
@property (nonatomic, retain) ACAccountStore *accountStore;
@property (nonatomic, retain) NSMapTable *assetsByUUID;
@property (nonatomic, retain) NSOperationQueue *backgroundThrottlingOperationQueue;
@property (nonatomic, retain) CKContainerSetupInfo *cachedSetupInfo;
@property (nonatomic, retain) CKOperationCallbackManager *callbackManager;
@property (nonatomic) bool captureResponseHTTPHeaders;
@property (nonatomic, retain) CKContainerID *containerID;
@property (nonatomic, readonly) NSString *containerIdentifier;
@property (nonatomic, retain) CKRecordID *containerScopedUserID;
@property (nonatomic, retain) NSOperationQueue *convenienceOperationQueue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSMutableDictionary *fakeEntitlements;
@property (nonatomic, retain) CKOperationFlowControlManager *flowControlManager;
@property (nonatomic) bool hasCachedSetupInfo;
@property (nonatomic) bool hasValidConnection;
@property (readonly) unsigned long long hash;
@property (nonatomic) int identityUpdateToken;
@property (nonatomic) int killSwitchToken;
@property (nonatomic, retain) CKContainerOptions *options;
@property (nonatomic, retain) CKRecordID *orgAdminUserID;
@property (nonatomic, retain) CKDatabase *organizationCloudDatabase;
@property (nonatomic, retain) CKDatabase *privateCloudDatabase;
@property (nonatomic, retain) CKDatabase *publicCloudDatabase;
@property (nonatomic, retain) NSMutableArray *sandboxExtensionHandles;
@property (nonatomic, retain) CKDatabase *sharedCloudDatabase;
@property (nonatomic) unsigned long long stateHandle;
@property (nonatomic) int statusReportToken;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSOperationQueue *throttlingOperationQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *underlyingDispatchQueue;
@property (nonatomic) bool wantsSiloedContext;
@property (nonatomic, retain) NSXPCConnection *xpcConnection;

// Image: /System/Library/Frameworks/CloudKit.framework/CloudKit

+ (void)_checkSelfCloudServicesEntitlement;
+ (id)_checkSelfContainerIdentifier;
+ (long long)_untrustedDatabaseEnvironment;
+ (id)_untrustedEntitlementForKey:(id)arg1;
+ (id)containerIDForContainerIdentifier:(id)arg1;
+ (id)containerIDForContainerIdentifier:(id)arg1 environment:(long long)arg2;
+ (id)containerWithIdentifier:(id)arg1;
+ (id)defaultContainer;
+ (void)getBehaviorOptionForKey:(id)arg1 isContainerOption:(bool)arg2 completionHandler:(id /* block */)arg3;
+ (void)registerCompletedLongLivedOperationWithID:(id)arg1;
+ (void)registerOutstandingOperationWithID:(id)arg1;
+ (id)sharedCompletedLongLivedOperationIDs;
+ (id)sharedOutstandingOperations;
+ (void)unregisterOutstandingOperationWithID:(id)arg1;

- (void).cxx_destruct;
- (id)CKPropertiesDescription;
- (id)CKStatusReportArray;
- (id)_CKXPCExportedInterface;
- (id)_CKXPCInterface;
- (id)_allStatusReports;
- (void)_cleanupSandboxExtensionHandles:(id)arg1;
- (void)_discoverUserIdentityWithLookupInfo:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_fetchImportantUserRecordIDOfType:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)_fetchLongLivedOperationsWithIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)_importantUserRecordIDOfType:(long long)arg1;
- (id)_initWithContainerIdentifier:(id)arg1;
- (id)_initWithContainerIdentifier:(id)arg1 environment:(long long)arg2;
- (void)_prepareForDaemonLaunch;
- (void)_scheduleConvenienceOperation:(id)arg1;
- (void)_setImportantUserRecordID:(id)arg1 ofType:(long long)arg2;
- (void)_setupWithContainerID:(id)arg1 options:(id)arg2;
- (id)_untrustedContainerEntitlementsForKey:(id)arg1;
- (void)acceptShareMetadata:(id)arg1 completionHandler:(id /* block */)arg2;
- (int)accountChangeToken;
- (void)accountChangedWithID:(id)arg1;
- (id)accountInfoOverride;
- (void)accountInfoWithCompletionHandler:(id /* block */)arg1;
- (void)accountStatusWithCompletionHandler:(id /* block */)arg1;
- (id)accountStore;
- (void)accountsDidGrantAccessToBundleID:(id)arg1 containerIdentifiers:(id)arg2;
- (void)accountsDidRevokeAccessToBundleID:(id)arg1 containerIdentifiers:(id)arg2;
- (void)accountsWillDeleteAccount:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)addOperation:(id)arg1;
- (id)assetsByUUID;
- (id)backgroundThrottlingOperationQueue;
- (id)cachedSetupInfo;
- (id)callbackManager;
- (bool)captureResponseHTTPHeaders;
- (void)clearContextFromMetadataCache;
- (void)clearPCSCachesForKnownContextsWithCompletionHandler:(id /* block */)arg1;
- (void)clearPILSCacheForLookupInfos:(id)arg1;
- (id)connectionWithError:(id*)arg1;
- (void)consumeSandboxExtensions:(id)arg1 reply:(id /* block */)arg2;
- (id)containerID;
- (id)containerIdentifier;
- (id)containerScopedUserID;
- (id)convenienceOperationQueue;
- (id)daemonWithErrorHandler:(id /* block */)arg1;
- (id)databaseWithDatabaseScope:(long long)arg1;
- (void)dataclassEnabled:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)dealloc;
- (void)decryptPersonalInfoOnShare:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)description;
- (void)discoverAllContactUserInfosWithCompletionHandler:(id /* block */)arg1;
- (void)discoverAllIdentitiesWithCompletionHandler:(id /* block */)arg1;
- (void)discoverUserIdentityWithEmailAddress:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)discoverUserIdentityWithPhoneNumber:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)discoverUserIdentityWithUserRecordID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)discoverUserInfoWithEmailAddress:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)discoverUserInfoWithUserRecordID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)dumpAllClientsStatusReportToFileHandle:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)dumpDaemonStatusReport;
- (void)dumpDaemonStatusReportToFileHandle:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)fakeEntitlements;
- (void)fetchAllLongLivedOperationIDsWithCompletionHandler:(id /* block */)arg1;
- (void)fetchCurrentDeviceIDWithCompletionHandler:(id /* block */)arg1;
- (void)fetchCurrentUserBoundaryKeyWithCompletionHandler:(id /* block */)arg1;
- (void)fetchFullNameAndFormattedUsernameOfAccountWithCompletionHandler:(id /* block */)arg1;
- (void)fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:(id /* block */)arg1;
- (void)fetchLongLivedOperationWithID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchLongLivedOperationsWithIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchOrgAdminUserRecordIDWithCompletionHandler:(id /* block */)arg1;
- (void)fetchServerEnvironment:(id /* block */)arg1;
- (void)fetchShareMetadataWithURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchShareParticipantWithEmailAddress:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchShareParticipantWithLookupInfo:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchShareParticipantWithPhoneNumber:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchShareParticipantWithUserRecordID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchUserRecordIDWithCompletionHandler:(id /* block */)arg1;
- (id)findTrackedAssetByUUID:(id)arg1;
- (id)flowControlManager;
- (void)flushOperationMetricsToPowerLog;
- (void)getFileMetadataWithFileHandle:(id)arg1 openInfo:(id)arg2 reply:(id /* block */)arg3;
- (void)getNewWebSharingIdentity:(id /* block */)arg1;
- (void)getNewWebSharingIdentityDataWithCompletionHandler:(id /* block */)arg1;
- (void)getOutstandingOperationCountWithCompletionHandler:(id /* block */)arg1;
- (void)handleOperationCheckpoint:(id)arg1 forOperationWithID:(id)arg2;
- (void)handleOperationCompletion:(id)arg1 forOperationWithID:(id)arg2;
- (void)handleOperationProgress:(id)arg1 forOperationWithID:(id)arg2;
- (void)handleOperationProgress:(id)arg1 forOperationWithID:(id)arg2 reply:(id /* block */)arg3;
- (void)handleOperationStatistics:(id)arg1 forOperationWithID:(id)arg2;
- (bool)hasCachedSetupInfo;
- (bool)hasValidConnection;
- (bool)holdAllOperations;
- (int)identityUpdateToken;
- (id)initWithContainerID:(id)arg1;
- (id)initWithContainerID:(id)arg1 accountInfoOverride:(id)arg2;
- (id)initWithContainerID:(id)arg1 options:(id)arg2;
- (int)killSwitchToken;
- (bool)masqueradeAsThirdPartyApp;
- (void)openFileWithOpenInfo:(id)arg1 reply:(id /* block */)arg2;
- (id)options;
- (id)orgAdminUserID;
- (id)organizationCloudDatabase;
- (id)privateCloudDatabase;
- (id)publicCloudDatabase;
- (void)requestApplicationPermission:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)resetAllApplicationPermissionsWithCompletionHandler:(id /* block */)arg1;
- (id)sandboxExtensionHandles;
- (void)serverPreferredPushEnvironmentWithCompletionHandler:(id /* block */)arg1;
- (void)setAccountChangeToken:(int)arg1;
- (void)setAccountInfoOverride:(id)arg1;
- (void)setAccountStore:(id)arg1;
- (void)setApplicationPermission:(unsigned long long)arg1 enabled:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)setAssetsByUUID:(id)arg1;
- (void)setBackgroundThrottlingOperationQueue:(id)arg1;
- (void)setCachedSetupInfo:(id)arg1;
- (void)setCallbackManager:(id)arg1;
- (void)setCaptureResponseHTTPHeaders:(bool)arg1;
- (void)setContainerID:(id)arg1;
- (void)setContainerScopedUserID:(id)arg1;
- (void)setConvenienceOperationQueue:(id)arg1;
- (void)setFakeEntitlement:(id)arg1 forKey:(id)arg2;
- (void)setFakeEntitlements:(id)arg1;
- (void)setFakeError:(id)arg1 forNextRequestOfClassName:(id)arg2;
- (void)setFakeResponseOperationResult:(id)arg1 forNextRequestOfClassName:(id)arg2 forItemID:(id)arg3 withLifetime:(int)arg4;
- (void)setFlowControlManager:(id)arg1;
- (void)setHasCachedSetupInfo:(bool)arg1;
- (void)setHasValidConnection:(bool)arg1;
- (void)setHoldAllOperations:(bool)arg1;
- (void)setIdentityUpdateToken:(int)arg1;
- (void)setKillSwitchToken:(int)arg1;
- (void)setMasqueradeAsThirdPartyApp:(bool)arg1;
- (void)setOptions:(id)arg1;
- (void)setOrgAdminUserID:(id)arg1;
- (void)setOrganizationCloudDatabase:(id)arg1;
- (void)setPrivateCloudDatabase:(id)arg1;
- (void)setPublicCloudDatabase:(id)arg1;
- (void)setSandboxExtensionHandles:(id)arg1;
- (void)setSharedCloudDatabase:(id)arg1;
- (void)setSourceApplicationBundleIdentifier:(id)arg1;
- (void)setSourceApplicationSecondaryIdentifier:(id)arg1;
- (void)setStateHandle:(unsigned long long)arg1;
- (void)setStatusReportToken:(int)arg1;
- (void)setThrottlingOperationQueue:(id)arg1;
- (void)setUnderlyingDispatchQueue:(id)arg1;
- (void)setWantsSiloedContext:(bool)arg1;
- (void)setXpcConnection:(id)arg1;
- (id)setupInfo;
- (id)sharedCloudDatabase;
- (id)sourceApplicationBundleIdentifier;
- (id)sourceApplicationSecondaryIdentifier;
- (unsigned long long)stateHandle;
- (void)statusForApplicationPermission:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)statusGroupsForApplicationPermission:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (int)statusReportToken;
- (void)submitEventMetric:(id)arg1;
- (id)throttlingOperationQueue;
- (void)tossConfigWithCompletionHandler:(id /* block */)arg1;
- (void)trackAssets:(id)arg1;
- (void)triggerAutoBugCaptureSnapshot;
- (id)underlyingDispatchQueue;
- (void)updatePushTokens;
- (bool)wantsSiloedContext;
- (void)wipeAllCachedLongLivedProxiesWithCompletionHandler:(id /* block */)arg1;
- (void)wipeAllCachesAndDie;
- (id)xpcConnection;

// Image: /System/Library/PrivateFrameworks/RemoteManagement.framework/RemoteManagement

+ (id)remotemanagement_mirroringContainer;
+ (id)remotemanagement_mirroringContainerIdentifier;

// Image: /System/Library/PrivateFrameworks/Stocks.framework/Stocks

- (void)addDatabaseOperation:(id)arg1;

@end
