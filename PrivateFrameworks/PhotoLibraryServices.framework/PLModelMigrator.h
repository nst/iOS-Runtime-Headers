/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
 */

@interface PLModelMigrator : NSObject {
    NSFileManager * _fileManager;
    PLPhotoLibrary * _photoLibrary;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _photoLibraryLock;
    double  _startTime;
    NSDictionary * _syncedPropertiesByUUID;
    PLXPCTransaction * _transaction;
}

@property (nonatomic, retain) NSFileManager *fileManager;
@property (nonatomic, readonly) PLPhotoLibrary *photoLibrary;

+ (bool)_addCameraCaptureDeviceForAssetsInStore:(id)arg1;
+ (bool)_addCloudKindSubtypeAndBurstFlagsInStore:(id)arg1;
+ (bool)_addLocationHashesToAssets:(id)arg1;
+ (bool)_addUUIDsToCollectionLists:(id)arg1 skipMomentLists:(bool)arg2;
+ (bool)_applyDataProtectionToDCIMFromClassBToClassC;
+ (void)_applySyncedProperties:(id)arg1 toAsset:(id)arg2;
+ (bool)_batchOfflineDeleteFromDatabaseOnlyAssets:(id)arg1 inManagedObjectContext:(id)arg2 error:(id*)arg3;
+ (bool)_cleanupInvalidAlbumsAndFoldersInStore:(id)arg1;
+ (bool)_commitSQLTransactionAndCloseDB:(struct sqlite3 { }*)arg1;
+ (bool)_convertManagedAdjustmentsInStore:(id)arg1;
+ (bool)_convertNameSourceFromBoolToIntForDeferredRebuildFaceInStore:(id)arg1;
+ (void)_createDatabase;
+ (void)_createPhotoDataDirectoryFailedWithNoPermission:(id)arg1;
+ (bool)_createPhotoDataDirectoryIfNecessary;
+ (id)_dateForFirstCRVSPhoto;
+ (id)_dateForVariations;
+ (id)_dateForWideGamutCapture;
+ (id)_dateWithiTunesTimeInterval:(double)arg1;
+ (bool)_deleteAllMemoriesInStore:(id)arg1;
+ (bool)_deleteAllMomentsViaSQLFromStore:(id)arg1;
+ (bool)_deleteCloudSharedAndSyncedAssetReferencesInStore:(id)arg1;
+ (bool)_deleteOrphanedUnverifiedPeople:(id)arg1;
+ (bool)_deletePersonsMissingUUIDInStore:(id)arg1;
+ (bool)_deletePhotoCloudSharingMetadataInManagedObjectContext:(id)arg1 error:(id*)arg2;
+ (bool)_deletePhotoStreamAssetReferencesInStore:(id)arg1;
+ (bool)_disableICloudPhoto;
+ (bool)_ensureAllUserVerifiedPersonsHaveFaceCropsInStore:(id)arg1;
+ (bool)_executeBatchDeleteWithEntityName:(id)arg1 predicate:(id)arg2 managedObjectContext:(id)arg3;
+ (bool)_executeBatchUpdateWithEntityName:(id)arg1 predicate:(id)arg2 propertiesToUpdate:(id)arg3 managedObjectContext:(id)arg4;
+ (id)_fetchRequestToIdentifyAdjustedDepthAndVariationsCandidates;
+ (id)_fetchRequestToIdentifyBakedInVariationsCandidatesIncludingLongExposure:(bool)arg1;
+ (bool)_fixAdjustedAssets:(id)arg1;
+ (bool)_fixAlbumAndFolderSortAscending:(id)arg1;
+ (bool)_fixAssetMasterResources:(id)arg1;
+ (bool)_fixCloudMasterCloudLocalState:(id)arg1;
+ (bool)_fixCloudSharedGIFsInStore:(id)arg1;
+ (bool)_fixCloudSharedVideosInStore:(id)arg1;
+ (bool)_fixCorruptedOrientationsInStore:(id)arg1;
+ (bool)_fixCustomKeyAssetForAlbum:(id)arg1;
+ (bool)_fixCustomRenderedValues:(id)arg1;
+ (bool)_fixDuplicatedAssets:(id)arg1;
+ (bool)_fixEmptyVideoResourcePathsInStore:(id)arg1;
+ (bool)_fixFaceAlgorithmVersion:(id)arg1;
+ (bool)_fixFaceGroupUnverifiedPerson:(id)arg1;
+ (bool)_fixIncorrectAddedDateForAssetsInStore:(id)arg1;
+ (void)_fixIncorrectHeifMetadataForAsset:(id)arg1;
+ (bool)_fixIncorrectHeifMetadataInStore:(id)arg1;
+ (bool)_fixIncorrectThumbnailTables;
+ (bool)_fixInitialSyncMarker;
+ (bool)_fixItemIdentifierForVideoCmplInStore:(id)arg1;
+ (bool)_fixKeywordsInStagedStore:(id)arg1;
+ (bool)_fixLastPrefetchDateInStore:(id)arg1;
+ (bool)_fixLocalPathForVideoCmplDerivativesInStore:(id)arg1;
+ (bool)_fixLocallyAvailableFlagForThumbnailsInStore:(id)arg1;
+ (bool)_fixMasterCloudLocalStateEnum:(id)arg1;
+ (bool)_fixMemoriesWithAssetLists:(id)arg1;
+ (bool)_fixMergedPeopleThatShouldBeVerified:(id)arg1;
+ (bool)_fixMovieAttributesInStore:(id)arg1;
+ (bool)_fixNilCloudMasterGUID:(id)arg1;
+ (bool)_fixNonDuplicatedAssets:(id)arg1 adjusted:(bool)arg2;
+ (bool)_fixOriginalPropertiesForCloudSharedAssetsInStore:(id)arg1;
+ (void)_fixPathForResource:(id)arg1 withPath:(id)arg2;
+ (bool)_fixPersonAndFaceGroup:(id)arg1;
+ (bool)_fixRejectedKeyFace:(id)arg1;
+ (bool)_fixSingletonFaceFaceGroup:(id)arg1;
+ (bool)_fixTrashedDate:(id)arg1;
+ (bool)_fixUTIforSlowMoInStore:(id)arg1;
+ (bool)_fixVideoDimensionsForAsset:(id)arg1;
+ (bool)_fixVideoDimensionsInStore:(id)arg1;
+ (bool)_fixVideoJPGPath:(id)arg1;
+ (bool)_fixVisibleBurstAsset:(id)arg1;
+ (bool)_fixWhitelistOwnerForPendingInvitationsInStore:(id)arg1;
+ (bool)_fixZeroDurationPhotoIrisWithLocalResourcesInStore:(id)arg1 assumeAdjustedIrisIsVisible:(bool)arg2;
+ (bool)_fixZeroTrashedDateForEntityName:(id)arg1 inManagedObjectContext:(id)arg2;
+ (bool)_fixupAlbumOrderInAlbumListInStore:(id)arg1;
+ (bool)_fixupAssetPersistence:(id)arg1;
+ (bool)_fixupBrokenBurstPicksInStore:(id)arg1;
+ (bool)_fixupCloudResourcesInStore:(id)arg1;
+ (bool)_fixupCroppedUnadjustedAssets:(id)arg1;
+ (bool)_fixupEditorBundleIDsInStore:(id)arg1;
+ (bool)_fixupImportedAssetsInStore:(id)arg1;
+ (bool)_fixupImportedEventsInStore:(id)arg1;
+ (bool)_fixupKeyAssetsForAlbumsInStore:(id)arg1;
+ (bool)_fixupLocalResourcesStates:(id)arg1;
+ (bool)_fixupSharedStreamOrientationsInStore:(id)arg1;
+ (bool)_fixupSharedVideosWithoutThumbnailsInStore:(id)arg1;
+ (bool)_fixupSyncedAssetAttributesInStore:(id)arg1;
+ (bool)_flattenUnknownCustomRenderedValues:(id)arg1;
+ (bool)_forceAlbumMetadataToDiskInStore:(id)arg1;
+ (void)_forceCreateIndexOnOrderedAssets:(bool)arg1;
+ (bool)_forceDupeAnalysis;
+ (bool)_forceSoftResetSync;
+ (bool)_generateAddedDateForAssetsInStore:(id)arg1;
+ (void)_generateAlbumMetadataFromLastiTunesSyncedPlist;
+ (bool)_identifyVariationsAndDepthAdjustmentsForAsset:(id)arg1;
+ (bool)_identifyVariationsAndDepthAdjustmentsIncludingBakedInLongExposure:(bool)arg1 inStore:(id)arg2;
+ (bool)_initiateLightweightReimportOfAllPhotoCloudSharingMetadataInStore:(id)arg1;
+ (bool)_isReasonableCreationDate:(id)arg1;
+ (id)_managedObjectModelForLightweightMigrationStageWithURL:(id)arg1;
+ (bool)_markAllProcessedAnalysisStatesDirtyForWorkerType:(short)arg1 withStartingWorkerFlags:(int)arg2 inStore:(id)arg3;
+ (bool)_markMigrationVerifiedTypePersonsInStore:(id)arg1;
+ (bool)_markOldPhotoIrisEditsEvaluatedInStore:(id)arg1;
+ (bool)_markPhotoIrisVideoOrphansInStore:(id)arg1;
+ (bool)_migrateAssetLocationData:(id)arg1;
+ (bool)_migrateCloudResourcesRelationshipsInStagedStore:(id)arg1;
+ (bool)_migrateDetectedFacesGroupInStagedStore:(id)arg1;
+ (int)_migrateLegacySlomoAdjustmentsForAsset:(id)arg1;
+ (bool)_migrateLegacySlomoAdjustmentsInStore:(id)arg1 fromLegacySLMFormat:(bool)arg2;
+ (bool)_migrateOriginalColorSpaceInStagedStore:(id)arg1;
+ (bool)_migrateRejectedFacesGroupInStagedStore:(id)arg1;
+ (bool)_migrateRevGeoLocationDataFromKeyedArchiverFormat:(id)arg1;
+ (bool)_migrateTransformableUUIDsToStringsInStore:(id)arg1;
+ (id)_modelMigrator;
+ (bool)_moveCloudSharedDerivativesInStore:(id)arg1;
+ (bool)_moveMyPhotoStreamToAlbumsListInStore:(id)arg1;
+ (id)_newSyncedPropertiesByAssetUUIDs:(bool)arg1;
+ (id)_nextRequiredStagedMigrationVersionAfterVersion:(id)arg1;
+ (struct sqlite3 { }*)_openSQLTransactionWithDBPath:(const char *)arg1;
+ (void)_parseDMContextForRestartingAfterRestoreFromBackup:(bool*)arg1 restartingAfterRestoreFromCloud:(bool*)arg2;
+ (bool)_performChangesOnBatchFetchedObjects:(id)arg1 inMOC:(id)arg2 batchSize:(unsigned long long)arg3 objectHandler:(id /* block */)arg4 error:(id*)arg5;
+ (bool)_performMigrationCacheDateCreatedOnResources:(bool)arg1 cacheItemIdentifierOnResources:(bool)arg2 store:(id)arg3;
+ (bool)_persistMemoriesInStore:(id)arg1;
+ (bool)_persistMetadataToFileSystemForAlbum:(id)arg1;
+ (bool)_persistPersonsInStore:(id)arg1;
+ (bool)_persistPhotoIrisVisibilityStateToDiskInStore:(id)arg1;
+ (bool)_persistPlaceAnnotationData:(id)arg1;
+ (bool)_persistStoreUUIDToMobileCPLPlist:(id)arg1;
+ (bool)_persistVideoComplPropertiesInStore:(id)arg1;
+ (bool)_populateAdjustmentTimestampsOnAssets:(id)arg1;
+ (bool)_populateAlbumAndFolderOrderKeysInStagedStore:(id)arg1;
+ (bool)_populateCloudNameSourceOnFacesInStore:(id)arg1;
+ (bool)_populateCloudResourceLocalStateInStor:(id)arg1;
+ (bool)_populateCloudVerifiedTypeOnPersonsInStore:(id)arg1;
+ (bool)_populateDurationAndHDRTypeFromAdditionalAssetAttributesInStagedStore:(id)arg1;
+ (void)_populateFaceRegionsForAsset:(id)arg1;
+ (bool)_populateFaceRegionsInStore:(id)arg1;
+ (bool)_populateGroupingStateOnAllGroupedAssetsInStore:(id)arg1;
+ (bool)_populateHasAdjustmentsForAssetsInStore:(id)arg1;
+ (bool)_populateLatLongInAsset:(id)arg1;
+ (bool)_populateLightweightReimportDirectoryWithPhotoCloudSharingAssetsInManagedObjectContext:(id)arg1 error:(id*)arg2;
+ (bool)_populateNilOriginalFilename:(id)arg1;
+ (bool)_populateNilOriginalFilenameOnMaster:(id)arg1;
+ (bool)_populateRepresentativeAssets:(id)arg1;
+ (bool)_populateReverseLocationDataContainsLocation:(id)arg1;
+ (bool)_populateUserKeyFacePickSourceForPersonInStore:(id)arg1;
+ (bool)_populateVideoCpFieldsInStagedStore:(id)arg1;
+ (bool)_postProcessFromVersion6006Store:(id)arg1;
+ (id)_predicateForInconsistentHeifAssets;
+ (void)_printCountsForEntityName:(id)arg1 groupByProperties:(id)arg2 inManagedObjectContext:(id)arg3;
+ (void)_printMigrationSummaryInStore:(id)arg1;
+ (bool)_processDeletesForUUIDs:(id)arg1;
+ (bool)_purgeCloudSharedResourcesInStore:(id)arg1;
+ (bool)_rebuildAllMomentsInStore:(id)arg1;
+ (bool)_rebuildWideCaptureThumbsInStore:(id)arg1;
+ (bool)_recoverSingleBurstPhotos:(id)arg1;
+ (bool)_refreshTriggerValues:(id)arg1;
+ (bool)_removeAllWallpaperAssetsInStore:(id)arg1;
+ (bool)_removeAutoloopCacheIfExists;
+ (bool)_removeAutoloopWorkerStatesInStore:(id)arg1;
+ (bool)_removeCameraRollInStore:(id)arg1;
+ (bool)_removeEvents:(id)arg1;
+ (void)_removeFileAt:(id)arg1 forResource:(id)arg2;
+ (bool)_removeOldPersonMetadataInStore:(id)arg1;
+ (bool)_removeUntrackedCloudResourceImageDerivativesInStore:(id)arg1;
+ (bool)_removeUntrackedPersonMetadataInStore:(id)arg1;
+ (bool)_removingDuplicatedCloudAssetGuid:(id)arg1;
+ (void)_repairCloudPlaceholderKindForVideoAsset:(id)arg1;
+ (void)_repairRootFolderFixedOrderKeysInContext:(id)arg1;
+ (bool)_repairSingletonObjectsInDatabaseForOfflineStore:(id)arg1;
+ (bool)_repairSingletonObjectsInDatabaseUsingContext:(id)arg1 error:(id*)arg2;
+ (void)_repairSingletonObjectsInNewDatabase:(bool)arg1 completionHandler:(id /* block */)arg2;
+ (void)_repairSingletonObjectsInNewDatabaseFailedWithError:(id)arg1;
+ (void)_repairSingletonObjectsInNewDatabaseFailedWithInvalidDatabase;
+ (void)_repairSingletonObjectsInNewDatabaseFailedWithMissingDatabase;
+ (void)_repairSingletonObjectsInNewDatabaseFailedWithNoPersistentStores;
+ (bool)_repersistDuplicatedAssets:(id)arg1;
+ (bool)_repushAssetsMatchingPredicate:(id)arg1 inStore:(id)arg2;
+ (bool)_repushAssetsWithAnyUserConfirmedFaceInStore:(id)arg1;
+ (bool)_repushAssetsWithNewGroupingPropertiesInStore:(id)arg1;
+ (bool)_repushMemoriesWithNewFeaturesInStore:(id)arg1;
+ (bool)_repushPersonsWithMergeTargetInStore:(id)arg1;
+ (bool)_resetAlbumToFolderOrderKeyForAlbums:(id)arg1;
+ (bool)_resetDupesAnalysisInStore:(id)arg1;
+ (bool)_resetFailedAssets:(id)arg1;
+ (bool)_resetFailedCloudMasters:(id)arg1;
+ (void)_resetICPLPrompt;
+ (void)_resetLocalResourcesStateForAssetsWithContext:(id)arg1 usingPredicate:(id)arg2;
+ (bool)_resetThumbnailIndexesAndInitiateRebuildRequestIfSuccessful;
+ (bool)_resetThumbnailsAndInitiateRebuildRequestIfNeeded;
+ (bool)_resetUploadAttempts:(id)arg1;
+ (bool)_rollbackSQLTransactionAndCloseDB:(struct sqlite3 { }*)arg1;
+ (bool)_runMigrationStepWithName:(id)arg1 fetchRequest:(id)arg2 store:(id)arg3 migrationHandler:(id /* block */)arg4;
+ (bool)_saveChangesToPhotoIrisInStore:(id)arg1 matchingPredicate:(id)arg2 countChanged:(unsigned long long*)arg3 error:(id*)arg4 changeBlock:(id /* block */)arg5;
+ (void)_setIsPostProcessingLightWeightMigration:(bool)arg1;
+ (void)_setLastWelcomedDBVersion;
+ (bool)_setPlaybackStyleForAnimatedGIFsInStore:(id)arg1;
+ (bool)_setUserTypeOnKeyFace:(id)arg1;
+ (bool)_setupRootFolderInStore:(id)arg1;
+ (id)_sharedModelMigratorForImport;
+ (bool)_shouldConvertManagedAdjustmentsForAsset:(id)arg1;
+ (void)_shouldRepromptUserIfNeeded;
+ (bool)_shouldTriggerLightweightMigrationFailureForInternalTesting;
+ (id)_stagedManagedObjectModelURLWithStageVersion:(id)arg1;
+ (id)_stagedVersions;
+ (bool)_storeContainsFaceCrops:(id)arg1 success:(bool*)arg2;
+ (bool)_tagScreenshotsForAssetsInStore:(id)arg1;
+ (bool)_trimInvalidAlbumAssetsMappingRecords;
+ (bool)_tryToPromoteUnknownAssetsInStore:(id)arg1;
+ (bool)_ungroupDuplicateGroupedAssetsInStore:(id)arg1;
+ (bool)_unquarantineClass:(Class)arg1 inManagedObject:(id)arg2;
+ (bool)_unquarantinedQuarantinedItems:(id)arg1;
+ (bool)_updateKeyAssetInMemory:(id)arg1;
+ (bool)_updateKindSubtypeForPanoramaPhotosNeedsReset:(bool)arg1 inStore:(id)arg2;
+ (bool)_updatePlaybackStylesAndVariationsInStore:(id)arg1;
+ (bool)_updatePlaybackWithBatchUpdateRequest:(id)arg1 targetDescription:(id)arg2 inContext:(id)arg3;
+ (bool)_updateSidecarForCloudSharedIrisInStore:(id)arg1;
+ (void)_validateCurrentModelVersionAttempt:(long long)arg1;
+ (void)_validateCurrentModelVersionFailedWithMismatchedVersion:(int)arg1;
+ (void)_validateCurrentModelVersionFailedWithNoVersionFromServer;
+ (bool)_validateOrDeleteFileAtPath:(id)arg1 forCloudResource:(id)arg2;
+ (bool)_verifyCloudAssetsLocalAvailability:(id)arg1;
+ (void)_writeToPhotoDataDirectoryFailedWithNoPermission:(id)arg1;
+ (void)applyDataProtectionToAllPhotosFilesOnce;
+ (void)applyDataProtectionToPhotosPaths:(id)arg1 fromKeyClass:(int)arg2 toKeyClass:(int)arg3;
+ (void)archiveAssetUUIDForPathPlist:(id)arg1;
+ (id)archivedAssetUUIDForURL:(id)arg1;
+ (id)assetUUIDForPathPlistURL;
+ (bool)attemptLightweightMigrationFromVersion:(id)arg1 onStore:(id)arg2 withMetadata:(id)arg3 orStoreURL:(id)arg4 options:(id)arg5 coordinator:(id)arg6;
+ (int)checkForceMigrationTypeRequestedAndGetOptionalSourceModelVersion:(id*)arg1;
+ (void)cleanupModelForDataMigration;
+ (bool)clearVisionWorkerCache;
+ (void)createDatabase;
+ (int)currentModelVersion;
+ (bool)debug_resetThumbnailsAndInitiateRebuildRequest;
+ (bool)deleteAllAssetAnalysisStatesInStore:(id)arg1;
+ (bool)deleteAnalysisStatesInStore:(id)arg1 forWorkerType:(short)arg2;
+ (id)descriptionForForceMigrationType:(int)arg1;
+ (bool)didCreateSqliteErrorFileForLightweightMigration;
+ (bool)didImportFileSystemAssets;
+ (bool)didImportFileSystemAssetsWithMOC:(id)arg1;
+ (void)dontImportFileSystemDataIntoDatabase;
+ (id)eventNameFromDate:(id)arg1;
+ (id)extractPathToAssetUUIDRecoveryMappingFromDatabasePath:(id)arg1;
+ (long long)faceMigrationResetLevelRequiredForPreviousStoreVersion:(unsigned long long)arg1;
+ (bool)faceQualityResetRequiredForPreviousStoreVersion:(unsigned long long)arg1;
+ (bool)fixPossiblyIncorrectAddedDateForAsset:(id)arg1;
+ (bool)fixupStatesWithUnreachableAssetUUIDsInStore:(id)arg1;
+ (bool)fixupUnknownAnalysisStatesInStore:(id)arg1;
+ (void)forceImportFileSystemDataIntoDatabase;
+ (id)generatePathToAssetUUIDRecoveryMapping;
+ (bool)graphPersonResetRequiredForPreviousStoreVersion:(unsigned long long)arg1;
+ (void)importAfterCrash:(id)arg1 dictionariesByPhotoStreamID:(id)arg2 completionBlock:(id /* block */)arg3;
+ (bool)isLoadingFacesFromFileSystem;
+ (bool)isPostProcessingLightweightMigration;
+ (void)loadFacesFileSystemDataIntoDatabase;
+ (void)loadFileSystemDataIntoDatabaseIfNeededWithReason:(id)arg1;
+ (bool)markAllDirtyFaceAnalysisStatesWithFaceDetectionWorkerFlagsInStore:(id)arg1;
+ (bool)markAllSceneAnalysisStatesDirtyAndClearDistanceIdentitiesInStore:(id)arg1;
+ (bool)markUserConfirmedFacesAndCorrespondingFaceAnalysisStatesDirtyInStore:(id)arg1;
+ (void)migratePersonContactInfo;
+ (bool)migrateToRequiredAnalysisState:(id)arg1;
+ (bool)performFaceAnalysisResetMigrationStepWithResetLevel:(long long)arg1 store:(id)arg2;
+ (void)postProcessFixesAfterOTARestoreForCompleteAsset:(id)arg1 fixAddedDate:(bool)arg2;
+ (bool)postProcessMigratedStore:(id)arg1 fromVersion:(int)arg2;
+ (bool)postProcessThumbnailsOnlyIfVersionMismatchOrMissing:(bool*)arg1;
+ (bool)processWelterweightMigrationStageOnStore:(id)arg1 fromVersion:(int)arg2 toVersion:(int)arg3 migrationContext:(id)arg4;
+ (void)repairPotentialModelCorruption;
+ (void)repairSingletonObjectsInDatabaseWithCompletionHandler:(id /* block */)arg1;
+ (void)repairSingletonObjectsInNewDatabaseOrFail;
+ (bool)resetFaceQualityInStore:(id)arg1;
+ (bool)resetGraphPersonsInStore:(id)arg1;
+ (bool)resetManualOrderForNonFavoritePeopleInManagedObjectContext:(id)arg1;
+ (bool)resetManualOrderForNonFavoritePeopleInStore:(id)arg1;
+ (bool)resetRejectedFacesOnAllPersonsInStore:(id)arg1;
+ (bool)restartingAfterNonCloudRestoreFromBackup;
+ (bool)restartingAfterOTAMigration;
+ (bool)restartingAfterRestoreFromBackup;
+ (bool)retryQuarantinedAssetsAndFixResourceRelation:(id)arg1;
+ (bool)sceneStepRequiredForPreviousStoreVersion:(unsigned long long)arg1;
+ (void)setDidImportFileSystemAssets:(bool)arg1;
+ (void)setLoadingFacesFromFileSystem:(bool)arg1;
+ (bool)shouldRebuildDCIMSubDirectoryAtURL:(id)arg1 directoryEnumerator:(id)arg2 assetsKind:(int*)arg3;
+ (bool)skipDataProtectionForFilePath:(id)arg1;
+ (bool)touchAnalysisStateSortTokensInStoreInStore:(id)arg1;
+ (void)validateCurrentModelVersion;
+ (bool)waitForDataMigratorToExit;

- (void)_collectFileURLs:(id)arg1 forAddingToAlbum:(id)arg2 intoAssetsArray:(id)arg3 assetsKind:(int)arg4 testCreationDates:(bool)arg5;
- (void)_importAfterCrash:(id)arg1 dictionariesByPhotoStreamID:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)_importAllDCIMAssets;
- (id)_importFileSystemImportAssets:(id)arg1 forceUpdate:(bool)arg2;
- (void)_loadFacesFileSystemDataIntoDatabase;
- (void)_loadFileSystemDataIntoDatabaseIfNeededWithReason:(id)arg1;
- (void)_migratePersonContactInfo;
- (id)_orderedAssetsToImportCameraRollOnly:(bool)arg1;
- (void)_prepareForImportDeleteCorruptAssetsWithImporter:(id)arg1 context:(id)arg2;
- (void)_removeLegacyMemoryRelatedSnapshotDirectory;
- (void)_removeLegacyModelInterestDatabase;
- (id)_syncedPropertiesForAssetUUID:(id)arg1;
- (void)cleanupModelForDataMigration;
- (void)collectContentsOfDirectoryURL:(id)arg1 forAddingToAlbum:(id)arg2 intoAssetsArray:(id)arg3 assetsKind:(int)arg4;
- (void)dealloc;
- (void)dontImportFileSystemDataIntoDatabase;
- (id)fileManager;
- (id)init;
- (id)initWithImplicitTransaction:(bool)arg1;
- (void)pausePhotoStreams;
- (id)photoLibrary;
- (void)repairPotentialModelCorruption;
- (void)resumePhotoStreams;
- (void)setFileManager:(id)arg1;
- (bool)shouldRebuildDCIMDirectoryAtURL:(id)arg1 directoryEnumerator:(id)arg2 isPhotoStream:(bool*)arg3 isCPLAssets:(bool*)arg4 cameraRollOnly:(bool)arg5;

@end
